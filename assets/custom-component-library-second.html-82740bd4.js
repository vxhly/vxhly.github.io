import{_ as c,V as l,W as u,Z as r,X as n,a0 as a,a1 as o,Y as s,$ as p,G as i}from"./framework-0ab02afe.js";const k={},d=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"前言"),n("p",null,"本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等, 此文乃第二弹版本, 看过第一弹版本的小伙伴, 想必都知道第一弹版本的组件库文档 UI 是需要自己写的, 最近也是刚研究出来其实 vuepress 也可以作为组件库文档的 UI, 该文档 UI 绝对不输于第一弹版本的。")],-1),v=n("h2",{id:"前言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),s(" 前言")],-1),m=n("p",null,"第二弹前期具备知识点",-1),b={href:"https://vuepress.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://cli.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},f=p(`<h2 id="前置工作" tabindex="-1"><a class="header-anchor" href="#前置工作" aria-hidden="true">#</a> 前置工作</h2><p>以下工作全部基于 Vue CLI 3.x, 所以首先要保证机子上有 <code>@vue/cli</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vue create vtp-component <span class="token comment"># vtp-component 作为教学的库名</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>vue-router</code> , <code>dart-sass</code> , <code>babel</code> , <code>eslint</code> 这些是该项目使用的依赖项, 小主可以根据自己的需求进行相应的切换</p><h2 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start</h2>`,5),y={href:"https://github.com/vxhly/vtp-component",target:"_blank",rel:"noopener noreferrer"},h=p(`<h2 id="工作目录" tabindex="-1"><a class="header-anchor" href="#工作目录" aria-hidden="true">#</a> 工作目录</h2><p>默认生成的 src 目录以及 public 目录在该项目下是没有作用的, 小主可以删掉了, 这么做的主要目的当然只是保留生成的 <code>package.json</code> 文件</p><p>调整项目目录如下, 其中 build 文件夹用来存放编译脚本代码, docs 文件夹则是 vuepress 的主体部分了, 其中 .vuepress 是用来存放 vuepress 相关的配置文件, 而组件文档则放置在 docs 的根目录, packages 文件夹是用来存放组件的核心代码, scripts 文件夹用来存放自定义生成组件和组件的说明文档等脚本</p><p>大致的目录结构如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>|-- build
|
|-- docs
    |-- .vuepress
        |-- config.js
        |-- enhanceApp.js
    |-- README.md
|
|-- packages
|   |-- index.js
|
|-- scripts
|
|-- config.js
|
|-- .npmrm
|
|-- .npmignore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加编译脚本" tabindex="-1"><a class="header-anchor" href="#添加编译脚本" aria-hidden="true">#</a> 添加编译脚本</h2><div class="hint-container danger"><p class="hint-container-title">注意</p><p><code>core-js</code> 库需要采用的 2.6.5 这个版本, 高于这个版本的可能会导致开启文档失败</p></div><p><code>package.json</code> 其中的组件 name 推荐和创建的项目名一致</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;build:lib&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vue-cli-service build --target lib --name vtp-component --dest lib packages/index.js&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改 main 主入口文件</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;lib/vtp-component.common.js&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="一个组件例子" tabindex="-1"><a class="header-anchor" href="#一个组件例子" aria-hidden="true">#</a> 一个组件例子</h2><h3 id="vuepress-配置" tabindex="-1"><a class="header-anchor" href="#vuepress-配置" aria-hidden="true">#</a> vuepress 配置</h3><p>这里提供一些简单的配置, 当然想要高级的配置甚至想要自定义主题皆可从官方文档中获取到帮助</p><p><code>config.js</code> 使用插件 <code>vuepress-plugin-vue-demo</code> 将可以像 ElementUI 中写文档演示 demo 一样写文档了</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">dest</span><span class="token operator">:</span> <span class="token string">&quot;public&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;vue-demo&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">serviceWorker</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">themeConfig</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">sidebar</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">[</span><span class="token string">&quot;/CHANGELOG&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;更新日志&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;指南&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;组件&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">collapsable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">markdown</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">lineNumbers</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;vtp-component&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> config<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>enhanceApp.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token constant">UI</span> <span class="token keyword">from</span> <span class="token string">&quot;../../packages&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  Vue<span class="token punctuation">,</span> <span class="token comment">// the version of Vue being used in the VuePress app</span>
  options<span class="token punctuation">,</span> <span class="token comment">// the options for the root Vue instance</span>
  router<span class="token punctuation">,</span> <span class="token comment">// the router instance for the app</span>
  siteData<span class="token punctuation">,</span> <span class="token comment">// site metadata</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token constant">UI</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="基础的-packages-配置" tabindex="-1"><a class="header-anchor" href="#基础的-packages-配置" aria-hidden="true">#</a> 基础的 packages 配置</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token string">&quot;./assets/scss/common.scss&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> version <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../package.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>version<span class="token punctuation">;</span>
<span class="token keyword">const</span> components <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">install</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">Vue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>install<span class="token punctuation">.</span>installed<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
  components<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">component</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span>component<span class="token punctuation">.</span>name<span class="token punctuation">,</span> component<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token punctuation">{</span> install<span class="token punctuation">,</span> version <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  install<span class="token punctuation">,</span>
  version<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$prefix</span></span><span class="token punctuation">:</span> <span class="token string">&quot;vtp&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">@for</span> <span class="token variable">$i</span> <span class="token keyword">from</span> 12 <span class="token keyword">through</span> <span class="token selector">48 </span><span class="token punctuation">{</span>
  <span class="token selector">.<span class="token variable">#{$prefix}</span>-fs<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.<span class="token variable">#{$prefix}</span>-lh<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">line-height</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">@for</span> <span class="token variable">$i</span> <span class="token keyword">from</span> 5 <span class="token keyword">through</span> <span class="token selector">40 </span><span class="token punctuation">{</span>
  <span class="token selector">.<span class="token variable">#{$prefix}</span>-margin<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.<span class="token variable">#{$prefix}</span>-padding<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.<span class="token variable">#{$prefix}</span>-m-l<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.<span class="token variable">#{$prefix}</span>-m-r<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.<span class="token variable">#{$prefix}</span>-m-lr<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">margin-left</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
    <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.<span class="token variable">#{$prefix}</span>-m-t<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.<span class="token variable">#{$prefix}</span>-m-b<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.<span class="token variable">#{$prefix}</span>-m-tb<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.<span class="token variable">#{$prefix}</span>-p-l<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.<span class="token variable">#{$prefix}</span>-p-r<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">padding-right</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.<span class="token variable">#{$prefix}</span>-p-lf<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">padding-left</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
    <span class="token property">padding-right</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.<span class="token variable">#{$prefix}</span>-p-t<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.<span class="token variable">#{$prefix}</span>-p-b<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token selector">.<span class="token variable">#{$prefix}</span>-p-tb<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">padding-top</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
    <span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px <span class="token important">!important</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token selector">.<span class="token variable">#{$prefix}</span>-tc </span><span class="token punctuation">{</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> center <span class="token important">!important</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.<span class="token variable">#{$prefix}</span>-tl </span><span class="token punctuation">{</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> left <span class="token important">!important</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.<span class="token variable">#{$prefix}</span>-tr </span><span class="token punctuation">{</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> right <span class="token important">!important</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.<span class="token variable">#{$prefix}</span>-fl </span><span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> left <span class="token important">!important</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.<span class="token variable">#{$prefix}</span>-fr </span><span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> riaght <span class="token important">!important</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.<span class="token variable">#{$prefix}</span>-cl-both </span><span class="token punctuation">{</span>
  <span class="token property">clear</span><span class="token punctuation">:</span> both <span class="token important">!important</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.<span class="token variable">#{$prefix}</span>-fw-b </span><span class="token punctuation">{</span>
  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold <span class="token important">!important</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.<span class="token variable">#{$prefix}</span>-absolute </span><span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute <span class="token important">!important</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.<span class="token variable">#{$prefix}</span>-relative </span><span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> relative <span class="token important">!important</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.<span class="token variable">#{$prefix}</span>-fixed </span><span class="token punctuation">{</span>
  <span class="token property">position</span><span class="token punctuation">:</span> fixed <span class="token important">!important</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.<span class="token variable">#{$prefix}</span>-flex </span><span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.<span class="token variable">#{$prefix}</span>-f-sc </span><span class="token punctuation">{</span>
  <span class="token property">align-self</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="主入口-readme" tabindex="-1"><a class="header-anchor" href="#主入口-readme" aria-hidden="true">#</a> 主入口 README</h3><div class="language-markdown line-numbers-mode" data-ext="md"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> 指南</span>

<span class="token title important"><span class="token punctuation">##</span> 介绍</span>

::: tip 提示

开箱即用的 Vue 组件库

:::

<span class="token title important"><span class="token punctuation">##</span> Install</span>

\\ <span class="token code-snippet code keyword">\`\\\`</span> \\\`bash npm install vtp

<span class="token title important"><span class="token punctuation">#</span> or</span>

yarn add vtp \\ <span class="token code-snippet code keyword">\`\\\`</span> \\\`

<span class="token title important"><span class="token punctuation">##</span> Used</span>

<span class="token title important"><span class="token punctuation">###</span> 一键全局引入</span>

\\ <span class="token code-snippet code keyword">\`\\\`</span> \\\`javascript import Vue from &#39;vue&#39; import Vtp from &#39;vtp&#39;

Vue.use(Vtp) \\ <span class="token code-snippet code keyword">\`\\\`</span> \\\`

<span class="token title important"><span class="token punctuation">###</span> 按需引入</span>

\\ <span class="token code-snippet code keyword">\`\\\`</span> \\\`javascript import Vue from &#39;vue&#39; import { VtpButton } from &#39;vtp&#39;

Vue.use(VtpButton) \\ <span class="token code-snippet code keyword">\`\\\`</span> \\\`

<span class="token title important"><span class="token punctuation">##</span> 组件库贡献指南</span>

::: danger 必读

组件库贡献必读, 请严格按照下列贡献指南

:::

<span class="token list punctuation">1.</span>  第一次使用该组件库时, 请执行命令 <span class="token code-snippet code keyword">\`npm run init\`</span>
<span class="token list punctuation">2.</span>  推荐使用 <span class="token url">[<span class="token content">git-flow 工作流</span>](<span class="token url">https://www.git-tower.com/learn/git/ebook/cn/command-line/advanced-topics/git-flow</span>)</span>, 确保一个组件一个分支, 使用命令 <span class="token code-snippet code keyword">\`git flow feature start [组件名]\`</span> , 开发结束之后需要使用命令 <span class="token code-snippet code keyword">\`git flow feature finish [组件名]\`</span> 该命令将会自动进行分支合并以及删除当前分支
<span class="token list punctuation">3.</span>  当需要对一个已存在的组件进行更新维护或者升级时, 请使用命令 <span class="token code-snippet code keyword">\`git flow hotfix start [组件名]\`</span> , 开发结束之后需要使用命令 <span class="token code-snippet code keyword">\`git flow hotfix finish [组件名]\`</span> 该命令将会自动进行分支合并以及删除当前分支
<span class="token list punctuation">4.</span>  当需要对一个已存在的组件进行 bug 修复时, 请使用命令 <span class="token code-snippet code keyword">\`git flow bugfix start [组件名]\`</span> , 开发结束之后需要使用命令 <span class="token code-snippet code keyword">\`git flow bugfix finish [组件名]\`</span> 该命令将会自动进行分支合并以及删除当前组件分支
<span class="token list punctuation">5.</span>  强制使用已配置脚本命令 <span class="token code-snippet code keyword">\`yarn new:comp\`</span> 来创建一个组件以及组件文档(已包含默认模板, 在此基础上修改即可), 使用命令 <span class="token code-snippet code keyword">\`yarn del:comp\`</span> 来删除不需要的组件
<span class="token list punctuation">6.</span>  使用 <span class="token code-snippet code keyword">\`git cz\`</span> 替换 <span class="token code-snippet code keyword">\`git commit -m\`</span> , commit 之前请详细阅读 <span class="token url">[<span class="token content">git commit 规范指南</span>](<span class="token url">/archives/fdd4f330.html</span>)</span>
<span class="token list punctuation">7.</span>  组件发布前, 请确保当前版本的所有包含组件已经全部开发完毕并且已经合并至 develop 分支

<span class="token code keyword">    - 在 develop 分支中使用 \`git flow release start [版本号]\` 创建一个发布版本分支
    - 修改 \`package.json\` 中的 \`version\` 字段为当前的版本号
    - 执行 \`npm run docs:build\` 编译 vuepress 文档
    - 执行 \`npm run build:lib\` 编译 组件库
    - 执行 \`npm run changelog\` 生成当前版本的 CHANGELOHG
    - 以上操作可使用命令 \`npm run build\` 来代替 \`npm run docs:build\` 、 \`npm run build:lib\` 、 \`npm run changelog\`
    - 进行 commit 操作
    - 使用 \`git flow release finish [版本号]\` 自动进行分支合并以及删除当前分支, 期间将会询问 tag 的 commit 信息(务必认真填写)
    - 以上操作之后将会把分支自动合并至 master 和 develop 分支</span>

<span class="token list punctuation">8.</span>  分支永远只能有两个 master 和 develop 分支, 其他分支应该在开发完毕之后及时的进行合并、删除操作
<span class="token list punctuation">9.</span>  发布前请确保 tag 已经打包成功, 当前版本的功能已经全部完成, 之后便可以直接运行 <span class="token code-snippet code keyword">\`npm publish --registry &lt;私有库地址&gt;\`</span> , 如果组件库目录下有配置 <span class="token code-snippet code keyword">\`.npmrc\`</span> 则直接使用 <span class="token code-snippet code keyword">\`npm publish\`</span>
<span class="token list punctuation">10.</span> 下载组件库 <span class="token code-snippet code keyword">\`yarn add &lt;组件库名&gt; --registry &lt;私有库地址&gt;\`</span> , 如果组件库目录下有配置 <span class="token code-snippet code keyword">\`.npmrc\`</span> 则直接使用 <span class="token code-snippet code keyword">\`yarn add &lt;组件库名&gt; \`</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="创建组件和组件文档生成脚本" tabindex="-1"><a class="header-anchor" href="#创建组件和组件文档生成脚本" aria-hidden="true">#</a> 创建组件和组件文档生成脚本</h3><p>在 <code>scripts</code> 中创建以下几个文件, 其中 <code>create-comp.js</code> 是用来生成自定义组件目录和自定义组件说明文档脚本, <code>delete-comp.js</code> 是用来删除无用的组件目录和自定义组件说明文档脚本, <code>template.js</code> 是生成代码的模板文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>|-- create-comp.js
|
|-- delete-comp.js
|
|-- template.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26),w={href:"https://juejin.im/post/5c6772ff518825629c56943c",target:"_blank",rel:"noopener noreferrer"},q=p(`<p>全局可配置一些变量</p><p><code>config.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&quot;vtp&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 组件库的前缀,使用小写</span>
  <span class="token literal-property property">docsTitle</span><span class="token operator">:</span> <span class="token string">&quot;vtp-component&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 文档的标题</span>
  <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token comment">// vuepress 中的 base 配置</span>
  <span class="token literal-property property">ElementUI</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 引入 element-ui 表示二次封装 element-ui</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>create-comp.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建自定义组件脚本</span>

<span class="token keyword">const</span> chalk <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;chalk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs-extra&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> uppercamelize <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;uppercamelcase&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token operator">...</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">log</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">successLog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">blue</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">errorLog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span>
  vueTemplate<span class="token punctuation">,</span>
  entryTemplate<span class="token punctuation">,</span>
  scssTemplate<span class="token punctuation">,</span>
  mdDocs<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./template&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">generateFile</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">errorLog</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">文件已存在</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token string">&quot;utf8&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">errorLog</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 这里生成自定义组件</span>
<span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;请输入要生成的组件名称, 形如 demo 或者 demo-test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> componentName <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
process<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> inputName <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> upperInputname <span class="token operator">=</span> <span class="token function">uppercamelize</span><span class="token punctuation">(</span>inputName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> componentDirectory <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;../packages&quot;</span><span class="token punctuation">,</span> upperInputname<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> componentVueName <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span>componentDirectory<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>upperInputname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.vue</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> scssName <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span>componentDirectory<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>inputName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.scss</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> entryComponentName <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span>componentDirectory<span class="token punctuation">,</span> <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> hasComponentDirectory <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>componentDirectory<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>upperInputname<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 这里生成组件</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasComponentDirectory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">errorLog</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>upperInputname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">组件目录已存在, 请重新输入</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">生成 component 目录 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>componentDirectory<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> <span class="token function">dotExistDirectoryCreate</span><span class="token punctuation">(</span>componentDirectory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>upperInputname<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> inputArr <span class="token operator">=</span> upperInputname<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        componentName <span class="token operator">=</span> inputArr<span class="token punctuation">[</span>inputArr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        componentName <span class="token operator">=</span> upperInputname<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">生成 vue 文件 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>componentVueName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> <span class="token function">generateFile</span><span class="token punctuation">(</span>componentVueName<span class="token punctuation">,</span> <span class="token function">vueTemplate</span><span class="token punctuation">(</span>inputName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">生成 scss 文件 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>scssName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> <span class="token function">generateFile</span><span class="token punctuation">(</span>scssName<span class="token punctuation">,</span> <span class="token function">scssTemplate</span><span class="token punctuation">(</span>inputName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">生成 entry 文件 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>entryComponentName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> <span class="token function">generateFile</span><span class="token punctuation">(</span>entryComponentName<span class="token punctuation">,</span> <span class="token function">entryTemplate</span><span class="token punctuation">(</span>componentName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">successLog</span><span class="token punctuation">(</span><span class="token string">&quot;生成 component 成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">errorLog</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">errorLog</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">请重新输入组件名称:</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// 这里生成自定义组件说明文档</span>
  <span class="token keyword">const</span> docsDirectory <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;../docs/component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> docsMdName <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span>docsDirectory<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>upperInputname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.md</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">生成 component 文档 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>docsMdName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">await</span> <span class="token function">generateFile</span><span class="token punctuation">(</span>docsMdName<span class="token punctuation">,</span> <span class="token function">mdDocs</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>inputName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">successLog</span><span class="token punctuation">(</span><span class="token string">&quot;生成 component 文档成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">errorLog</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  process<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

process<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;exit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">dotExistDirectoryCreate</span><span class="token punctuation">(</span><span class="token parameter">directory</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">mkdirs</span><span class="token punctuation">(</span>directory<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 递归创建目录</span>
<span class="token keyword">function</span> <span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token parameter">directory<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> exists <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>directory<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>exists<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">mkdirs</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>directory<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      fs<span class="token punctuation">.</span><span class="token function">mkdirSync</span><span class="token punctuation">(</span>directory<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>delete-comp.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 删除自定义组件脚本</span>

<span class="token keyword">const</span> chalk <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;chalk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs-extra&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> uppercamelize <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;uppercamelcase&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token operator">...</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">log</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">successLog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">blue</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">errorLog</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">red</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>error<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;请输入要删除的组件名称, 形如 demo 或者 demo-test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
process<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> inputName <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  inputName <span class="token operator">=</span> <span class="token function">uppercamelize</span><span class="token punctuation">(</span>inputName<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> componentDirectory <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;../packages&quot;</span><span class="token punctuation">,</span> inputName<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> hasComponentDirectory <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>componentDirectory<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> docsDirectory <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;../docs/component&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> docsMdName <span class="token operator">=</span> <span class="token function">resolve</span><span class="token punctuation">(</span>docsDirectory<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>inputName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.md</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>inputName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>hasComponentDirectory<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">删除 component 目录 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>componentDirectory<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">await</span> <span class="token function">removePromise</span><span class="token punctuation">(</span>componentDirectory<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">successLog</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">已删除 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>inputName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 组件目录</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">删除 component 文档 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>docsMdName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      fs<span class="token punctuation">.</span><span class="token function">unlink</span><span class="token punctuation">(</span>docsMdName<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">successLog</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">已删除 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>inputName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> 组件说明文档</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">errorLog</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>inputName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">组件目录不存在</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">errorLog</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">请重新输入组件名称:</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  process<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

process<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;exit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">removePromise</span><span class="token punctuation">(</span><span class="token parameter">dir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 先读文件夹</span>
    fs<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">_err<span class="token punctuation">,</span> stat</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>stat<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        fs<span class="token punctuation">.</span><span class="token function">readdir</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">_err<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          files <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// a/b  a/m</span>
          files <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">removePromise</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 这时候变成了promise</span>
          Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            fs<span class="token punctuation">.</span><span class="token function">rmdir</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> resolve<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        fs<span class="token punctuation">.</span><span class="token function">unlink</span><span class="token punctuation">(</span>dir<span class="token punctuation">,</span> resolve<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>template.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> uppercamelize <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;uppercamelcase&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../config&#39;</span><span class="token punctuation">)</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">vueTemplate</span><span class="token operator">:</span> <span class="token parameter">compoenntName</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;template&gt;
  &lt;div class=&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>prefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;&gt;
    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
  &lt;/div&gt;
&lt;/template&gt;

&lt;script&gt;
export default {
  name: &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>prefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;,

  data () {
    return {}
  },

  props: {},

  methods: {}
}
&lt;/script&gt;

&lt;style lang=&quot;scss&quot;&gt;
  @import &#39;./</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;;
&lt;/style&gt;
</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">entryTemplate</span><span class="token operator">:</span> <span class="token parameter">compoenntName</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">import </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> from &#39;./</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;

</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.install = function (Vue) {
  Vue.component(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.name, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)
}

export default </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">

if (typeof window !== &#39;undefined&#39; &amp;&amp; window.Vue) {
  window.Vue.component(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.name, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)
}
</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">scssTemplate</span><span class="token operator">:</span> <span class="token parameter">compoenntName</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>prefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> {}</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">mdDocs</span><span class="token operator">:</span> <span class="token parameter">compoenntName</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> upperCompoenntName <span class="token operator">=</span> <span class="token function">uppercamelize</span><span class="token punctuation">(</span>compoenntName<span class="token punctuation">)</span>
        <span class="token keyword">const</span> upperPrefix <span class="token operator">=</span> <span class="token function">uppercamelize</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>prefix<span class="token punctuation">)</span>

        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"># </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">

::: tip 提示
</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
:::

## Code Demo

::: demo 基础用法

\\ </span><span class="token template-punctuation string">\`</span></span>\\<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> \\\` vue
&lt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>prefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;&lt;/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>prefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>compoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&gt;
\\ </span><span class="token template-punctuation string">\`</span></span>\\<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> \\\`
:::

## Used

### 按需引入

\\ </span><span class="token template-punctuation string">\`</span></span>\\<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> \\\`javascript
import Vue from &#39;vue&#39;
import {
  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>upperPrefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>upperCompoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
} from &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>prefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;

Vue.use(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>upperPrefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>upperCompoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)
\\ </span><span class="token template-punctuation string">\`</span></span>\\<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> \\\`

### 局部引入

\\ </span><span class="token template-punctuation string">\`</span></span>\\<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> \\\` javascript
import {
  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>upperPrefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>upperCompoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
} from &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>prefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;

export default {
  components: {
    </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>upperPrefix<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>upperCompoenntName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
  }
}
\\ </span><span class="token template-punctuation string">\`</span></span>\\<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string"> \\\`

## API

### Props

| 参数 | 说明 | 类型 | 可选值 | 默认值 | 版本 |
| ---- | ---- | ---- | ------ | ------ | ---- |
| -    | -    | -    | -      | -      | -    |

### Events

| 事件名 | 说明 | 回调参数 |
| ------ | ---- | -------- |
| -      | -    | -        |

</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>build</code> 中创建以下几个文件, 其中 <code>build-entry.js</code> 脚本是用来生成自定义组件导出 <code>packages/index.js</code> , <code>get-components.js</code> 脚本是用来获取 <code>packages</code> 目录下的所有组件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>|-- build-entry.js
|
|-- get-components.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),x={href:"https://github.com/Eamonnzhang/vue-cards",target:"_blank",rel:"noopener noreferrer"},$=p(`<p><code>build-entry.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs-extra&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> chalk <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;chalk&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> uppercamelize <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;uppercamelcase&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> Components <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./get-components&quot;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">log</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chalk<span class="token punctuation">.</span><span class="token function">green</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>message<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../config&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">buildPackagesEntry</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> uninstallComponents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> importList <span class="token operator">=</span> Components<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">import </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">uppercamelize</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> from &#39;./</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> exportList <span class="token operator">=</span> Components<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">uppercamelize</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> intallList <span class="token operator">=</span> exportList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token operator">~</span>uninstallComponents<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token function">uppercamelize</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">import &#39;./assets/common.scss&#39;
import &#39;./utils/filters&#39;

</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>importList<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">

const version = require(&#39;../package.json&#39;).version
const components = [
  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>intallList<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;,\\n  &quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
]

const install = Vue =&gt; {
  if (install.installed) return
  components.map(component =&gt; Vue.component(component.name, component))
}

export {
  install,
  version,
  </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>exportList<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;,\\n  &quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
}

export default {
  install,
  version
}
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

  fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;../packages/index.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;packages/index.js 文件已更新依赖&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;exit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">setDocsConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> docsURL <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  Components<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    docsURL<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&#39;/component/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">const config = {
  dest: &#39;public&#39;,
  plugins: [&#39;vue-demo&#39;],
  serviceWorker: true,
  themeConfig: {
    sidebar: [
      [&#39;/CHANGELOG&#39;, &#39;更新日志&#39;],
      [&#39;/&#39;, &#39;指南&#39;], 
      {
        title: &#39;组件&#39;,
        collapsable: false,
        children: [
          </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>docsURL<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;,\\n          &quot;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">
        ]
      }
    ]
  },
  markdown: {
    lineNumbers: true
  },
  title: &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>docsTitle<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;,
  base: &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>config<span class="token punctuation">.</span>base<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;
}

module.exports = config
</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

  fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>
    path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;../docs/.vuepress/config.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    content
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;packages/index.js 文件已更新依赖&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;exit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">buildPackagesEntry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setDocsConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>get-components.js</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;fs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;path&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> excludes <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&quot;index.js&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;theme-chalk&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;mixins&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;utils&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;.DS_Store&quot;</span><span class="token punctuation">,</span>
  <span class="token string">&quot;assets&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dirs <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&quot;../packages&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> dirs<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">dirName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> excludes<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>dirName<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="生成命令" tabindex="-1"><a class="header-anchor" href="#生成命令" aria-hidden="true">#</a> 生成命令</h3><p>在 <code>package.json</code> 中添加以下内容, 使用命令 <code>yarn new:comp</code> 创建组件目录及其文档或者使用命令 <code>yarn del:comp</code> 即可删除组件目录及其文档</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;new:comp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node scripts/create-comp.js &amp;&amp; node build/build-entry.js&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;del:comp&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node scripts/delete-comp.js &amp;&amp; node build/build-entry.js&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="changelog" tabindex="-1"><a class="header-anchor" href="#changelog" aria-hidden="true">#</a> changelog</h1><p>在 <code>package.json</code> 中修改 script 字段, 接下来你懂的, 另一篇博客有介绍哦, 小主可以执行搜索</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;init&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm install commitizen -g &amp;&amp; commitizen init cz-conventional-changelog --save-dev --save-exact &amp;&amp; npm run bootstrap&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;bootstrap&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm install&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;changelog&quot;</span><span class="token operator">:</span> <span class="token string">&quot;conventional-changelog -p angular -i docs/CHANGELOG.md -s -r 0&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="关于-pages-服务和发布至-npm" tabindex="-1"><a class="header-anchor" href="#关于-pages-服务和发布至-npm" aria-hidden="true">#</a> 关于 pages 服务和发布至 npm</h2><h3 id="pages-服务" tabindex="-1"><a class="header-anchor" href="#pages-服务" aria-hidden="true">#</a> pages 服务</h3>`,12),j={href:"https://gitee.com",target:"_blank",rel:"noopener noreferrer"},_=n("h3",{id:"发布至-npm",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#发布至-npm","aria-hidden":"true"},"#"),s(" 发布至 npm")],-1),N=n("p",null,"分情况而言",-1),L={href:"https://github.com",target:"_blank",rel:"noopener noreferrer"},C=n("code",null,"npm publish",-1),V={href:"https://gitee.com",target:"_blank",rel:"noopener noreferrer"},D=n("code",null,"npm publish",-1),I=p(`<h3 id="拓展" tabindex="-1"><a class="header-anchor" href="#拓展" aria-hidden="true">#</a> 拓展</h3><p>可以定义无需发布的文将和目录</p><p>在项目目录下创建 <code>.npmignore</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>*.js
.browserslistrc
.editorconfig
.npmrc
build/
docs/
scripts/
test/
public/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果该组件库作为私有库发至私有 npm 代理库中, 建议在组件库项目以及依赖组件库的项目中创建 <code>.npmrc</code> , 注意这里的地址千万千万不能写 <code>127.0.0.1</code> 或者 <code>localhost</code> , 必须写成公网 IP 或者局域网 IP 或者域名, 否则在多人合作模式下则不能正确的发布或者下载</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>registry=http://192.168.8.10:4873
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6);function E(z,P){const e=i("RouterLink"),t=i("ExternalLinkIcon");return l(),u("div",null,[d,r(" more "),v,n("p",null,[a(e,{to:"/views/vuejs/custom-component-library-first.html"},{default:o(()=>[s("想看第一弹版本的小伙伴, 请戳我")]),_:1})]),m,n("ul",null,[n("li",null,[n("a",b,[s("vuepress"),a(t)])]),n("li",null,[n("a",g,[s("Vue CLI"),a(t)])])]),f,n("p",null,[s("开始造轮子了, 以下示例代码 "),n("a",y,[s("请戳这里"),a(t)])]),h,n("p",null,[s("相关的代码如下, 小主可以根据自己的需求进行相应的简单修改, 下面的代码参考来源 "),n("a",w,[s("vue-cli3 项目优化之通过 node 自动生成组件模板 generate View、Component"),a(t)]),s(", 当然也是第一弹中的代码改进")]),q,n("p",null,[s("相关的代码如下, 小主可以根据自己的需求进行相应的简单修改, 下面的代码参考来源 "),n("a",x,[s("vue-cards"),a(t)])]),$,n("p",null,[s("当然组件库以及文档完成之后, 都希望能够有个地址托管我们的组件文档, 这里比较推荐的是使用 "),n("a",j,[s("Gitee"),a(t)]),s(" 中的项目 pages 服务")]),_,N,n("p",null,[s("一是该组件库是公开的, 希望该组件库有较多的社区小伙伴能够一起维护的, 这里就比较推荐使用 "),n("a",L,[s("GitHub"),a(t)]),s(", 发布命令为 "),C,s(" , 相关的 pages 服务可以参考本博客的托管机制(具体的还需要小主自行研究)")]),n("p",null,[s("二是该组件库是是有的, 希望该组件库只是作为多个项目之间的共用 UI 框架, 这里比较推荐的是使用 "),n("a",V,[s("Gitee"),a(t)]),s(", 发布命令为 "),D,s(" , 当然只是这样是不够的, 比较推荐的是使用 npm 私有库来托管我们的组件库(npm 私有库搭建请参考 "),a(e,{to:"/archives/693996ef.html"},{default:o(()=>[s("docker 使用指南-私有 npm 代理注册表")]),_:1}),s(", 具体的还需要小主自行研究)")]),n("p",null,[s("发布至私有库之前需要详细阅读这两篇文章: "),a(e,{to:"/archives/693996ef.html"},{default:o(()=>[s("docker 使用指南-私有 npm 代理注册表")]),_:1}),s(", "),a(e,{to:"/archives/9a1dd005.html"},{default:o(()=>[s("Git 远程推送配置")]),_:1})]),I])}const G=c(k,[["render",E],["__file","custom-component-library-second.html.vue"]]);export{G as default};
