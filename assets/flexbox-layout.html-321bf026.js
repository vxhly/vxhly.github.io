import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as l,c,d as o,a as n,b as e,f as a,e as r}from"./app-487b241d.js";const d="/assets/flex-layout.png",p="/assets/flex-justify.png",u="/assets/flex-align.png",h="/assets/flex-content.png",v="/assets/flex-order.png",f="/assets/flex-grow.png",g="/assets/flex-shrink.jpg",x="/assets/flex-self.png",m={},b=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"前言"),n("p",null,"Flex 布局, 可以简便、完整、响应式地实现各种页面布局, 目前, 它已经得到了所有浏览器的支持。")],-1),k=n("h2",{id:"githhub-上优秀的样式表插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#githhub-上优秀的样式表插件","aria-hidden":"true"},"#"),e(" GithHub 上优秀的样式表插件")],-1),_={href:"http://github.com/vxhly/scss-flex",target:"_blank",rel:"noopener noreferrer"},y=n("br",null,null,-1),w={href:"http://github.com/lzxb/flex.css",target:"_blank",rel:"noopener noreferrer"},q=n("h2",{id:"例子",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#例子","aria-hidden":"true"},"#"),e(" 例子")],-1),z={href:"https://codepen.io/vxhly/pen/NXwejK",target:"_blank",rel:"noopener noreferrer"},F=r(`<h2 id="flex-布局是什么" tabindex="-1"><a class="header-anchor" href="#flex-布局是什么" aria-hidden="true">#</a> Flex 布局是什么？</h2><p>Flex 是 Flexible Box 的缩写, 意为&quot;弹性布局&quot;, 用来为盒状模型提供最大的灵活性。 任何一个容器都可以指定为 Flex 布局。</p><h3 id="启用-flex-布局" tabindex="-1"><a class="header-anchor" href="#启用-flex-布局" aria-hidden="true">#</a> 启用 Flex 布局</h3><p>设为 Flex 布局以后, 子元素的 float、clear 和 vertical-align 属性将失效</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/* 块级元素启用 Flex 布局 */</span>
<span class="token selector">.box-flex</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> -ms-flexbox<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 行内元素启用 Flex 布局 */</span>
<span class="token selector">.box-inline-flex</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> -ms-inline-flexbox<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> -webkit-inline-box<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-flex<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念" aria-hidden="true">#</a> 基本概念</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>采用 Flex 布局的元素, 称为 Flex 容器（flex container）, 简称&quot;容器&quot;。它的所有子元素自动成为容器成员, 称为 Flex 项目（flex item）, 简称&quot;项目&quot;。</p></div><figure><img src="`+d+`" alt="flex layout" tabindex="0" loading="lazy"><figcaption>flex layout</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>容器默认存在两根轴: 水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做 <code>main start</code> , 结束位置叫做 <code>main end</code> ；交叉轴的开始位置叫做 <code>cross start</code> , 结束位置叫做 <code>cross end</code> 。<br> 项目默认沿主轴排列。单个项目占据的主轴空间叫做 <code>main size</code> , 占据的交叉轴空间叫做 <code>cross size</code> 。</p></div><h2 id="容器的属性" tabindex="-1"><a class="header-anchor" href="#容器的属性" aria-hidden="true">#</a> 容器的属性</h2><p>以下 6 个属性设置在容器上。</p><ul><li><strong>flex-direction</strong></li><li><strong>flex-wrap</strong></li><li><strong>flex-flow</strong></li><li><strong>justify-content</strong></li><li><strong>align-items</strong></li><li><strong>align-content</strong></li></ul><h3 id="flex-direction" tabindex="-1"><a class="header-anchor" href="#flex-direction" aria-hidden="true">#</a> flex-direction</h3><div class="hint-container tip"><p class="hint-container-title">属性作用</p><p><code>flex-direction</code> 属性决定主轴的方向（即项目的排列方向）。</p></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> row | row-reverse | column | column-reverse<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="四个值分别的作用" tabindex="-1"><a class="header-anchor" href="#四个值分别的作用" aria-hidden="true">#</a> 四个值分别的作用</h4><ul><li>row（默认值）主轴为水平方向, 起点在左端。</li><li>row-reverse: 主轴为水平方向, 起点在右端。</li><li>column: 主轴为垂直方向, 起点在上沿。</li><li>column-reverse: 主轴为垂直方向, 起点在下沿。</li></ul><h3 id="flex-wrap" tabindex="-1"><a class="header-anchor" href="#flex-wrap" aria-hidden="true">#</a> flex-wrap</h3><div class="hint-container tip"><p class="hint-container-title">属性作用</p><p><code>flex-wrap</code> 属性定义, 如果一条轴线排不下, 如何换行。默认情况下, 项目都排在一条线（又称&quot;轴线&quot;）上。</p></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>
  <span class="token property">flex-wrap</span><span class="token punctuation">:</span> nowrap | wrap | wrap-reverse<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="三个值分别的作用" tabindex="-1"><a class="header-anchor" href="#三个值分别的作用" aria-hidden="true">#</a> 三个值分别的作用</h4><ul><li>nowrap（默认）不换行。</li><li>wrap: 换行, 第一行在上方。</li><li>wrap-reverse: 换行, 第一行在下方。</li></ul><h3 id="flex-flow" tabindex="-1"><a class="header-anchor" href="#flex-flow" aria-hidden="true">#</a> flex-flow</h3><div class="hint-container tip"><p class="hint-container-title">属性作用</p><p><code>flex-flow</code> 属性是 <code>flex-direction</code> 属性和 <code>flex-wrap</code> 属性的简写形式, 默认值为 <code>row nowrap</code> 。</p></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>
  <span class="token property">flex-flow</span><span class="token punctuation">:</span> &lt;flex-direction&gt; || &lt;flex-wrap&gt;<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="justify-content" tabindex="-1"><a class="header-anchor" href="#justify-content" aria-hidden="true">#</a> justify-content</h3><div class="hint-container tip"><p class="hint-container-title">属性作用</p><p><code>justify-content</code> 属性定义了项目在主轴上的对齐方式。</p></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start | flex-end | center | space-between | space-around<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+p+`" alt="justify-content" tabindex="0" loading="lazy"><figcaption>justify-content</figcaption></figure><h4 id="五个值分别的作用" tabindex="-1"><a class="header-anchor" href="#五个值分别的作用" aria-hidden="true">#</a> 五个值分别的作用</h4><ul><li>flex-start（默认值）左对齐</li><li>flex-end: 右对齐</li><li>center: 居中</li><li>space-between: 两端对齐, 项目之间的间隔都相等。</li><li>space-around: 每个项目两侧的间隔相等。所以, 项目之间的间隔比项目与边框的间隔大一倍。</li></ul><h3 id="align-items" tabindex="-1"><a class="header-anchor" href="#align-items" aria-hidden="true">#</a> align-items</h3><div class="hint-container tip"><p class="hint-container-title">属性作用</p><p><code>align-items</code> 属性定义项目在交叉轴上如何对齐。</p></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> flex-start | flex-end | center | baseline | stretch<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+u+`" alt="align-items" tabindex="0" loading="lazy"><figcaption>align-items</figcaption></figure><h4 id="五个值分别的作用-1" tabindex="-1"><a class="header-anchor" href="#五个值分别的作用-1" aria-hidden="true">#</a> 五个值分别的作用</h4><ul><li>flex-start: 交叉轴的起点对齐。</li><li>flex-end: 交叉轴的终点对齐。</li><li>center: 交叉轴的中点对齐。</li><li>baseline: 项目的第一行文字的基线对齐。</li><li>stretch（默认值）如果项目未设置高度或设为 auto, 将占满整个容器的高度。</li></ul><h3 id="align-content" tabindex="-1"><a class="header-anchor" href="#align-content" aria-hidden="true">#</a> align-content</h3><div class="hint-container tip"><p class="hint-container-title">属性作用</p><p><code>align-content</code> 属性定义了多根轴线的对齐方式。如果项目只有一根轴线, 该属性不起作用。</p></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>
  <span class="token property">align-content</span><span class="token punctuation">:</span> flex-start | flex-end | center | space-between | space-around |
    stretch<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+h+`" alt="align-content" tabindex="0" loading="lazy"><figcaption>align-content</figcaption></figure><h4 id="六个值分别的作用" tabindex="-1"><a class="header-anchor" href="#六个值分别的作用" aria-hidden="true">#</a> 六个值分别的作用</h4><ul><li>flex-start: 与交叉轴的起点对齐。</li><li>flex-end: 与交叉轴的终点对齐。</li><li>center: 与交叉轴的中点对齐。</li><li>space-between: 与交叉轴两端对齐, 轴线之间的间隔平均分布。</li><li>space-around: 每根轴线两侧的间隔都相等。所以, 轴线之间的间隔比轴线与边框的间隔大一倍。</li><li>stretch（默认值）轴线占满整个交叉轴。</li></ul><h2 id="项目的属性" tabindex="-1"><a class="header-anchor" href="#项目的属性" aria-hidden="true">#</a> 项目的属性</h2><p>以下 6 个属性设置在项目上。</p><ul><li><strong>order</strong></li><li><strong>flex-grow</strong></li><li><strong>flex-shrink</strong></li><li><strong>flex-basis</strong></li><li><strong>flex</strong></li><li><strong>align-self</strong></li></ul><h3 id="order" tabindex="-1"><a class="header-anchor" href="#order" aria-hidden="true">#</a> order</h3><div class="hint-container tip"><p class="hint-container-title">属性作用</p><p><code>order</code> 属性定义项目的排列顺序。数值越小, 排列越靠前, 默认为 0。</p></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">order</span><span class="token punctuation">:</span> &lt;integer&gt;<span class="token punctuation">;</span>
  <span class="token comment">/* default 0 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+v+`" alt="order" tabindex="0" loading="lazy"><figcaption>order</figcaption></figure><h3 id="flex-grow" tabindex="-1"><a class="header-anchor" href="#flex-grow" aria-hidden="true">#</a> flex-grow</h3><div class="hint-container tip"><p class="hint-container-title">属性作用</p><p><code>flex-grow</code> 属性定义项目的放大比例, 默认为 0, 即如果存在剩余空间, 也不放大。</p></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-grow</span><span class="token punctuation">:</span> &lt;number&gt;<span class="token punctuation">;</span>
  <span class="token comment">/* default 0 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+f+`" alt="flex-grow" tabindex="0" loading="lazy"><figcaption>flex-grow</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果所有项目的 <code>flex-grow</code> 属性都为 1, 则它们将等分剩余空间（如果有的话）。如果一个项目的 <code>flex-grow</code> 属性为 2, 其他项目都为 1, 则前者占据的剩余空间将比其他项多一倍。</p></div><h3 id="flex-shrink" tabindex="-1"><a class="header-anchor" href="#flex-shrink" aria-hidden="true">#</a> flex-shrink</h3><div class="hint-container tip"><p class="hint-container-title">属性作用</p><p><code>flex-shrink</code> 属性定义了项目的缩小比例, 默认为 1, 即如果空间不足, 该项目将缩小。剩余空间将比其他项多一倍。</p></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> &lt;number&gt;<span class="token punctuation">;</span>
  <span class="token comment">/* default 1 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+g+`" alt="flex-shrink" tabindex="0" loading="lazy"><figcaption>flex-shrink</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果所有项目的 <code>flex-shrink</code> 属性都为 1, 当空间不足时, 都将等比例缩小。如果一个项目的 flex-shrink 属性为 0, 其他项目都为 1, 则空间不足时, 前者不缩小。负值对该属性无效。</p></div><h3 id="flex-basis" tabindex="-1"><a class="header-anchor" href="#flex-basis" aria-hidden="true">#</a> flex-basis</h3><div class="hint-container tip"><p class="hint-container-title">属性作用</p><p><code>flex-basis</code> 属性定义了在分配多余空间之前, 项目占据的主轴空间（main size）。浏览器根据这个属性, 计算主轴是否有多余空间。它的默认值为 auto, 即项目的本来大小。</p></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-basis</span><span class="token punctuation">:</span> &lt;length&gt; | auto<span class="token punctuation">;</span>
  <span class="token comment">/* default auto */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>它可以设为跟 <code>width</code> 或 <code>height</code> 属性一样的值（比如 350px）, 则项目将占据固定空间。</p><h3 id="flex" tabindex="-1"><a class="header-anchor" href="#flex" aria-hidden="true">#</a> flex</h3><div class="hint-container tip"><p class="hint-container-title">属性作用</p><p><code>flex</code> 属性是 <code>flex-grow</code> , <code>flex-shrink</code> 和 <code>flex-basis</code> 的简写, 默认值为 <code>0 1 auto</code> 。后两个属性可选。</p></div><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex</span><span class="token punctuation">:</span> none | [ &lt; <span class="token string">&quot;flex-grow&quot;</span> &gt; &lt; <span class="token string">&quot;flex-shrink&quot;</span> &gt;? || &lt; <span class="token string">&quot;flex-basis&quot;</span> &gt;]<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>该属性有两个快捷值: <code>auto (1 1 auto)</code> 和 <code>none (0 0 auto)</code> 。 建议优先使用这个属性, 而不是单独写三个分离的属性, 因为浏览器会推算相关值。</p></div><h3 id="align-self" tabindex="-1"><a class="header-anchor" href="#align-self" aria-hidden="true">#</a> align-self</h3><div class="hint-container tip"><p class="hint-container-title">属性作用</p><p><code>align-self</code> 属性允许单个项目有与其他项目不一样的对齐方式, 可覆盖 <code>align-items</code> 属性。默认值为 <code>auto</code> , 表示继承父元素的 <code>align-items</code> 属性, 如果没有父元素, 则等同于 <code>stretch</code> 。 :::</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">align-self</span><span class="token punctuation">:</span> auto | flex-start | flex-end | center | baseline | stretch<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+x+'" alt="align-self" tabindex="0" loading="lazy"><figcaption>align-self</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>该属性可能取六个值, 除了 <code>auto</code> , 其他都与 <code>align-items</code> 属性完全一致。</p></div></div>',70);function j(N,V){const s=t("ExternalLinkIcon");return l(),c("div",null,[b,o(" more "),k,n("p",null,[n("a",_,[e("scss-flex.css"),a(s)]),y,e(),n("a",w,[e("flex.css"),a(s)])]),q,n("p",null,[n("a",z,[e("flexbox 布局例子"),a(s)])]),F])}const L=i(m,[["render",j],["__file","flexbox-layout.html.vue"]]);export{L as default};
