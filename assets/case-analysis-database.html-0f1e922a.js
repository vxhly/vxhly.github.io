import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as t,e as d}from"./app-04dc5a52.js";const i={},r=d('<div class="hint-container tip"><p class="hint-container-title">前言</p><p><code>系统架构设计师</code> 考试中下午案例分析题知识点汇总。主要记录的是关系型数据库设计</p></div><h2 id="数据库设计过程" tabindex="-1"><a class="header-anchor" href="#数据库设计过程" aria-hidden="true">#</a> 数据库设计过程</h2><h3 id="设计阶段" tabindex="-1"><a class="header-anchor" href="#设计阶段" aria-hidden="true">#</a> 设计阶段</h3><table><thead><tr><th>阶段</th><th>主要任务</th></tr></thead><tbody><tr><td>用户需求分析</td><td>分析用户活动、收集数据确定系统边界。</td></tr><tr><td>概念结构设计</td><td>将应用对象抽象成不依赖于 DBMS 的数据模型，即概念模型。描述概念模型的较理想的工具是 E-R 图。</td></tr><tr><td>逻辑结构设计</td><td>将抽象的概念模型转化为与选用的 DBMS 产品所支持的数据模型相符合的逻辑模型，即关系模式。</td></tr><tr><td>物理结构设计</td><td>是逻辑模型在计算机中的具体实现方案。</td></tr><tr><td>数据库实施阶段</td><td>根据前两个阶段的结果建立数据库，编制与调试应用程序，组织数据入库，并进行试运行。</td></tr><tr><td>数据库运行和维护阶段</td><td>数据库应用系统经过试运行即可投入运行，但该阶段需要不断地对系统进行评价、调整与修改。</td></tr></tbody></table><h3 id="需求分析" tabindex="-1"><a class="header-anchor" href="#需求分析" aria-hidden="true">#</a> 需求分析</h3><p>调查组织机构情况、调查各部门的业务活动情况、协助用户明确对新系统的各种要求、确定新系统的边界，以此获得用户对系统的如下要求。<br> ① <code>信息要求</code>: 保存的信息、完整性要求等。<br> ② <code>处理要求</code>: 操作功能、处理的频度、相应时间等。<br> ③ <code>系统要求</code>: 安全性要求、使用方式要求、可扩充性要求。</p><h3 id="概念结构设计" tabindex="-1"><a class="header-anchor" href="#概念结构设计" aria-hidden="true">#</a> 概念结构设计</h3><p>对现实事物抽象认识的 3 种方法:</p><ol><li><code>分类(Classification)</code>: 对现实世界的事物，按照其具有的共同特征和行为，定义一种类型。在某一类型中，个体是类型的一个成员或实例，即 “is member of”。</li><li><code>聚集(Aggregation)</code>: 定义某一类型所具有的属性。如学生类型具有学号、姓名、性别、班级等共同属性，每一个学生都是这一类型中的个体, 通过在这些属性上的不同取值来区分。各个属性是所属类型的一个成份，即 “is part of”。</li><li><code>概括(Generalization)</code>: 由一种已知类型定义新的类型。通常把已知类型称为超类(Superclass), 新定义的类型称为子类(Subclass), 即 “is subset&quot;</li></ol><p>概念设计步骤</p><ol><li>需求分析</li><li>确定局部视图范围</li><li>识别实体及其标识</li><li>确定实体之间的联系</li><li>分配实体及联系的属性</li><li>全局 E-R 模式设计</li></ol><p>冲突的类型</p><ol><li>属性冲突</li><li>结构冲突</li><li>命名冲突</li></ol><h3 id="逻辑结构设计" tabindex="-1"><a class="header-anchor" href="#逻辑结构设计" aria-hidden="true">#</a> 逻辑结构设计</h3><ul><li>将抽象的概念模型转化为与选用的 DBMS 产品所支持的数据模型相符合的逻辑模型，即关系模式。</li><li>主要工作步骤包括确定数据模型、将 E-R 图转换成为指定的数据模型、确定完整性约束和确定用户视图。</li></ul><h3 id="物理设计" tabindex="-1"><a class="header-anchor" href="#物理设计" aria-hidden="true">#</a> 物理设计</h3><p>物理设计的主要工作步骤包括确定数据分布、存储结构和访问方式。</p><h3 id="数据库实施" tabindex="-1"><a class="header-anchor" href="#数据库实施" aria-hidden="true">#</a> 数据库实施</h3><p>数据库实施。在计算机上建立起实际的数据库结构，数据加载(或称装入)，进行试运行和评价的过程，叫作数据库的实施(或称实现)</p><h3 id="数据库运行维护" tabindex="-1"><a class="header-anchor" href="#数据库运行维护" aria-hidden="true">#</a> 数据库运行维护</h3><p>数据库运行维护。数据库一旦投入运行，就标志着数据库维护工作的开始。数据库维护工作的主要内容包括对数据库性能的监测和改善、故障恢复、数据库的重组和重构。</p>',21),l=[r];function h(c,o){return e(),t("div",null,l)}const p=a(i,[["render",h],["__file","case-analysis-database.html.vue"]]);export{p as default};
