import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as t,c as l,d as o,a as s,b as n,f as e,e as c}from"./app-96c37d09.js";const d={},r=s("div",{class:"hint-container tip"},[s("p",{class:"hint-container-title"},"前言"),s("p",null,"SASS 是 CSS 预处理器之一, 它的基本思想是, 用一种专门的编程语言, 进行网页样式设计, 然后再编译成正常的 CSS 文件, 它提供了许多便利的写法, 大大节省了设计者的时间, 使得 CSS 的开发, 变得简单和可维护。")],-1),u=s("h2",{id:"环境布置",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#环境布置","aria-hidden":"true"},"#"),n(" 环境布置")],-1),v=s("h3",{id:"安装-ruby",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#安装-ruby","aria-hidden":"true"},"#"),n(" 安装 Ruby")],-1),k={href:"http://www.ruby-lang.org/zh_cn/downloads/",target:"_blank",rel:"noopener noreferrer"},b=c(`<p>在 Ubuntu 下安装 Ruby, <code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ruby
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看版本号, 确认 Ruby 环境安装完成</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ruby <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="安装-sass" tabindex="-1"><a class="header-anchor" href="#安装-sass" aria-hidden="true">#</a> 安装 SASS</h3><p>Ruby 安装好了, 之后执行命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gem <span class="token function">install</span> sass
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看版本号, 确认 SASS 环境安装完成</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sass <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><h3 id="编译" tabindex="-1"><a class="header-anchor" href="#编译" aria-hidden="true">#</a> 编译</h3><p>SASS 文件就是普通的文本文件, 里面可以直接使用 CSS 语法。文件后缀名是 <code>.scss</code> , 意思为 <code>Sassy CSS</code> 。</p><p>下面的命令, 可以在屏幕上显示 <code>.scss</code> 文件转化的 <code>.css</code> 代码。（假设文件名为 <code>test</code> 。）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sass test.scss
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="编译风格" tabindex="-1"><a class="header-anchor" href="#编译风格" aria-hidden="true">#</a> 编译风格</h3><p>如果要将显示结果保存成文件, 后面再跟一个 <code>.css</code> 文件名, <code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sass test.scss test.css
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,17),m={href:"http://sass-lang.com/docs/yardoc/file",target:"_blank",rel:"noopener noreferrer"},h=c(`<ul><li><strong>nested</strong> =&gt; 嵌套缩进的 css 代码, 它是默认值。</li><li><strong>expanded</strong> =&gt; 没有缩进的、扩展的 css 代码。</li><li><strong>compact</strong> =&gt; 简洁格式的 css 代码。</li><li><strong>compressed</strong> =&gt; 压缩后的 css 代码。</li></ul><p>生产环境当中, 一般使用最后一个选项, <code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sass <span class="token parameter variable">--style</span> compressed test.sass test.css
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>你也可以让 SASS 监听某个文件或目录, 一旦源文件有变动, 就自动生成编译后的版本</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sass <span class="token parameter variable">--watch</span> input.scss:output.css            <span class="token comment"># watch a file</span>
sass <span class="token parameter variable">--watch</span> app/sass:public/stylesheets      <span class="token comment"># watch a directory</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法" aria-hidden="true">#</a> 基本用法</h2><h3 id="变量" tabindex="-1"><a class="header-anchor" href="#变量" aria-hidden="true">#</a> 变量</h3><p>SASS 允许使用变量, 所有变量以 开头。 <code>For Example:</code></p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$blue</span></span><span class="token punctuation">:</span> #1875e7<span class="token punctuation">;</span>

<span class="token selector">div </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> <span class="token variable">$blue</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果变量需要镶嵌在字符串之中, 就必须需要写在 <code>#{}</code> 之中。 <code>For Example:</code></p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$side</span></span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>

<span class="token selector">.rounded </span><span class="token punctuation">{</span>
  <span class="token property">border-<span class="token variable">#{$side}</span>-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="计算功能" tabindex="-1"><a class="header-anchor" href="#计算功能" aria-hidden="true">#</a> 计算功能</h3><p>SASS 允许在代码中使用算式。 <code>For Example:</code></p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">body </span><span class="token punctuation">{</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>14px/2<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">top</span><span class="token punctuation">:</span> 50px <span class="token operator">+</span> 100px<span class="token punctuation">;</span>
  <span class="token property">right</span><span class="token punctuation">:</span> <span class="token variable">$var</span> <span class="token operator">*</span> 10%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="嵌套" tabindex="-1"><a class="header-anchor" href="#嵌套" aria-hidden="true">#</a> 嵌套</h3><p>SASS 允许选择器嵌套。比如, 下面的 CSS 代码:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">div h1 </span><span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以写成:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">div </span><span class="token punctuation">{</span>
  <span class="token selector">h1 </span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>属性也可以嵌套, 比如 <code>border-color</code> 属性, 可以写成:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">p </span><span class="token punctuation">{</span>
  <span class="token selector">border: </span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p><code>border</code> 后面必须加上冒号。</p></div><p>在嵌套的代码块内, 可以使用 <code>&amp;</code> 引用父元素。比如 <code>a:hover</code> 伪类, 可以写成:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">a </span><span class="token punctuation">{</span>
  <span class="token selector"><span class="token parent important">&amp;</span>:hover </span><span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #ffb3ff<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h3><p>SASS 共有两种注释风格。</p><p>标准的 CSS 注释 <code>/* comment */</code> , 会保留到编译后的文件。 单行注释 <code>// comment</code> , 只保留在 SASS 源文件中, 编译后被省略。</p><p>在 <code>/*</code> 后面加一个感叹号, 表示这是&quot;重要注释&quot;。即使是压缩模式编译, 也会保留这行注释, 通常可以用于声明版权信息。</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token comment">/*!
 * 重要注释！
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代码的重用" tabindex="-1"><a class="header-anchor" href="#代码的重用" aria-hidden="true">#</a> 代码的重用</h2><h3 id="继承" tabindex="-1"><a class="header-anchor" href="#继承" aria-hidden="true">#</a> 继承</h3><p>SASS 允许一个选择器, 继承另一个选择器。比如, 现有 <code>class1</code> :</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.class1 </span><span class="token punctuation">{</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ddd<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>class2</code> 要继承 <code>class1</code> , 就要使用 <code>@extend</code> 命令:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">.class2 </span><span class="token punctuation">{</span>
  <span class="token keyword">@extend</span> .class1<span class="token punctuation">;</span>
  <span class="token property">font-size</span><span class="token punctuation">:</span> 120%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mixin" tabindex="-1"><a class="header-anchor" href="#mixin" aria-hidden="true">#</a> Mixin</h3><p>Mixin 有点像 C 语言的宏（ <code>macro</code> ）, 是可以重用的代码块。 使用 <code>@mixin</code> 命令, 定义一个代码块。</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@mixin</span> <span class="token selector">left </span><span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
  <span class="token property">margin-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>@include</code> 命令, 调用这个 <code>mixin</code> 。</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">div </span><span class="token punctuation">{</span>
  <span class="token keyword">@include</span> left<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>mixin</code> 的强大之处, 在于可以指定参数和缺省值。</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@mixin</span> <span class="token function">left</span><span class="token punctuation">(</span><span class="token property"><span class="token variable">$value</span></span><span class="token punctuation">:</span> 10px<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
  <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token variable">$value</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用的时候, 根据需要加入参数:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">div </span><span class="token punctuation">{</span>
  <span class="token keyword">@include</span> <span class="token function">left</span><span class="token punctuation">(</span>20px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面是一个 <code>mixin</code> 的实例, 用来生成浏览器前缀。</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@mixin</span> <span class="token function">rounded</span><span class="token punctuation">(</span><span class="token variable">$vert</span><span class="token punctuation">,</span> <span class="token variable">$horz</span><span class="token punctuation">,</span> <span class="token property"><span class="token variable">$radius</span></span><span class="token punctuation">:</span> 10px<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token property">border-<span class="token variable">#{$vert}</span>-<span class="token variable">#{$horz}</span>-radius</span><span class="token punctuation">:</span> <span class="token variable">$radius</span><span class="token punctuation">;</span>
  <span class="token property">-moz-border-radius-<span class="token variable">#{$vert}</span><span class="token variable">#{$horz}</span></span><span class="token punctuation">:</span> <span class="token variable">$radius</span><span class="token punctuation">;</span>
  <span class="token property">-webkit-border-<span class="token variable">#{$vert}</span>-<span class="token variable">#{$horz}</span>-radius</span><span class="token punctuation">:</span> <span class="token variable">$radius</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用的时候, 可以像下面这样调用:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">#navbar li </span><span class="token punctuation">{</span>
  <span class="token keyword">@include</span> <span class="token function">rounded</span><span class="token punctuation">(</span>top<span class="token punctuation">,</span> left<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">#footer </span><span class="token punctuation">{</span>
  <span class="token keyword">@include</span> <span class="token function">rounded</span><span class="token punctuation">(</span>top<span class="token punctuation">,</span> left<span class="token punctuation">,</span> 5px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="颜色函数" tabindex="-1"><a class="header-anchor" href="#颜色函数" aria-hidden="true">#</a> 颜色函数</h3><p>SASS 提供了一些内置的颜色函数, 以便生成系列颜色。</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token function">lighten</span><span class="token punctuation">(</span>#cc3<span class="token punctuation">,</span> 10%<span class="token punctuation">)</span> <span class="token comment">// #d6d65c</span>
<span class="token function">darken</span><span class="token punctuation">(</span>#cc3<span class="token punctuation">,</span> 10%<span class="token punctuation">)</span> <span class="token comment">// #a3a329</span>
<span class="token function">grayscale</span><span class="token punctuation">(</span>#cc3<span class="token punctuation">)</span> <span class="token comment">// #808080</span>
<span class="token function">complement</span><span class="token punctuation">(</span>#cc3<span class="token punctuation">)</span> <span class="token comment">// #33c</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插入文件" tabindex="-1"><a class="header-anchor" href="#插入文件" aria-hidden="true">#</a> 插入文件</h3><p><code>@import</code> 命令, 用来插入外部文件。</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@import</span> <span class="token string">&quot;path/filename.scss&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果插入的是 <code>.css</code> 文件, 则等同于 css 的 <code>import</code> 命令。</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@import</span> <span class="token string">&quot;foo.css&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="高级用法" tabindex="-1"><a class="header-anchor" href="#高级用法" aria-hidden="true">#</a> 高级用法</h2><h2 id="条件语句" tabindex="-1"><a class="header-anchor" href="#条件语句" aria-hidden="true">#</a> 条件语句</h2><p><code>@if</code> 可以用来判断:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token selector">p </span><span class="token punctuation">{</span>
  <span class="token keyword">@if</span> <span class="token selector">1+1==2 </span><span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">@if</span> <span class="token selector">5 &lt; 3 </span><span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 2px dotted<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配套的还有 <code>@else</code> 命令:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@if</span> <span class="token function">lightness</span><span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">)</span> <span class="token selector">&gt;30% </span><span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">@else</span> <span class="token punctuation">{</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="循环语句" tabindex="-1"><a class="header-anchor" href="#循环语句" aria-hidden="true">#</a> 循环语句</h3><p>SASS 支持 <code>for</code> 循环:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@for</span> <span class="token variable">$i</span> <span class="token keyword">from</span> <span class="token selector">1 to 10 </span><span class="token punctuation">{</span>
  <span class="token selector">.border-<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span> <span class="token variable">#{$i}</span>px solid blue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也支持 <code>while</code> 循环:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token property"><span class="token variable">$i</span></span><span class="token punctuation">:</span> 6<span class="token punctuation">;</span>

<span class="token keyword">@while</span> <span class="token selector"><span class="token variable">$i</span>&gt;0 </span><span class="token punctuation">{</span>
  <span class="token selector">.item-<span class="token variable">#{$i}</span> </span><span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 2em <span class="token operator">*</span> <span class="token variable">$i</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token property"><span class="token variable">$i</span></span><span class="token punctuation">:</span> <span class="token variable">$i</span> <span class="token operator">-</span> 2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>each</code> 命令, 作用与 <code>for</code> 类似:</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@each</span> <span class="token selector"><span class="token variable">$member</span> in a, b, c, d </span><span class="token punctuation">{</span>
  <span class="token selector">.<span class="token variable">#{$member}</span> </span><span class="token punctuation">{</span>
    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url">url</span><span class="token punctuation">(</span><span class="token string">&quot;/image/#{$member}.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义函数" tabindex="-1"><a class="header-anchor" href="#自定义函数" aria-hidden="true">#</a> 自定义函数</h3><p>SASS 允许用户编写自市场上市己的函数。</p><div class="language-scss line-numbers-mode" data-ext="scss"><pre class="language-scss"><code><span class="token keyword">@function</span> <span class="token function">double</span><span class="token punctuation">(</span><span class="token variable">$n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">@return</span> <span class="token variable">$n</span> <span class="token operator">*</span> 2<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">#sidebar </span><span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">double</span><span class="token punctuation">(</span>5px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,72);function g(x,f){const a=i("ExternalLinkIcon");return t(),l("div",null,[r,o(" more "),u,v,s("p",null,[n("SASS 是 Ruby 语言写的, 但是两者的语法没有关系。不懂 Ruby, 照样使用。只是必须先"),s("a",k,[n("安装 Ruby"),e(a)]),n(", 然后再安装 SASS.")]),b,s("p",null,[n("SASS 提供四个[编译风格]("),s("a",m,[n("http://sass-lang.com/docs/yardoc/file"),e(a)]),n(". SASS_REFERENCE.html#output_style)的选项")]),h])}const w=p(d,[["render",g],["__file","sass-usage-guide.html.vue"]]);export{w as default};
