import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as d,c as o,d as l,a as e,b as a,f as s,e as i}from"./app-25a88abe.js";const c={},h=e("div",{class:"hint-container tip"},[e("p",{class:"hint-container-title"},"前言"),e("p",null,"Ghost 采用 Node.js 编写, 默认使用 SQLite3 数据库, 非常轻量, 因为是文件型数据库, 所以无需安装。Ghost 允许多用户编写博文, 使用 Markdown 来编写博文。")],-1),p=e("h2",{id:"下载-ghost",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#下载-ghost","aria-hidden":"true"},"#"),a(" 下载 Ghost")],-1),u={href:"http:////www.ghostchina.com/",target:"_blank",rel:"noopener noreferrer"},v={href:"http:////ghost.org/",target:"_blank",rel:"noopener noreferrer"},b=e("h2",{id:"ghost-中文集成版-推介",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ghost-中文集成版-推介","aria-hidden":"true"},"#"),a(" Ghost 中文集成版(推介)")],-1),m={href:"http://dl.ghostchina.com/Ghost-0.7.4-zh-full.zip",target:"_blank",rel:"noopener noreferrer"},g={class:"hint-container tip"},f=e("p",{class:"hint-container-title"},"提示",-1),x={href:"http://oss-blog.test.upcdn.net/Ghost-0.7.4-zh-full-master.zip",target:"_blank",rel:"noopener noreferrer"},_=e("p",null,[a("版本特色: 中文汉化、支持七牛、又拍云、阿里云 OSS 存储；增加 Roon 主题；集成 node_modules , 无需忍受 "),e("code",null,"npm install --production"),a(" 的麻烦。")],-1),k=e("h3",{id:"ghost-中文标准版",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ghost-中文标准版","aria-hidden":"true"},"#"),a(" Ghost 中文标准版")],-1),w={href:"http://dl.ghostchina.com/Ghost-0.7.4-zh.zip",target:"_blank",rel:"noopener noreferrer"},G=e("p",null,"版本特色: 中文汉化、支持七牛、又拍云、阿里云 OSS 存储；增加 Roon 主题",-1),N=e("h3",{id:"ghost-英文原版",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ghost-英文原版","aria-hidden":"true"},"#"),a(" Ghost 英文原版")],-1),y={href:"http://dl.ghostchina.com/Ghost-0.7.4.zip",target:"_blank",rel:"noopener noreferrer"},j=i(`<h2 id="安装前准备" tabindex="-1"><a class="header-anchor" href="#安装前准备" aria-hidden="true">#</a> 安装前准备</h2><h3 id="vps-服务器和域名" tabindex="-1"><a class="header-anchor" href="#vps-服务器和域名" aria-hidden="true">#</a> VPS 服务器和域名</h3><p>VPS 个人服务器当然是必不可少的, 解析域名的的时候推介解析为 www</p><h3 id="node-js" tabindex="-1"><a class="header-anchor" href="#node-js" aria-hidden="true">#</a> Node.js</h3><p>Ghost 对 Node.js 版本号要求比较严格, Ghost 官方推荐使用 <code>Node 0.10.x</code> 版本, 同时支持 <code>Node 0.12.x</code> 和 <code>Node 4.2.x</code> 版本。</p><p>这边推介使用稳定版 <code>Node 4.2.x</code> 。</p><p>安装 Node 推介使用 <code>nvm</code> 安装。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh <span class="token operator">|</span> <span class="token function">bash</span>
nvm <span class="token function">install</span> <span class="token number">4.2</span>
nvm <span class="token builtin class-name">alias</span> defaults <span class="token number">4.2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="需要-nginx-服务" tabindex="-1"><a class="header-anchor" href="#需要-nginx-服务" aria-hidden="true">#</a> 需要 Nginx 服务</h3><p>Ghost 默认监听的端口为 2368, 而且只监听本地的 IP 地址进行访问, 所以需要 Nginx 这个服务来转发流量</p><p>Ubuntu 下安装直接执行命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">apt-get</span> <span class="token function">install</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="ghost-web-服务器转发原理介绍" tabindex="-1"><a class="header-anchor" href="#ghost-web-服务器转发原理介绍" aria-hidden="true">#</a> Ghost+Web 服务器转发原理介绍</h3><p>官方文档建议使用 Nginx 作为 Ghost 的前端来转发 80 端口请求, 那么 Ghost 的工作总流程就可以描述为:</p>`,14),P={class:"hint-container tip"},V=e("p",{class:"hint-container-title"},"提示",-1),z={href:"http://www.xxx.com",target:"_blank",rel:"noopener noreferrer"},O=i(`<p>可是为什么不直接让 Ghost 使用 80 端口呢却要依赖 Web 服务器转发呢？这是因为 Ghost 需要运行在 root 权限上, 为了避免风险, 就用 Nginx 转发一下。另外, Nginx 毕竟是 Web 服务器, 配置灵活、并发高, 用来做 Ghost 的前端是非常适合的, 如果你服务器上还有其他网站那就更要用 Nginx 了, 不然你的 80 端口给了 Ghost 就没法负载其他网站了。</p><h3 id="解压文件" tabindex="-1"><a class="header-anchor" href="#解压文件" aria-hidden="true">#</a> 解压文件</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">unzip</span> <span class="token parameter variable">-uo</span> <span class="token punctuation">[</span>fileName<span class="token punctuation">]</span>.zip <span class="token parameter variable">-d</span> <span class="token punctuation">[</span>folderName<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="开始配置使用" tabindex="-1"><a class="header-anchor" href="#开始配置使用" aria-hidden="true">#</a> 开始配置使用</h2><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖" aria-hidden="true">#</a> 安装依赖</h3><p>如果你下载的不是 Ghost 中文集成版, 那么你就需要在你的项目目录下执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--production</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当然, 这需要翻墙, Ghost 所依赖的默认数据库 sqlite 包需要从国外服务器上（亚马逊的云存储服务）下载原生插件, 即使是翻墙了也未必能下载下来, 因为 sqlite 的原生插件没有通过 npm 分发。</p><h3 id="配置-config-js" tabindex="-1"><a class="header-anchor" href="#配置-config-js" aria-hidden="true">#</a> 配置 config.js</h3><p>解压缩之后会有一个 <code>config.example.js</code> 默认配置文件, 你需要把它复制重命名成 <code>config.js</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cp</span> config.example.js config.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="配置-url" tabindex="-1"><a class="header-anchor" href="#配置-url" aria-hidden="true">#</a> 配置 URL</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ...</span>
config <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">production</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;//www.yourdomian&quot;</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// ...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意这边必须写上 <code>//</code> 或者 <code>//</code> , 这里写的 URL 就是以后注册账号和登录后台时所用的 URL, 必须完全一样, 如果注册时用的 URL 和这里的不一样, 那么就会出现错误提示说无权限访问！</p><h3 id="配置-nginx-服务进行转发" tabindex="-1"><a class="header-anchor" href="#配置-nginx-服务进行转发" aria-hidden="true">#</a> 配置 Nginx 服务进行转发</h3><p>打开 <code>/etc/nginx/nginx.conf</code> , 在 http 语句块内追加上:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>server {
  listen 80;
  server_name www.yourdomian;

  location / {
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   Host  $http_host;
    proxy_pass http://127.0.0.1:2368;
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="重启-nginx" tabindex="-1"><a class="header-anchor" href="#重启-nginx" aria-hidden="true">#</a> 重启 Nginx</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/etc/init.d/nginx restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="配置-apache-服务进行转发" tabindex="-1"><a class="header-anchor" href="#配置-apache-服务进行转发" aria-hidden="true">#</a> 配置 Apache 服务进行转发</h2><p>打开 <code>/etc/httpd/conf/httpd.conf</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># NameVirtualHost *:80 #这一行取消注释
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>再在文件末尾加上如下语句, 配置请求转发</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;VirtualHost *:80&gt;
    ServerName linuxidc.com
    ProxyRequests Off
    ProxyPreserveHost On
&lt;Proxy *&gt;
    AddDefaultCharset Off
    Order deny,allow
    Allow from all
&lt;/Proxy&gt;
    ProxyPass / http://127.0.0.1:2368/
    ProxyPassReverse / http://127.0.0.1:2368/
&lt;/VirtualHost&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="重启-httpd-服务" tabindex="-1"><a class="header-anchor" href="#重启-httpd-服务" aria-hidden="true">#</a> 重启 httpd 服务</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">service</span> httpd restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="启动-ghost-服务" tabindex="-1"><a class="header-anchor" href="#启动-ghost-服务" aria-hidden="true">#</a> 启动 Ghost 服务</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> start <span class="token parameter variable">--production</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>现在启动 Ghost 并访问域名已经能进入博客页面了, 但下面还需要实现 Ghost 后台运行, 不然你退了终端的话 Ghost 就停止了。</p><h3 id="使用-forever-让-ghost-后台运行" tabindex="-1"><a class="header-anchor" href="#使用-forever-让-ghost-后台运行" aria-hidden="true">#</a> 使用 Forever 让 Ghost 后台运行</h3><h4 id="安装-forever-包" tabindex="-1"><a class="header-anchor" href="#安装-forever-包" aria-hidden="true">#</a> 安装 forever 包</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> forever <span class="token parameter variable">-g</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="启动-ghost" tabindex="-1"><a class="header-anchor" href="#启动-ghost" aria-hidden="true">#</a> 启动 Ghost</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span>production forever start index.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="关闭-ghost" tabindex="-1"><a class="header-anchor" href="#关闭-ghost" aria-hidden="true">#</a> 关闭 Ghost</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>forever stop index.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="重启动-ghost" tabindex="-1"><a class="header-anchor" href="#重启动-ghost" aria-hidden="true">#</a> 重启动 Ghost</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">NODE_ENV</span><span class="token operator">=</span>production forever restart index.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="查看运行状态用这条命令" tabindex="-1"><a class="header-anchor" href="#查看运行状态用这条命令" aria-hidden="true">#</a> 查看运行状态用这条命令</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>forever list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="访问" tabindex="-1"><a class="header-anchor" href="#访问" aria-hidden="true">#</a> 访问</h3>`,41),R={href:"http://www.yourdomian",target:"_blank",rel:"noopener noreferrer"},S={href:"http://www.yourdomian/ghost",target:"_blank",rel:"noopener noreferrer"},E=e("h2",{id:"拓展配置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#拓展配置","aria-hidden":"true"},"#"),a(" 拓展配置")],-1),L=e("h3",{id:"ghost-邮件系统设置详解",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ghost-邮件系统设置详解","aria-hidden":"true"},"#"),a(" Ghost 邮件系统设置详解")],-1),q={href:"http://www.ghostchina.com/mail-configuration-on-self-hosted-version-of-ghost/",target:"_blank",rel:"noopener noreferrer"},H=e("h3",{id:"为博客增加-标签云",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#为博客增加-标签云","aria-hidden":"true"},"#"),a(' 为博客增加 "标签云"')],-1),U={href:"http://www.ghostchina.com/output-tag-cloud/",target:"_blank",rel:"noopener noreferrer"};function I(A,B){const n=r("ExternalLinkIcon");return d(),o("div",null,[h,l(" more "),p,e("p",null,[e("a",u,[a("Ghost 中文官网"),s(n)]),a(),e("a",v,[a("Ghost 英文官网"),s(n)])]),b,e("p",null,[e("a",m,[a("最新版本: Ghost v0.7.4 full (zh)"),s(n)])]),e("div",g,[f,e("p",null,[a("上方链接已失效, 米娜桑可以通过这个来下载 "),e("a",x,[a("最新版本: Ghost v0.7.4 full (zh)"),s(n)])])]),_,k,e("p",null,[e("a",w,[a("最新版本: Ghost v0.7.4 (zh)"),s(n)])]),G,N,e("p",null,[e("a",y,[a("最新版本: Ghost v0.7.4"),s(n)])]),j,e("div",P,[V,e("p",null,[a("Nginx 监听 80 端口, Ghost 一直监听本地 127.0.0.1:2368 端口, 你从外网访问 "),e("a",z,[a("www.xxx.com"),s(n)]),a(" 时, Nginx 从 80 端口接收请求, 将之转发到本地 127.0.0.1:2368 端口, 然后 Ghost 就收到访问请求了。")])]),O,e("p",null,[a("前台: "),e("a",R,[a("http://www.yourdomian"),s(n)]),a(" 后台: "),e("a",S,[a("http://www.yourdomian/ghost"),s(n)])]),E,L,e("p",null,[e("a",q,[a("Ghost 邮件系统设置详解"),s(n)])]),H,e("p",null,[e("a",U,[a('为博客增加 "标签云"'),s(n)])])])}const W=t(c,[["render",I],["__file","insatll-ghost-on-your-vps.html.vue"]]);export{W as default};
