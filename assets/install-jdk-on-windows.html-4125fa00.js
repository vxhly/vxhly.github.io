import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as n,d as i,a,e as o}from"./app-b32ebd48.js";const c="/assets/jdk-1.png",t="/assets/jdk-2.png",d="/assets/jdk-3.png",r="/assets/jdk-4.png",p="/assets/jdk-5.png",l="/assets/jdk-6.png",g="/assets/jdk-7.png",h="/assets/jdk-8.png",b={},f=a("div",{class:"hint-container tip"},[a("p",{class:"hint-container-title"},"前言"),a("p",null,"JDK 是 Java 语言的软件开发工具包, 主要用于移动设备、嵌入式设备上的 java 应用程序。JDK 是整个 java 开发的核心, 它包含了 JAVA 的运行环境, JAVA 工具和 JAVA 基础的类库。这里将介绍在 Windows 下 JDK 的安装和环境变量的配置。")],-1),u=o('<h2 id="安装-jdk" tabindex="-1"><a class="header-anchor" href="#安装-jdk" aria-hidden="true">#</a> 安装 JDK</h2><p>安装 JDK 时。第一次是安装 jdk , 第二次是安装 jre 。建议两个都安装在同一个 java 文件夹中的不同文件夹中。（不能都安装在 java 文件夹的根目录下, jdk 和 jre 安装在同一文件夹会出错）。</p><p><code>For Example:</code> <br></p><figure><img src="'+c+'" alt="JDK 安装" tabindex="0" loading="lazy"><figcaption>JDK 安装</figcaption></figure><p>安装 <code>jdk</code> 随意选择目录 只需把默认安装目录 <code>\\java</code> 之前的目录修改即可<br></p><figure><img src="'+t+'" alt="JDK 安装" tabindex="0" loading="lazy"><figcaption>JDK 安装</figcaption></figure><p>安装 <code>jre</code> → <code>更改</code> → <code>\\java</code> 之前目录和安装 <code>jdk</code> 目录相同即可<br></p><figure><img src="'+d+'" alt="JDK 安装" tabindex="0" loading="lazy"><figcaption>JDK 安装</figcaption></figure><div class="hint-container warning"><p class="hint-container-title">注意</p><p>若无安装目录要求, 可全默认设置。无需做任何修改, 两次均直接点下一步。</p></div><h2 id="环境变量配置" tabindex="-1"><a class="header-anchor" href="#环境变量配置" aria-hidden="true">#</a> 环境变量配置</h2><p>安装完 JDK 后配置环境变量, 依次选择: <code>计算机</code> → <code>属性</code> → <code>高级系统设置</code> → <code>高级</code> → <code>环境变量</code> <br></p><figure><img src="'+r+'" alt="JDK 环境变量配置" tabindex="0" loading="lazy"><figcaption>JDK 环境变量配置</figcaption></figure><h3 id="指定-java-程序目录" tabindex="-1"><a class="header-anchor" href="#指定-java-程序目录" aria-hidden="true">#</a> 指定 JAVA 程序目录</h3><p>新建 <code>JAVA_HOME</code> 变量 。变量值填写 <code>jdk</code> 的安装目录（本人是 <code>D:\\Java\\jdk</code> )<br></p><figure><img src="'+p+'" alt="JDK 环境变量配置" tabindex="0" loading="lazy"><figcaption>JDK 环境变量配置</figcaption></figure><h3 id="修改-path-变量" tabindex="-1"><a class="header-anchor" href="#修改-path-变量" aria-hidden="true">#</a> 修改 Path 变量</h3><p>在变量值最后输入 <code>%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;</code> （注意原来 <code>Path</code> 的变量值末尾有没有 <code>;</code> 号, 如果没有, 先输入 <code>;</code> 号再输入上面的代码）<br></p><figure><img src="'+l+'" alt="JDK 环境变量配置" tabindex="0" loading="lazy"><figcaption>JDK 环境变量配置</figcaption></figure><h3 id="新建-classpath-变量" tabindex="-1"><a class="header-anchor" href="#新建-classpath-变量" aria-hidden="true">#</a> 新建 CLASSPATH 变量</h3><p>在变量值中输入 <code>.;%JAVA_HOME%\\lib;%JAVA_HOME%\\lib\\tools.jar</code> （注意最前面有一点）<br></p><figure><img src="'+g+'" alt="JDK 环境变量配置" tabindex="0" loading="lazy"><figcaption>JDK 环境变量配置</figcaption></figure><p>到此系统的环境变量已经全部配置完毕。</p><h2 id="检验安装完成" tabindex="-1"><a class="header-anchor" href="#检验安装完成" aria-hidden="true">#</a> 检验安装完成</h2><p>运行 cmd 输入 <code>java -version</code> （java 和 -version 之间有空格）。 若如图所示, 显示版本信息, 则说明安装和配置成功。<br></p><figure><img src="'+h+`" alt="JDK 环境变量配置" tabindex="0" loading="lazy"><figcaption>JDK 环境变量配置</figcaption></figure><h2 id="附加-liunx-下环境变量配置" tabindex="-1"><a class="header-anchor" href="#附加-liunx-下环境变量配置" aria-hidden="true">#</a> 附加 liunx 下环境变量配置</h2><p>安装包只需在官网下载源码安装包即可, 下载之后解压在 <code>~/java/jdk</code> 下即可</p><p>在 <code>/etc/profile</code> 和 <code>/etc/bash.bashrc</code> 下粘贴以下代码</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=~</span>/java/jdk
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>/bin:<span class="token environment constant">$PATH</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">CLASSPATH</span><span class="token operator">=</span>.:<span class="token variable">$JAVA_HOME</span>/lib/dt.jar:<span class="token variable">$JAVA_HOME</span>/lib/tools.jar
<span class="token builtin class-name">export</span> <span class="token assign-left variable">JRE_HOME</span><span class="token operator">=</span><span class="token variable">$JAVA_HOME</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后分别运行 <code>source /etc/profile</code> 、 <code>source /etc/bash.bashrc</code> 来让配置生效</p><p>生效之后可以运行 <code>java -version</code> 来验证一下</p>`,31);function v(_,m){return s(),n("div",null,[f,i(" more "),u])}const j=e(b,[["render",v],["__file","install-jdk-on-windows.html.vue"]]);export{j as default};
