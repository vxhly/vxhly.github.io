import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as i,c as r,d as p,a,b as s,f as e,e as l}from"./app-5294595a.js";const c={},d=a("div",{class:"hint-container tip"},[a("p",{class:"hint-container-title"},"前言"),a("p",null,"整理的渗透所需的一些基础知识。")],-1),u=l(`<h2 id="html-表单基础" tabindex="-1"><a class="header-anchor" href="#html-表单基础" aria-hidden="true">#</a> HTML 表单基础</h2><ol><li>该表单是提交给哪个文件进行处理的（查看 action 属性值）</li><li>向后端程序提交的参数是什么（查看 name 属性）</li></ol><h2 id="sql-数据库查询语句基础" tabindex="-1"><a class="header-anchor" href="#sql-数据库查询语句基础" aria-hidden="true">#</a> SQL 数据库查询语句基础</h2><ol><li>查询返回所有的结果</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>条件查询</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> uame<span class="token operator">=</span><span class="token string">&#39;$uname&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>union 合并多个查询结果</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> msgs<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>... ...</li></ol><h2 id="万能用户名或者万能密码" tabindex="-1"><a class="header-anchor" href="#万能用户名或者万能密码" aria-hidden="true">#</a> 万能用户名或者万能密码</h2><ol><li>第一种</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> uame<span class="token operator">=</span><span class="token string">&#39;&#39;</span> <span class="token operator">or</span> <span class="token string">&#39;&#39;</span><span class="token operator">=</span><span class="token string">&#39;&#39;</span> <span class="token operator">and</span> passwd<span class="token operator">=</span>$passwd<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>第二种</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> _from users <span class="token keyword">where</span> uame<span class="token operator">=</span><span class="token string">&#39;&#39;</span> <span class="token keyword">union</span> select_ <span class="token keyword">from</span> users <span class="token operator">and</span> passwd<span class="token operator">=</span>$passwd<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>第三种</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> uame<span class="token operator">=</span>$uname <span class="token operator">and</span> passwd<span class="token operator">=</span><span class="token string">&#39;&#39;</span> <span class="token operator">or</span> <span class="token string">&#39;&#39;</span><span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>... ...</li></ol><h2 id="使用-pdo-进行防注入基础" tabindex="-1"><a class="header-anchor" href="#使用-pdo-进行防注入基础" aria-hidden="true">#</a> 使用 PDO 进行防注入基础</h2><ol><li>允许长连接</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_PERSISTENT</span><span class="token operator">=&gt;</span><span class="token constant boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>不允许使用预处理语句</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_EMULATE_PREPARE</span><span class="token operator">=&gt;</span><span class="token constant boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>PDO 连接</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$pdh</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string single-quoted-string">&#39;127.0.0.1:1433&#39;</span><span class="token punctuation">,</span>user<span class="token operator">=</span><span class="token string single-quoted-string">&#39;sa&#39;</span><span class="token punctuation">,</span>password<span class="token operator">=</span><span class="token string single-quoted-string">&#39;root&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>预处理 SQL 查询语句</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$stmt</span><span class="token operator">=</span><span class="token variable">$dbh</span><span class="token operator">-&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>填充 SQL 语句中的占位符</li></ol><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">,</span><span class="token operator">...</span><span class="token operator">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6"><li>SQL 占位符（如: select * from users where uname=? and passwd=?; ）</li></ol><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> uname<span class="token operator">=</span>? <span class="token operator">and</span> passwd<span class="token operator">=</span>?<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="7"><li>... ...</li></ol><h2 id="wireshark-抓包" tabindex="-1"><a class="header-anchor" href="#wireshark-抓包" aria-hidden="true">#</a> Wireshark 抓包</h2><ol><li>熟练使用 <strong>Wireshark</strong> 这款软件</li><li>熟练掌握过滤器的写法（如: <code>tcp</code> 、 <code>udp</code> 、 <code>icmp</code> 、 <code>mac</code> ......）</li><li>知道各个协议的包结构、包头、包尾</li><li>... ...</li></ol><h2 id="审查代码的能力" tabindex="-1"><a class="header-anchor" href="#审查代码的能力" aria-hidden="true">#</a> 审查代码的能力</h2><ol><li><strong>HTML</strong> 源文件内容（通过右键网页 –&gt; 查看源文件）</li><li><strong>PHP</strong> 代码（了解代码逻辑以及书写规范, 特别是对函数名的记忆）</li><li><strong>PYTHON</strong> 代码（快速读懂代码意思, 特别是要从 main 函数入手去查看）</li><li><strong>C</strong> 语言代码（从代码中分析出来, 该代码的意思以及各个函数的逻辑）</li><li>... ...</li></ol><h2 id="各个-web-漏洞的利用能力" tabindex="-1"><a class="header-anchor" href="#各个-web-漏洞的利用能力" aria-hidden="true">#</a> 各个 WEB 漏洞的利用能力</h2><ol><li><strong>SQL</strong> 注入（通过万能用户名和万能密码来获取一定的 webshell）</li><li>命令注入（特别是 PHP 中的 exec 和 system 函数也能获取到一定的 webshell）</li><li>文件包含和目录遍历（通过 <code>../../../../... .../flag.txt</code> 来获取文件）</li><li>... ...</li></ol><h2 id="liunx-服务的安全配置" tabindex="-1"><a class="header-anchor" href="#liunx-服务的安全配置" aria-hidden="true">#</a> Liunx 服务的安全配置</h2><ol><li><strong>SSH</strong>（禁止 root 登录；禁止空密码登录；禁止密钥登录 ... ...）</li><li><strong>TELNET</strong>（禁止 root telnet；禁用 telnet ... ...）</li><li><strong>VSFTP</strong>（不允许普通用户登录 ftp；禁止匿名用户登录 ftp ... ...）</li><li><strong>HTTPD</strong>（禁止回显 banner 信息；严格控制目录权限 ... ...）</li><li>... ...</li></ol><h2 id="php-安全配置" tabindex="-1"><a class="header-anchor" href="#php-安全配置" aria-hidden="true">#</a> PHP 安全配置</h2><ol><li>开启安全模式</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>safe_mode <span class="token operator">=</span> on
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>禁用函数</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>disable_functions <span class="token operator">=</span> system,exec,eval,shell_exec,phpinfo,<span class="token punctuation">..</span>. <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>禁止 SQL 注入</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>magic_quotes_gpc <span class="token operator">=</span> On
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="python-渗透脚本基础" tabindex="-1"><a class="header-anchor" href="#python-渗透脚本基础" aria-hidden="true">#</a> PYTHON 渗透脚本基础</h2><ol><li>了解 scapy 这一模块（特别是在构造数据包的时候该怎么写）</li><li>了解 dpkt 封装或者拆解网络协议包</li><li>了解 socket 编程</li><li>能够从 help 这一帮助函数中获取到其他函数的使用方法</li><li>拥有快速阅读脚本的能力和代码逻辑思维</li><li>... ...</li></ol><h2 id="liunx-常用命令" tabindex="-1"><a class="header-anchor" href="#liunx-常用命令" aria-hidden="true">#</a> Liunx 常用命令</h2><ol><li><strong>find</strong></li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span>  /  <span class="token parameter variable">-iname</span>  * <span class="token operator">|</span> <span class="token function">xargs</span>  <span class="token function">grep</span>  –i  <span class="token string">&#39;*key*&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>grep</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">grep</span>  <span class="token string">&#39;*key*&#39;</span>  ./keystring.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>netstat</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">netstat</span> –tulnp <span class="token number">11.4</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token punctuation">[</span>pid<span class="token punctuation">]</span> <span class="token number">11.5</span> chattr +i /etc/passwd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>kill</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token punctuation">[</span>pid<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>chattr</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>chattr  +i  /etc/passwd /etc/shadow
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6"><li>useradd</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">useradd</span>  <span class="token parameter variable">-o</span>  <span class="token parameter variable">-u</span>  <span class="token number">0</span>  <span class="token builtin class-name">test</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="web-漏洞训练平台" tabindex="-1"><a class="header-anchor" href="#web-漏洞训练平台" aria-hidden="true">#</a> WEB 漏洞训练平台</h2>`,63),k=a("strong",null,"DVWA",-1),h={href:"https://github.com/ethicalhack3r/DVWA",target:"_blank",rel:"noopener noreferrer"},m=a("strong",null,"Web For Pentester",-1),v={href:"https://pentesterlab.com/exercises/web_for_pentester_II",target:"_blank",rel:"noopener noreferrer"},g=a("strong",null,"ZVulDrill",-1),b={href:"https://github.com/710leo/ZVulDrill",target:"_blank",rel:"noopener noreferrer"},y=l(`<ol start="4"><li>... ...</li></ol><h2 id="网络协议原理" tabindex="-1"><a class="header-anchor" href="#网络协议原理" aria-hidden="true">#</a> 网络协议原理</h2><ol><li><strong>Tcp</strong> 三次握手和四次挥手</li><li><strong>Icmp</strong> 发包以及回包</li><li><strong>Mac</strong> 防洪原理</li><li><strong>ARP</strong> 发广播包, <strong>ARP</strong> 欺骗</li><li><strong>Dtp</strong> 生成树攻击原理</li><li>... ...</li></ol><h2 id="关于-python-的网络渗透编程" tabindex="-1"><a class="header-anchor" href="#关于-python-的网络渗透编程" aria-hidden="true">#</a> 关于 PYTHON 的网络渗透编程</h2><ol><li>ARP 扫描</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> socket
<span class="token comment"># or</span>
<span class="token keyword">from</span> scapy<span class="token punctuation">.</span><span class="token builtin">all</span> <span class="token keyword">import</span> <span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>ARP 欺骗、ARP 监控</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> scapy<span class="token punctuation">.</span><span class="token builtin">all</span> <span class="token keyword">import</span> <span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>OS 扫描</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> nmap
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4"><li>Mac 防洪</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> socket
<span class="token comment"># or</span>
<span class="token keyword">from</span> scapy<span class="token punctuation">.</span><span class="token builtin">all</span> <span class="token keyword">import</span> <span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>mssql 数据库密码爆破</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pymssql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6"><li>跨越 VlAN 攻击</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> scapy<span class="token punctuation">.</span><span class="token builtin">all</span> <span class="token keyword">import</span> <span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="7"><li>Dtp 攻击</li></ol><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> scapy<span class="token punctuation">.</span><span class="token builtin">all</span> <span class="token keyword">import</span> <span class="token operator">*</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="8"><li>... ...</li></ol>`,19);function w(x,f){const n=t("ExternalLinkIcon");return i(),r("div",null,[d,p(" more "),u,a("p",null,[s("1."),k,s(" 【"),a("a",h,[s("DVWA"),e(n)]),s("】 2."),m,s(" 【"),a("a",v,[s("Web For Pentester II"),e(n)]),s('】(请自行安装镜像, 安装时请选择"其他 Liunx 3.x 内核 64 位") 3.'),g,s(" 【"),a("a",b,[s("ZVulDrill"),e(n)]),s("】(请自行准备 PHP 环境)")]),y])}const P=o(c,[["render",w],["__file","pentest-basic-knowledge.html.vue"]]);export{P as default};
