import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as r,d as a,a as t,e as s}from"./app-25a88abe.js";const e="/assets/liunx-vim.png",i={},o=t("div",{class:"hint-container tip"},[t("p",{class:"hint-container-title"},"前言"),t("p",null,"本篇是 Liunx 的学习笔记系列第二篇, 这一篇将介绍 vim 的使用技巧。vim 是一款终端编辑器, 是由 vi 演变而来的, 它与 vi 最大的区别是, vim 拥有代码高亮, 其他操作都是共用的。")],-1),h=s('<h2 id="vim-常用操作" tabindex="-1"><a class="header-anchor" href="#vim-常用操作" aria-hidden="true">#</a> vim 常用操作</h2><h3 id="打开文件操作" tabindex="-1"><a class="header-anchor" href="#打开文件操作" aria-hidden="true">#</a> 打开文件操作</h3><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><strong>vi</strong></td><td>进入 vi 而不读入任何文件</td></tr><tr><td><strong>vi [fileName]</strong></td><td>进入 vi 并读入指定名称的文件（新、旧文件均可）。</td></tr><tr><td><strong>vi +n [fileName]</strong></td><td>进入 vi 并且由文件的第几行开始。</td></tr><tr><td><strong>vi + [fileName]</strong></td><td>进入 vi 并且由文件的最后一行开始。</td></tr><tr><td><strong>vi +/pattern [fileName]</strong></td><td>打开文件, 并将光标置于第一个与 pattern 匹配的串处</td></tr><tr><td><strong>vi [fileName]....[fileName]</strong></td><td>打开多个文件, 依次进行编辑</td></tr><tr><td><strong>vi -r [fileName]</strong></td><td>在上次正用 vi 编辑时发生系统崩溃, 恢复 [fileName]</td></tr><tr><td><strong>vimdiff fileA fileB</strong></td><td>比较编辑两个不同的文件</td></tr></tbody></table><h3 id="vim-操作模式转换图" tabindex="-1"><a class="header-anchor" href="#vim-操作模式转换图" aria-hidden="true">#</a> vim 操作模式转换图</h3><figure><img src="'+e+`" alt="vim 操作模式转换图" tabindex="0" loading="lazy"><figcaption>vim 操作模式转换图</figcaption></figure><h3 id="插入命令" tabindex="-1"><a class="header-anchor" href="#插入命令" aria-hidden="true">#</a> 插入命令</h3><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><strong>a</strong></td><td>在光标所在行行尾插入</td></tr><tr><td><strong>i</strong></td><td>在光标所在字符前插入</td></tr><tr><td><strong>I</strong></td><td>在光标所在行行首插入</td></tr><tr><td><strong>o</strong></td><td>在光标下插入新行</td></tr><tr><td><strong>O</strong></td><td>在光标上插入新行</td></tr></tbody></table><h3 id="定位命令" tabindex="-1"><a class="header-anchor" href="#定位命令" aria-hidden="true">#</a> 定位命令</h3><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><strong>:set nu</strong></td><td>设置行号</td></tr><tr><td><strong>:set nonu</strong></td><td>取消行号</td></tr><tr><td><strong>gg</strong></td><td>到第一行</td></tr><tr><td><strong>G</strong></td><td>到最后一行</td></tr><tr><td><strong>nG</strong></td><td>到第 n 行</td></tr><tr><td><strong>:n</strong></td><td>到第 n 行</td></tr><tr><td><strong>$</strong></td><td>光标移至行尾</td></tr><tr><td><strong>0</strong></td><td>光标移至行首</td></tr></tbody></table><h3 id="删除命令" tabindex="-1"><a class="header-anchor" href="#删除命令" aria-hidden="true">#</a> 删除命令</h3><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><strong>x</strong></td><td>删除光标所在处字符</td></tr><tr><td><strong>nx</strong></td><td>删除光标所在处后 n 个字符</td></tr><tr><td><strong>dd</strong></td><td>删除光标所在行</td></tr><tr><td><strong>ndd</strong></td><td>删除 n 行</td></tr><tr><td><strong>dG</strong></td><td>删除光标所在行到文件末尾内容</td></tr><tr><td><strong>D</strong></td><td>删除光标所在处至行尾内容</td></tr><tr><td><strong>:n1, n2d</strong></td><td>删除第 n1 行到第 n2 行</td></tr></tbody></table><h3 id="复制和剪切命令" tabindex="-1"><a class="header-anchor" href="#复制和剪切命令" aria-hidden="true">#</a> 复制和剪切命令</h3><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><strong>yy</strong></td><td>复制当前行</td></tr><tr><td><strong>nyy</strong></td><td>复制当前行（包含当前行）以下 n 行</td></tr><tr><td><strong>dd</strong></td><td>剪切当前行</td></tr><tr><td><strong>ndd</strong></td><td>剪切当前行（包含当前行）以下 n 行</td></tr><tr><td><strong>p</strong></td><td>粘贴在当前光标所在行的下一行</td></tr><tr><td><strong>P</strong></td><td>粘贴在当前光标所在行的上一行</td></tr><tr><td><strong>nyl</strong></td><td>复制 n 个字符</td></tr><tr><td><strong>yw</strong></td><td>复制一个单词</td></tr><tr><td><strong>y$</strong></td><td>复制从当前位置到行尾</td></tr><tr><td><strong>yG</strong></td><td>复制从所在行到最后一行</td></tr><tr><td><strong>:n1, n2 co n3</strong></td><td>将 n1 行到 n2 行之间的内容拷贝到第 n3+1 行【n3 行的下一行】</td></tr><tr><td><strong>:n1, n2 m n3</strong></td><td>将 n1 行到 n2 行之间的内容移至到第 n3 行下</td></tr><tr><td><strong>J</strong></td><td>把下一行的数据连接到本行之后</td></tr></tbody></table><h3 id="替换和取消命令" tabindex="-1"><a class="header-anchor" href="#替换和取消命令" aria-hidden="true">#</a> 替换和取消命令</h3><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><strong>r</strong></td><td>取代光标所在处字符</td></tr><tr><td><strong>R</strong></td><td>从光标所在处开始替换字符, 按 Esc 结束</td></tr><tr><td><strong>u</strong></td><td>取消上一步操作</td></tr></tbody></table><h3 id="搜索和搜索替换命令" tabindex="-1"><a class="header-anchor" href="#搜索和搜索替换命令" aria-hidden="true">#</a> 搜索和搜索替换命令</h3><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><strong>/string</strong></td><td>搜索指定字符串</td></tr><tr><td><strong>:set ic</strong></td><td>搜索时忽略大小写</td></tr><tr><td><strong>:set noic</strong></td><td>取消搜索时忽略大小写</td></tr><tr><td><strong>n</strong></td><td>搜索指定字符串的下一个出现位置（即同方向）</td></tr><tr><td><strong>N</strong></td><td>在反方向上重复上一次搜索命令</td></tr><tr><td><strong>:%s/old/new/g</strong></td><td>全文替换指定字符串；需要替换询问时, g 改成 c</td></tr><tr><td><strong>:n1, n2s/old/new/g</strong></td><td>在一定方位范围内替换指定字符串；需要替换询问时, g 改成 c</td></tr></tbody></table><h3 id="保存和退出命令" tabindex="-1"><a class="header-anchor" href="#保存和退出命令" aria-hidden="true">#</a> 保存和退出命令</h3><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><strong>:w</strong></td><td>保存修改</td></tr><tr><td><strong>:w /[path]/[fileName]</strong></td><td>另存为指定文件</td></tr><tr><td><strong>:wq</strong>, <strong>:x</strong></td><td>保存修改并退出</td></tr><tr><td><strong>ZZ</strong></td><td>快捷键, 保存修改并退出</td></tr><tr><td><strong>:q!</strong></td><td>不保存修改并退出</td></tr><tr><td><strong>:wq!</strong></td><td>保存修改并退出（文件所有者及 root 可使用, 通常在文件无写权限下使用）</td></tr><tr><td><strong>:n1, n2 w ! command</strong></td><td>将文件中 n1 行至 n2 行的内容作为 command 的输入并执行之, 若不指定 n1, n2, 则表示将整个文件内容作为 command 的输入【注意空格】例如 <code>:1,4 w! grep tom</code></td></tr><tr><td><strong>:!command</strong></td><td>暂时退出 vi 并执行 shell 指令, 执行完毕后再回到 vi。【后期应该有用】</td></tr><tr><td><strong>:r!command</strong></td><td>将命令 command 的输出结果放到当前行【强大】</td></tr><tr><td><strong>:sh</strong></td><td>暂时退出 vi 到系统下, 结束时按 <code>Ctrl + d</code> 则回到 vi。</td></tr><tr><td><strong>:e [fileName]</strong></td><td>打开文件 [fileName] 进行编辑【相当于退出当前的并打开另一个文件】</td></tr><tr><td><strong>:e!</strong></td><td>放弃修改文件内容, 重新载入该文件编辑</td></tr><tr><td><strong>:w !sudo tee %</strong></td><td>以普通用户身份打开的 vim , 修改后以 root 身份保存</td></tr></tbody></table><h2 id="vim-使用技巧" tabindex="-1"><a class="header-anchor" href="#vim-使用技巧" aria-hidden="true">#</a> vim 使用技巧</h2><h3 id="导入文件内容" tabindex="-1"><a class="header-anchor" href="#导入文件内容" aria-hidden="true">#</a> 导入文件内容</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>:r /<span class="token punctuation">[</span>path<span class="token punctuation">]</span>/<span class="token punctuation">[</span>fileName<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="导入命令执行结果" tabindex="-1"><a class="header-anchor" href="#导入命令执行结果" aria-hidden="true">#</a> 导入命令执行结果</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>:r <span class="token operator">!</span>command
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="寻找命令所在目录" tabindex="-1"><a class="header-anchor" href="#寻找命令所在目录" aria-hidden="true">#</a> 寻找命令所在目录</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>:<span class="token operator">!</span>which <span class="token builtin class-name">command</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="定义快捷键" tabindex="-1"><a class="header-anchor" href="#定义快捷键" aria-hidden="true">#</a> 定义快捷键</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>:map ^P I<span class="token comment">#&lt;ESC&gt;      # 按 Ctrl+P 组合键用 # 注释当前行</span>
:map ^B 0x         <span class="token comment"># 按 Ctrl+B 组合键删除当前行的注释</span>
:map ^H istring<span class="token operator">&lt;</span>ESC<span class="token operator">&gt;</span>   <span class="token comment"># 按 Ctrl+H 组合键在光标所在位置插入字符串</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>:map</code> 定义快捷键时, 按 Ctrl+V+key 定义快捷键；<code>:map</code> 定义的快捷键, 重启或关机失效</p></div><h3 id="连续行注释" tabindex="-1"><a class="header-anchor" href="#连续行注释" aria-hidden="true">#</a> 连续行注释</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>:n1,n2s/^/<span class="token comment">#/g     # 在 n1 行到 n2 行首添加注释 #</span>
:n1,n2s/^<span class="token comment">#//g     # 在 n1 行到 n2 行首删除注释 #</span>
:n1,n2s/^/<span class="token punctuation">\\</span>/<span class="token punctuation">\\</span>//g   <span class="token comment"># 在 n1 行到 n2 行首添加注释 //</span>
:n1,n2s/^<span class="token punctuation">\\</span>/<span class="token punctuation">\\</span>//g    <span class="token comment"># 在 n1 行到 n2 行首删除注释 //</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="替换" tabindex="-1"><a class="header-anchor" href="#替换" aria-hidden="true">#</a> 替换</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>:ab string1 string2    <span class="token comment"># 输入 string1 将会被替换成 string2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="编辑模式命令-永久生效" tabindex="-1"><a class="header-anchor" href="#编辑模式命令-永久生效" aria-hidden="true">#</a> 编辑模式命令, 永久生效</h3><p><code>普通</code> 用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /home/<span class="token punctuation">[</span>userName<span class="token punctuation">]</span>/.vimrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>root</code> 用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /root/.vimrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>添加类似于以下命令代码, 无需添加 :</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">set</span> nu
map ^P I<span class="token comment">#&lt;ESC&gt;</span>
ab <span class="token builtin class-name">test</span> this is test,this is test,this is test.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,40);function l(c,g){return n(),r("div",null,[o,a(" more "),h])}const u=d(i,[["render",l],["__file","usage-of-vim.html.vue"]]);export{u as default};
