import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as c,c as d,d as r,a as n,b as a,f as e,e as i}from"./app-100346d7.js";const o={},p=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"前言"),n("p",null,"Git 是一个开源的分布式版本控制系统, 可以有效、高速的处理从很小到非常大的项目版本管理。")],-1),u=i(`<h2 id="安装-git" tabindex="-1"><a class="header-anchor" href="#安装-git" aria-hidden="true">#</a> 安装 Git</h2><p>如果你的系统还没有 Git, 请通过以下命令安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> <span class="token function">git</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="创建帐号" tabindex="-1"><a class="header-anchor" href="#创建帐号" aria-hidden="true">#</a> 创建帐号</h2><p>创建你的 GitHub 帐号, 或者 Git@OSC 帐号</p>`,5),h={href:"http://github.com/",target:"_blank",rel:"noopener noreferrer"},b=n("br",null,null,-1),m={href:"http://git.oschina.net/",target:"_blank",rel:"noopener noreferrer"},v=i(`<h2 id="liunx-创建-ssh-密钥" tabindex="-1"><a class="header-anchor" href="#liunx-创建-ssh-密钥" aria-hidden="true">#</a> liunx 创建 SSH 密钥</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">&quot;xxxxx@xxxxx.com&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="添加-public-key" tabindex="-1"><a class="header-anchor" href="#添加-public-key" aria-hidden="true">#</a> 添加 public key</h3><p>查看你的 public key, 并把它添加到您的账户中</p>`,4),g={href:"http://github.com/settings/keys",target:"_blank",rel:"noopener noreferrer"},k={href:"http://git.oschina.net/profile/sshkeys",target:"_blank",rel:"noopener noreferrer"},f=i(`<p>使用以下命令查看</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> /home/youname/.ssh/id_rsa.pub
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="测试验证是否成功" tabindex="-1"><a class="header-anchor" href="#测试验证是否成功" aria-hidden="true">#</a> 测试验证是否成功</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@github.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@git.oschina.net
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回你在 <code>GitHub</code> 或 <code>Git@OSC</code> 上注册的用户名代表成功。</p><h2 id="github-或-git-osc-上创建项目" tabindex="-1"><a class="header-anchor" href="#github-或-git-osc-上创建项目" aria-hidden="true">#</a> GitHub 或 Git@OSC 上创建项目</h2>`,8),x={href:"http://github.com/",target:"_blank",rel:"noopener noreferrer"},_=n("br",null,null,-1),L={href:"http://git.oschina.net/",target:"_blank",rel:"noopener noreferrer"},C=i(`<h2 id="本地配置" tabindex="-1"><a class="header-anchor" href="#本地配置" aria-hidden="true">#</a> 本地配置</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>尽量保持你的名字和你的邮箱和 GitHub 或 Git@OSC 的注册一致。</p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> user.name <span class="token string">&quot;your name&quot;</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> user.email <span class="token string">&quot;your email&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置大小写敏感" tabindex="-1"><a class="header-anchor" href="#配置大小写敏感" aria-hidden="true">#</a> 配置大小写敏感</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在 Git 中默认是不区分大小的, 因此当你修改了文件名的大小写后, git 并不会认为你有修改哦, 使用下面的配置可开启大小写敏感</p></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config core.ignorecase <span class="token boolean">false</span> <span class="token parameter variable">--global</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="本地多个-ssh-key-的配置" tabindex="-1"><a class="header-anchor" href="#本地多个-ssh-key-的配置" aria-hidden="true">#</a> 本地多个 ssh-key 的配置</h2><p>在 <code>.ssh</code> 目录下面创建名为 <code>config</code> 的配置文件, 配置文件内容如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Host me.github.com <span class="token comment"># 相当于 DNS 的作用</span>
    HostName github.com <span class="token comment"># 解析的地址</span>
    PreferredAuthentications publickey
    IdentityFile ~/.ssh/me_rsa <span class="token comment"># 这是您生成密钥的文件名,注意是私钥的文件名</span>

Host work.github.com <span class="token comment"># 相当于 DNS 的作用</span>
    HostName github.com <span class="token comment"># 解析的地址</span>
    Port <span class="token number">2222</span> <span class="token comment"># 如果你改变了 ssh 的端口号</span>
    PreferredAuthentications publickey
    IdentityFile ~/.ssh/work_rsa <span class="token comment"># 这是您生成密钥的文件名,注意是私钥的文件名</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>测试连接</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@me.github.com  <span class="token comment"># =&gt; 将会自动解析成 git@github.com</span>
<span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@work.github.com <span class="token comment"># =&gt; 将会自动解析成 git@github.com</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h2><h3 id="进入项目目录-初始化" tabindex="-1"><a class="header-anchor" href="#进入项目目录-初始化" aria-hidden="true">#</a> 进入项目目录, 初始化</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="添加项目至本地仓库" tabindex="-1"><a class="header-anchor" href="#添加项目至本地仓库" aria-hidden="true">#</a> 添加项目至本地仓库</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="提交并备注" tabindex="-1"><a class="header-anchor" href="#提交并备注" aria-hidden="true">#</a> 提交并备注</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;first commit&quot;</span>
<span class="token function">git</span> remote <span class="token function">add</span> origin git@github.com:<span class="token punctuation">[</span>youName<span class="token punctuation">]</span>/<span class="token punctuation">[</span>appName<span class="token punctuation">]</span>.git
<span class="token function">git</span> push <span class="token parameter variable">-u</span> origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解决冲突" tabindex="-1"><a class="header-anchor" href="#解决冲突" aria-hidden="true">#</a> 解决冲突</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> pull origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="强制覆盖本地代码-更新本地源" tabindex="-1"><a class="header-anchor" href="#强制覆盖本地代码-更新本地源" aria-hidden="true">#</a> 强制覆盖本地代码（更新本地源）</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> fetch <span class="token parameter variable">--all</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="创建一个新的标签并提交" tabindex="-1"><a class="header-anchor" href="#创建一个新的标签并提交" aria-hidden="true">#</a> 创建一个新的标签并提交</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> tag <span class="token parameter variable">-a</span> v1.0.0 <span class="token parameter variable">-m</span> <span class="token string">&quot;test@1.0.0&quot;</span>
<span class="token function">git</span> push origin <span class="token parameter variable">--tags</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看本地标签" tabindex="-1"><a class="header-anchor" href="#查看本地标签" aria-hidden="true">#</a> 查看本地标签</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> tag
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="删除远程-tag" tabindex="-1"><a class="header-anchor" href="#删除远程-tag" aria-hidden="true">#</a> 删除远程 tag</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin <span class="token parameter variable">--delete</span> tag <span class="token punctuation">[</span>tagname<span class="token punctuation">]</span>
<span class="token function">git</span> tag <span class="token parameter variable">-d</span> <span class="token punctuation">[</span>tagname<span class="token punctuation">]</span> <span class="token comment"># 删除本地 tag</span>
<span class="token function">git</span> push origin :refs/tags/<span class="token punctuation">[</span>tagname<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取远程-tag" tabindex="-1"><a class="header-anchor" href="#获取远程-tag" aria-hidden="true">#</a> 获取远程 tag</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> fetch origin tag <span class="token punctuation">[</span>tagname<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="修改-remote" tabindex="-1"><a class="header-anchor" href="#修改-remote" aria-hidden="true">#</a> 修改 remote</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote set-url origin git@<span class="token punctuation">[</span>URL<span class="token punctuation">]</span>:<span class="token punctuation">[</span>userName<span class="token punctuation">]</span>/<span class="token punctuation">[</span>projectName<span class="token punctuation">]</span>
<span class="token comment"># or</span>
<span class="token function">git</span> remote <span class="token function">rm</span> origin
<span class="token function">git</span> remote <span class="token function">add</span> origin git@<span class="token punctuation">[</span>URL<span class="token punctuation">]</span>:<span class="token punctuation">[</span>userName<span class="token punctuation">]</span>/<span class="token punctuation">[</span>projectName<span class="token punctuation">]</span>.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看远程分支" tabindex="-1"><a class="header-anchor" href="#查看远程分支" aria-hidden="true">#</a> 查看远程分支</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> branch <span class="token parameter variable">-a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="查看本地分支" tabindex="-1"><a class="header-anchor" href="#查看本地分支" aria-hidden="true">#</a> 查看本地分支</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> branch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="创建本地分支" tabindex="-1"><a class="header-anchor" href="#创建本地分支" aria-hidden="true">#</a> 创建本地分支</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> branch <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="创建一个空分支" tabindex="-1"><a class="header-anchor" href="#创建一个空分支" aria-hidden="true">#</a> 创建一个空分支</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> branch <span class="token parameter variable">--orphan</span> <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span> <span class="token comment"># 创建无历史提交的分支</span>
<span class="token function">git</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token builtin class-name">.</span> <span class="token comment"># 删除本地代码</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除远程分支" tabindex="-1"><a class="header-anchor" href="#删除远程分支" aria-hidden="true">#</a> 删除远程分支</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin <span class="token parameter variable">--delete</span> <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span>
<span class="token comment"># or</span>
<span class="token function">git</span> push origin :<span class="token punctuation">[</span>branchName<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="本地分支推送到远程分支" tabindex="-1"><a class="header-anchor" href="#本地分支推送到远程分支" aria-hidden="true">#</a> 本地分支推送到远程分支</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="切换分支" tabindex="-1"><a class="header-anchor" href="#切换分支" aria-hidden="true">#</a> 切换分支</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="合并分支" tabindex="-1"><a class="header-anchor" href="#合并分支" aria-hidden="true">#</a> 合并分支</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout master
<span class="token function">git</span> merge <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span>
<span class="token function">git</span> push origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果分支合并时出现了冲突, 那么只能强上了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> branch <span class="token parameter variable">-m</span> master old-master
<span class="token function">git</span> branch <span class="token parameter variable">-m</span> <span class="token punctuation">[</span>branchName<span class="token punctuation">]</span> master
<span class="token function">git</span> push <span class="token parameter variable">-f</span> origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="submodule" tabindex="-1"><a class="header-anchor" href="#submodule" aria-hidden="true">#</a> submodule</h3><p>当项目越来越庞大之后, 不可避免的要拆分成多个子模块, 我们希望各个子模块有独立的版本管理, 并且由专门的人去维护, 这时候我们就要用到 git 的 submodule 功能。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token operator">&lt;</span>repository<span class="token operator">&gt;</span> <span class="token parameter variable">--recursive</span> 递归的方式克隆整个项目
<span class="token function">git</span> submodule <span class="token function">add</span> <span class="token operator">&lt;</span>repository<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>path<span class="token operator">&gt;</span> 添加子模块
<span class="token function">git</span> submodule init 初始化子模块
<span class="token function">git</span> submodule update 更新子模块
<span class="token function">git</span> submodule foreach <span class="token function">git</span> pull 拉取所有子模块
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除子模块</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 逆初始化模块, 其中{MOD_NAME}为模块目录, 执行后可发现模块目录被清空</span>
<span class="token function">git</span> submodule deinit <span class="token punctuation">{</span>MOD_NAME<span class="token punctuation">}</span>
<span class="token comment"># 删除.gitmodules中记录的模块信息（--cached选项清除.git/modules中的缓存）</span>
<span class="token function">git</span> <span class="token function">rm</span> <span class="token parameter variable">--cached</span> <span class="token punctuation">{</span>MOD_NAME<span class="token punctuation">}</span>
<span class="token comment"># 提交更改到代码库, 可观察到&#39;.gitmodules&#39;内容发生变更</span>
<span class="token function">git</span> commit <span class="token parameter variable">-am</span> <span class="token string">&quot;Remove a submodule.&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改模块的 URL</p><ol><li>修改&#39;.gitmodules&#39;文件中对应模块的”url“属性;</li><li>使用 <code>git submodule sync</code> 命令, 将新的 URL 更新到文件 <code>.git/config</code> # git 中配置 autocrlf</li></ol><h2 id="高级用法" tabindex="-1"><a class="header-anchor" href="#高级用法" aria-hidden="true">#</a> 高级用法</h2><h3 id="批量修改历史-commit-的用户名和邮箱" tabindex="-1"><a class="header-anchor" href="#批量修改历史-commit-的用户名和邮箱" aria-hidden="true">#</a> 批量修改历史 commit 的用户名和邮箱</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>

<span class="token function">git</span> filter-branch --env-filter <span class="token string">&#39;

OLD_EMAIL=&quot;原邮箱地址&quot;
CORRECT_NAME=&quot;新用户名&quot;
CORRECT_EMAIL=&quot;新邮箱地址&quot;

if [ &quot;$GIT_COMMITTER_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]
then
    export GIT_COMMITTER_NAME=&quot;$CORRECT_NAME&quot;
    export GIT_COMMITTER_EMAIL=&quot;$CORRECT_EMAIL&quot;
fi
if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]
then
    export GIT_AUTHOR_NAME=&quot;$CORRECT_NAME&quot;
    export GIT_AUTHOR_EMAIL=&quot;$CORRECT_EMAIL&quot;
fi
&#39;</span> --tag-name-filter <span class="token function">cat</span> -- <span class="token parameter variable">--branches</span> <span class="token parameter variable">--tags</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="换行符" tabindex="-1"><a class="header-anchor" href="#换行符" aria-hidden="true">#</a> 换行符</h2><h3 id="源文件中是换行符是-lf" tabindex="-1"><a class="header-anchor" href="#源文件中是换行符是-lf" aria-hidden="true">#</a> 源文件中是换行符是 LF</h3><p>如果你的源文件中是换行符是 LF, 而 <code>autocrlf=true</code> , 此时 <code>Git add .</code> 就会遇到 <code>fatal: LF would be replaced by CRLF</code> 的错误。有两个解决办法:</p><ol><li>将你的源文件中的 LF 转为 CRLF 即可【推荐】</li><li>将 autocrlf 设置为 false</li></ol><h3 id="源文件中是换行符是-crlf" tabindex="-1"><a class="header-anchor" href="#源文件中是换行符是-crlf" aria-hidden="true">#</a> 源文件中是换行符是 CRLF</h3><p>如果你的源文件中是换行符是 CRLF, 而 <code>autocrlf=input</code> , 此时 <code>Git add .</code> 也会遇到 <code>fatal: CRLF would be replaced by LF</code> 的错误。有两个解决办法:</p><ol><li>将你源文件中的 CRLF 转为 LF【推荐】</li><li>将 autocrlf 设置为 true 或者 false</li></ol><h2 id="core-autocrlf" tabindex="-1"><a class="header-anchor" href="#core-autocrlf" aria-hidden="true">#</a> core.autocrlf</h2><p>Git 可以在你提交时自动地把行结束符 CRLF 转换成 LF, 而在签出代码时把 LF 转换成 CRLF。用 core.autocrlf 来打开此项功能, 如果是在 Windows 系统上, 把它设置成 true, 这样当签出代码时, LF 会被转换成 CRLF:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> core.autocrlf <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Linux 或 Mac 系统使用 LF 作为行结束符, 因此你不想 Git 在签出文件时进行自动的转换；当一个以 CRLF 为行结束符的文件不小心被引入时你肯定想进行修正, 把 core.autocrlf 设置成 input 来告诉 Git 在提交时把 CRLF 转换成 LF, 签出时不转换:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> core.autocrlf input
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样会在 Windows 系统上的签出文件中保留 CRLF, 会在 Mac 和 Linux 系统上, 包括仓库中保留 LF。</p><p>如果你是 Windows 程序员, 且正在开发仅运行在 Windows 上的项目, 可以设置 false 取消此功能, 把回车符记录在库中:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> core.autocrlf <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="建议" tabindex="-1"><a class="header-anchor" href="#建议" aria-hidden="true">#</a> 建议</h2><p>在 Mac/Liunx 上设置 <code>autocrlf = input</code> , 在 Windows 上设置 autocrlf = true（默认值）。</p><p>Windows: （true） 提交时, 将 CRLF 转成 LF 再提交；切出时, 自动将 LF 转为 CRLF;</p><p>MAC/Linux: (input) 提交时, 将 CRLF 转成 LF 再提交；切出时, 保持 LF 即可</p><p>这样即可保证仓库中永远都是 LF. 而且在 Windows 工作空间都是 CRLF, 在 Mac/linux 工作空间都是 LF</p>`,80);function R(F,q){const s=l("ExternalLinkIcon");return c(),d("div",null,[p,r(" more "),u,n("p",null,[n("a",h,[a("GitHub"),e(s)]),a(" 链接"),b,a(),n("a",m,[a("Git@OSC"),e(s)]),a(" 链接")]),v,n("p",null,[a("如 "),n("a",g,[a("GitHub key"),e(s)]),a(" 如 "),n("a",k,[a("Git@OSC key"),e(s)])]),f,n("p",null,[n("a",x,[a("GitHub"),e(s)]),a(" 链接"),_,a(),n("a",L,[a("Git@OSC"),e(s)]),a(" 链接")]),C])}const E=t(o,[["render",R],["__file","git-push-setting.html.vue"]]);export{E as default};
