import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as n,d,a,e as c}from"./app-5294595a.js";const i={},t=a("div",{class:"hint-container tip"},[a("p",{class:"hint-container-title"},"前言"),a("p",null,"本篇是 Liunx 的学习笔记系列第五篇, 这一篇将介绍 Liunx 下用户的管理。用户管理看似很简单, 但是里面还隐藏着大学问呢。")],-1),p=c(`<h2 id="添加用户-并创建用户宿主目录" tabindex="-1"><a class="header-anchor" href="#添加用户-并创建用户宿主目录" aria-hidden="true">#</a> 添加用户, 并创建用户宿主目录</h2><p><code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">useradd</span> <span class="token parameter variable">-m</span> <span class="token punctuation">[</span>userName<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="删除用户-并删除用户宿主目录" tabindex="-1"><a class="header-anchor" href="#删除用户-并删除用户宿主目录" aria-hidden="true">#</a> 删除用户, 并删除用户宿主目录</h2><p><code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">userdel</span> <span class="token parameter variable">-r</span> <span class="token punctuation">[</span>userName<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="添加-uid-为-0-的用户" tabindex="-1"><a class="header-anchor" href="#添加-uid-为-0-的用户" aria-hidden="true">#</a> 添加 uid 为 0 的用户</h2><p><code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">useradd</span> <span class="token parameter variable">-u</span> <span class="token number">0</span> <span class="token parameter variable">-o</span> <span class="token punctuation">[</span>userName<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="查看用户的-uid-或-gid-等信息" tabindex="-1"><a class="header-anchor" href="#查看用户的-uid-或-gid-等信息" aria-hidden="true">#</a> 查看用户的 uid 或 gid 等信息</h2><p><code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">id</span> <span class="token punctuation">[</span>userName<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="为用户添加密码" tabindex="-1"><a class="header-anchor" href="#为用户添加密码" aria-hidden="true">#</a> 为用户添加密码</h2><p><code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">passwd</span> <span class="token punctuation">[</span>userName<span class="token punctuation">]</span>                                   <span class="token comment"># 普通方法</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;passwd string&quot;</span> <span class="token operator">|</span> <span class="token function">passwd</span> <span class="token parameter variable">--stdin</span> <span class="token punctuation">[</span>userName<span class="token punctuation">]</span>    <span class="token comment"># 输出文本内容作为密码</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>普通用户修改密码命令: passwd</p><h2 id="查看用户的密码状态" tabindex="-1"><a class="header-anchor" href="#查看用户的密码状态" aria-hidden="true">#</a> 查看用户的密码状态</h2><p><code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">passwd</span> <span class="token parameter variable">-S</span> <span class="token punctuation">[</span>userName<span class="token punctuation">]</span>                      <span class="token comment"># 普通方法</span>
<span class="token function">cat</span> /etc/passwd <span class="token operator">|</span> <span class="token function">grep</span> <span class="token punctuation">[</span>userName<span class="token punctuation">]</span>         <span class="token comment"># 查看配置文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="禁用和解锁用户" tabindex="-1"><a class="header-anchor" href="#禁用和解锁用户" aria-hidden="true">#</a> 禁用和解锁用户</h2><h3 id="passwd-方法" tabindex="-1"><a class="header-anchor" href="#passwd-方法" aria-hidden="true">#</a> passwd 方法</h3><p><code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">passwd</span> <span class="token parameter variable">-l</span> <span class="token punctuation">[</span>userName<span class="token punctuation">]</span>    <span class="token comment"># 禁用</span>
<span class="token function">passwd</span> <span class="token parameter variable">-u</span> <span class="token punctuation">[</span>userName<span class="token punctuation">]</span>    <span class="token comment"># 解锁</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="修改-etc-shadow-文件-root-用户" tabindex="-1"><a class="header-anchor" href="#修改-etc-shadow-文件-root-用户" aria-hidden="true">#</a> 修改 /etc/shadow 文件（root 用户）</h2><p><code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/shadow
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>禁用则在密码位前手工添加 <code>!</code> （启用删除 <code>!</code> 即可）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>test:<span class="token operator">!</span><span class="token variable">$1</span><span class="token variable">$afiVSYfG</span><span class="token variable">$utdc2qWLNrqNcy63Ca8301</span>:16998:0:99999:7:::     <span class="token comment"># 只加一个 ！</span>
test:<span class="token operator">!</span><span class="token operator">!</span><span class="token variable">$1</span><span class="token variable">$afiVSYfG</span><span class="token variable">$utdc2qWLNrqNcy63Ca8301</span>:16998:0:99999:7:::    <span class="token comment"># 加两个,效果一致</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>:wq!</code> 强制保存, 因为其权限为 <code>000</code></p><h3 id="usermod-方法" tabindex="-1"><a class="header-anchor" href="#usermod-方法" aria-hidden="true">#</a> usermod 方法</h3><p><code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">usermod</span> <span class="token parameter variable">-L</span> <span class="token punctuation">[</span>userName<span class="token punctuation">]</span>    <span class="token comment"># 禁用</span>
<span class="token function">usermod</span> <span class="token parameter variable">-U</span> <span class="token punctuation">[</span>userName<span class="token punctuation">]</span>    <span class="token comment"># 解锁</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="设置用户一登录就要修改密码" tabindex="-1"><a class="header-anchor" href="#设置用户一登录就要修改密码" aria-hidden="true">#</a> 设置用户一登录就要修改密码</h2><p><code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>chage <span class="token parameter variable">-d</span> <span class="token number">0</span> <span class="token punctuation">[</span>userName<span class="token punctuation">]</span>
<span class="token comment"># 这个命令其实是把密码修改日期归 0 了 （/etc/shadow 文件第 3 个字段）</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="查看当前登录的用户是谁" tabindex="-1"><a class="header-anchor" href="#查看当前登录的用户是谁" aria-hidden="true">#</a> 查看当前登录的用户是谁</h2><p><code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">whoami</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="查看当前登录的用户的环境变量" tabindex="-1"><a class="header-anchor" href="#查看当前登录的用户的环境变量" aria-hidden="true">#</a> 查看当前登录的用户的环境变量</h2><p><code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">env</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="切换用户" tabindex="-1"><a class="header-anchor" href="#切换用户" aria-hidden="true">#</a> 切换用户</h2><p><code>For Example:</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">su</span> - <span class="token punctuation">[</span>userName<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,44);function o(r,l){return e(),n("div",null,[t,d(" more "),p])}const m=s(i,[["render",o],["__file","user-management.html.vue"]]);export{m as default};
