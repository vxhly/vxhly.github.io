import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as r,c,d,a as e,b as a,f as n,e as i}from"./app-2b867918.js";const l={},p=e("div",{class:"hint-container tip"},[e("p",{class:"hint-container-title"},"前言"),e("p",null,"Weex 是使用流行的 Web 开发体验来开发高性能原生应用的框架。关于 Weex 的一些基础概念不多阐述, 这篇文章记录的是在开发过程中遇到一些坑以及其解决方案。")],-1),u=e("h2",{id:"前期环境搭建",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#前期环境搭建","aria-hidden":"true"},"#"),a(" 前期环境搭建")],-1),m={href:"https://weex.apache.org/zh/",target:"_blank",rel:"noopener noreferrer"},h=i(`<div class="hint-container warning"><p class="hint-container-title">大坑</p><p>前期开发环境搭建这一步很重要, 有可能会失败也有可能会因为网速等问题导致失败, 但是一定要耐心多多尝试, 多尝试之后就会体验到飞起来的感觉</p></div><div class="hint-container tip"><p class="hint-container-title">开发系统环境</p><p>本篇文章使用到的系统环境 <code>macOS Catalina 10.15.4</code> , 注意这边不推荐 <code>win 7</code> 用户学习 Weex, 可使用 <code>win 8</code> 、 <code>win 10</code></p></div><h3 id="osx-环境" tabindex="-1"><a class="header-anchor" href="#osx-环境" aria-hidden="true">#</a> OSX 环境</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">777</span> /usr/local/lib/node_modules/
<span class="token function">npm</span> i <span class="token parameter variable">-g</span> weex-toolkit <span class="token comment"># 安装不要使用sudo执行</span>
weex <span class="token parameter variable">-v</span> <span class="token comment"># 查看当前weex工具版本</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="windows-环境" tabindex="-1"><a class="header-anchor" href="#windows-环境" aria-hidden="true">#</a> Windows 环境</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-g</span> weex-toolkit
weex <span class="token parameter variable">-v</span> <span class="token comment"># 查看当前weex工具版本</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="构建-ios-app" tabindex="-1"><a class="header-anchor" href="#构建-ios-app" aria-hidden="true">#</a> 构建 IOS APP</h2><p>要想构建 IOS APP, 首先需要 <code>MacOS</code> 的一个系统环境, 构建之前需要进行以下步骤</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>weex platform <span class="token function">add</span> ios <span class="token comment"># 添加 IOS 平台的支持</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接下来这个很关键, 换源（换的是 cocoapods 的安装软件源）, 除非你非常自信自己的网络是可以访问至国外的服务器, 或是已经有了科学上网的本领</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gem <span class="token parameter variable">--version</span> <span class="token comment"># 检测机子上是否正确安装了 ruby 环境</span>
<span class="token function">sudo</span> gem <span class="token function">install</span> cocoapods <span class="token comment"># 需要使用 sudo 的权限</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,11),v={href:"https://mirrors.tuna.tsinghua.edu.cn/help/CocoaPods/",target:"_blank",rel:"noopener noreferrer"},b=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ~/.cocoapods/repos
pod repo remove master
<span class="token function">git</span> clone https://mirrors.tuna.tsinghua.edu.cn/git/CocoaPods/Specs.git master <span class="token comment"># 这一步可能会下载失败啥的, 一定要多试几次并确保下载完整</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后进入自己的工程, 在自己工程的 podFile 第一行加上：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> <span class="token string">&#39;https://mirrors.tuna.tsinghua.edu.cn/git/CocoaPods/Specs.git&#39;</span> <span class="token comment"># 最好是将原第一行内容直接替换成这个</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="debug" tabindex="-1"><a class="header-anchor" href="#debug" aria-hidden="true">#</a> Debug</h2><p>如果执行 <code>weex debug src</code> 发生类似于以下错误的可以使用 <code>weex doctor</code> 来进行修复你的一些缺失依赖</p><div class="hint-container danger"><p class="hint-container-title">Error</p><p>./src/index.vue Module build failed: Error:</p><p>Vue packages version mismatch:</p><ul><li>vue@2.5.21 (/Users/codeman/.wx/modules/node_modules/_vue@2.5.21@vue/dist/vue.runtime.common.js)</li><li>vue-template-compiler@2.6.11 (/Users/codeman/.wx/modules/node_modules/_vue-template-compiler@2.6.11@vue-template-compiler/package.json)</li></ul><p>This may cause things to work incorrectly. Make sure to use the same version for both. If you are using vue-loader@&gt;=10.0, simply update vue-template-compiler. If you are using vue-loader@&lt;10.0 or vueify, re-installing vue-loader/vueify should bump vue-template-compiler to the latest.</p></div>`,6);function g(k,x){const s=t("ExternalLinkIcon");return r(),c("div",null,[p,d(" more "),u,e("p",null,[e("a",m,[a("Weex 的官方文档"),n(s)])]),h,e("p",null,[a("换源 "),e("a",v,[a("清华大学开源软件镜像站"),n(s)])]),b])}const w=o(l,[["render",g],["__file","weex-beginner-notes.html.vue"]]);export{w as default};
