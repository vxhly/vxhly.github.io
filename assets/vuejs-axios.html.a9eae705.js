import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as p,o as e,c as o,a as n,e as c,b as s,d as i}from"./app.a3d402e1.js";const l={},u=n("div",{class:"custom-container tip"},[n("p",{class:"custom-container-title"},"\u524D\u8A00"),n("p",null,"\u524D\u540E\u7AEF\u5206\u79BB\u7684\u65F6\u5019, \u901A\u5E38\u540E\u7AEF\u8981\u6C42\u524D\u7AEF\u53D1\u9001 JSON \u8BF7\u6C42, \u800C\u540E\u7AEF\u8FD4\u56DE\u7684\u683C\u5F0F\u4E5F\u662F JSON \u7684, \u8FD9\u65F6\u5019\u5C31\u9700\u8981\u4E00\u4E2A\u4E2D\u95F4\u63D2\u4EF6 axios \u4E0A\u573A, \u672C\u7BC7\u6587\u7AE0\u4E3B\u8981\u4ECB\u7ECD\u5728 vuejs \u9879\u76EE\u4E2D\u662F\u5982\u4F55\u4E8C\u6B21\u5C01\u88C5 axios \u7684, \u672C\u7BC7\u9002\u5B9C\u9605\u8BFB\u4EBA\u7FA4\u4E3A\u6709\u4E00\u4E9B\u7684 Vue.js \u7684\u5F00\u53D1\u57FA\u7840\u7ECF\u9A8C\u3002")],-1),r=n("h2",{id:"\u5173\u4E8E-axios",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5173\u4E8E-axios","aria-hidden":"true"},"#"),s(" \u5173\u4E8E axios")],-1),k={class:"custom-container tip"},d=n("p",{class:"custom-container-title"},"\u4ECB\u7ECD",-1),v=s("Axios \u662F\u4E00\u4E2A\u57FA\u4E8E promise \u7684 HTTP \u5E93, \u53EF\u4EE5\u7528\u5728\u6D4F\u89C8\u5668\u548C node.js \u4E2D\u3002\u66F4\u591A\u7684\u4ECB\u7ECD, \u7C73\u5A1C\u6851\u4E0A GitHub \u67E5\u770B\u5B98\u65B9\u8BF4\u660E, "),m={href:"https://github.com/axios/axios",target:"_blank",rel:"noopener noreferrer"},b=s("axios"),y=s(", \u8FD9\u91CC\u4E0D\u505A\u8FC7\u591A\u7684\u9610\u8FF0"),h=i(`<h2 id="\u4E8C\u6B21\u5C01\u88C5-axios" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u6B21\u5C01\u88C5-axios" aria-hidden="true">#</a> \u4E8C\u6B21\u5C01\u88C5 axios</h2><h3 id="\u5B89\u88C5\u4F9D\u8D56" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5\u4F9D\u8D56" aria-hidden="true">#</a> \u5B89\u88C5\u4F9D\u8D56</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i axios
<span class="token comment"># or</span>
<span class="token function">yarn</span> <span class="token function">add</span> axios
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u57FA\u7840\u8BF7\u6C42\u5730\u5740" tabindex="-1"><a class="header-anchor" href="#\u57FA\u7840\u8BF7\u6C42\u5730\u5740" aria-hidden="true">#</a> \u57FA\u7840\u8BF7\u6C42\u5730\u5740</h3><p>\u4E00\u822C\u6765\u8BF4\u4E00\u4E2A\u9879\u76EE\u81F3\u5C11\u5BF9\u5E94\u4E00\u4E2A\u540E\u7AEF API \u670D\u52A1\u5730\u5740, \u6240\u4EE5\u9700\u8981\u4E00\u4E2A\u914D\u7F6E\u6587\u4EF6\u6765\u5B58\u50A8\u8FD9\u4E2A\u540E\u7AEF API \u5730\u5740</p><p>\u5728 <code>src/config.js</code> \u4E2D\u5199\u5165\u4EE5\u4E0B\u914D\u7F6E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> baseHost <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">API1</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">dev_host</span><span class="token operator">:</span> <span class="token string">&quot;http://[ip]:[port]/v[n]/api/&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u8C03\u8BD5\u6A21\u5F0F</span>
    <span class="token literal-property property">pro_host</span><span class="token operator">:</span> <span class="token string">&quot;http://[ip]:[port]/v[n]/api/&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u7EBF\u4E0A\u6A21\u5F0F</span>
    <span class="token literal-property property">file_host</span><span class="token operator">:</span> <span class="token string">&quot;http://[ip]:[port]/v[n]/file/&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u6587\u4EF6\u5B58\u50A8\u524D\u7F6E URL</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token constant">API2</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">dev_host</span><span class="token operator">:</span> <span class="token string">&quot;http://[ip]:[port]/v[n]/api/&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u8C03\u8BD5\u6A21\u5F0F</span>
    <span class="token literal-property property">pro_host</span><span class="token operator">:</span> <span class="token string">&quot;http://[ip]:[port]/v[n]/api/&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u7EBF\u4E0A\u6A21\u5F0F</span>
    <span class="token literal-property property">file_host</span><span class="token operator">:</span> <span class="token string">&quot;http://[ip]:[port]/v[n]/file/&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u6587\u4EF6\u5B58\u50A8\u524D\u7F6E URL</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u8FD8\u6709\u5176\u4ED6\u7684 API \u5F80\u4E0B\u52A0</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 <code>src/API.vue</code> \u4E2D\u6DFB\u52A0\u540E\u7AEF\u7684 API \u5730\u5740, \u6B64\u65F6\u6DFB\u52A0\u7684 API \u5730\u5740\u65E0\u9700\u5728\u524D\u9762\u7684 URL \u90E8\u5206\u5199\u51FA\u6765, \u53C2\u8003\u5982\u4E0B</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;API&quot;</span><span class="token punctuation">,</span>

  <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">UserLogin</span><span class="token operator">:</span> <span class="token string">&quot;/user/UserLogin&quot;</span><span class="token punctuation">,</span> <span class="token comment">// GET \u7528\u6237\u767B\u5F55</span>

    <span class="token literal-property property">GetUserInfo</span><span class="token operator">:</span> <span class="token string">&quot;/user/GetUserInfo&quot;</span><span class="token punctuation">,</span> <span class="token comment">// GET \u83B7\u53D6\u7528\u6237\u4FE1\u606F</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token literal-property property">logout</span><span class="token operator">:</span> <span class="token string">&quot;/logout&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u767B\u51FA\u8D26\u53F7</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4F60\u7684 <code>src/main.js</code> \u4E2D\u6CE8\u518C\u8FD9\u4E9B API \u5730\u5740</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token constant">API</span> <span class="token keyword">from</span> <span class="token string">&quot;./API.vue&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u540E\u7AEFAPI\u63A5\u53E3\u5730\u5740</span>

<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token constant">API</span> <span class="token operator">=</span> <span class="token constant">API</span><span class="token punctuation">;</span> <span class="token comment">// \u6302\u8F7D\u5230Vue\u5B9E\u4F8B\u4E0A\u9762</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6B63\u5F0F\u5C01\u88C5-axios" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5F0F\u5C01\u88C5-axios" aria-hidden="true">#</a> \u6B63\u5F0F\u5C01\u88C5 axios</h3><p>\u521B\u5EFA\u76EE\u5F55\u7ED3\u6784 <code>src/libraries/axios</code> , \u5E76\u5728\u8FD9\u4E2A\u76EE\u5F55\u4E0B\u521B\u5EFA\u4E24\u4E2A\u6838\u5FC3\u6587\u4EF6 <code>featch.js</code> \u548C <code>http.js</code> <code>featch.js</code> \u6587\u4EF6\u4E3B\u8981\u7F16\u5199 axios \u7684\u57FA\u7840\u914D\u7F6E</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// \u521B\u5EFA axios \u5B9E\u4F8B</span>
<span class="token keyword">const</span> instance <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span> <span class="token comment">// \u8FD4\u56DE\u6570\u636E\u7C7B\u578B</span>
  <span class="token comment">// baseURL: serverURL, // \u8BF7\u6C42 URL</span>
  <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">7000</span><span class="token punctuation">,</span> <span class="token comment">// \u8D85\u65F6\u65F6\u95F4</span>
  <span class="token literal-property property">maxContentLength</span><span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token comment">// \u6700\u5927\u53D1\u5305\u957F\u5EA6</span>
  <span class="token literal-property property">retry</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment">// \u91CD\u8BD5\u6B21\u6570</span>
  <span class="token literal-property property">retryDelay</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span> <span class="token comment">// \u91CD\u8BD5\u5EF6\u65F6, 3\u79D2\u91CD\u8BD5\u4E00\u6B21</span>
  <span class="token function-variable function">shouldRetry</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u91CD\u8BD5\u6761\u4EF6, \u9ED8\u8BA4\u53EA\u8981\u662F\u9519\u8BEF\u90FD\u9700\u8981\u91CD\u8BD5</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// http request \u62E6\u622A\u5668</span>
instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5728 headers \u5934\u4E0A\u6DFB\u52A0\u53C2\u6570</span>
    config<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;application/json;charset=UTF-8&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      config<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> token<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> config<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// http response \u62E6\u622A\u5668</span>
instance<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> code <span class="token punctuation">}</span> <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>
      code
      <span class="token comment">// \u8FD9\u8FB9\u53EF\u4EE5\u5BF9\u540E\u7AEF\u7684\u4E00\u4E9B\u72B6\u6001\u7801\u8FDB\u884C\u5904\u7406</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> config <span class="token punctuation">}</span> <span class="token operator">=</span> error<span class="token punctuation">;</span>
    <span class="token comment">// If config does not exist or the retry option is not set, reject</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>config <span class="token operator">||</span> <span class="token operator">!</span>config<span class="token punctuation">.</span>retry<span class="token punctuation">)</span> <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Set the variable for keeping track of the retry count</span>
    config<span class="token punctuation">.</span>__retryCount <span class="token operator">=</span> config<span class="token punctuation">.</span>__retryCount <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token comment">// Check if we&#39;ve maxed out the total number of retries</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>__retryCount <span class="token operator">&gt;=</span> config<span class="token punctuation">.</span>retry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Reject with the error</span>
      <span class="token function">Notification</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;\u8BF7\u6C42\u8D85\u65F6&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;\u5F53\u524D\u7F51\u7EDC\u4E0D\u4F73, \u8BF7\u7A0D\u540E\u5237\u65B0\u91CD\u8BD5&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Increase the retry count</span>
    config<span class="token punctuation">.</span>__retryCount <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token comment">// Create new promise to handle exponential backoff</span>
    <span class="token keyword">var</span> backoff <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> config<span class="token punctuation">.</span>retryDelay <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Return the promise in which recalls axios to retry the request</span>
    <span class="token keyword">return</span> backoff<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">instance</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> instance<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>http.js</code> \u4E3B\u8981\u5C01\u88C5 <code>GET</code> \u3001 <code>POST</code> \u3001 <code>PATCH</code> \u3001 <code>DELETE</code> \u3001 <code>PUT</code> \u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> featch <span class="token keyword">from</span> <span class="token string">&quot;./featch&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> omitBy <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;lodash&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> baseHost <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/config&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&quot;axios&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> serverURL <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> env <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getURL</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>env<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&quot;production&quot;</span><span class="token operator">:</span>
      serverURL <span class="token operator">=</span> baseHost<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span>pro_host<span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&quot;development&quot;</span><span class="token operator">:</span>
      serverURL <span class="token operator">=</span> baseHost<span class="token punctuation">[</span>type<span class="token punctuation">]</span><span class="token punctuation">.</span>dev_host<span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token string">&quot;testing&quot;</span><span class="token operator">:</span>
      serverURL <span class="token operator">=</span> baseHost<span class="token punctuation">.</span>test_host<span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> serverURL<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@method</span> httpGet
 *
 * import <span class="token punctuation">{</span> httpGet <span class="token punctuation">}</span> from &#39;@/libraries/axios/http&#39;
 *
 * httpGet(&#39;&#39;, payload).then().catch()
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">url</span> \u8BF7\u6C42\u5730\u5740
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">payload</span> \u8BF7\u6C42\u53C2\u6570
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">type</span> \u8BBE\u7F6E baseURL
 */</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> httpGet <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>url<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">&quot;API1&quot;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    serverURL <span class="token operator">=</span> <span class="token function">getURL</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
    axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> serverURL<span class="token punctuation">;</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> featch<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">params</span><span class="token operator">:</span> payload<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> result <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@method</span> httpPost
 *
 * import <span class="token punctuation">{</span> httpPost <span class="token punctuation">}</span> from &#39;@/libraries/axios/http&#39;
 *
 * httpPost(&#39;&#39;, payload).then().catch()
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">url</span> \u8BF7\u6C42\u5730\u5740
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">payload</span> \u8BF7\u6C42\u53C2\u6570
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> httpPost <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>url<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">&quot;API1&quot;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    serverURL <span class="token operator">=</span> <span class="token function">getURL</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
    axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> serverURL<span class="token punctuation">;</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> featch<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> result <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@method</span> httpPut
 *
 * import <span class="token punctuation">{</span> httpPut <span class="token punctuation">}</span> from &#39;@/libraries/axios/http&#39;
 *
 * httpPut(&#39;&#39;, payload).then().catch()
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">url</span> \u8BF7\u6C42\u5730\u5740
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">payload</span> \u8BF7\u6C42\u53C2\u6570
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> httpPut <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>url<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">&quot;API1&quot;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    serverURL <span class="token operator">=</span> <span class="token function">getURL</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
    axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> serverURL<span class="token punctuation">;</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> featch<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> result <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@method</span> httpPatch
 *
 * import <span class="token punctuation">{</span> httpPatch <span class="token punctuation">}</span> from &#39;@/libraries/axios/http&#39;
 *
 * httpPatch(&#39;&#39;, payload).then().catch()
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">url</span> \u8BF7\u6C42\u5730\u5740
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">payload</span> \u8BF7\u6C42\u53C2\u6570
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> httpPatch <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>url<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">&quot;API1&quot;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    serverURL <span class="token operator">=</span> <span class="token function">getURL</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
    axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> serverURL<span class="token punctuation">;</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> featch<span class="token punctuation">.</span><span class="token function">patch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> result <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@method</span> httpDelte
 *
 * import <span class="token punctuation">{</span> httpDelte <span class="token punctuation">}</span> from &#39;@/libraries/axios/http&#39;
 *
 * httpDelte(&#39;&#39;, payload).then().catch()
 *
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> <span class="token parameter">url</span> \u8BF7\u6C42\u5730\u5740
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>Object<span class="token punctuation">}</span></span> <span class="token parameter">payload</span> \u8BF7\u6C42\u53C2\u6570
 */</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> httpDelte <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>url<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> type <span class="token operator">=</span> <span class="token string">&quot;API1&quot;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    serverURL <span class="token operator">=</span> <span class="token function">getURL</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
    axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> serverURL<span class="token punctuation">;</span>
    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> featch<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> payload<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> result <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528\u6848\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u6848\u4F8B" aria-hidden="true">#</a> \u4F7F\u7528\u6848\u4F8B</h3><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> httpPost <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/libraries/axios/http&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token constant">API</span><span class="token punctuation">.</span>user<span class="token punctuation">.</span>UserLogin<span class="token punctuation">;</span>
    <span class="token keyword">const</span> payload <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">userName</span><span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">userPassword</span><span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token function">httpPost</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> payload<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD9\u91CC\u7684 res \u5373\u662F\u540E\u7AEF\u8FD4\u56DE\u7684\u6570\u636E\u7ED3\u6784</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18);function w(g,f){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,r,n("div",k,[d,n("p",null,[v,n("a",m,[b,c(a)]),y])]),h])}var _=t(l,[["render",w],["__file","vuejs-axios.html.vue"]]);export{_ as default};
