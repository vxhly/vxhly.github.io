import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as l,c,d as o,a as n,b as a,f as s,e as i}from"./app-6126c799.js";const p={},d=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"前言"),n("p",null,"开始学习 React Native, 期间也遇上了许多坑, 本篇将在官方文档基础上补充一些填坑的指南。")],-1),m=n("h2",{id:"官方文档",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#官方文档","aria-hidden":"true"},"#"),a(" 官方文档")],-1),v={href:"https://reactnative.cn/",target:"_blank",rel:"noopener noreferrer"},u=i(`<h2 id="搭建开发环境" tabindex="-1"><a class="header-anchor" href="#搭建开发环境" aria-hidden="true">#</a> 搭建开发环境</h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>这里并不推荐大家使用沙箱环境。沙盒环境大量依赖于国外网络环境, 也不能直接安装第三方原生组件。不建议国内用户使用。</p></div><p>这一步及其重要, 多数人都会卡在这一步, 包括博主也是在这一步也是卡了很久, 开发环境搭建好了一定会事半功倍, 接下的内容将会带领你少走弯路。</p><h3 id="搭建前请换源" tabindex="-1"><a class="header-anchor" href="#搭建前请换源" aria-hidden="true">#</a> 搭建前请换源</h3><p>使用过 Node.js 开发项目的都知道我们的 Node.js 项目在安装项目依赖时受限于国内的网络环境, 并不能快速的下载项目依赖, 接下几个步骤教你换源</p><p>首先是 <code>yarn</code> 和 <code>npm</code> 的软件源, 使用到的是 <code>cgr</code> 这个命令来快速的切源</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-g</span> cgr
cgr use taobao <span class="token comment"># 此命令可以同时切换 yarn 和 npm 的软件源</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当然也可以使用以下命令来快速的切源</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org <span class="token parameter variable">--global</span>
<span class="token function">npm</span> config <span class="token builtin class-name">set</span> disturl https://npm.taobao.org/dist <span class="token parameter variable">--global</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,9),b={href:"https://mirrors.tuna.tsinghua.edu.cn/help/CocoaPods/",target:"_blank",rel:"noopener noreferrer"},h=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ~/.cocoapods/repos
pod repo remove master
<span class="token function">git</span> clone https://mirrors.tuna.tsinghua.edu.cn/git/CocoaPods/Specs.git master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),g={href:"https://developer.aliyun.com/mirror/homebrew",target:"_blank",rel:"noopener noreferrer"},k=i(`<p>Bash 终端配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 替换brew.git:</span>
<span class="token builtin class-name">cd</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>brew <span class="token parameter variable">--repo</span><span class="token variable">)</span></span>&quot;</span>
<span class="token function">git</span> remote set-url origin https://mirrors.aliyun.com/homebrew/brew.git
<span class="token comment"># 替换homebrew-core.git:</span>
<span class="token builtin class-name">cd</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>brew <span class="token parameter variable">--repo</span><span class="token variable">)</span></span>/Library/Taps/homebrew/homebrew-core&quot;</span>
<span class="token function">git</span> remote set-url origin https://mirrors.aliyun.com/homebrew/homebrew-core.git
<span class="token comment"># 应用生效</span>
brew update
<span class="token comment"># 替换homebrew-bottles:</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.bash_profile
<span class="token builtin class-name">source</span> ~/.bash_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Zsh 终端配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 替换brew.git:</span>
<span class="token builtin class-name">cd</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>brew <span class="token parameter variable">--repo</span><span class="token variable">)</span></span>&quot;</span>
<span class="token function">git</span> remote set-url origin https://mirrors.aliyun.com/homebrew/brew.git
<span class="token comment"># 替换homebrew-core.git:</span>
<span class="token builtin class-name">cd</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span>brew <span class="token parameter variable">--repo</span><span class="token variable">)</span></span>/Library/Taps/homebrew/homebrew-core&quot;</span>
<span class="token function">git</span> remote set-url origin https://mirrors.aliyun.com/homebrew/homebrew-core.git
<span class="token comment"># 应用生效</span>
brew update
<span class="token comment"># 替换homebrew-bottles:</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.aliyun.com/homebrew/homebrew-bottles&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc
<span class="token builtin class-name">source</span> ~/.zshrc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container danger"><p class="hint-container-title">绝对禁止</p><p>windows 环境下不使用 cnpm 就好, cnpm 安装的模块路径比较奇怪, packager 不能正常识别！</p></div><h3 id="安装依赖和运行" tabindex="-1"><a class="header-anchor" href="#安装依赖和运行" aria-hidden="true">#</a> 安装依赖和运行</h3><div class="hint-container tip"><p class="hint-container-title">提示</p><p>安装依赖这边不做重复声明, 官方文档已经非常详细了</p></div><div class="hint-container warning"><p class="hint-container-title">坑</p><p>React Native 运行时将监听 8081 端口, 所以 8081 端口绝对不能被占用, 否则会导致编译失败等问题</p><p>当然如果是因为这个引起的编译失败也不要慌, 将你的 8081 端口占用的进程关掉即可</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">lsof</span> <span class="token parameter variable">-i</span> tcp:8081
<span class="token function">kill</span> <span class="token punctuation">[</span>pid<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="开发填坑" tabindex="-1"><a class="header-anchor" href="#开发填坑" aria-hidden="true">#</a> 开发填坑</h2><h3 id="导入-iconfont-自定义图标库" tabindex="-1"><a class="header-anchor" href="#导入-iconfont-自定义图标库" aria-hidden="true">#</a> 导入 IconFont 自定义图标库</h3>`,10),f={href:"https://github.com/iconfont-cli/react-native-iconfont-cli",target:"_blank",rel:"noopener noreferrer"},_=i(`<h4 id="step-1" tabindex="-1"><a class="header-anchor" href="#step-1" aria-hidden="true">#</a> Step 1</h4><p>安装插件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Yarn</span>
<span class="token function">yarn</span> <span class="token function">add</span> react-native-svg
<span class="token function">yarn</span> <span class="token function">add</span> react-native-iconfont-cli <span class="token parameter variable">--dev</span>

<span class="token comment"># Npm</span>
<span class="token function">npm</span> <span class="token function">install</span> react-native-svg
<span class="token function">npm</span> <span class="token function">install</span> react-native-iconfont-cli --save-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="step-2" tabindex="-1"><a class="header-anchor" href="#step-2" aria-hidden="true">#</a> Step 2</h4><p>静态链接。请注意您使用的 React-Native 版本号</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># RN &lt; 0.60</span>
react-native <span class="token function">link</span> react-native-svg

<span class="token comment"># RN &gt;= 0.60</span>
<span class="token builtin class-name">cd</span> ios <span class="token operator">&amp;&amp;</span> pod <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="step-3" tabindex="-1"><a class="header-anchor" href="#step-3" aria-hidden="true">#</a> Step 3</h4><p>生成配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx iconfont-init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="step-4" tabindex="-1"><a class="header-anchor" href="#step-4" aria-hidden="true">#</a> Step 4</h4><p>开始生成 React-Native 标准组件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx iconfont-rn
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,12);function w(x,N){const e=r("ExternalLinkIcon");return l(),c("div",null,[d,o(" more "),m,n("p",null,[n("a",v,[a("React Native 官方文档"),s(e)])]),u,n("p",null,[a("在开发 IOS 的应用时还需切换 CocoaPods 镜像, 可以参照 "),n("a",b,[a("CocoaPods 镜像使用帮助"),s(e)]),a(" 进行切源")]),h,n("p",null,[a("MacOS 下建议还需更换 brew 的软件源, 可以参照 "),n("a",g,[a("阿里云的镜像源"),s(e)]),a(" 进行切源")]),k,n("p",null,[a("参考 "),n("a",f,[a("react-native-iconfont-cli"),s(e)])]),_])}const R=t(p,[["render",w],["__file","react-native-filling-guide.html.vue"]]);export{R as default};
