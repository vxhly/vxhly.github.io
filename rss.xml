<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://vxhly.github.io/rss.xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://vxhly.github.io/rss.xml" rel="self" type="application/rss+xml"/>
    <title>Coding and Fixing</title>
    <link>https://vxhly.github.io/</link>
    <description>源于生活而高于生活.</description>
    <language>zh-CN</language>
    <pubDate>Sun, 19 Feb 2023 02:04:12 GMT</pubDate>
    <lastBuildDate>Sun, 19 Feb 2023 02:04:12 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <copyright>Copyright by 星火燎原@vxhly</copyright>
    <image>
      <title>Coding and Fixing</title>
      <url>https://vxhly.github.io/favicon.ico</url>
      <link>https://vxhly.github.io/</link>
    </image>
    <category>web</category>
    <category>PMP</category>
    <category>信息系统项目管理师</category>
    <category>liunx</category>
    <category>app</category>
    <category>design</category>
    <category>electron</category>
    <category>graphql</category>
    <category>java</category>
    <category>manual</category>
    <category>networking</category>
    <category>nodejs</category>
    <category>other</category>
    <category>pentest</category>
    <category>typescript</category>
    <category>vite</category>
    <category>vuejs</category>
    <item>
      <title>JavaScript 中几个优雅的运算符使用技巧</title>
      <link>https://vxhly.github.io/views/web/javascript-operator.html</link>
      <guid>https://vxhly.github.io/views/web/javascript-operator.html</guid>
      <source url="https://vxhly.github.io/rss.xml">JavaScript 中几个优雅的运算符使用技巧</source>
      <description>前言 新版本的 ECMAScript 引入了三个新的逻辑赋值运算符：空运算符, AND 和 OR 运算符, 这些运算符的出现, 也是希望让我们的代码更干净简洁, 下面分享几个优雅的 JavaScript 运算符使用技巧。</description>
      <category>web</category>
      <pubDate>Sun, 19 Feb 2023 10:11:18 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>新版本的 ECMAScript 引入了三个新的逻辑赋值运算符：空运算符, AND 和 OR 运算符, 这些运算符的出现, 也是希望让我们的代码更干净简洁, 下面分享几个优雅的 JavaScript 运算符使用技巧。</p>
</div>
<!-- more -->
<h2> 可选链接运算符【？.】</h2>
<p><code>可选链接运算符（Optional Chaining Operator）</code> 处于 ES2020 提案的第 4 阶段, 因此应将其添加到规范中。它改变了访问对象内部属性的方式, 尤其是深层嵌套的属性。它也可以作为 TypeScript 3.7 + 中的功能使用。</p>
<p>相信大部分开发前端的的小伙伴们都会遇到 null 和未定义的属性。JS 语言的动态特性使其无法不碰到它们。特别是在处理嵌套对象时, 以下代码很常见：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的代码用于 API 响应, 我必须解析 JSON 以确保名称存在。但是, 当对象具有可选属性或某些配置对象具有某些值的动态映射时, 可能会遇到类似情况, 需要检查很多边界条件。</p>
<p>这时候, 如果我们使用可选链接运算符, 一切就变得更加轻松了。它为我们检查嵌套属性, 而不必显式搜索梯形图。我们所要做的就是使用 “？” 要检查空值的属性之后的运算符。我们可以随意在表达式中多次使用该运算符, 并且如果未定义任何项, 它将尽早返回。</p>
<h3> 静态属性和动态属性</h3>
<p>对于<code>静态属性</code>用法是：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>对于<code>动态属性</code>用法是：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面的代码可以简化为：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后, 如果我们有:</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样写是不是更加简单了呢？由于操作符一旦为空值就会终止, 因此也可以使用它来有条件地调用方法或应用条件逻辑</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 对于方法的调用你可以这样写</h3>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如下面的<code>parent</code>对象, 如果我们直接调用<code>parent.getTitle()</code>, 则会报<code>Uncaught TypeError: parent.getTitle is not a function</code>错误, <code>parent.getTitle?.()</code>则会终止不会执行</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 与无效合并一起使用</h3>
<p>提供了一种方法来处理未定义或为空值和表达提供默认值。我们可以使用??运算符, 为表达式提供默认值</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>因此, 如果属性不存在, 则可以将无效的合并运算符与可选链接运算符结合使用以提供默认值。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 逻辑空分配（?? =）</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>逻辑空值运算符仅在 nullish 值（null 或者 undefined）时才将值分配给 expr1, 表达方式：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可能看起来等效于：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但事实并非如此！有细微的差别。</p>
<p>空的合并运算符（??）从左到右操作, 如果 x 不为 nullish 值则中表达式不执行。因此, 如果 x 不为 null 或者 undefined, 则永远不会对表达式 y 进行求值。如果 y 是一个函数, 它将根本不会被调用。因此, 此逻辑赋值运算符等效于</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 逻辑或分配（|| =）</h2>
<p>此逻辑赋值运算符仅在左侧表达式为 <code>falsy 值（虚值）</code> 时才赋值。Falsy 值（虚值）与 null 有所不同, 因为 falsy 值（虚值）可以是任何一种值：undefined, null, 空字符串 (双引号 ""、单引号’’、反引号 ``), NaN, 0。IE 浏览器中的 document.all, 也算是一个。</p>
<p>语法</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等同于</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在我们想要保留现有值（如果不存在）的情况下，这很有用，否则我们想为其分配默认值。例如，如果搜索请求中没有数据，我们希望将元素的内部 HTML 设置为默认值。否则，我们要显示现有列表。这样，我们避免了不必要的更新和任何副作用，例如解析，重新渲染，失去焦点等。我们可以简单地使用此运算符来使用 JavaScript 更新 HTML：</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 逻辑与分配（&amp;&amp; =）</h2>
<p>可能你已经猜到了，此逻辑赋值运算符仅在左侧为真时才赋值。因此</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等同于</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 最后</h2>
<p>本次分享几个优雅的 JavaScript 运算符使用技巧，重点分享了可选链接运算符的使用，这样可以让我们不需要再编写大量我们例子中代码即可轻松访问嵌套属性。但是 IE 不支持它，因此，如果需要支持该版本或更旧版本的浏览器，则可能需要添加 Babel 插件。对于 Node.js，需要为此升级到 Node 14 LTS 版本，因为 12.x 不支持该版本。</p>
]]></content:encoded>
    </item>
    <item>
      <title>PMP 考试冲刺整理易忘知识点</title>
      <link>https://vxhly.github.io/pmp/examination/pmp-spring-knowledge.html</link>
      <guid>https://vxhly.github.io/pmp/examination/pmp-spring-knowledge.html</guid>
      <source url="https://vxhly.github.io/rss.xml">PMP 考试冲刺整理易忘知识点</source>
      <description>前言 在日常练习中易混的知识点整理。 基本概念 【事业环境因素】是指客观存在必须遵守的, 一般是法律法规类, 可能给项目带来好处或者坏处; 【活动属性】包括活动便秘、活动描述、紧前活动、紧后活动、逻辑关系、提前量和滞后量、资源需求、强制日期、制约因素和假设条件; 【属性样本】与一致性有关, 【变量眼部】与一致性程度有关; 【项目效益】指为发起组织和项目...</description>
      <category>PMP</category>
      <pubDate>Wed, 15 Feb 2023 20:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>在日常练习中易混的知识点整理。</p>
</div>
<!-- more -->
<h2> 基本概念</h2>
<ul>
<li>【事业环境因素】是指客观存在必须遵守的, 一般是法律法规类, 可能给项目带来好处或者坏处</li>
<li>【活动属性】包括活动便秘、活动描述、紧前活动、紧后活动、逻辑关系、提前量和滞后量、资源需求、强制日期、制约因素和假设条件</li>
<li>【属性样本】与一致性有关, 【变量眼部】与一致性程度有关</li>
<li>【项目效益】指为发起组织和项目预期受益方创造价值的行动、行为、产品、服务或成果的结果</li>
<li>【投资回报率（ROI）】是指项目投产后的年均运营利润率与项目投资额的比值</li>
<li>【挣值分析（EVA）】指实际进度和成本绩效与绩效测量基准进行比较</li>
<li>【固定成本】是指成本总额在一定时期和一定业务量范围内, 不受业务量增减变动影响而保持不变的成本</li>
<li>【边际成本】是每一单位性质生产的产品（或者购买的产品）带来的总成本的增量</li>
<li>【沉没成本】指以往发生的, 但是已经无法挽回, 且与当前决策无关的费用</li>
<li>【机会成本】指为从事某项经营活动二放弃另一项经营活动的机会或利用一定资源活动某种收入是所放弃的另一种收入</li>
<li>【项目组合】是可以实现共同组织目标的项目或者项目集, 可能会涉及到优先级和资源倾斜, 项目之间有优先级就是项目组合管理</li>
<li>【项目集】是一组相互关联且被协调管理的项目、子项目集和项目集活动, 以便活动分别管理所无法获得的利益</li>
</ul>
<h2> 工具与技术</h2>
<ul>
<li>【价值流程图】描述整个产品完成过程中的每个步骤和流程以及每个环节的具体活动内容, 可以寻找生产过程中的浪费</li>
<li>【质量审计】是用于确定项目活动是否遵循了组织和项目的政策、过程与程序的一种结构话且具体的过程</li>
<li>【帕累托图】是一种发生频率排序的特殊直方图, 显示每种已识别的原因分别导致了多少缺陷。是质量管理中找出问题原因中首要原因的工具和技术</li>
<li>【敏感性分析】用于定量风险风险, 是为了确定不确定性给项目带来的大影响, 即龙卷风图</li>
<li>【德尔菲技术】通过多轮匿名形式而获得专家意见并达成一致, 可以消除重要相关方对其他人的影响</li>
<li>【蒙特卡洛分析】是定了风险风险工具, 通过模拟和模型的出量化的影响</li>
<li>【应急计划】是对已识别风险做的应对方式</li>
<li>【横道图（甘特图）】显示项目的进度安排, 在横道图中, 纵向表示活动, 横向表示日期, 用横条表示活动的开始日期至完成日期的持续时间</li>
<li>【预期货币价值分析】是对项目进行评估筛选的一种财务分析方法</li>
<li>【成本效益分析】是用来估算备选方案中优势和劣势的财务分析工具, 以确定可以创造最佳效益的备选方案（比较成本和预期效益, 选择最少成本达到最佳、最高效益的方案）, 成本效益分析可帮助项目经理确定规划的质量活动是否有效利用成本</li>
<li>【头脑风暴】集思广义, 只求数量不求质量, 提供一些新想法</li>
<li>【控制质量】由团队进行, 输出核实的可交付成果, 才能进行确认范围, 实际上可以存在两者同时进行</li>
<li>【确认范围】由客户进行对可交付成果的验收</li>
<li>【根本原因分析法】即 5-whys, 通过问为什么来找到问题的原因</li>
<li>【鱼骨图、石川图、因果图】用于找找根本原因</li>
<li>【快速跟进】是指在关键路径上原先先后顺序进行的工作调整为并行进行, 以达到压缩进度的目的</li>
<li>【隐性知识】相当个人化而富有弹性的知识, 通常是难以被记录和传递的。比如个人主观的洞察力、直觉、经验诀窍与预感</li>
<li>【RACI 矩阵】对明确划分团队成员的角色和职责特别有用, 与成员技能水平无关</li>
<li></li>
</ul>
<h2> 指南性文件</h2>
<ul>
<li>【项目效益管理计划】指对创造、提高和保持项目效益的过程进行定义的书面文件, 大致描述项目实现效益的方式和时间、以及应制定的效益衡量机制</li>
<li>【沟通管理计划】作用就是指导项目间的信息的正确传递</li>
<li>【质量管理计划】是描述如何实施适用的政策、程序和指南以实现质量目标的指南文件</li>
</ul>
<h2> 项目文件</h2>
<ul>
<li>【假设日志】是用于记录整个项目生命周期中所有的假设条件和制约因素</li>
<li>【里程碑清单】列出所有项目重要时点或者事件</li>
<li>【范围说明书】包含了具体的验收标准, 单不包括指导确定验收标准的内容；包含项目和产品的范围但是没有需求内容</li>
<li>【相关方登记册】记录的是相关方身份信息、评估信息、相关方分类, 没有参与度</li>
</ul>
<h2> 合同</h2>
<ul>
<li>【总价加经济调整合同】适用于时间跨度大, 允许各级条件的变化, 如通货膨胀</li>
<li>【工料合同】适合工作内容简单、工作范围明确, 但是工作量无法事先准确判断</li>
<li>【固定总价合同】风险最小, 对呀买方几乎没有不确定性</li>
<li>【工料合同】在不能很快的编写出准确的工作说明书情况下使用, 金额小、工期短、不复杂的项目可以使用</li>
</ul>
<h2> 风险管理措施</h2>
<ul>
<li>【风险接受】是威胁的应对策略, 是指知道威胁存在, 但不采取主动措施</li>
<li>【权变措施】是事先没有识别的风险发生, 对相应的内容才去保护措施, 是对突发事件的应对</li>
</ul>
<h2> 成本和进度</h2>
<ul>
<li>【成本绩效指数（CPI）】等于 1 时, 表示成本和原计划相同, 低于 1 时, 表示成本高于原计划, 高于 1 时, 表示成本低于原计划</li>
<li>【进度绩效指数（SPI）】等于 1 时, 表示进度和原计划相同, 低于 1 时, 表示进度低于原计划, 高于 1 时, 表示进度高于原计划</li>
</ul>
<h2> 敏捷管理</h2>
<ul>
<li>【敏捷团队】提倡面对面沟通, 尽量要让团队出席相关会议。追求步调文档, 不是越快越好, 团队的速度应该是适合自己的</li>
<li>【敏捷教练】在敏捷项目中是仆人式领导, 作为团队促进者的角色, 应鼓励团队参与活动, 当团队成员冲突恶化无法解决时, 敏捷教练才进行干预</li>
<li>【故事点】不应该夸跨团队比较, 由于项目的特殊性, 以及团队本身监狱等多处不一致, 没有任何可比性。该估算工作应由团队进行估算, 不是执行者进行估算。</li>
<li>【结对编程】需要两个程序员在一个计算机上共同工作, 一个输入代码, 另一个审查他输入的每一行代码, 输入代码的人称驾驶员, 审查代码观察员（或者导航员）, 两个角色经常互换</li>
<li>【产品待办事项列表】需要避免根据团队不同或者组件不同来设定不同的产品待办事项列表。按风险以及价值进行优先级排序。</li>
<li>【MoScow】是对用户故事优先级排序的工具</li>
<li>【计划扑克】是估算用户故事点的工具</li>
<li>【燃尽图】用图形显示了剩余工作与时间盒内剩余时间的关系, 可以了解团队目前的任务完成情况, 从而知道团队绩效有没有改善</li>
<li>【发布燃起图】用图形显示项目时间与已完成的工作间的关系, 根据故事点完成的情况动态展示工作成果, 可以了解目前的工作成果以及和目标的差距</li>
<li>【Spring 燃起图】只显示一次迭代过程的进展情况, 无法通过它查看项目的进展状况</li>
<li>【每日站会】用于成员分享经验、同步信息、发现问题, 会议上只是提出问题不解决问题 , 会后单独安排会议解决。项目经理需要在每日站会上记录问题于障碍板上</li>
<li>【自组织团队】在敏捷项目中, 提倡公开透明的沟通, 所有项目上的问题, 理论上优先由开发团队自组织解决</li>
<li>【敏捷风险应对】强调出现风险了的时候, 是需要团队共同注意的, 所以可以对目前的迭代增加一个目标让团队重视应对风险</li>
<li>【测试驱动开发】指测试在单行代码编写之前完成测试编写的方法, 研发人员随后编写代码来通过此次测试。测试人员和研发人员共同合作, 达到共识之后进行代码的测试驱动</li>
<li>【价值流图】往往定义为不能为最终产品提供增值的一个活动, 价值流图可以找到增值和非增值的数据</li>
<li>【敏捷教练】可以对不同的团队阶段设立不同的领导力类型, 其中形成阶段可以是指导式, 震荡阶段可以是教练式, 规范阶段可以是支持式, 成熟阶段可以是授权式</li>
<li>【PMO 项目管理办公室】在为敏捷项目提供支持的时候, 必须遵守敏捷项目的特点, 在不确定的环境中为决策提供指导方针</li>
<li>【迭代回顾会议】时间长度取决于迭代开发周期有多长, 项目的复杂程度, 团队的规模, 冲突的严重程度或争论的激烈程度, 与利益相关方的数量无关</li>
<li>【敏捷教练】在【迭代回顾会议】上收集持续改进的建议；在【迭代评审会议】收集相关方的反馈意见或者建议</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>工具与技术</title>
      <link>https://vxhly.github.io/pmp/examination/toolsand-techniques.html</link>
      <guid>https://vxhly.github.io/pmp/examination/toolsand-techniques.html</guid>
      <source url="https://vxhly.github.io/rss.xml">工具与技术</source>
      <description>前言 PMP 全书中出现了不少的工具与技术, 本文针对这些工具技术进行分类整理和并且对于这些名词做出相应的解释。 数据收集 头脑风暴 表示在短时间内获得大量创意, 适用于团队环境, 需要引导者进行引导头脑风暴由两部分构成：创意产生和创意分析。; 头脑风暴简单的理解为就是畅所欲言不批评和评价。; 畅所欲言、只求数量, 不求质量。; 焦点小组 召集相关方和...</description>
      <category>PMP</category>
      <pubDate>Thu, 01 Sep 2022 20:50:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>PMP 全书中出现了不少的工具与技术, 本文针对这些工具技术进行分类整理和并且对于这些名词做出相应的解释。</p>
</div>
<!-- more -->
<h2> 数据收集</h2>
<div class="hint-container tip">
<p class="hint-container-title">头脑风暴</p>
<ul>
<li>表示在短时间内获得大量创意, 适用于团队环境, 需要引导者进行引导头脑风暴由两部分构成：创意产生和创意分析。</li>
<li>头脑风暴简单的理解为就是畅所欲言不批评和评价。</li>
<li>畅所欲言、只求数量, 不求质量。</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">焦点小组</p>
<ul>
<li>召集相关方和主体专家讨论项目风险, 成功标准和其他议题。</li>
<li>一般是同一个领域, 同一个部门的人员(同职能)。</li>
<li>由 2 个或 2 个以上的人在会议室开会讨论, 其中有一个主持人进行主持, 并且只围绕一个主题进行焦点性讨论。</li>
<li>比一对一访谈更有利于互动交流。</li>
<li>主持人引导互动式讨论。</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">访谈</p>
<ul>
<li>直接面对面一对一的交谈, 具体是指通过与相关方直接交谈了解高层级需求, 假设条件, 制约因素, 审批标准以及其他信息。</li>
<li>预设和即兴问题、一对一、多对多、获取机密信息。</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">问卷调查</p>
<ul>
<li>受众多样、需快速完成、地理位置分散、适合开展统计分析。</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">标杆对照</p>
<ul>
<li>标杆可以是内部或外部、同行业或者不同行业、识别最佳实践、形成改进意见。</li>
</ul>
</div>
<h2> 数据分析</h2>
<div class="hint-container tip">
<p class="hint-container-title">挣值分析</p>
<p>对范围、进度、成本绩效进行综合分析, 发现偏差。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">根本原因分析</p>
<p>寻找偏差或潜在问题的根本原因。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">成本效益分析</p>
<p>选择成本最低的方案来纠偏。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">参数估算</p>
<p>利用历史数据之间的统计关系和其他变量来估算, 回归分析是典型的参数估算。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">三点估算</p>
<p>考虑不确定性与风险, 提高估算准确性。</p>
</div>
<h2> 决策</h2>
<div class="hint-container tip">
<p class="hint-container-title">一致同意</p>
<p>每个人都同意、德尔菲(专家、匿名、多轮、趋同、消除意见)。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">大多数同意</p>
<p>超过 50%, 一般把决策小组的人数定为奇数。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">相对多数同意</p>
<p>相对多数, 通常候选项超过两个时使用。</p>
</div>
<h2> 数据表现</h2>
<div class="hint-container tip">
<p class="hint-container-title">核对单</p>
<ul>
<li>很多组织基于自身经验制定了标准化的核对单, 或者采用所在行业的核对单。</li>
<li>包括需要考虑的项目, 行动或要点的清单, 常被用作提醒。</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">因果图（鱼刺图）</p>
<p>显示各种因素对问题结果造成的影响, 用来找出全部原因。</p>
<ul>
<li>关键词：找出所有原因</li>
<li>着眼于刺激思考</li>
<li>探索理想的结果</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">控制图（过程控制图）</p>
<p>确定某个过程是否稳定是否在控制之内。</p>
<ul>
<li>关键词：针对过程</li>
<li>确定某流程是否正常运转</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">流程图</p>
<p>帮助分析问题, 显示系统各组成部分之间的逻辑关系。</p>
<ul>
<li>关键词：找原因</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">直方图</p>
<p>显示各变量的分布, 每一栏代表一种变量, 直观显示各变量所占比例。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">帕累托图</p>
<p>特殊的直方图, 按照发生频率大小顺序排列, 表示有多少结果是由已确认的类型的原因引起的。</p>
<ul>
<li>关键词：用于识别造成大多数问题的少数重要原因</li>
<li>着眼于改进质量最重要的问题上</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">趋势图</p>
<p>反映一个过程在某一段时间的趋势。</p>
<ul>
<li>关键词：用来预测未来</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">散点图</p>
<p>显示两个变量之间的关系和规律(因变量 Y 相对于自变量 X 的变化)。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">思维导图</p>
<ul>
<li>把从头脑风暴中获得的创意整合成一张图, 以反映创意之间的共性与差异, 激发新创意。</li>
<li>整合、反映共性与差异、激发新创意、脑图。</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">亲和图</p>
<p>分组、分类。对大量创意进行分组, 以便进一步审查和分析。可以对潜在缺陷成因进行分类, 展示最应关注的领域。</p>
</div>
<h2> 人际关系与团队技能</h2>
<div class="hint-container tip">
<p class="hint-container-title">名义小组</p>
<p>促进头脑风暴、投票、优先排序、5 分制、数轮。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">引导</p>
<p>与主题研讨会结合使用、跨职能、不同部门、协调相关方差异。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">观察(工作跟随)和交谈</p>
<p>“工作跟随”、难以或不愿清晰说明、挖掘隐藏的需求。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">冲突管理</p>
<ul>
<li>有助于相关方就目标、成功标准、高层级需求、项目描述、总体里程碑等内容达成一致意见。</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">引导</p>
<ul>
<li>是指有效引导团队活动成功以达成决定, 解决方案或结论的能力。</li>
<li>引导者确保参与者有效参与, 互相理解, 考虑所有意见, 按既定决策流程全力支持得到的结论或结果。</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">会议管理</p>
<ul>
<li>不能把各种会议类型混合在一起, 面对面的会议效果是最好的, 根据情况可以举行虚拟会议, 确保有效参与会议, 会议要达成共识, 要有行动计划。</li>
<li>会前, 确保会议议程, 主题, 目的和目标和期限。</li>
<li>会中, 不跑题。</li>
<li>会后, 要有书面的会议纪要和行动方案</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">X 理论</p>
<p>（1）员工天生不喜欢工作,只要可能,就会逃避工作。
（2）由于员工不喜欢工作,因此必须对他们采取强制的措施或惩罚的办法,迫使他们去 实现组织的目标。
（3）员工只要有可能就会逃避责任,安于现状。
（4）大多数员工喜欢安逸,没有雄心壮志。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">Y 理论</p>
<p>（1）员工视工作如休息、娱乐一般自然。
（2）如果员工对某项工作做出承诺,他们会进行自我指导和自我控制,以完成任务。
（3）一般而言,每个人不仅能够承担责任,而且会主动寻求承担责任。
（4）绝大多数人都具备做出正确决策的能力,而不仅仅管理者具备这一能力。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>PMP 解题思路</title>
      <link>https://vxhly.github.io/pmp/examination/problem-solving.html</link>
      <guid>https://vxhly.github.io/pmp/examination/problem-solving.html</guid>
      <source url="https://vxhly.github.io/rss.xml">PMP 解题思路</source>
      <description>前言 记录 PMP 考试的一些解题思路 变更题 当题干中出现：新的、额外的、设备变化、工作遗漏、范围蔓延、确保缺陷补救正确、争论要不要变更、等等均属于变更题。 变更的本质是对项目管理计划（基准）、可交付成果的修改; 变更往往是出于某种需要, 无所谓好与不好；不要看成是问题, 也不要看成是风险；; 我们更多的是关注变更的受控, 评估对项目管理计划（基准）...</description>
      <category>PMP</category>
      <pubDate>Thu, 01 Sep 2022 20:50:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录 PMP 考试的一些解题思路</p>
</div>
<h2> 变更题</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>当题干中出现：新的、额外的、设备变化、工作遗漏、范围蔓延、确保缺陷补救正确、争论要不要变更、等等均属于变更题。</p>
</div>
<ul>
<li>变更的本质是对项目管理计划（基准）、可交付成果的修改</li>
<li>变更往往是出于某种需要, 无所谓好与不好；不要看成是问题, 也不要看成是风险；</li>
<li>我们更多的是关注变更的受控, 评估对项目管理计划（基准）的影响, 而不是“担心”带来的问题或风险</li>
<li>对待变更的态度：无所谓“欢迎”还是“不欢迎”, 需要变更就变更, 但是要受控</li>
</ul>
<p>变更流程：（了解变更的具体内容或原因, 告知变更的流程, 避免不必要的变更）</p>
<p>1.记录（项目经理书面记录或要求变更提出者提交书面的变更）2.评估, 3.提交（项目经理提交给 CCB）, 4.更新, 5.通知</p>
<p>如果获得批准, 就必须要去执行批准的变更, 如果其他相关方有意见可以重新提交新的变更
如果变更没有获得批准就直接执行了, 则需要：1.停止不良变更（不是停止整个项目）, 2. 补变更流程。</p>
<h2> 相关方与沟通</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>相关方的管理在于管理人</p>
<p>遇到相关方反对、担忧、抵制、威胁、不支持、不参与, 事后提出不同意见等等, 均属于相关方题</p>
</div>
<ul>
<li>如果之前没有识别该相关方：更新相关方登记册, 做好相关方分析和分类（权力利益）</li>
<li>如果已经识别了该相关方：审查相关方参与计划, 或者, 管理相关方参与（引导参与, 获得支持；谈判沟通, 管理期望；处理风险,
预测问题；澄清和解决已识别的问题）</li>
<li>如果问事先要做好什么：早识别、早分析（相关方分析）、早参与</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>沟通的管理在于管理信息传递</p>
<p>信息流传递的问题才是沟通问题：多发少发, 没有及时发, 看不懂, 不是想要的, 不方便阅读, 虚拟团队的沟通问题, 相关方抱在怨沟通不及时,
虚拟团队的误解, 均是沟通题</p>
</div>
<ul>
<li>常见的选项有：审查管理计划、更新沟通管理计划、创建沟通管理计划, 以及跟规划沟通有关的工具：沟通需求分析, 沟通风格评估等等</li>
<li>注意区分, 是要你管人, 还是要你管信息的传递；人的问题属于相关方知识领域、信息传递的问题属于沟通知识领域</li>
</ul>
<h2> 风险和问题</h2>
<ul>
<li>风险是一种不确定性的事件, 有概率发生, 发生之后会对项目产生积极或消极的影响</li>
<li>问题是当前客观存在的情形, 已经对项目产生了影响</li>
<li>对于风险来说：1. 未来可能发生, 2.一旦发生就会有影响</li>
<li>对于问题来说：1. 当前客观存在, 2.已经对项目产生影响</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">风险的题目</p>
<ul>
<li>风险的题目（大多数风险题, 题干中会明确说到“可能”带来的影响）</li>
<li>识别到风险：更新（查阅）风险登记册、定性、定量、规划应对、实施应对</li>
<li>发生了风险：已知风险, 查阅风险登记册直接应对, 如果要用储备, “应急储备”；未知风险：权变, 走变更流程, 用管理储备</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">问题的题目</p>
<ul>
<li>记录问题日志, 分析根本原因（或评估影响）, 确定解决方案。</li>
<li>问题解决的完整步骤：1.定义, 2.识别, 3.方案, 4.选择, 5.执行, 6.验证</li>
</ul>
</div>
<h2> 原因和根本原因</h2>
<div class="hint-container tip">
<p class="hint-container-title">找原因</p>
<p>如果题目描述的是想要找原因, 问题是使用什么工具和技术, 选项找：<code>根本原因分析</code></p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">找根本原因</p>
<p>如果题目描述的是想要找根本原因, 问题是如何找根本原因, 选项找：<code>鱼骨图</code>、<code>石川图</code>、<code>因果图</code></p>
</div>
<h2> 正常收尾流程</h2>
<ol>
<li>获得项目发起人和相关方的批准（验收）</li>
<li>移交最终成果</li>
<li>总结经验教训, 提供未来项目或阶段使用</li>
<li>更新组织过程资产</li>
<li>文件归档</li>
<li>释放资源、解散项目团队</li>
<li>衡量并记录客户满意度</li>
<li>庆功会</li>
</ol>
<h2> 提前收尾流程</h2>
<ol>
<li>在正式的收尾文件中说明项目终止的原因</li>
<li>把该项目的已完成和未完成的可交付成果移交他人</li>
<li>总结经验教训, 提供未来项目或阶段使用</li>
<li>更新组织过程资产</li>
<li>文件归档</li>
<li>释放资源、解散项目团队</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>PMP 敏捷知识点</title>
      <link>https://vxhly.github.io/pmp/agile/agile-knowledge.html</link>
      <guid>https://vxhly.github.io/pmp/agile/agile-knowledge.html</guid>
      <source url="https://vxhly.github.io/rss.xml">PMP 敏捷知识点</source>
      <description>前言 在 PMP 中存在大量的敏捷知识点, 本篇将记录相关的重点知识。 预测型（瀑布型）的特点 用计划驱动, 需求必须明确, 一开始就要收集详细的需求; 如果需求经常发生变化, 需要通过变更流程修改计划; 一开始就要编写大量的文档; 客户参与度不高, 他们认为在收集需求的时候已经讲得很清楚了; 需要花大量的时间来汇报当前的项目状态; 价值只有到项目结束...</description>
      <category>PMP</category>
      <pubDate>Tue, 26 Jul 2022 20:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>在 PMP 中存在大量的敏捷知识点, 本篇将记录相关的重点知识。</p>
</div>
<!-- more -->
<h2> 预测型（瀑布型）的特点</h2>
<ul>
<li>用计划驱动, 需求必须明确, 一开始就要收集详细的需求</li>
<li>如果需求经常发生变化, 需要通过变更流程修改计划</li>
<li>一开始就要编写大量的文档</li>
<li>客户参与度不高, 他们认为在收集需求的时候已经讲得很清楚了</li>
<li>需要花大量的时间来汇报当前的项目状态</li>
<li>价值只有到项目结束的时候才能显现, 造成了较高风险</li>
<li>无法灵活应对市场变化</li>
</ul>
<h2> MVP (Minimum Viable Product) 最小可行产品</h2>
<p>开发团队通过提供最小可行产品获取用户反馈, 并在这个最小化可行产品上持续快速迭代, 直到产品到达一个相对稳定的阶段。MVP 对于创业团队来说很重要, 可以快速验证团队的目标, 快速试错。</p>
<h2> 敏捷宣言（4 大价值观）</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>敏捷是一种通过创造变化和响应变化在不确定和混乱的环境中取得成功的能力。</p>
</div>
<p>我们正在通过亲自开发和帮助他人开发, 发现开发软件的更好方法。通过这项工作, 我们开始更重视：</p>
<ul>
<li>个体和交互 胜于 流程和工具</li>
<li>工作的软件 胜于 详尽的文档</li>
<li>客户合作 胜于 合同谈判</li>
<li>响应变化 胜于 遵循计划</li>
</ul>
<p>也就是说, 右栏中的项目固然有价值, 但我们更重视左栏中的项目</p>
<h2> 敏捷十二原则</h2>
<ul>
<li>准则 1：我们的最高目标是, 通过尽早和持续地交付有价值的软件来满足客户。(及早、持续不断、价值驱动交付、客户满意)</li>
<li>准则 2：欢迎对需求提出变更, 即使在项目开发后期也不例外。敏捷过程要善于利用需求变更, 帮助客户获得竞争优势。(拥抱变更、提高客户竞争优势)</li>
<li>准则 3：要经常交付可用的软件, 周期从几周到几个月不等, 且越短越好。(频繁交付、短周期)</li>
<li>准则 4：项目实施过程中, 业务人员与开发人员必须始终通力合作。(业务和开发相互合作、每天如此)</li>
<li>准则 5：要善于激励项目人员, 给予他们所需的环境和支持, 并相信他们能够完成任务。(提供环境、支持团队、对团队辅以信任)</li>
<li>准则 6：无论是对开发团队还是团队内部, 信息传达最有效的沟通方法是面对面的交谈。(面对面沟通效果最好、也可使用虚拟环境)</li>
<li>准则 7：可用的软件是衡量进度的首要衡量指标。(根据可工作的软件度量)</li>
<li>准则 8：敏捷过程提倡可持续的开发。项目发起人、开发人员和用户应该保持步调。(可持续开发、步调稳定)</li>
<li>准则 9：对技术的精益求精以及对设计的不断完善将提高敏捷性。(重构)</li>
<li>准则 10：简洁, 即尽最大可能减少不必要的工作。这是一门艺术。(简洁、专注团队)</li>
<li>准则 11：最佳的架构、需求和设计出自于自组织团队。(自组织团队)</li>
<li>准则 12：团队要定期反省怎么做才能更有效, 并相应地调整团队的行为。(定期回顾、不断改进)</li>
</ul>
<h2> 敏捷项目章程</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>敏捷项目章程中应包含 3 个关键信息：愿景, 任务和成功标准。</p>
</div>
<p>敏捷项目也是有项目章程的。</p>
<p>项目章程是重要的管理文件, 需要所有干系人的参与。</p>
<p>虽然专家建议章程应不超过一页, 但是因为所有的干系人必须参与进来并且达成一致意见, 所以创建项目章程是非常具有挑战性的。</p>
<h2> 敏捷阶段框架</h2>
<p>相较于结构化项目管理的启动、规划、执行、监控、收尾五大过程组, 部分流派将敏捷也做了一个五阶段框架：构想、推演、探索、适应、结束。他们不能直接跟结构化项目管理中五大过程组完全匹配对应, 但是可以粗略这样对应。</p>
<p>构想阶段, 得到产品愿景；推演阶段, 得到用户故事清单、产品待办事项列表、产品发布计划等；探索阶段, 执行得到完成的用户故事；适应阶段对完成的进行把关；结束阶段, 完结整个项目。</p>
<h2> 四种生命周期及对比</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>计划始终贯穿其中, 每种生命周期都有计划要素, 不同之处在于完成多少计划以及何时完成</p>
</div>
<ul>
<li>预测型生命周期：一种更为传统的方法, 提前进行大量的计划工作, 然后一次性执行；执行是一个连续的过程。也称为瀑布式。</li>
<li>迭代型生命周期：这种方法允许对未完成的工作进行反馈, 从而改进和修改该工作。</li>
<li>增量型生命周期：这种方法向客户提供各个已完成的, 可能立即使用的可交付成果。</li>
<li>敏捷(适应型)生命周期：这种方法既有迭代, 也有增量, 便于完善工作, 频繁交付。</li>
<li>混合型生命周期：可以实现预测向敏捷的过渡、可以在风险不大, 具有中低程度不确定性的项目中尝试</li>
</ul>
<table>
<thead>
<tr>
<th>方法</th>
<th>需求</th>
<th>活动</th>
<th>交付</th>
<th>目标</th>
</tr>
</thead>
<tbody>
<tr>
<td>预测型</td>
<td>固定</td>
<td>整个项目仅一次执行</td>
<td>一次交付</td>
<td>管理成本</td>
</tr>
<tr>
<td>迭代型</td>
<td>动态</td>
<td>反复执行直至修正</td>
<td>一次交付</td>
<td>解决方案的正确</td>
</tr>
<tr>
<td>增量型</td>
<td>动态</td>
<td>对给定增量执行一次</td>
<td>频繁更小规模交付</td>
<td>速度</td>
</tr>
<tr>
<td>敏捷型</td>
<td>动态</td>
<td>反复执行直至修正</td>
<td>频繁更小规模交付</td>
<td>通过频繁小规模交付和反馈实现的客户价值</td>
</tr>
</tbody>
</table>
<h2> 仆人式领导</h2>
<p>特征：建立社区、倾听、同理心、成长承诺、治愈能力、管理能力、意识、洞察力、说服力、化繁为简能力。</p>
<ol>
<li>帮助、促进团队发展。</li>
<li>为团队消除障碍。</li>
<li>为他人贡献铺路。</li>
<li>教育相关方, 使其了解为什么要敏捷以及如何敏捷。</li>
<li>通过指导、鼓励和帮助为团队提供支持。</li>
<li>通过技术项目管理活动, 如量化风险分析来帮助团队。</li>
<li>庆祝团队的成功, 为团队与外部团队合作提供支持, 并起到桥梁作用。</li>
</ol>
<h2> 敏捷团队特征</h2>
<ol>
<li>团队规模：3-9 名。</li>
<li>理想情况下, 集中办公。</li>
<li>100%专职成员、跨职能团队、通才型专家、自我激励自律的成员。</li>
<li>鼓励自我管理团队, 由团队成员决定谁执行下一阶段工作。</li>
<li>敏捷团队与仆人式领导一起茁壮成长, 领导支持团队的工作方法。</li>
<li>团队频繁创造产品增量, 团队集体对工作负责并共同拥有完成工作所需的所有必要技能。</li>
<li>限制在制品（WIP）、彼此依赖实现交付。</li>
<li>以各种方式开展合作（结对、群集、群体开发）。</li>
<li>敏捷项目要求拥有小规模全功能的团队, 人员不足时, 项目经理也可能要实现部分技术工作。</li>
</ol>
<h2> 项目经理作为仆人式领导的职责</h2>
<ol>
<li>帮助、促进团队发展。</li>
<li>为团队消除障碍。</li>
<li>为他人贡献铺路。</li>
<li>教育相关方, 使其了解为什么要敏捷以及如何敏捷。</li>
<li>通过指导、鼓励和帮助为团队提供支持。</li>
<li>通过技术项目管理活动, 如量化风险分析来帮助团队。</li>
<li>庆祝团队成功, 为团队与外部团队合作提供支持, 并起到桥梁作用。</li>
</ol>
<h2> 敏捷中常见的四大会议</h2>
<ul>
<li>迭代规划会议
<ul>
<li>确定下一个迭代要完成那些用户故事, 将大家一致认可的用户故事放入迭代待办事项清单中。</li>
</ul>
</li>
<li>每日站会
<ul>
<li>团队每天进行沟通的内部短会, 因一版只有 15 分钟且站立进行。</li>
<li>团队成员只需要讲三点内容：昨天做了什么, 今天计划要做什么, 遇到什么问题。</li>
</ul>
</li>
<li>迭代评审会议
<ul>
<li>在迭代结束前演示成果并接受评价的会议。</li>
</ul>
</li>
<li>回顾总结会议
<ul>
<li>哪些做得好, 哪些可以做得更好, 下次迭代准备做哪些改进。</li>
</ul>
</li>
</ul>
<h2> 铁三角和敏捷三角</h2>
<figure><img src="/assets/Iron-Triangle.png" alt="铁三角和敏捷三角" tabindex="0" loading="lazy"><figcaption>铁三角和敏捷三角</figcaption></figure>
<p>传统项目铁三角：范围相对固定, 成本进度是变量；敏捷铁三角, 成本进度相对固定, 范围是变量；敏捷三角强调价值和质量, 约束（范围、进度、成本）。</p>
<h2> 敏捷发布规则</h2>
<h3> 版本计划</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>版本计划规定每个版本（原型）的发布时间</p>
</div>
<h3> 发布计划</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>发布计划规定每个版本的发布需要完成的迭代次数和每次迭代的时间</p>
</div>
<ul>
<li>产品愿景驱动产品路线图</li>
<li>产品路线图驱动发布规则</li>
<li>发布规则决定迭代计划</li>
</ul>
<h3> 迭代计划</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>迭代计划规定一个迭代期内所需实现的用户故事和时间要求</p>
</div>
<ul>
<li>迭代计划安排功能开发</li>
<li>通过用户故事交付的功能优先级排序（按故事点估算）</li>
<li>为交付用户故事所创建的任务（按小时估算）</li>
</ul>
<h2> 极限编程</h2>
<ul>
<li><code>计划游戏( Planning Game )</code>：快速制定计划、随着细节的不断变化而完善;</li>
<li><code>小型发布( Small Release )</code>：系统的设计要能够尽可能早地交付, 在非常短的周期内以递增的方式发布新版本, 可以很容易地估计每个迭代周期的进度, 便于控制工作量和风险；同时, 也可以及时处理用户的反馈;</li>
<li><code>系统隐喻( System Metaphor )</code>：找到合适的比喻传达信息;</li>
<li><code>简单设计( Simple Design )</code>：只处理当前的需求使设计保持简单;</li>
<li><code>测试驱动( Test-driven )</code>：先写测试代码再编写程序 TDD。（类似的还有 ATDD 验收测试驱动开发, BDD 行为驱动开发）;</li>
<li><code>重构( Refactoring )</code>：重新审视需求和设计, 重新明确地描述它们, 以符合新的和现有的需求；在不改变系统行为的前提下, 重新调整、优化系统的内部结构以减少复杂性、消除冗余、增加灵活性和提高性能;</li>
<li><code>结对编程( Pair Programming )</code>：由两个程序员在同一台电脑上共同编写解决同一问题的代码。通常一个人负责写编码, 而另一个负责保证代码的正确性与可读性;</li>
<li><code>集体所有权（Collective Ownership）</code>：任何人在任何时候都可以在系统中的任何位置更改任何代码。每个成员都有更改代码的权利, 所有的人对于全部代码负责;</li>
<li><code>持续集成( Continuous Integration )</code>：可以按日甚至按小时为客户提供可运行的版本；提倡在一天中集成系统多次, 而且随着需求的改变, 要不断的进行回归测试, 避免了一次系统集成的恶梦;</li>
<li><code>每周工作40小时( 40-hour Week )</code>：要求项目团队人员每周工作时间不能超过 40 小时, 加班不得连续超过两周, 否则反而会影响生产率;</li>
<li><code>现场客户( On-site Customer )</code>：在团队中加入一位真正的、起作用的用户, 他将全职负责回答问题;</li>
<li><code>编码标准( Code Standards )</code>：强调通过指定严格的代码规范来进行沟通, 尽可能减少不必要的文档。</li>
</ul>
<h2> 工具</h2>
<ul>
<li><code>【价值流程图】</code>：查看显出浪费的时间</li>
<li><code>【产品路线图】</code>：显示预期的可交付成果序列</li>
<li><code>【燃起图】</code>：可以对照预期应完成的工作来跟踪已完成的工作量</li>
<li><code>【燃尽图】</code>：可以显示剩余故事点的数量或已减少的风险敞口的数量</li>
</ul>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/Iron-Triangle.png" type="image/png"/>
    </item>
    <item>
      <title>PMP 敏捷开发流程之Scrum：3355</title>
      <link>https://vxhly.github.io/pmp/agile/scrum-3355.html</link>
      <guid>https://vxhly.github.io/pmp/agile/scrum-3355.html</guid>
      <source url="https://vxhly.github.io/rss.xml">PMP 敏捷开发流程之Scrum：3355</source>
      <description>前言 敏捷开发过程重视团队的交流与管理问题, 其提高研发效率的显著效果, 使得敏捷开发逐渐成为继瀑布式开发之后, 最为流行的软件开发方式, 其中, Scrum 过程无疑是目前最为成功的敏捷方法。 Scrum 是用于开发、交付和持续支持复杂产品的一个框架, 是一个增量的、迭代的开发过程。 基本概念 Scrum3355 指的是：3 个核心角色, 3 个工件...</description>
      <category>PMP</category>
      <pubDate>Sat, 20 Aug 2022 19:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>敏捷开发过程重视团队的交流与管理问题, 其提高研发效率的显著效果, 使得敏捷开发逐渐成为继瀑布式开发之后, 最为流行的软件开发方式, 其中, Scrum 过程无疑是目前最为成功的敏捷方法。</p>
<p>Scrum 是用于开发、交付和持续支持复杂产品的一个框架, 是一个增量的、迭代的开发过程。</p>
</div>
<!-- more -->
<h2> 基本概念</h2>
<p>Scrum3355 指的是：3 个核心角色, 3 个工件, 5 个关键事件和 5 个价值观。</p>
<p>Scrum 是一套解决复杂问题的框架, 让我们以迭代和增量的方式, 在最短时间内交付最大价值的产品。其中的流程并非一定完全硬套, 工具是死的, 要适当的根据实际情况作出调整, 以适合团队的流程为首要原则。</p>
<p>敏捷也是一个持续优化的过程, 通过持续交付、持续优化、持续改进、持续提升、持续塑造, 最终实现小步快跑, 快速迭代。</p>
<h2> 3 个核心角色</h2>
<h3> 产品负责人（PO）</h3>
<ul>
<li>负责最大化投资回报率（ROI）, 通过确定产品特性, 把它们翻译成一个有优先级的列表, 为下一个 Sprint 决定在这个列表中哪些应当优先级最高, 并且不断地重新调整优先级和梳理这个列表。</li>
<li>职责是定义需求, 定义需求优先级, 定义需求的验收标准, 定义产品发布内容与日期。</li>
</ul>
<h3> Scrum Master/敏捷教练</h3>
<ul>
<li>帮助产品开发团队学习并应用 Scrum 来达成商业价值, 为大家服务, 会做任何力所能及的事情来帮助团队、产品负责人和组织取得成功。</li>
<li>对应敏捷团队中的项目经理, 但并非是一个项目经理。职责是促进团队的工作, 帮助团队熟悉和掌握敏捷的价值观与框架, 帮助排除影响生产力障碍, 确保团队不受打扰。</li>
</ul>
<h3> 开发团队</h3>
<ul>
<li>建造产品负责人所指定的产品。对交付结果负责。</li>
<li>团队是“跨职能”的, 它包含了所有专业能力, 如开发、测试、需求分析等, 并且它是“自组织”[自管理]的, 被给予很高程度的自治和责任。</li>
</ul>
<h2> 3 个工件</h2>
<h3> 产品代办事项（Product BackIog）</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>产品代办事项, 即产品视角的需求清单。</p>
</div>
<ul>
<li>由 Product Owner 负责维护, 包括增删及优先级排序</li>
<li>用户故事是其中一种最佳实践</li>
<li>每项需求都需要描述其外部价值</li>
</ul>
<h3> Sprint 迭代代办清单</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Sprint 迭代代办清单, 即此次冲刺周期内规划要完成的内容。</p>
</div>
<ul>
<li>来源于 Product Backlog</li>
<li>由团队评估和选择 Product BackIog 中哪些放入 Sprint BackIog</li>
<li>团队需要一起定义“完成”标准</li>
</ul>
<h3> 潜在可发产品增量（Increment）</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>可交付产品增量（Increment）, 即冲刺结束后可对外发布的产品功能增量部分。</p>
</div>
<ul>
<li>需要关注其是可工作的软件功能增量</li>
<li>需要在 Scrum Review 会议上进行展示</li>
</ul>
<h2> 5 个关键事件</h2>
<h3> 冲刺（Sprint）</h3>
<ul>
<li>冲刺 Sprint 或迭代是一个特殊的事件, 或者说其一个容器事件。后续四个事件包含在其中。</li>
<li>2~4 周, 固定周期, 固定事件开始, 固定事件结束。时间盒是其一个重要概念。</li>
</ul>
<h3> Sprint 计划会</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Sprint 计划会旨在澄清待办事项列表中事项的详细信息, 验收标准, 以及为实现即将需要履行的迭代承诺所需的额工作投入</p>
</div>
<ul>
<li>Sprint 规划会的核心议题是下一次冲刺要实现的目标和范围。</li>
<li>从 Product Backlog 中选取高优先级的需求, 确定 Sprint 的目标, 对产品 backIog 中故事进行估算, 以作为是否放入下期的参考。对于需求不清楚的故事, 需要产品负责人进行说明。</li>
<li>会议中输入是 Product backIog, 输出是 Sprint BackIog。</li>
</ul>
<h3> 每日 Scrum 站会</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>每日站会是简短的协作会议, 在该会议期间, 项目团队会审查前一天的额进展, 宣布当天的计划, 并强调指出遇到或遇见的任何障碍</p>
</div>
<ul>
<li>站会的目标是促进信息在团队内共享与透明。每次 15 分钟左右, 不对问题进行深入讨论, 每天固定时间召开。</li>
<li>团队成员需要回答 3 个问题：
<ul>
<li>昨天我做了哪些事情</li>
<li>今天计划要做什么事情</li>
<li>是否遇到问题, 阻碍达成目标</li>
</ul>
</li>
</ul>
<h3> Sprint 评审会</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Sprint 评审会是在一个迭代结束时举行的会议, 旨在展示在该迭代期间完成的工作</p>
</div>
<p>评审会在冲刺默契召开, 检查本期的成果, 需要团队全员参与, 并邀请产品相关干系人对产品进行展示, 若与产品负责人预想的不一样, 产品负责人可以拒绝接收成果。</p>
<h3> Sprint 回顾会</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Spring 回顾会议是 Scrum 团队检视自身并创建下一个 Spring 改进计划的机会, 因此团队沟通和配合中存在的问题, 以及相应的改进方案都应该在回顾会议上讨论</p>
</div>
<p>冲刺结束后, 团队一起复盘本次冲刺的过程, 总结经验与教训, 并形成切实可行的改进清单。</p>
<h2> 5 个价值观</h2>
<ul>
<li>【开放】- Scrum 把项目中的一切开放给每个人看</li>
<li>【尊重】- 每个人都有他独特的背景和经验</li>
<li>【勇气】- 有勇气做出承诺, 履行承诺, 接受别人的尊重</li>
<li>【专注】- 把你的心思和能力都用到你承诺的工作上去</li>
<li>【承诺】- 愿意对目标做出承诺, 全身心投入去完成 Scrum 团队的目标, 而不是必须按计划完成, 两者之间是有区别的。</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>PMP 公式篇</title>
      <link>https://vxhly.github.io/pmp/examination/formula.html</link>
      <guid>https://vxhly.github.io/pmp/examination/formula.html</guid>
      <source url="https://vxhly.github.io/rss.xml">PMP 公式篇</source>
      <description>前言 在 PMP 中存在一定的计算题, 一般分布在进度管理和成本管理章节, 以下是记录考试中会使用到的公式以及相关名词解释。 第四章 整合管理 商业价值与开发周期 比值 = 商业价值 / 开发周期 在选择项目的优先级时, 比值越高, 应该被优先选择 第六章 进度管理 三点估算 源自计划评审技术（PERT）。考虑估算中的不确定性和风险, 来提高估算的准确...</description>
      <category>PMP</category>
      <pubDate>Wed, 20 Jul 2022 22:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>在 PMP 中存在一定的计算题, 一般分布在进度管理和成本管理章节, 以下是记录考试中会使用到的公式以及相关名词解释。</p>
</div>
<!-- more -->
<h2> 第四章 整合管理</h2>
<h3> 商业价值与开发周期</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>比值 = 商业价值 / 开发周期</p>
</div>
<p>在选择项目的优先级时, 比值越高, 应该被优先选择</p>
<h2> 第六章 进度管理</h2>
<h3> 三点估算</h3>
<p>源自计划评审技术（PERT）。考虑估算中的不确定性和风险, 来提高估算的准确性。</p>
<p>三个估算值：最可能时间、最乐观时间、最悲观时间</p>
<div class="hint-container tip">
<p class="hint-container-title">三角分布</p>
<p>期望值（平均值）= (最悲观 + 最乐观 + 最可能) / 3</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">贝塔分布 （默认分布）</p>
<p>期望值（平均值）= (最悲观 + 最乐观 + 最可能 * 4) / 6</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">标准差</p>
<p>标准差 = (最悲观 - 最乐观) / 6</p>
</div>
<h2> 第七章 成本管理</h2>
<ul>
<li>BAC =&gt; 完工预算, 即成本基准（不考虑管理储备）</li>
<li>PV =&gt; 计划价值, 即到目前为止, 计划做多少</li>
<li>EV =&gt; 挣值, 即到目前为止, 目前已经做了多少</li>
<li>AC =&gt; 实际成本, 即到目前为止, 实际花了多少</li>
<li>SV =&gt; 进度偏差</li>
<li>CV =&gt; 成本偏差</li>
<li>SPI =&gt; 进度绩效指数</li>
<li>CPI =&gt; 成本绩效指数</li>
<li>TCPI =&gt; 完工尚需绩效指数</li>
<li>EAC =&gt; 完工估算</li>
<li>ETC =&gt; 完工尚需估算（使用新的估算方式）</li>
<li>VAC =&gt; 完工偏差</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">BAC（完工预算）</p>
<p>BAC = 完工时的 PV 的总和
BAC = EV</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">PV（计划价值）</p>
<p>BAC = 计划工作量 * 预算单价</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">EV（挣值）</p>
<p>EV = 实际工作量 * 预算单价</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">AC（实际成本）</p>
<p>EV = 实际工作量 * 实际单价</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">SV（进度偏差）</p>
<p>SV = EV - PV</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">CV（成本偏差）</p>
<p>CV = EV - AC</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">SPI（进度绩效指数）</p>
<p>SPI = EV / PV</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">CPI（成本绩效指数）</p>
<p>CPI = EV / AC</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">EAC（成本估算）</p>
<p>EAC = AC + ETC</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">EAC（典型偏差）</p>
<p>EAC = AC + (BAC - EV) / CPI = BAC / CPI</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">EAC（非典型偏差）</p>
<p>EAC = AC + (BAC - EV) / 1 = AC + BAC - EV</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">EAC（进度成本同时作用, 成本超支或进度落后）</p>
<p>EAC = AC + (BAC - EV) / (CPI * SPI)</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">剩余资金</p>
<p>剩余资金 =&gt; EAC - AC</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">剩余资金</p>
<p>剩余工作 =&gt; EAC - EV</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">TCPI（完工尚需绩效指数）</p>
<p>TCPI = (BAC - EV) / (BAC - AC)</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">VAC（完工偏差）</p>
<p>VAC = BAC - EAC</p>
</div>
<h2> 第八章 质量管理</h2>
<div class="hint-container tip">
<p class="hint-container-title">控制范围</p>
<p>+- 3 西格玛</p>
</div>
<h2> 第十章 沟通管理</h2>
<div class="hint-container tip">
<p class="hint-container-title">沟通渠道</p>
<p>沟通渠道 = n(n-1)/2</p>
</div>
<h2> 第十二章 项目采购管理</h2>
<div class="hint-container tip">
<p class="hint-container-title">总价+激励（FPIF）</p>
<p>总价 = 实际成本 + 目标利润 +（目标成本 - 实际成本）* 卖方应承担比例</p>
<p>先算总价, 和最高限价比较, 计算最终总价。</p>
<p>实际利润 = 最终总价 - 实际成本</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">成本+激励（CPIF）</p>
<p>利润 = 目标利润 + （目标成本 - 实际成本）* 卖方应承担比例</p>
<p>先算利润, 和利润上下限比, 计算最终利润</p>
<p>实际总价 = 最终利润 + 实际成本</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">成本——固定费用（CPFF）</p>
<p>实际总价 = 实际成本 + 初始成本百分比</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>PMP 关键词篇</title>
      <link>https://vxhly.github.io/pmp/examination/keyword.html</link>
      <guid>https://vxhly.github.io/pmp/examination/keyword.html</guid>
      <source url="https://vxhly.github.io/rss.xml">PMP 关键词篇</source>
      <description>前言 PMP 考试题目中如果出现某些关键词, 就可以直接根据关键词选出对应的正确 答案, 不光提高答题速度, 也能确保答题的准确率。现在将考试中一些常见关键 词对应的正确选项列举如下。 第一章 引论 1. 看到“驱动变革” =====&amp;gt; 选项中找“将来状态” 2. 看到“依赖关系” =====&amp;gt; 选项中找“项目集管理” 3. 看到“价值最大化”、“与组...</description>
      <category>PMP</category>
      <pubDate>Tue, 19 Jul 2022 22:50:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>PMP 考试题目中如果出现某些关键词, 就可以直接根据关键词选出对应的正确
答案, 不光提高答题速度, 也能确保答题的准确率。现在将考试中一些常见关键
词对应的正确选项列举如下。</p>
</div>
<!-- more -->
<h2> 第一章 引论</h2>
<ol>
<li>看到“驱动变革” =====&gt; 选项中找“将来状态”</li>
<li>看到“依赖关系” =====&gt; 选项中找“项目集管理”</li>
<li>看到“价值最大化”、“与组织目标保持一致” =====&gt; 选项中找“项目组合管理”</li>
<li>看到“可行性研究” =====&gt; 选项中找“商业论证”</li>
<li>看到“长期目标” =====&gt; 选项中找“战略规划”</li>
</ol>
<h2> 第二章 项目运行环境</h2>
<ol>
<li>看到“框架”、“功能”、“过程” =====&gt; 选项中找“项目治理”</li>
<li>看到“全部权力” =====&gt; 选项中找“项目型”</li>
<li>看到“比较大的权力” =====&gt; 选项中找“强矩阵”</li>
<li>看到“很小的权力” =====&gt; 选项中找“弱矩阵”</li>
<li>看到“公司有过类似项” =====&gt; 选项中找“组织过程资产”、“经验教训”</li>
<li>看到“顾问角色” =====&gt; 选项中找“支持型”</li>
<li>看到“要求服从” =====&gt; 选项中找“控制型”</li>
<li>看到“直接管理和控制” =====&gt; 选项中找“指令型”</li>
</ol>
<h2> 第三章 项目经理的角色</h2>
<ol>
<li>看到“允许自主决策” =====&gt; 选项中找“放任型”</li>
<li>看到“给予奖励”、“例外管理” =====&gt; 选项中找“交易型”</li>
<li>看到“服务承诺”、“关注他人” =====&gt; 选项中找“服务型”</li>
<li>看到“促进创新” =====&gt; 选项中找“变革型”</li>
<li>看到“激励他人”、“自信”、“说服力强” =====&gt; 选项中找“魅力型”</li>
</ol>
<h2> 第四章 项目整合管理</h2>
<ol>
<li>题目中出现“新任项目经理”、“项目经理权力责任” =====&gt; 选项中找“项目章程”</li>
<li>看到“是否值得投资” =====&gt; 选项中找“商业论证”</li>
<li>看到制约因素(或假设条件) =====&gt; 选项中找 “假设日志”</li>
<li>看到“纠正措施、预防措施、缺陷补救、更新” =====&gt; 选项中找“变更请求”</li>
<li>看到“计划制定完成”、“章程制定完成” =====&gt; 选项中找“批准”</li>
<li>看到“版本问题” =====&gt; 选项中找“配置管理”</li>
<li>看到“新任项目经理” =====&gt; 选项中找“项目章程”</li>
<li>看到“项目完成”或“终止” =====&gt; 选项中找“经验教训”</li>
<li>看到“某某人很有经验” =====&gt; 选项中找“专家判断”</li>
<li>看到“考虑所有意见”、“既定决策流程” =====&gt; 选项中找“引导”</li>
<li>看到“分享知识” =====&gt; 选项中找“信息管理</li>
</ol>
<h2> 第五章 项目范围管理</h2>
<ol>
<li>看到“暂时无法分解”、“信息不完整” =====&gt; 选项中找“滚动式规划”</li>
<li>看到“除外责任”、“范围边界”、“可交付成果的详细描述” =====&gt; 选项中找“项目范围说明书”</li>
<li>看到“需求(意见)不一致” =====&gt; 选项中找“引导式研讨会”</li>
<li>看到“一对一”、“获取机密信息” =====&gt; 选项中找“访谈”</li>
<li>看到“了解期望和态度” =====&gt; 选项中找“焦点小组”</li>
<li>看到“受众多样”、“快速完成”、“地理位置分散”、“适合开展统计分析” =====&gt; 选项中找“问卷调查”</li>
<li>看到“最佳实践” =====&gt; 选项中找“标杆对照”</li>
<li>看到“超过 50%” =====&gt; 选项中找“大多数同意”</li>
<li>看到“候选项超过 2 个以上” =====&gt; 选项中找“相对多数同意”</li>
<li>看到“创意分组” =====&gt; 选项中找“亲和图”</li>
<li>看到“创意整合”、“反应共性和差异”、“激发新创意” =====&gt; 选项中找“思维导图”</li>
<li>看到“投票排列”、“优先排序” =====&gt; 选项中找“名义小组技术”</li>
<li>看到“更早发现并更快解决问题” =====&gt; 选项中找“引导”</li>
<li>看到“业务目标” =====&gt; 选项中找“需求跟踪矩阵”</li>
<li>看到“产生项目可交付成果的具体活动” =====&gt; 选项中找“里程碑清单”</li>
</ol>
<h2> 第六章 项目进度管理</h2>
<ol>
<li>看到“活动之间的依赖关系” =====&gt; 选项中找“网络图”</li>
<li>看到“进度灵活性” =====&gt; 选项中找“关键路径法”</li>
<li>看到“活动延期” =====&gt; 选项中找“关键活动”</li>
<li>看到“负的总时差” =====&gt; 选项中找“活动延期”</li>
<li>看到“最佳实践”、“快速跟进” =====&gt; 选项中找“选择性依赖关系”</li>
<li>看到“成本较低”、“耗时较少”、“准确性较低”、”最快“ =====&gt; 选项中找“类比估算”</li>
<li>看到“历史数据之间统计关系”、“数据库”、“模型”、”PERT“ =====&gt; 选项中找“参数估算”</li>
<li>看到“资源有限”、“过度分配”、“关键路径改变”、“使用关键路径法分析” =====&gt; 选项中找“资源平衡”</li>
<li>看到“无法实现资源优化”、“不改变关键路径” =====&gt; 选项中找“资源平滑”</li>
<li>看到“不同条件下的可行性” =====&gt; 选项中找“假设情景分析”</li>
<li>看到“模型化”、“计算整个项目可能的进度结果” =====&gt; 选项中找“模拟”</li>
<li>看到“加班”、“增加额外资源”、“最小的成本增加”、“不计成本地缩短关键路径” =====&gt; 选项中找“赶工”</li>
<li>看到“并行开展”、“没有额外的资源”、“成本不能超支” =====&gt; 选项中找“快速跟进”</li>
<li>看到“向管理层汇报” =====&gt; 选项中找“横道图、甘特图”</li>
<li>看到“最悲观、最乐观、最可能” =====&gt; 选项中找“PERT 技术”</li>
<li>看到“没有合理可信度”、“提供准确估算”、“最准确的时间估算“ =====&gt; 选项中找“自下而上估算”</li>
<li>看到“理解目前的绩效”、“与未来绩效进行对比” =====&gt; 选项中找“趋势分析”</li>
<li>看到“保持约定的项目进度基准” =====&gt; 选项中找“关键路径上的活动”</li>
<li>看到“进度落后” =====&gt; 选项中找”进度压缩“ &gt; ”赶工“ &gt; ”快速跟进“</li>
<li>看到“可交付成果的文件” =====&gt; 选项中找“里程碑图”</li>
</ol>
<h2> 第七章 项目成本管理</h2>
<ol>
<li>看到“已知的未知风险” =====&gt; 选项中找“应急储备”</li>
<li>看到“未知的未知风险”、“额外” =====&gt; 选项中找“管理储备”</li>
<li>看到“外部资金” =====&gt; 选项中找“融资”</li>
<li>看到“进度绩效指数” =====&gt; 选项中找“分析关键路径上的绩效”</li>
<li>看到“成本控制” =====&gt; 选项中找“维护成本基准”</li>
<li>看到“资深项目经理”、“以往类似项目” =====&gt; 选项中找“专家判断”</li>
</ol>
<h2> 第八章 项目质量管理</h2>
<ol>
<li>看到“确保”, “防止” =====&gt; 选项中找“管理质量”</li>
<li>看到“改进过程、识别潜在缺陷、估算质量成本” =====&gt; 选项中找“流程图”</li>
<li>看到“根本原因” =====&gt; 选项中找“因果图、石川图、鱼骨图、why-why 分析图”</li>
<li>看到“两个因素的关系” =====&gt; 选项中找“散点图”</li>
<li>看到“上下限”、“限值”、“过程的稳定性”、“具有可预测的绩效” =====&gt; 选项中找“控制图”</li>
<li>看到“主要问题、主要缺陷、给缺陷排序”、“二八定律” =====&gt; 选项中找“帕累托图”</li>
<li>看到“缺陷被识别记录” =====&gt; 选项中找“核查表“、“计数表”</li>
<li>看到“增值活动”、“非增值活动” =====&gt; 选项中找“过程改进”、“管理质量”</li>
<li>看到“质量测量方法” =====&gt; 选项中找“质量测量指标”</li>
<li>看到“检查可交付成果” =====&gt; 选项中找“质量控制”</li>
<li>看到“识别最佳实践”、“识别违规”、“改进过程执行” =====&gt; 选项中找“管理质量”、“审计”</li>
<li>看到“培训”、“测试”、“破坏性试验”、“检查” =====&gt; 选项中找“一致性成本”</li>
<li>看到“返工”、“报废”、“保修” =====&gt; 选项中找“非一致性成本”</li>
<li>看到“价值链”、“过程流” =====&gt; 选项中找“流程图”</li>
<li>看到“频率” =====&gt; 选项中找“直方图”</li>
<li>看到“可视化”、“数据完整性” =====&gt; 选项中找“逻辑数据模型”</li>
<li>看到“因素的数量”、“关系强弱” =====&gt; 选项中找“矩阵图”</li>
<li>看到“提高产品特性” =====&gt; 选项中找“面向 X 的设计”</li>
<li>看到“六西格玛”、“PDCA” =====&gt; 选项中找“质量改进方法”</li>
<li>看到“核查表” =====&gt; 选项中找“识别缺陷”</li>
<li>看到“发现缺陷” =====&gt; 选项中找“控制质量”、“检查”</li>
</ol>
<h2> 第九章 项目资源管理</h2>
<ol>
<li>看到“退出”、“推迟到准备充分”、“推给其他人解决” =====&gt; 选项中找“撤退/回避”</li>
<li>看到“强调一致性” =====&gt; 选项中找“缓解/包容”</li>
<li>看到“一定程度满意” =====&gt; 选项中找“妥协/调解”</li>
<li>看到“公开对话”、“达成共识” =====&gt; 选项中找“合作/解决问题”</li>
<li>看到“解决紧急问题” =====&gt; 选项中找“强迫/命令”</li>
<li>看到“团队成员能力不足” =====&gt; 选项中找“提供培训”</li>
<li>看到“可接受行为” =====&gt; 选项中找“基本规则”</li>
<li>看到“团队绩效差” =====&gt; 选项中找“识别根本原因”</li>
<li>看到“会议有问题” =====&gt; 选项中找“团队章程”或者“基本规则”</li>
<li>看到“内部资源不足” =====&gt; 选项中找“招募”</li>
<li>看到“团队成员角色责任” =====&gt; 选项中找“责任分配矩阵”、“RACI”</li>
<li>看到“资源详细描述”、“技能、等级、证书” =====&gt; 选项中找“资源分解结构”</li>
<li>看到“早期”、“详细信息不足”、“粗略的” =====&gt; 选项中找“类比估算”</li>
<li>看到“争吵”、“对立” =====&gt; 选项中找“震荡阶段”</li>
<li>看到“开始建立信任” =====&gt; 选项中找“规范阶段”</li>
<li>看到“像一个组织有序的单位” =====&gt; 选项中找“成熟阶段”</li>
</ol>
<h2> 第十章 项目沟通管理</h2>
<ol>
<li>看到“虚拟团队” =====&gt; 选项中找“沟通管理计划”或“规划沟通”</li>
<li>看到“实时”、“面对面” =====&gt; 选项中找“互动沟通”</li>
<li>看到“特定群体” =====&gt; 选项中找“推式沟通”</li>
<li>看到“大量信息”、“受众广泛” =====&gt; 选项中找“拉式沟通”</li>
</ol>
<h2> 第十一章 项目风险管理</h2>
<ol>
<li>看到“使用全新技术或方法”、“高优先级的机会”、“最有能力的资源” =====&gt; 选项中找“开拓”</li>
<li>看到“增加资源” =====&gt; 选项中找“提高”</li>
<li>看到“建立应急储备”、“预留时间、资金、资源”、“定期审查” =====&gt; 选项中找“接受”</li>
<li>看到“消除威胁的原因”、“延长进度计划”、“改变项目策略”、“缩小范围”、“拉回到临界值” =====&gt; 选项中找“规避”</li>
<li>看到“外包”、“买保险”、“签订协议”、“成立合资企业” =====&gt; 选项中找“转移”</li>
<li>看到“更多测试”、“加入冗余部件”、“备用” =====&gt; 选项中找“减轻”</li>
<li>看到“最大潜在影响” =====&gt; 选项中找“敏感性分析”</li>
<li>看到“给风险排序”、“识别主要风险” =====&gt; 选项中找“风险定性分析”</li>
<li>看到“风险”“不确定性” =====&gt; 选项中找“三点估算”</li>
<li>看到“风险管理过程的有效性”、“风险应对措施的有效性” =====&gt; 选项中找“风险审计”</li>
<li>看到“如何实施风险管理活动” =====&gt; 选项中找“风险管理计划”</li>
<li>看到“优先级排序” =====&gt; 选项中找“概率和影响矩阵”</li>
<li>看到“优势”、“劣势” =====&gt; 选项中找“SWOT 分析”</li>
<li>看到“协助形成想法” =====&gt; 选项中找“提示清单”</li>
<li>看到“两个以上参数分类” =====&gt; 选项中找“层级图”</li>
<li>看到“三角分布”、“正态分布”、“贝塔分布”、“离散分布” =====&gt; 选项中找“不确定性表现方式”</li>
<li>看到“龙卷风图” =====&gt; 选项中找“敏感性分析”</li>
<li>看到“最优路径” =====&gt; 选项中找“决策树分析”</li>
</ol>
<h2> 第十二章 项目采购管理</h2>
<ol>
<li>看到“范围清楚”、“买方风险最小” =====&gt; 选项中找“固定价合同”</li>
<li>看到“一定灵活性”、“绩效偏离”、“财务奖励”、“价格上限” =====&gt; 选项中找“总价加激励费用合同”</li>
<li>看到“跨越时间长”、“通货膨胀” =====&gt; 选项中找“总价加经济价格调整合同”</li>
<li>看到“人工费率”、“材料费率”、“无法快速定义 SOW” =====&gt; 选项中找“工料合同(T&amp;M)”</li>
<li>看到考合同类型的题目中出现“利润” =====&gt; 选项中找“成本补偿合同”</li>
<li>看到“激励费用”、“比例分担” =====&gt; 选项中找“成本加激励费用合同”</li>
<li>看到“主观判断”、“奖励费用” =====&gt; 选项中找“成本加奖励费用合同”</li>
<li>看到“无特别优待”、“一致的理解” =====&gt; 选项中找“投标人会议”</li>
<li>看到“怀疑潜在卖方报价” =====&gt; 选项中找“独立成本估算”</li>
<li>看到“复杂采购” =====&gt; 选项中找“建议书评价技术”</li>
</ol>
<h2> 第十三章 项目相关方管理</h2>
<ol>
<li>看到“职权级别”、“关心程度” =====&gt; 选项中找“权力利益方格”</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>第一章：信息化和信息系统</title>
      <link>https://vxhly.github.io/soft-test/knowledge/Information-system.html</link>
      <guid>https://vxhly.github.io/soft-test/knowledge/Information-system.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第一章：信息化和信息系统</source>
      <description>前言 记录信息化和信息系统章节的相关知识、频繁考点。</description>
      <category>信息系统项目管理师</category>
      <pubDate>Sat, 02 Jul 2022 14:22:42 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录信息化和信息系统章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 信息系统与信息化</h2>
<p>香农指出信息是能够用来消除不确定的东西</p>
<ul>
<li>信息：信息是系统有序程度的度量。</li>
<li>系统：系统是指由多个元素有机结合在一起, 执行特定的功能以达到特定目的的集合体。</li>
<li>信息系统：信息系统就是输入数据, 通过加工处理, 产生信息的系统。是由计算机硬件、网络和通信设备、计算机软件、信息资源、信息用户和规章制度组成的以处理信息流为目的的人机一体化系统。主要有五个基本功能, 即对信息的输入、存储、处理、输出和控制。</li>
</ul>
<h3> 信息的质量属性</h3>
<ul>
<li>精确性</li>
<li>完整性</li>
<li>可靠性</li>
<li>及时性</li>
<li>经济性</li>
<li>可验证性</li>
<li>安全性</li>
<li>依附性</li>
<li>传递性</li>
<li>及时性</li>
<li>动态性</li>
</ul>
<h3> 信息的传输模型</h3>
<p>信息只有流动起来才能体现其价值, 信息的传输技术是信息技术的核心。</p>
<p>当噪声携带的信息大到一定程度的时候, 在信道中传输的信息可以被噪声掩盖导致传输失败。</p>
<h3> 信息化</h3>
<h4> 信息化从 “小” 到 “大” 的层次</h4>
<ul>
<li>产品信息化</li>
<li>企业信息化</li>
<li>产业信息化</li>
<li>国民经济信息化</li>
<li>社会生活信息化</li>
</ul>
<p>信息化的主体是全体成员, 包括政府、企业、事业、团体和个人。</p>
<h4> 两网一站</h4>
<ul>
<li>两网：政府内网和政府外网</li>
<li>一站：政府门户网站</li>
</ul>
<h4> 国家信息化体系六要素</h4>
<ul>
<li>信息资源（核心任务）</li>
<li>信息网络（基础设施）</li>
<li>信息技术应用（龙头）</li>
<li>信息技术和产业（物质基础）</li>
<li>信息化人才（成功之本）</li>
<li>信息化政策法规和标准规范（保障）</li>
</ul>
<h2> 大型信息系统的特点</h2>
<ul>
<li>规模庞大 =&gt; 包含子系统甚多</li>
<li>跨地域性 =&gt; 分布广阔, 部署不集中</li>
<li>网络结构复杂 =&gt; 多级网络机构、跨域多个安全域、网络关系复杂、接口众多</li>
<li>业务种类多 =&gt; 种类多、处理逻辑复杂、业务之间关联关系复杂</li>
<li>数据量大 =&gt; 信息量大、内容多且多样</li>
<li>用户多 =&gt; 使用者多、角色多, 系统访操作多</li>
</ul>
<h2> 信息系统生命周期</h2>
<p>软件的生命周期包括：</p>
<ul>
<li>可行性分析与项目开发计划</li>
<li>需求分析</li>
<li>概要设计</li>
<li>详细设计</li>
<li>编码</li>
<li>测试</li>
<li>运维等阶段</li>
</ul>
<p>信息系统的生命周期：</p>
<ul>
<li>【系统规划阶段】（可行性分析与项目开发计划）=&gt; 立项阶段 ==&gt; 输出文书：可行性研究报告、系统设计任务书
<ul>
<li>对组织的环境、目标及现行系统的状况进行初步调查, 根据组织目标和发展战略, 确定信息系统的发展战略</li>
</ul>
</li>
<li>【系统分析阶段】（需求分析）=&gt; 开发阶段 ==&gt; 输出文书：系统说明书
<ul>
<li>根据系统设计任务书所确定的范围, 对现行系统进行详细调查, 描述现行系统的业务流程, 指出现行系统的局限性和不足之处, 提出新系统的逻辑模型</li>
</ul>
</li>
<li>【系统设计阶段】（概要设计、详细设计）=&gt; 开发阶段 ==&gt; 输出文书：系统设计说明书
<ul>
<li>根据系统说明书规定的功能需求, 考虑实际条件, 具体设计实现逻辑模型的技术方案, 也技术设计新系统的物理模型</li>
</ul>
</li>
<li>【系统实施阶段】（编码、测试）=&gt; 开发阶段 ==&gt; 输出文书：实施进展报告、系统测试分析报告
<ul>
<li>是将设计的系统付诸实施的阶段, 包括计算机等设备的购置、安装和调试、程序的编写和调试、人员培训、数据文件转换、系统调试与转换等</li>
</ul>
</li>
<li>【系统运行和维护阶段】（运维）=&gt; 运维及消亡阶段
<ul>
<li>记录系统运行的情况, 根据一定的规则对系统进行必要的修改, 评价系统的工作质量和经济效益</li>
</ul>
</li>
</ul>
<h2> 信息系统的开发方法</h2>
<h3> 结构化方法</h3>
<p>自顶向下、逐步求精和模块化设计。</p>
<p>主要特点：</p>
<p>（1）开发目标清晰化
（2）开发工作阶段化
（3）开发文档规范化
（4）设计方法结构化</p>
<p>不足和局限性：</p>
<p>（1）开发周期长
（2）难以适应需求变化
（3）很少考虑数据结构</p>
<h3> 面向对象方法</h3>
<p>使用结构化方法进行自顶向下的整体划分, 自底向上使用面向对象方法进行开发。</p>
<p>面向对象的方法构建在类和对象之上, 通过建模技术将相关对象按照业务进行分组, 形成构件。</p>
<ul>
<li>【消息】体现对象间的交互, 通过它向目标对象发出操作请求</li>
<li>【继承】</li>
<li>【多态】</li>
<li>【接口】</li>
</ul>
<p>主要特点：</p>
<p>（1）封装性
（2）抽象性
（3）继承性
（4）动态链接性</p>
<p>不足和局限性：</p>
<p>（1）在大型项目的开发上具有一定的局限性
（2）不能涉足系统分析前的开发环节</p>
<h3> 原型化方法</h3>
<p>利用系统开发工具, 快速建立一个系统模型展示给用户</p>
<p>主要特点：</p>
<ul>
<li>使系统开发的周期缩短、成本和风险降低、速度加快</li>
<li>以用户为中心来开发系统, 用户参与度大大提高, 增加用户的满意度, 提高系统开发的成功率</li>
<li>由于用户参与了系统开发的全过程, 对系统的功能和结构容易理解和接受, 有利于系统的移交, 有利于系统的运行与维护</li>
</ul>
<p>不足和局限性：</p>
<ul>
<li>开发的环境要求高</li>
<li>管理水平要求高</li>
</ul>
<h3> 面向服务方法</h3>
<p>使信息系统快速响应需求与环境变化, 提高系统可复用性、信息资源共享和系统之间的互操作性, 成为影响信息化建设效率的关键问题。</p>
<p>主要特点：</p>
<p>（1）重用性
（2）注重效率
（3）松耦合
（4）职责划分</p>
<p>不足和局限性：</p>
<p>（1）代码冗余
（2）成本高</p>
<h2> 常规信息系统集成技术</h2>
<h3> OSI 七层模型（开放系统互连参考模型）</h3>
<ul>
<li>物理层 =&gt; 协议：RJ-45、V.35、RS232、FDDI
<ul>
<li>包括物理联网媒介</li>
</ul>
</li>
<li>数据链路层 =&gt; 协议：IEEE 802.3/.2、HDLC、PPP、ATM
<ul>
<li>控制网络层与物理层之间的联系</li>
</ul>
</li>
<li>网络层 =&gt; 协议：IP、ICMP、IGMP、ARP、IPX
<ul>
<li>将网络地址翻译成队员的物理地址</li>
</ul>
</li>
<li>传输层 =&gt; 协议：TCP、UDP、SPX
<ul>
<li>负责确保数据可靠、顺序、无错的从 A 点传输到 B 点</li>
</ul>
</li>
<li>会话层 =&gt; 协议：SQL、NFS、RPC
<ul>
<li>负责在网络中两节点之间建立和维持通信, 以及提供交互会话的管理功能</li>
</ul>
</li>
<li>表示层 =&gt; 协议：JPEG、ASCLL、GIF、DES、MPEG
<ul>
<li>如同应用程序和网络之间的翻译官</li>
</ul>
</li>
<li>应用层 =&gt; 协议：HTTP、Telnet、FTP、SMTP
<ul>
<li>负责对软件提供接口以便程序能够使用网络服务</li>
</ul>
</li>
</ul>
<h3> TCP/IP 四层模型</h3>
<ul>
<li>应用层（应用层、表示层、会话层）</li>
<li>传输层（传输层）</li>
<li>网络层（网络层）</li>
<li>网络接口层（物理层、数据链路层）</li>
</ul>
<h3> 协议</h3>
<ul>
<li>TCP =&gt; 可靠的、面向连接的</li>
<li>UDP =&gt; 不可靠的、无连接的</li>
<li>FTP、HTTP、Telnet、SMTP =&gt; 建立在 TCP 基础之上</li>
<li>TFTP、DNS、DHCP、SNMP =&gt; 建立在 UDP 基础之上</li>
</ul>
<h3> 网络设备</h3>
<table>
<thead>
<tr>
<th>互联设备</th>
<th>工作层次</th>
</tr>
</thead>
<tbody>
<tr>
<td>中继器</td>
<td>物理层</td>
</tr>
<tr>
<td>网桥</td>
<td>数据链路层</td>
</tr>
<tr>
<td>路由器</td>
<td>网络层</td>
</tr>
<tr>
<td>网关</td>
<td>高层（第 4 ～ 7 层）</td>
</tr>
<tr>
<td>集线器</td>
<td>物理层</td>
</tr>
<tr>
<td>二层交换机</td>
<td>数据链路层</td>
</tr>
<tr>
<td>三层交换机</td>
<td>网络层</td>
</tr>
<tr>
<td>多层交换机</td>
<td>高层（第 4 ～ 7 层）</td>
</tr>
</tbody>
</table>
<h3> 网络存储技术</h3>
<ul>
<li>DAS（直接附加存储）=&gt; 直接与主机系统相连, 很难扩展、传递距离、连接数量、传输速率等方面都受到限制</li>
<li>NAS（网络附加存储）=&gt; 直接与网络介质相连, 需要通过数据网关来访问 NAS, 响应速度快、数据传输速率高, 即插即用</li>
<li>SAN（存储区域网络）=&gt; 管理方便、扩展容易、具有无限的可扩展能力</li>
</ul>
<h3> 网络接入技术</h3>
<h3> 有线接入方式</h3>
<p>（1）PSTN
（2）ISDN
（3）ADSL
（4）FTTx+LAN
（5）HFC</p>
<h4> 无线接入方式</h4>
<p>（1）GPRS
（2）Wifi
（3）3G、4G、5G</p>
<h3> 网络规划与设计</h3>
<h4> 网络设计工作</h4>
<ul>
<li>网络拓扑结构设计</li>
<li>主干网络（核心层）设计</li>
<li>汇聚层和接入层设计</li>
<li>广域网连接与远程访问设计</li>
<li>无线网络设计</li>
<li>网络安全设计</li>
<li>设备选型</li>
</ul>
<h4> 信息安全的基本要素</h4>
<ul>
<li>机密性：确保信息不暴露给未授权的实体或进程</li>
<li>完整性：只有得到允许的人才能修改数据, 并且能够判别出数据是否已被篡改</li>
<li>可用性：得到授权的实体在需要时可访问数据, 即攻击者不能占用所有的资源而阻碍授权者的工作</li>
<li>可控性：可以控制授权范围内的信息流向以及行为方式</li>
<li>可审查性：对出现的网络安全问题提供调查的依据和手段</li>
</ul>
<h3> 数据库管理系统</h3>
<ul>
<li>Oracle =&gt; 关系型数据库</li>
<li>MySQL =&gt; 关系型数据库</li>
<li>SQLServer =&gt; 关系型数据库</li>
<li>mongoDB =&gt; 非关系型数据库</li>
</ul>
<h3> 数据仓库</h3>
<p>数据仓库是一个面向主题的、集成的、非易失的、且随时间变化的数据集合, 用于支持管理决策。</p>
<p>体系结构的 4 个层次</p>
<p>（1）数据源
（2）数据的存储与管理
（3）OLAP 服务器（联机分析处理）
（4）前端工具</p>
<h3> 中间件技术</h3>
<p>中间件的分类：</p>
<ul>
<li>底层型中间件 =&gt; JVM（Java 虚拟机）、CLR（公共语言运行库）、ACE（自适应通信环境）、JDBC（数据库连接）、ODBC（开放数据库互连）</li>
<li>通用型中间件 =&gt; CORBA（公共对象请求代理体系结构）、J2EE、MOM（面向消息的中间件）、COM</li>
<li>集成型中间件 =&gt; WorkFlow、EAI（企业应用集成）</li>
</ul>
<p>为了完成不同层次的集成, 可以采用的技术、产品：</p>
<ul>
<li>为了完成系统底层传输层的集成, 可以采用 CORBA（公共对象请求代理体系结构）技术</li>
<li>为了完成不同系统的信息传递, 可以采用消息中间件产品</li>
<li>为了完成不同硬件和操作系统的集成, 可以采用 J2EE 中间件产品</li>
</ul>
<h3> 高可用性和高可靠性的规划与设计</h3>
<p>常见的可用性战术：</p>
<ul>
<li>错误检测：用于错误检测的战术包括命令/响应、心跳和异常</li>
<li>错误恢复：用于错误恢复的战术包括表决、主动冗余、被动冗余</li>
<li>错误预防：用于错误预防的战术包括出错的组件从服务中删除、引入进程监视器</li>
</ul>
<h2> CMMI 模型</h2>
<h3> 阶段式模型（过程域的阶段式分组）</h3>
<table>
<thead>
<tr>
<th>成熟度等级</th>
<th>过程域</th>
</tr>
</thead>
<tbody>
<tr>
<td>可管理级</td>
<td>需求管理、项目计划、配置管理、项目监督与控制、供应商和他管理、质量和分析、过程和产品质量保证</td>
</tr>
<tr>
<td>已定义级</td>
<td>需求开发、技术解决方案、产品集成、验证、确认、组织 级过程焦点、组织级过程定义、组织级培训、集成项目管理、风险管理、集成化的团队、决策分析和解决方案、组织级集成环境</td>
</tr>
<tr>
<td>量化管理级</td>
<td>组织级过程性能、定量项目管理</td>
</tr>
<tr>
<td>优化管理级</td>
<td>组织级改革与实施、因果分析和解决方案</td>
</tr>
</tbody>
</table>
<h3> 连续型模型（连续式模型的过程域分组）</h3>
<table>
<thead>
<tr>
<th>连续式分组</th>
<th>过程域</th>
</tr>
</thead>
<tbody>
<tr>
<td>过程管理</td>
<td>组织级过程焦点、组织级过程定义、组织级培训、组织级过程性能、组织级改革与实施</td>
</tr>
<tr>
<td>项目管理</td>
<td>项目计划、项目监督与控制、供应商和他管理、集成项目管理、风险管理、集成化的团队、定量项目管理</td>
</tr>
<tr>
<td>工程</td>
<td>需求管理、需求开发、技术解决方案、产品集成、验证、确认</td>
</tr>
<tr>
<td>支持</td>
<td>配置管理、质量和分析、过程和产品质量保证、决策分析和解决方案、组织级集成环境、因果丰兰息和解决方案</td>
</tr>
</tbody>
</table>
<h2> 软件工程</h2>
<h3> 系统规划</h3>
<ul>
<li>要从用户的现状出发</li>
<li>从技术的变革为导向</li>
<li>从用户的需求为基础</li>
<li>依据企业的战略目标</li>
</ul>
<h3> 软件需求</h3>
<ul>
<li>业务需求：反映企业或客户对系统高层次的目标要求</li>
<li>用户需求：描述的是用户的具体目标, 或用户要求系统必须能完成的任务</li>
<li>系统需求：从系统的角度来说明软件的需求, 包括功能需求、非功能需求和设计约束等</li>
</ul>
<h3> 需求获取</h3>
<p>需求获取是一个确定和理解不同的项目干系人的需求和约束过程。常见的需求获取方法包括用户访谈、问卷调查、采样、情节串联板、联合需求计划等</p>
<h3> 需求分析</h3>
<p>质量功能部署（QFD）将软件需求分为三类：</p>
<ul>
<li>常规需求：用户认为系统应该做到的功能或性能</li>
<li>期望需求：用户想当然认为系统应具备的功能或性能, 但并不能正确描述自己想要得到的这些功能或性能需求</li>
<li>意外需求：用户要求范围外的功能或性能</li>
</ul>
<p>一个好的需求应该具有无二义性、完整性、一致性、可测试性、确定性、可跟踪性、正确性、必要性等特性</p>
<p>需求开发活动的产物：软件需求规格说明书（SRS）=&gt; 使用国家标准 GB/T 8567-2006, 其中说明书内容包括：</p>
<ol>
<li>范围</li>
<li>引用文件</li>
<li>需求分析</li>
<li>合格性规定</li>
<li>需求可追踪性</li>
<li>尚未解决的 问题</li>
<li>注解</li>
<li>附录</li>
</ol>
<p>需求验证也称为需求确认, 在实际工作中, 一般通过需求评审和需求测试工作来需求进行验证。需求评审就是对 SRS 进行技术评审。</p>
<h3> UML 统一建模语言</h3>
<p>使用实体联系图（E-R 图）表示数据模型, 用数据流图（DFD）表示功能模型, 用状态转换图（STD）表示行为模型</p>
<ul>
<li>五种系统视图</li>
</ul>
<p>（1）用例视图
（2）逻辑视图
（3）实现视图
（4）过程视图
（5）部署视图</p>
<ul>
<li>静态图和动态图</li>
</ul>
<p>静态图：用例图、类图、对象图、组件图、配置图
动态图：序列图、状态图、协作图、活动图</p>
<ul>
<li>用例图：描述系统的功能, 由系统、用例和角色三种元素组成</li>
<li>类图：表示系统中的类以及类与类之间的联系, 描述系统的静态结构, 用于逻辑视图中</li>
<li>对象图：描述一组对象已经它们之间的联系</li>
<li>状态图：描述对象、子系统、系统的生命周期, 描述一个特定对象的所有可能状态以及由于各种事情的发生而引起的状态之间的转移, 由状态、转移、事件和活动组成</li>
<li>序列图：也称顺序图, 是一种叫交互图, 由一组对象或参与者以及它们自家可能发生的消息构成</li>
<li>协作图：描述协作对象之间的交互和连接</li>
<li>活动图：显示动作以及结果, 描述操作实现中所完成的工作以及用例实例或对象中的活动</li>
<li>组件图：用来反映代码的物理结构</li>
</ul>
<p>UML 用例关系</p>
<ul>
<li>关联关系 =&gt; 执行者与用例之间的管理学, 又称通信关系</li>
<li>泛化关系 =&gt; 执行者之间只有一种关系</li>
<li>包含关系 =&gt; 多个用例具有一部分相同的行为, 将这部分相同的行为抽取出来与原来的用例形成一个包含关系</li>
<li>扩展关系 =&gt; 一个用例在执行时可能会使用到一个新的用例</li>
</ul>
<h3> 面向对象分析（OOA）、面向对象设计（OOD）</h3>
<p>OOA（面向对象分析）的任务是“做什么”, OOA（面向对象设计）的任务是“怎么做”</p>
<p>面向对象分析阶段的核心工作是建立系统的用例模型与分析模型</p>
<h3> 用例的关系</h3>
<ul>
<li>包含关系 =&gt; 可以从两个或者两个以上的用例提取公共行为</li>
<li>扩展关系 =&gt; 根据情况可能发生多种分支</li>
<li>泛化关系 =&gt; 可以将它们的共性抽象成为父用例</li>
</ul>
<h3> 类的关系</h3>
<ul>
<li>关联关系 =&gt; 关联不同类的对象之间的结构关系, 关联体现的对象实例之间的关系, 而不是表示两个类之间的关系</li>
<li>依赖关系 =&gt; 其中一个类的变化会引起另一个类的变化</li>
<li>泛化关系 =&gt; 泛化关系描述一般事物与该事物中的特殊种类之间的关系, 也就是父类与子类之间的关系</li>
<li>共享聚集 (聚合关系) =&gt; 表示类之间的整体与部分的关系</li>
<li>组合聚集 (组合关系) =&gt; 表示类之间的整体与部分的关系</li>
<li>实现关系 =&gt; 实现关系将说明和实现联系起来</li>
</ul>
<h2> 软件架构</h2>
<p>软件架构不仅指定了系统的组织结构和拓扑结构, 并且显示系统需求和构件之间的对应关系, 提供一些设计决策的基本原理</p>
<p>软件架构设计的核心问题：是能否达到架构级的软件复用</p>
<p>解决好软件的复用、质量和维护问题, 是研究软件架构的根本目的</p>
<h3> 软件架构风格</h3>
<ul>
<li>数据流风格：包括批处理序列和管道/过滤器两种风格</li>
<li>调用/返回风格：包括主程序/子程序、数据抽象和面向对象, 以及层次结构</li>
<li>独立构件风格：包括进程通信和事件驱动的系统</li>
<li>虚拟机风格：包括解释器和基于规则的系统</li>
<li>仓库风格：数据库系统、黑板系统和超文本系统</li>
</ul>
<h2> 软件设计</h2>
<h3> 结构化设计（SD）</h3>
<p>是一个自顶向下、逐步求精和模块化的过程, 分为概要设计和详细设计的两个阶段。</p>
<p>遵循的基本原则：高内聚、低耦合, 模块间低耦合, 模块内高内聚</p>
<h3> 面向对象设计（OOD）</h3>
<p>包含了抽象、封装和可扩展性, 其中可扩展性主要通过继承和朵态实现</p>
<h2> 软件测试</h2>
<h3> 静态测试</h3>
<p>指被测试程序不在机器上运行, 而采用人工检测和计算机辅助静态分析的手段对程序进行检测。一般采用桌前检查、代码走查和代码审查</p>
<h3> 动态测试</h3>
<h4> 白盒测试</h4>
<p>也称为结构测试, 主要用于软件的单元测试, 它的主要思想是, 将程序看作一个透明的白盒, 测试人员完全清楚程序的结构和处理算法。</p>
<h4> 黑盒测试</h4>
<p>也称为功能测试, 主要用于集成测试、确认测试和系统测试, 它的主要思想是,将程序看作一个不透明的黑盒, 测试人员完全不考虑（或者不了解）程序的内部结构和处理算法</p>
<h2> 软件测试分类</h2>
<p>（1）单元测试 =&gt; 测试依据软件详细设计说明书
（2）集成测试 =&gt; 测试依据软件概要设计说明书
（3）确认测试 =&gt; 主要用于检测软件的功能、性能、和其他特性是否与用户需求一致
（1）内部确认测试
（2）Alpha 测试和 Beta 测试
（3）验收测试
（4）系统测试
（5）配置项测试
（6）回归测试</p>
<h2> 软件集成技术</h2>
<ol>
<li>表示集成：也称为界面集成, 是黑盒集成, 无须了解程序与数据库的内部构造</li>
<li>数据集成：是白盒集成</li>
<li>控制集成</li>
<li>业务流程集成：也称为过程集成</li>
<li>企业之间的应用集成</li>
</ol>
<p>控制集成与表示集成、数据集成相比, 灵活性更高
表示集成和数据集成适用的环境下, 都适用于控制集成</p>
<h2> 物联网</h2>
<h3> 关键技术</h3>
<ul>
<li>
<p>传感器技术</p>
<p>RFID（射频识别）=&gt; 可通过无线电信号识别特点目标并读写相关数据, 而无需识别系统与特定目标之间建立机械或光学接触, 具有远距离读取、高存储容量、成本高、可同时被读取、难复制、可工作于各种恶劣环境等特点</p>
</li>
<li>
<p>嵌入式技术</p>
<p>综合计算机软硬件、传感器技术、集成电路技术、电子应用技术为一体的复杂技术</p>
</li>
</ul>
<h3> 物联网架构</h3>
<ul>
<li>应用层 =&gt; 物联网发展的根本目标</li>
<li>网络层 =&gt; 包括互联网、广电网、网络管理系统和云计算平台等组成, 是整个物联网的中枢</li>
<li>感知层 =&gt; 由各种传感器构成, 是物联网识别物体、采集信息的来源</li>
</ul>
<h2> 云计算服务</h2>
<ul>
<li>IaaS（基础设施即服务）=&gt; 向用户提供计算机能力、存储空间等基础设施方面的服务</li>
<li>PaaS（平台即服务）=&gt; 向用户提供虚拟的操作系统、数据库管理系统、Web 应用等平台服务</li>
<li>SaaS（软件即服务）=&gt; 向用户提供软件（如 CRM、办公软件等）、组件、工作流等虚拟化软件服务, 使软件提供商从软件产品的生产者转变层服务的运营者</li>
</ul>
<h2> 大数据的特征</h2>
<p>（1）大量
（2）多样
（3）价值
（4）高速
（5）真实性</p>
<p>大数据从数据源经过分析挖掘到最终获得价值, 包括 5 个环节：数据准备、数据存储与管理、计算处理、数据分析和知识展现。</p>
<h2> 移动互联网特点</h2>
<ul>
<li>终端移动性</li>
<li>业务使用的私密性</li>
<li>终端和网络的局限性</li>
<li>业务与终端、网络的强关联性</li>
</ul>
<h2> 信息安全</h2>
<h3> 信息系统安全</h3>
<ul>
<li>设备安全
<ul>
<li>设备的稳定性 =&gt; 设备在一定时间内不出故障的概率</li>
<li>设备的可靠性 =&gt; 设备能在一定时间内正常执行任务的概率</li>
<li>设备的可用性 =&gt; 设备随时可以正常使用的概率</li>
</ul>
</li>
<li>数据安全 =&gt; 静态安全
<ul>
<li>秘密性</li>
<li>可用性</li>
<li>完整性</li>
</ul>
</li>
<li>内容安全 =&gt; 包括信息内容保密、信息隐私保护等</li>
<li>行为安全 =&gt; 动态安全</li>
</ul>
<h3> 信息安全保护等级</h3>
<ul>
<li>第一级：会对公民、法人和其他组织的合法权益造成损害, 但不损害国家安全、社会秩序和公共利益</li>
<li>第二级：会对公民、法人和其他组织的合法权益产生严重损害, 或者对社会秩序和公共利益造成损害, 但不损害国家安全</li>
<li>第三级：会对社会秩序和公共利益造成严重损害, 或者对国家安全造成损害</li>
<li>第四级：会对社会秩序和公共利益造成特别严重损害, 或者对国家安全造成严重损害</li>
<li>第五级：会对国家安全造成特别严重损害</li>
</ul>
<h3> 计算机系统安全保护能力等级</h3>
<ul>
<li>第一级：用户自主保护级</li>
<li>第二级：系统审计保护级</li>
<li>第三级：安全标记保护级</li>
<li>第四级：结构化保护级</li>
<li>第五级：访问验证保护级</li>
</ul>
<h3> 信息加密</h3>
<h4> 对称加密技术</h4>
<p>加密和解密使用相同的密钥</p>
<p>典型算法：数据加密标准（DES）、国际数据加密算法（IDEA）、数据加密标准算法（AES）</p>
<h4> 非对称加密</h4>
<p>加密用“公钥”, 解密用“私钥”</p>
<p>典型算法：RSA、ECC</p>
<h4> Hash 函数</h4>
<p>Hash 函数可提供保密性、豹纹认证以及数字签名功能</p>
<h4> 数字签名</h4>
<p>是证明当事者身份和数据真实性的一种信息。它采用非对称加密钥加密技术与数字摘要技术的应用。</p>
<h3> 信息系统安全</h3>
<ul>
<li>计算机设备安全
<ul>
<li>物理安全</li>
<li>设备安全</li>
<li>存储介质安全</li>
<li>可靠性技术</li>
</ul>
</li>
<li>网络安全
<ul>
<li>防火墙
<ul>
<li>阻挡对网络的非法访问和不安全数据的传递, 使本地系统和网络免于收到许多网络安全威胁</li>
</ul>
</li>
<li>入侵检测系统（IDS）
<ul>
<li>注重对网络安全状况的监管, 通过监视网络或系统资源, 寻找违反安全策略的行为或攻击迹象, 并发出报警</li>
</ul>
</li>
<li>入侵防护系统（IPS）
<ul>
<li>倾向提供主动防护, 注重对入侵行为的控制</li>
</ul>
</li>
<li>虚拟专用网络（VPN）</li>
<li>安全扫描</li>
<li>网络蜜罐技术
<ul>
<li>是一种制定防御技术, 是入侵检测技术的一个重要发展方向</li>
</ul>
</li>
</ul>
</li>
<li>操作系统安全
<ul>
<li>切断（可用性的威胁）</li>
<li>截取（机密性的威胁）</li>
<li>篡改（完整性的攻击）</li>
<li>伪造（合法性的威胁）</li>
</ul>
</li>
<li>数据库安全</li>
<li>应用系统安全
<ul>
<li>Web 访问控技术</li>
<li>单点登录（SSD）技术</li>
<li>网页防篡改技术</li>
<li>Web 内容安全</li>
</ul>
</li>
</ul>
<h2> 电子政务</h2>
<ul>
<li>政府对政务（G2G）</li>
<li>政府对企业（G2B）</li>
<li>政府对公众（G2C）</li>
<li>政府对公务员（G2E）</li>
</ul>
<h2> 电子商务</h2>
<ul>
<li>企业与企业之间的电子商务（B2B）=&gt; 阿里巴巴（1688）</li>
<li>企业与消费者之间的电子上礼物（B2C）=&gt; 京东、当当、苏宁</li>
<li>消费者与消费者之间的电子商务（C2C）=&gt; 淘宝、易趣、闲鱼</li>
<li>线上购买线下的商品和服务（O2O）=&gt; 淘票票、美团、饿了么</li>
</ul>
<h2> 企业系统规划（BSP）</h2>
<p>（1）准备工作
（2）定义企业过程
（3）识别定义数据类
（4）分析现有系统
（5）确定管理部门对系统的要求
（6）制定建议书和开发计划
（7）成功报告</p>
<h2> 信息系统的规划工具</h2>
<p>信息系统规划（ISP）是从企业战略出发, 构建企业基本的信息系统架构, 利用信息系统管理企业行为, 辅助企业进行决策。</p>
<ul>
<li>制定计划时 =&gt; PERT 图和甘特图</li>
<li>访谈 =&gt; 调查表和调查提纲</li>
<li>确定需求 =&gt; 会谈和正式会议</li>
<li>企业组织结构与企业过程联系 =&gt; 过程/组织（P/O）矩阵</li>
<li>采用实体法归纳出数据类 =&gt; 资源/数据（R/D）矩阵</li>
<li>分析过程的输入数据类和输出数据类, 归纳出系统的数据类 =&gt; 输入-处理-输出（IPO）矩阵</li>
<li>以企业过程为行, 以数据为列 =&gt; CU 矩阵</li>
</ul>
<h2> 智慧城市建设参考模型</h2>
<p>（1）物联感知层
（2）通信感知层
（3）计算与存储层
（4）数据及服务支撑层
（5）智慧应用层</p>
<h2> “互联网+”</h2>
<p>“互联网+”简单的说就是“互联网+传统行业”</p>
<p>“互联网+”的六大特征：</p>
<p>（1）跨界融合
（2）创新驱动
（3）重塑结构
（4）尊重人性
（5）开发生态
（6）连接一切</p>
<h2> 区块链</h2>
<p>区块链是分布式数据存储、点对点传输、共识机制、加密算法等计算机技术的新型应用模式。</p>
<p>区块链的特征：</p>
<p>（1）去中心化
（2）开放性
（3）自治性
（4）信息不可篡改性
（5）匿名性</p>
<h2> 元宇宙</h2>
<p>元宇宙是一种沉浸式体验, 可以完成很高级的感知和交互, 但其本质仍然是构建在程序之上的虚拟世界</p>
<p>核心技术：</p>
<p>（1）物联网技术
（2）区块链技术
（3）交互技术
（4）电子游戏技术
（5）人工智能技术
（6）网络及运算技术</p>
]]></content:encoded>
    </item>
    <item>
      <title>第三章：项目立项管理</title>
      <link>https://vxhly.github.io/soft-test/knowledge/project-approval.html</link>
      <guid>https://vxhly.github.io/soft-test/knowledge/project-approval.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第三章：项目立项管理</source>
      <description>前言 记录项目立项管理章节的相关知识、频繁考点。</description>
      <category>信息系统项目管理师</category>
      <pubDate>Wed, 13 Jul 2022 20:22:32 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目立项管理章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 项目立项</h2>
<p>项目立项一般包括提交项目建议书、项目可行性研究、项目招标与投标等内容。</p>
<h3> 项目建议书</h3>
<p>核心内容包括：</p>
<p>（1）项目的必要性
（2）项目的市场预测
（3）产品方案或服务的市场预测
（4）项目建设必需的条件</p>
<h3> 项目可行性研究报告</h3>
<p>可行性研究的内容：</p>
<ul>
<li>投资必要性</li>
<li>技术可行性分析 =&gt; 需要考虑的因素
<ul>
<li>进行项目开发的风险</li>
<li>人力资源的有效性</li>
<li>技术能力的可能性</li>
<li>物质（产品的可用性）</li>
</ul>
</li>
<li>财务可行性</li>
<li>组织可行性</li>
<li>经济可行性 =&gt; 支出分析、收益分析、投资回报分析以及敏感性分析, 包含对项目的的社会效益分析</li>
<li>社会可行性</li>
<li>风险因素及对策</li>
</ul>
<p>可行性研究分为初步可行性研究、详细可行性研究、可行性研究报告三个基本阶段, 步骤：</p>
<ol>
<li>确定项目规模和目标</li>
<li>研究正在运行的系统</li>
<li>建立新系统的逻辑模型</li>
<li>导出和评价各种方案</li>
<li>推荐可行性方案</li>
<li>编写可行性研究报告</li>
<li>递交可行性研究报告</li>
</ol>
<h2> 可行性研究</h2>
<p>机会研究、初步可行性研究、详细可行性研究、评估与决策是投资前期四个阶段。其中前三个可以进行合并, 但是详细可行性研究是不可或缺的。可以进行省略的阶段有机会研究、初步可行性研究。</p>
<h3> 初步可行性研究</h3>
<p>初步可行性研究一般是在对市场或者客户情况进行调查后, 对项目进行的初步评估</p>
<h3> 详细可行性研究</h3>
<p>需要对项目在技术、经济、社会、运行环境、法律等方面进行深入的调查研究和分析, 是一项费时、费力的工作, 特别是大型的或比较复杂的项目更是如此</p>
<p>详细可行性研究的基本原则</p>
<p>（1）科学性原则
（2）客观性原则
（3）公正性原则</p>
<p>详细可行性研究的内容</p>
<p>（1）概述
（2）需求确定
（3）现有资源、设施情况分析
（4）设计（初步）技术方案
（5）项目实施进度计划建议
（6）投资估算和资金筹措计划
（7）项目组织、人力资源、技术培训计划
（8）经济和社会效益分析
（9）合作/协作方式</p>
<p>开发总成本一般划分为四大类：研发成本、行政管理费、销售与分销费用、财务费用和折旧, 前三类成本的总和称为经营成本</p>
<h2> 项目评估与论证</h2>
<p>“先论证, 后评估”是现代项目管理的基本原则。</p>
<h3> 项目论证</h3>
<p>项目论证是一个连续的过程, 应该围绕着市场需求、开发技术、财务经济三个方面展开调查和分析, 市场是前提、技术是手段、财务经济是核心</p>
<p>项目论证一般分为机会研究、初步可行性研究和详细可行性研究三个阶段</p>
<p>项目论证步骤</p>
<ol>
<li>明确项目范围和业主目标</li>
<li>收集并分析相关资料</li>
<li>拟定多种可行的能够相互替代的实施方案</li>
<li>多方案分析、比较</li>
<li>选择最优方案进一步详细全面地论证</li>
<li>编制项目论证报告、环境影响报告书和采购方式审批报告</li>
<li>编制资金筹措计划和项目实施进度计划</li>
</ol>
<h3> 项目评估</h3>
<p>输出文件：项目评估报告</p>
<p>项目评估的依据：</p>
<ol>
<li>项目建议书及其批准文件</li>
<li>项目可行性研究报告</li>
<li>报送单位的申请报告及主管部门的初审意见</li>
<li>有关资源、配件、燃料、水、电、交通、通信、资金（包括外汇）等方面的协议文件</li>
<li>必需的其他文件和资料</li>
</ol>
<p>项目评估工作</p>
<ol>
<li>成立评估小组, 进行分工、制定评估 工作计划</li>
<li>开展调查研究, 收集数据资料, 并对可行性研究报告和相关资料进行审查和分析</li>
<li>分析与评估</li>
<li>编写评估报告</li>
<li>讨论、修改报告</li>
<li>专家论证会</li>
<li>评估报告定稿</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>第二章：信息系统项目管理基础</title>
      <link>https://vxhly.github.io/soft-test/knowledge/project-management.html</link>
      <guid>https://vxhly.github.io/soft-test/knowledge/project-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第二章：信息系统项目管理基础</source>
      <description>前言 记录信息系统项目管理基础章节的相关知识、频繁考点。</description>
      <category>信息系统项目管理师</category>
      <pubDate>Tue, 12 Jul 2022 20:00:42 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录信息系统项目管理基础章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 信息系统项目基础</h2>
<h3> 项目的概念</h3>
<p>项目是为提供一项独特产品、服务或成果所做的临时性努力。</p>
<h3> 项目的特点</h3>
<p>（1）临时性（一次性）
（2）独特的产品、服务或成果
（3）逐步完善
（4）资源约束
（5）目的性</p>
<h3> 项目工作的主要目标</h3>
<p>时间、成本、质量、范围</p>
<p>项目经理的责任就是在四个要素之间进行权衡以保证项目成功</p>
<h3> 项目于日常运作的区别</h3>
<table>
<thead>
<tr>
<th>不同点</th>
<th>项目</th>
<th>日常运作</th>
</tr>
</thead>
<tbody>
<tr>
<td>目的</td>
<td>独特的</td>
<td>常规的、普通的</td>
</tr>
<tr>
<td>责任人</td>
<td>项目经理</td>
<td>部门经理</td>
</tr>
<tr>
<td>持续时间</td>
<td>有限的</td>
<td>相对无限的</td>
</tr>
<tr>
<td>持续性</td>
<td>一次性</td>
<td>重复性</td>
</tr>
<tr>
<td>组织结构</td>
<td>项目组织</td>
<td>职能部门</td>
</tr>
<tr>
<td>考核指标</td>
<td>以目标为导向</td>
<td>效率和有效性</td>
</tr>
<tr>
<td>资源需求</td>
<td>多变性</td>
<td>稳定性</td>
</tr>
</tbody>
</table>
<h3> 信息系统项目的特点</h3>
<ul>
<li>目标不明确</li>
<li>需求变化频繁</li>
<li>智力密集型</li>
<li>队伍庞大</li>
<li>设计人员高度专业化</li>
<li>涉及的承包商多</li>
<li>各级承包商分布在个地, 相互联系复杂</li>
<li>系统集成项目中需研制开发大量的软硬件系统</li>
<li>项目生命期通常较短</li>
<li>通常要采用大量的新技术</li>
<li>使用与维护的要求非常复杂</li>
</ul>
<h3> 软技能</h3>
<ul>
<li>有效的沟通：信息交流</li>
<li>影响一个组织：“让事情办成”的能力</li>
<li>领导能力：形成一个前景和战略并组织人员达到它</li>
<li>激励：激励人员达到高水平的生成率并克服变革的阻力</li>
<li>谈判和冲突管理：与其他人谈判或达成协议</li>
<li>问题解决：问题定义和做出决策的结合</li>
</ul>
<h2> 项目的组织结构</h2>
<h3> 职能型组织</h3>
<table>
<thead>
<tr>
<th>项目属性</th>
<th>特征</th>
</tr>
</thead>
<tbody>
<tr>
<td>项目经理权利</td>
<td>很小或没有</td>
</tr>
<tr>
<td>项目经理角色</td>
<td>兼职</td>
</tr>
<tr>
<td>预算控制者</td>
<td>职能部门经理</td>
</tr>
<tr>
<td>项目管理行政人员（文员、资料员等）</td>
<td>兼职</td>
</tr>
</tbody>
</table>
<figure><img src="/assets/zhi-neng-xing.png" alt="职能型组织" tabindex="0" loading="lazy"><figcaption>职能型组织</figcaption></figure>
<h4> 特点</h4>
<ul>
<li>兼职项目经理（联络员）</li>
<li>权力大小：“很小“或者”没有</li>
<li>职业路径清晰、横向联系薄弱</li>
</ul>
<h4> 优点</h4>
<ul>
<li>资源利用率相对较高</li>
<li>成员工作稳定</li>
</ul>
<h4> 缺点</h4>
<ul>
<li>职能型组织管理职能多, 目标多样</li>
<li>部门间沟通、协调难度大</li>
<li>为项目分配的资源不稳定</li>
<li>决策慢</li>
</ul>
<h3> 项目型组织</h3>
<table>
<thead>
<tr>
<th>项目属性</th>
<th>特征</th>
</tr>
</thead>
<tbody>
<tr>
<td>项目经理权利</td>
<td>大到全权</td>
</tr>
<tr>
<td>项目经理角色</td>
<td>全职</td>
</tr>
<tr>
<td>预算控制者</td>
<td>项目经理</td>
</tr>
<tr>
<td>项目管理行政人员（文员、资料员等）</td>
<td>全职</td>
</tr>
</tbody>
</table>
<figure><img src="/assets/xiang-mu-xing.png" alt="项目型组织" tabindex="0" loading="lazy"><figcaption>项目型组织</figcaption></figure>
<h4> 特点</h4>
<ul>
<li>全职项目经理</li>
<li>权力大小：“大”甚至“全部”</li>
<li>项目经理控制度高</li>
<li>重复配置；项目成员无家可归</li>
</ul>
<h4> 优点</h4>
<ul>
<li>结构单一、责任分明, 有利于统一指挥</li>
<li>目标明确单一</li>
<li>沟通简洁、方便</li>
<li>决策快</li>
</ul>
<h4> 缺点</h4>
<ul>
<li>管理成本过高, 如项目的工作量不足则只有配置效率低</li>
<li>项目环境比较封闭, 不利于沟通、技术知识等共享</li>
<li>员工缺乏事业上的连续性和保障（相对而言）</li>
</ul>
<h3> 矩阵型组织</h3>
<table>
<thead>
<tr>
<th>项目属性</th>
<th>弱矩阵</th>
<th>平衡矩阵</th>
<th>强矩阵</th>
</tr>
</thead>
<tbody>
<tr>
<td>项目经理权利</td>
<td>有限</td>
<td>小到中</td>
<td>中到大</td>
</tr>
<tr>
<td>项目经理角色</td>
<td>兼职</td>
<td>全职</td>
<td>全职</td>
</tr>
<tr>
<td>预算控制者</td>
<td>职能部门经理</td>
<td>混合</td>
<td>项目经理</td>
</tr>
<tr>
<td>项目管理行政人员（文员、资料员等）</td>
<td>兼职</td>
<td>兼职</td>
<td>全职</td>
</tr>
</tbody>
</table>
<ul>
<li>弱矩阵型组织
<ul>
<li>兼职项目经理</li>
<li>权力大小：“小”</li>
</ul>
</li>
</ul>
<figure><img src="/assets/ruo-ju-zhneg-xing.png" alt="弱矩阵型组织" tabindex="0" loading="lazy"><figcaption>弱矩阵型组织</figcaption></figure>
<ul>
<li>强矩阵型组织
<ul>
<li>全职项目经理</li>
<li>权力大小：“中”到“大”</li>
</ul>
</li>
</ul>
<figure><img src="/assets/qiang-ju-zheng-xing.png" alt="强矩阵型组织" tabindex="0" loading="lazy"><figcaption>强矩阵型组织</figcaption></figure>
<ul>
<li>平衡矩阵型组织
<ul>
<li>兼职项目经理</li>
<li>权力大小：“小”到“中”</li>
</ul>
</li>
</ul>
<figure><img src="/assets/ping-heng-ju-zheng-xing.png" alt="平衡矩阵型组织" tabindex="0" loading="lazy"><figcaption>平衡矩阵型组织</figcaption></figure>
<h4> 优点</h4>
<ul>
<li>兼有职能型和项目型的优点, 比较灵活</li>
<li>资源利用率相对较高</li>
<li>有利于跨部门协调</li>
</ul>
<h4> 缺点</h4>
<ul>
<li>团队成员可能存在多头领导（项目经理和职能经理）</li>
<li>管理难度大</li>
<li>资源争夺</li>
</ul>
<h2> 项目生命周期</h2>
<h3> 特征</h3>
<ul>
<li>成本与人力投入在开始时较低, 在工作执行期间达到最高, 并在项目快要结束时迅速回落</li>
<li>风险与不确定性在项目开始时最大, 并在项目的整个生命周期随着决策的制定与可交付成果的验收而逐步降低</li>
<li>做出变更和纠正错误的成本, 随着项目越来越接近完成而显著增高</li>
</ul>
<h3> 生命周期模型</h3>
<h4> 瀑布模型</h4>
<p>一般将软件开发分为：</p>
<p>（1）可行性分析（计划）
（2）需求分析
（3）软件设计（概要设计、详细设计）
（4）编码（含单元测试）
（5）测试
（6）运行维护</p>
<h4> 螺旋模型</h4>
<p>将原型实现的迭代特征与线性顺序（瀑布）模型中控制的和系统化的方面结合起来</p>
<p>适用于需求不明确、庞大而复杂的、高风险的系统</p>
<p>阶段任务：</p>
<p>（1）制定计划
（2）风险分析
（3）实施工程
（4）客户评估</p>
<h4> 迭代模型</h4>
<p>阶段任务：</p>
<p>（1）初始阶段
（2）细化阶段
（3）构造阶段
（4）移交阶段</p>
<h4> V 模型</h4>
<p>非常明确的表明了测试过程存在的不同的级别, 并且非常清新的描述了这些测试阶段和开发阶段的对应关系</p>
<ul>
<li>单元测试 =&gt; 验证软件单元是否按照单元规格说明（详细设计说明）正确执行</li>
<li>集成测试 =&gt; 检查多个单元是否按照系统概要设计描述的方式协同工作</li>
<li>系统测试 =&gt; 验证整个系统是否满足需求规格说明</li>
<li>验收测试 =&gt; 从用户的角度检查系统是否满足和她中定义的需求或者用户需求</li>
</ul>
<h4> 原型化模型</h4>
<p>创建一个快速原型, 能够满足项目干系人与未来的用户可以与原型进行交互, 再通过与相关干系人进行充分的讨论和分析, 最终弄清楚当前系统的需求, 进行了充分的了解之后, 在原型的基础上开发出用户满意的产品</p>
<h4> 敏捷开发模型</h4>
<p>敏捷开发是一种以人为核心、迭代、循序渐进的开发方法</p>
<h2> 项目管理过程</h2>
<h3> 启动过程组</h3>
<p>【整体管理】</p>
<p>1）制定项目章程</p>
<p>【干系人管理】</p>
<p>1）识别干系人</p>
<h3> 计划过程组</h3>
<p>【整体管理】</p>
<p>1）制定项目管理计划</p>
<p>【范围管理】</p>
<p>1）规划范围管理
2）所集需求
3）定义范围
4）创建 WBS</p>
<p>【进度管理】</p>
<p>1）规划进度管理
2）定义活动
3）排列活动顺序
4）估算活动资源
5）估算活动持续时间
6）制定进度计划</p>
<p>【成本管理】</p>
<p>1）规划成本管理
2）估算成本
3）制定预算</p>
<p>【质量管理】</p>
<p>1）规划质量管理</p>
<p>【人力资源管】</p>
<p>1）规划人力资源管理</p>
<p>【沟通管理】</p>
<p>1）规划沟通管理</p>
<p>【风险管理】</p>
<p>1）规划风险管理
2）识别风险
3）实施定性风险分析
4）实施定量风险分析
5）规划风险应对</p>
<p>【采购管理】</p>
<p>1）规划采购管理</p>
<p>【干系人管理】</p>
<p>1）规划干系人管理</p>
<h3> 执行过程组</h3>
<p>【整体管理】</p>
<p>1）指导与管理项目执行</p>
<p>【质量管理】</p>
<p>1）实施质量保证</p>
<p>【人力资源管理】</p>
<p>1）构建项目团队
2）建设项目团队
2）管理项目团队</p>
<p>【沟通管理】</p>
<p>1）管理沟通</p>
<p>【采购管理】</p>
<p>1）实施采购</p>
<p>【干系人管理】</p>
<p>1）管理干系人</p>
<h3> 监督与控制过程组</h3>
<p>【整体管理】</p>
<p>1）监控项目工作
2）实施整体变更控制</p>
<p>【范围管理】</p>
<p>1）确认范围
2）控制范围</p>
<p>【成本管理】</p>
<p>1）控制成本</p>
<p>【质量管理】</p>
<p>1）控制质量</p>
<p>【沟通管理】</p>
<p>1）控制沟通</p>
<p>【风险管理】</p>
<p>1）控制风险</p>
<p>【采购管理】</p>
<p>1）控制采购</p>
<p>【干系人管理】</p>
<p>1）控制干系人参与</p>
<h3> 收尾过程组</h3>
<p>【整体管理】</p>
<p>1）结束项目或阶段</p>
<p>【采购管理】</p>
<p>1）结束采购</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/zhi-neng-xing.png" type="image/png"/>
    </item>
    <item>
      <title>第一章：引论</title>
      <link>https://vxhly.github.io/pmp/knowledge/Introduction.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/Introduction.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第一章：引论</source>
      <description>前言 记录引论章节的相关知识、频繁考点。 本章重点 项目的特点：独特性 (#项目的-独特性)、临时性 (#项目的-临时性)、渐进明细、促进组织变更、商业价值 (#商业价值); “项目组合 (#项目组合管理)”和“项目集 (#项目集管理)”的区别; 项目生命周期、阶段 (#项目的管理过程); 预测型 (#预测型)、迭代型 (#迭代型)、增量型 (#增量型...</description>
      <category>PMP</category>
      <pubDate>Fri, 15 Jul 2022 21:50:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录引论章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 本章重点</h2>
<ul>
<li>项目的特点：<a href="#%E9%A1%B9%E7%9B%AE%E7%9A%84-%E7%8B%AC%E7%89%B9%E6%80%A7">独特性</a>、<a href="#%E9%A1%B9%E7%9B%AE%E7%9A%84-%E4%B8%B4%E6%97%B6%E6%80%A7">临时性</a>、渐进明细、促进组织变更、<a href="#%E5%95%86%E4%B8%9A%E4%BB%B7%E5%80%BC">商业价值</a></li>
<li>“<a href="#%E9%A1%B9%E7%9B%AE%E7%BB%84%E5%90%88%E7%AE%A1%E7%90%86">项目组合</a>”和“<a href="#%E9%A1%B9%E7%9B%AE%E9%9B%86%E7%AE%A1%E7%90%86">项目集</a>”的区别</li>
<li><a href="#%E9%A1%B9%E7%9B%AE%E7%9A%84%E7%AE%A1%E7%90%86%E8%BF%87%E7%A8%8B">项目生命周期、阶段</a></li>
<li><a href="#%E9%A2%84%E6%B5%8B%E5%9E%8B">预测型</a>、<a href="#%E8%BF%AD%E4%BB%A3%E5%9E%8B">迭代型</a>、<a href="#%E5%A2%9E%E9%87%8F%E5%9E%8B">增量型</a>、<a href="#%E9%80%82%E5%BA%94%E5%9E%8B">适应型（敏捷）</a>的特点</li>
<li>“<a href="#%E4%BA%A7%E5%93%81%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F">生命周期的阶段</a>”和“<a href="#%E9%A1%B9%E7%9B%AE%E7%9A%84%E7%AE%A1%E7%90%86%E8%BF%87%E7%A8%8B">管理过程组</a>”的区别</li>
<li><a href="#%E5%B7%A5%E4%BD%9C%E7%BB%A9%E6%95%88%E6%95%B0%E6%8D%AE">工作绩效数据</a>、<a href="#%E5%B7%A5%E4%BD%9C%E7%BB%A9%E6%95%88%E4%BF%A1%E6%81%AF">工作绩效信息</a>、<a href="#%E5%B7%A5%E4%BD%9C%E7%BB%A9%E6%95%88%E6%8A%A5%E5%91%8A">工作绩效报告</a>的区别和联系</li>
<li><a href="#%E9%A1%B9%E7%9B%AE%E6%88%90%E5%8A%9F%E7%9A%84%E6%A0%87%E5%87%86">项目的成功标准</a>很多, 具体以哪些标准来衡量要与相关方达成共识</li>
</ul>
<h2> 全书内容</h2>
<p>在项目管理中, 流程一般概括为 10 大知识领域、5 大项目管理过程组、49 个过程矩阵, 只要对这些环节牢牢把关, 按计划完成,
项目就能顺利推进和完成, 接下来通过一张图来呈现它们之间的关系。</p>
<figure><img src="/assets/PMP.png" alt="项目沟通管理" tabindex="0" loading="lazy"><figcaption>项目沟通管理</figcaption></figure>
<h2> 项目</h2>
<p>项目是为创造独特的产品、服务或成果而进行的临时性工作。</p>
<p>项目的特点：独特性、临时性、渐近明细、促进组织变更、商业价值。</p>
<p>项目可以是不包括在项目组合或项目集中的独立项目。</p>
<p>项目的启动原因：</p>
<p>（1）符合法规、法律或社会要求
（2）满足相关方的要求或需求
（3）创造、改造或修复产品、过程或服务
（4）执行或变更业务或技术战略</p>
<h3> 项目的 “独特性”</h3>
<p>项目所创造的产品或服务在一定程度或在某些方面与其他的产品和服务相比较, 有明显的差别。</p>
<p>开展项目是为了通过可交付成果达成目标。</p>
<p>项目可交付成果和活动可能存在重复的元素, 但这种重复并不会改变项目本质上的独特性。</p>
<p>独特的可交付成果 =&gt; 必须产出的任何独特并可核实的产品、成果和服务能力（项目当中产生的各类文档和计划也属于可交付成果）。</p>
<p>需要针对项目的独特性、针对性地收集资料, 制定计划并执行, 确保项目成功。</p>
<h3> 项目的 “临时性”</h3>
<p>项目的 “临时性” =&gt; 项目有明确的起点和终点</p>
<p>“临时性”并不一定意味着项目的持续时间短</p>
<p>项目产生的可交付成果不是临时的</p>
<h3> 项目的 ”复杂性“</h3>
<p>项目的复杂性主要来源于：人类行为、系统行为、模糊性</p>
<h3> 项目终止</h3>
<ul>
<li>达成项目目标（做完了）</li>
<li>不会或不能达到目标（做不完）</li>
<li>项目资金缺乏或没有可分配资金（没钱做了）</li>
<li>项目需求不复存在（不用做了）</li>
<li>无法获得所需人力或物力资源（没资源做了）</li>
<li>法律或便利原因终止（不让做了）</li>
</ul>
<h3> 商业价值</h3>
<p>项目的“商业价值” =&gt; 项目的成果能够为相关方带来的效益, 效益可以是有形的、无形的或两者兼有之</p>
<p>有形效益 =&gt; 货币资产、股东权益、固定设施、工具、市场份额</p>
<p>无形效益 =&gt; 商誉、品牌认知度、公共利益、战略一致性</p>
<h2> 项目成功的标准</h2>
<p>确定项目是否成功, 除了应达到时间、成本、范围和质量等项目管理测量指标外, 还应考虑项目目标的实现情况, 这些项目目标可能包括：</p>
<ul>
<li>完成项目效益管理计划；</li>
<li>达到商业论证中记录的财务指标（NPV、ROI、IRR、PBP、BCR 等）；</li>
<li>完成组织从“当前状态”转到“将来状态；</li>
<li>履行合同条款和条件；</li>
<li>使相关方满意；</li>
<li>达到组织战略、目的和目标。</li>
</ul>
<h2> 项目管理</h2>
<p>项目管理 =&gt; 将知识、技能、工具与技术应用于项目活动, 以满足项目的要求</p>
<p>有效的项目管理可以帮助</p>
<ul>
<li>=&gt; 管理制约因素（例如范围、质量、进度、成本、资源）</li>
<li>=&gt; 平衡制约因素对项目的影响（例如范围扩大可能会增加成本或延长进度）</li>
</ul>
<p>项目的关键要素</p>
<ul>
<li>项目生命周期</li>
<li>项目阶段</li>
<li>阶段关口 =&gt; 阶段关口是项目阶段的一个关键组成部分。在项目的阶段关口, 可能做出相关决定, 以便停留在当前阶段。</li>
<li>项目管理过程</li>
<li>5 大过程组（启动过程组、规划过程组、收尾过程组）</li>
<li>10 大知识领域</li>
</ul>
<p>项目管理过程开展频率</p>
<ul>
<li>仅开展一次或仅在项目预定义点开展的过程</li>
<li>根据需要定期开展的过程</li>
<li>在整个项目期间持续开展的过程</li>
</ul>
<h2> 项目集管理</h2>
<div class="hint-container tip">
<p class="hint-container-title">关键词</p>
<p>相互协调+收益最大化+依赖关系</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">关注点</p>
<p>关注的是项目之间的协调关系、关联关系</p>
<p>项目集和项目管理的重点在于以“正确”的方式开展项目集和项目（方式要正确）</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">具体措施</p>
<p>解决资源制约、处理变更管理、管理风险、分配预算</p>
</div>
<p>是一组相互关联且被协调管理的“项目、子项目集和项目集活动”, 以便能获得分别管理所无法获得的利益。</p>
<p>为了获得更大的效益, 而对一系列相互配套的项目进行协调管理。处理同一个治理结构内的相关问题和变更管理。</p>
<p>项目集管理住宅作为组成部分的项目与项目集之间的依赖关系, 以确定管理这些项目的最佳方式。</p>
<h2> 项目组合管理</h2>
<div class="hint-container tip">
<p class="hint-container-title">关键词</p>
<p>战略经营目标 + 投资回报最大 + 协调有限的资源 + 价值最大化 + 组织战略</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">关注点</p>
<p>关注的是项目之间的优先级</p>
<p>项目组合管理则注重于开展“正确”的项目集和项目（选择要正确）</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">具体措施</p>
<p>指导组织的投资决策、选择项目集与项目的最佳组合方式、提高实现预期投资回报的可能性</p>
</div>
<p>是指为了实现战略目标而组合在一起管理的“项目、项目集、子项目组合和运营工作”, 它们不一定彼此依赖活着相关。</p>
<p>项目组合中的项目集或项目不一定彼此依赖或者直接相关。关注实现项目组合价值的最大化。</p>
<p>同一项目组合中的所有项目都服务于同一个战略目标。</p>
<h2> 组织项目管理</h2>
<p>组织战略 &gt; 项目组合（阶段决策）&gt; 项目集与项目（成果交付）&gt; 运营（商业价值实现）</p>
<h2> 运营</h2>
<div class="hint-container tip">
<p class="hint-container-title">关键词</p>
<p>持续的、重复的、生产同样成果、批量生产</p>
</div>
<p>运营 =&gt; 是一种生产重复性结果的持续性工作</p>
<p>项目往往来自运营, 有服务于运营</p>
<h2> 项目与运营的异同</h2>
<h3> 相同点</h3>
<p>（1）都需要人员实施
（2）都受资源限制
（3）都需计划、执行和监控</p>
<h3> 不同点</h3>
<p>项目：</p>
<p>（1）一次性创新活动
（2）达到目标结束
（3）创造独特成果
（4）过程充满风险</p>
<p>运营：</p>
<p>（1）持续性重复活动
（2）达到目标开始新目标
（3）生产同样成果
（4）风险很少或没有</p>
<h2> 产品生命周期</h2>
<p>产品从概念、交付、成才、成熟到衰退的整个演变过程的一系列阶段</p>
<p>典型的产品生命周期分为：投入期、成长期、成熟期和衰退期</p>
<h2> 开发生命周期</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>项目生命周期内与（产品、服务或成果的）开发相关的一个或多个阶段。</p>
</div>
<table>
<thead>
<tr>
<th>方法</th>
<th>需求</th>
<th>活动</th>
<th>交付</th>
<th>目标</th>
</tr>
</thead>
<tbody>
<tr>
<td>预测型</td>
<td>固定型</td>
<td>整个项目执行一次</td>
<td>一次性交付</td>
<td>控制成本</td>
</tr>
<tr>
<td>迭代型</td>
<td>动态的</td>
<td>反复的, 直到对了</td>
<td>一次性交付</td>
<td>解决方案的正确性</td>
</tr>
<tr>
<td>增量型</td>
<td>动态的</td>
<td>每个给定的增量, 就执行一次</td>
<td>多次交付</td>
<td>速度</td>
</tr>
<tr>
<td>敏捷型</td>
<td>动态的</td>
<td>反复, 直到对了</td>
<td>频繁交付</td>
<td>通过频繁交付和反馈, 保证客户价值</td>
</tr>
</tbody>
</table>
<h3> 预测型</h3>
<ul>
<li>预测型的生命周期又叫瀑布型是计划驱动的</li>
<li>范围、进度、成本在早期阶段就确定</li>
<li>按计划执行、一次交付</li>
<li>充分了解产品、有厚实的行业基础</li>
<li>需求明确的项目</li>
</ul>
<h3> 迭代型</h3>
<ul>
<li>从“模糊”到“清晰”</li>
<li>迭代方法是通过一系列重复的循环活动来开发产品</li>
</ul>
<h3> 增量型</h3>
<ul>
<li>从“部分”到“整体”</li>
<li>只有在最后一次增量之后, 可交付成果具有必要和足够的能力, 才能被视为完整的</li>
</ul>
<h3> 适应型</h3>
<ul>
<li>适应型又称敏捷型</li>
<li>应对快速变化, 针对小功能进行迭代</li>
<li>较小的增量 =&gt; 每次均支付“最有价值”的功能</li>
<li>快速的迭代 =&gt; 一般 2 ～ 4 周一个迭代</li>
<li>频繁的交付 =&gt; 相关方频繁参与</li>
<li>适用于创新的项目 =&gt; 需要快速应对变化</li>
<li>快速的推向市场</li>
</ul>
<h3> 混合型</h3>
<ul>
<li>部分保存预测型, 部分使用敏捷型</li>
</ul>
<h2> 项目的管理过程</h2>
<p>项目生命周期 =&gt; 项目从启动到完成所经历的一系列阶段。这些阶段之间的关系可以顺序、迭代或交叠进行。</p>
<div class="hint-container tip">
<p class="hint-container-title">成本与人力投入</p>
<p>项目开始时“缓慢增加”, 在“执行工作”期间达到最高, 项目快结束时“迅速回落”</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">风险与不确定性、相关方的影响力、变更的数量</p>
<p>项目开始时最大, 后续“逐步降低”</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">变更的代价、风险的影响</p>
<p>项目开始时较小, 后续“显著增高”</p>
</div>
<p>阶段（项目生命周期） =&gt;</p>
<p>（1）开始项目
（2）组织与准备
（3）执行项目工作
（4）结束项目</p>
<p>过程组 =&gt;</p>
<p>（1）启动过程组
（2）规划过程组
（3）执行过程组
（4）监控过程组
（5）收尾过程组</p>
<table>
<thead>
<tr>
<th>知识领域/过程组</th>
<th>启动</th>
<th>规划</th>
<th>执行</th>
<th>监控</th>
<th>收尾</th>
</tr>
</thead>
<tbody>
<tr>
<td>整合</td>
<td>制定项目章程</td>
<td>制定项目管理计划</td>
<td>指导与管理项目工作、管理项目知识</td>
<td>监控项目工作、实施整体变更控制</td>
<td>结束项目或阶段</td>
</tr>
<tr>
<td>范围</td>
<td></td>
<td>规划范围管理、收集需求、定义范围、创建 WBS</td>
<td></td>
<td>确认范围、控制范围</td>
<td></td>
</tr>
<tr>
<td>进度</td>
<td></td>
<td>规划进度管理、定义活动、排列活动顺序、估算活动持续时间、制定进度计划</td>
<td></td>
<td>控制进度</td>
<td></td>
</tr>
<tr>
<td>成本</td>
<td></td>
<td>规则成本管理、估算成本、制定预算</td>
<td></td>
<td>控制进度</td>
<td></td>
</tr>
<tr>
<td>质量</td>
<td></td>
<td>规划质量管理</td>
<td>管理质量</td>
<td>控制质量</td>
<td></td>
</tr>
<tr>
<td>资源</td>
<td></td>
<td>规划资源管理、估算活动资源</td>
<td>获取资源、建设团队、管理团队</td>
<td>控制资源</td>
<td></td>
</tr>
<tr>
<td>沟通</td>
<td></td>
<td>规划沟通管理</td>
<td>管理沟通</td>
<td>监督沟通</td>
<td></td>
</tr>
<tr>
<td>风险</td>
<td></td>
<td>规划风险管理、识别风险、定性风险分析、定量风险分析、规划风险应对</td>
<td>实施风险应对</td>
<td>监督风险</td>
<td></td>
</tr>
<tr>
<td>采购</td>
<td></td>
<td>规划采购管理</td>
<td>实施采购</td>
<td>控制采购</td>
<td></td>
</tr>
<tr>
<td>相关方</td>
<td>识别相关方</td>
<td>规划相关方参与</td>
<td>管理相关方参与</td>
<td>监督相关方参与</td>
<td></td>
</tr>
</tbody>
</table>
<h2> 项目效益管理计划</h2>
<p>项目, 指对创造、提高和保持项目效益的过程进行定义的书面文件,
项目效益指为发起组织和项目预期受益方创造价值的行动、行为、产品、服务或成果的结果；项目管理计划会大致描述项目实现效益的方式和时间,
以及应制定的效益衡量机制</p>
<p>项目效益管理计划的内容</p>
<ul>
<li>目标效益</li>
<li>战略一致性</li>
<li>实现效益的时限</li>
<li>效益责任人</li>
<li>测量指标</li>
<li>假设</li>
<li>风险</li>
</ul>
<h3> 工作绩效数据</h3>
<p>输出过程组 =&gt; 执行过程组</p>
<p>定义 =&gt; 收集到的原始观察结果和测量值, 是随着项目执行而实时收集起来的数据</p>
<h3> 工作绩效信息</h3>
<p>输出过程组 =&gt; 监控过程组</p>
<p>定义 =&gt; 进行整合分析得到的绩效数据,结合相关背景和跨领域关系进行整合分析而得到的绩效数据</p>
<h3> 工作绩效报告</h3>
<p>输出过程组 =&gt; 监控过程组</p>
<p>定义 =&gt; 为制定决策、提出问题、采取行动或引起关注,而汇编工作绩效信息形成的实物或电子项目文件</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/PMP.png" type="image/png"/>
    </item>
    <item>
      <title>第十章：项目沟通管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-communication-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-communication-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第十章：项目沟通管理</source>
      <description>前言 记录项目沟通管理章节的相关知识、频繁考点。 核心概念 沟通管理就是在合适的时间让合适的人通过合适的方式把合适的信息传达给合适的人, 看似一句无用的话, 但如何选择“合适”的人、“合适”的方式非常考验人, 所以沟通管理能力是项目经理最重要的能力之一。 沟通 =&amp;gt; 通过沟通活动（如会议和演讲）, 或已工作的方式（如电子邮件、社交媒体、项目报告或项目文...</description>
      <category>PMP</category>
      <pubDate>Wed, 03 Aug 2022 19:40:40 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目沟通管理章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 核心概念</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>沟通管理就是在合适的时间让合适的人通过合适的方式把合适的信息传达给合适的人, 看似一句无用的话, 但如何选择“合适”的人、“合适”的方式非常考验人, 所以沟通管理能力是项目经理最重要的能力之一。</p>
</div>
<p>沟通 =&gt; 通过沟通活动（如会议和演讲）, 或已工作的方式（如电子邮件、社交媒体、项目报告或项目文档）等各种可能的方式来发送或者接收信息。</p>
<p>沟通活动可按多种维度进行分类, 包括： 内部 / 外部；正式 / 非正式；层级沟通（向上沟通、向下沟通、横向沟通）；官方沟通 /非官方沟通；书面
/ 口头沟通。</p>
<p>成功的沟通包括两个部分：</p>
<ol>
<li>根据项目及其相关方的需求而制定适当的沟通策略。</li>
<li>制定沟通管理计划, 确保用各种形式和手段把恰当的信息传递给相关方。</li>
<li>5C 原则：Correct：正确的语法和拼写； Concise：简洁的表述和无多余字 ；Clear：清晰的目的和表述（适合读者的需要）；Coherent：连贯的思维逻辑；
Controlling：受控的语句和想法承接</li>
</ol>
<p>在敏捷或适应型环境中需考虑的因素</p>
<ol>
<li>简化团队成员获取信息的通道</li>
<li>频繁进行团队检查</li>
<li>让团队成员集中办公</li>
<li>以透明的方式发布项目工作, 让领导和相关方指导</li>
<li>定期邀请相关方评审项目工作</li>
</ol>
<h2> 思维导图</h2>
<figure><img src="/assets/project-communication-management.png" alt="项目沟通管理" tabindex="0" loading="lazy"><figcaption>项目沟通管理</figcaption></figure>
<h2> 如何做好项目沟通管理</h2>
<figure><img src="/assets/project-communication-management-0.png" alt="项目沟通管理" tabindex="0" loading="lazy"><figcaption>项目沟通管理</figcaption></figure>
<h2> 规划过程组</h2>
<h3> 规划沟通管理</h3>
<p>基于每个相关方或相关方群体的信息需求、可用的组织资产, 以及具体项目的需求, 为项目沟通活动制定恰当的方法和计划的过程。</p>
<p>作用：根据相关方需求、组织实际条件、项目的情况, 制定合适的项目沟通计划, 使得项目沟通效率高、效果好。</p>
<h4> ITTO</h4>
<p>沟通需求分析 =&gt; 分析沟通需求, 确定项目项目相关方的信息需求, 包括所需信息的类型和格式, 以及信息对相关方的价值。</p>
<p>沟通技术：会议、网站等各种技术。需要考虑紧迫性、可用性、易用性、敏感性和保密性。</p>
<p>沟通模型：编码、传递信息、解码、确认已收到（告知收悉）、反馈 / 响应。</p>
<p>沟通方法：</p>
<ul>
<li>互动沟通：【在两方或多方之间进行的实时多向信息交换。】它使用诸如会议、电话、即时信息、社交媒体和视频会议等沟通工作。</li>
<li>推式沟通：【向需要接收信息的特定接收方发送或发布信息。】这种方式可以确保信息的发送, 但不能确保信息送达目标受众或被目标受众理解。</li>
<li>拉式沟通：【适用于大量复杂信息或大量信息受众的情况。】它要求接收方在遵守有关安全规定的前提之下自行访问相关内容。这种方法包括门户网站、企业内网、电子在线课程、经验教训数据库或知识库。</li>
</ul>
<p>沟通管理计划：描述将如何规划, 结果化、执行与监督项目沟通, 以便提供沟通的有效性。信息传递有问题, 一律找沟通管理计划</p>
<figure><img src="/assets/project-communication-management-1.png" alt="项目沟通管理-规划沟通管理" tabindex="0" loading="lazy"><figcaption>项目沟通管理-规划沟通管理</figcaption></figure>
<h2> 执行过程组</h2>
<h3> 管理沟通</h3>
<p>执行过程, 实际做沟通的过程, 促进项目团队与相关方之间的有效信息流动。</p>
<p>管理沟通是确保项目信息及时且恰当地收集、生成、发布、存储、检索、管理、监督和最终处置的过程。主要作用是, 促成项目团队与相关方之间的有效信息流动</p>
<h4> ITTO</h4>
<p>项目报告发布：收集和发布项目信息的行为。虽然工作绩效报告是监控项目工作过程的输出, 但是本过程会编制临时报告、项目演示、博客,
以及其他类型的信息。</p>
<p>项目沟通记录：绩效报告、可交付成果的状态、进度进展、产生的成本、演示, 以及相关方需要的其他信息。</p>
<figure><img src="/assets/project-communication-management-2.png" alt="项目沟通管理-管理沟通" tabindex="0" loading="lazy"><figcaption>项目沟通管理-管理沟通</figcaption></figure>
<h2> 监控过程组</h2>
<h3> 监督沟通</h3>
<p>监督沟通是确保满足项目及其相关方的信息需求的过程。本过程的主要作用是, 按沟通管理计划和相关方参与计划的要求优化信息传递流程。</p>
<p>项目沟通的影响和结果应该接受认真的评估和监督, 以确保在正确的时间, 通过正确的渠道, 将正确的内容（发送方和接收方对其理解一致）传递给正确的受众。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-communication-management-3.png" alt="项目沟通管理-监督沟通" tabindex="0" loading="lazy"><figcaption>项目沟通管理-监督沟通</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-communication-management.png" type="image/png"/>
    </item>
    <item>
      <title>第七章：项目成本管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-cost-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-cost-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第七章：项目成本管理</source>
      <description>前言 记录项目成本管理章节的相关知识、频繁考点。 核心概念 成本管理是指尽量让项目实际进行中的成本控制在预算范围之内, 确保在预算之内完成项目, 主要包括规划成本管理、估算成本、制定预算和控制成本四个过程。 项目成本管理重点关注完成项目活动所需资源的成本, 但同时也应考虑项目决策对项目的产品、服务或成果的使用成本、维护成本和支持成本的影响。 项目成本管...</description>
      <category>PMP</category>
      <pubDate>Sun, 24 Jul 2022 12:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目成本管理章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 核心概念</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>成本管理是指尽量让项目实际进行中的成本控制在预算范围之内, 确保在预算之内完成项目, 主要包括规划成本管理、估算成本、制定预算和控制成本四个过程。</p>
</div>
<p>项目成本管理重点关注完成项目活动所需资源的成本, 但同时也应考虑项目决策对项目的产品、服务或成果的使用成本、维护成本和支持成本的影响。</p>
<p>项目成本管理包括为使项目在批准的预算内完成而对成本进行规划、估算、预算、融资、筹资、管理和控制的各个过程。</p>
<p>项目成本管理重点关注完成项目活动所需资源的成本, 但同时也应考虑项目决策对项目产品、服务或成果的使用成本、维护成本和支持成本的影响。</p>
<h3> 成本类型</h3>
<ul>
<li>直接成本 =&gt; 直接可以归属于项目工作的成本</li>
<li>间接成本 =&gt; 来自一般管理费用科目、或多个项目分摊</li>
<li>固定成本 =&gt; 不随生产量、工作量或时间的变化而变化的会重复成本</li>
<li>可变成本 =&gt; 随着生产量、工作量或时间而变的成本, 又称变动成本</li>
<li>全生命周期成本 =&gt; 在产品经济有效使用期间所发生的与该产品有关的所有成本</li>
<li>沉没成本 =&gt; 任何已发生的成本, 与是否合理无关。在决定是否继续某个出了问题的项目时, 不应该考虑沉没成本。</li>
<li>机会成本 =&gt; 因为选择一个项目而放弃另一个项目, 另一项目可能带来的利益</li>
</ul>
<h2> 思维导图</h2>
<figure><img src="/assets/project-cost-management.png" alt="项目成本管理" tabindex="0" loading="lazy"><figcaption>项目成本管理</figcaption></figure>
<h2> 项目成本管理流程</h2>
<p>项目成本管理其实就是项目“节流”的过程,
一般是对项目的资源和费用进行估算、控制和管理.两个方面需要注意：一是在项目运行前要做好预算计划；二是实际花费要有真实、实时的数据反馈。项目管理人员只有对这两种数据进行分析管理,
项目成本管理才会更加科学和合理, 但有一个误区大家不要踩坑, 项目成本管理 ≠ 越省钱越好。</p>
<figure><img src="/assets/project-cost-management-0.png" alt="项目成本管理" tabindex="0" loading="lazy"><figcaption>项目成本管理</figcaption></figure>
<h2> 规划过程组</h2>
<p>成本管理计划无成本, 只是一个描述如何管理成本的指南。</p>
<h3> 规划成本管理</h3>
<h4> ITTO</h4>
<p>成本管理计划：描述将如何规划、安排和控制项目成本。</p>
<p>成本管理计划包含内容：</p>
<p>（1）计量单位
（2）准确度
（3）精确度
（4）组织程序链接
（5）组织程序链接
（6）控制临界值
（7）绩效测量规划</p>
<figure><img src="/assets/project-cost-management-1.png" alt="项目成本管理-规划成本管理" tabindex="0" loading="lazy"><figcaption>项目成本管理-规划成本管理</figcaption></figure>
<h3> 估算成本</h3>
<p>估算成本是对完成项目工作所需资源成本进行近似估算的过程。本过程的作用：确定项目所需的资金。</p>
<p>通常用某种货币单位进行成本估算, 但有时也可采用其他计量单位, 如人时数或人天数, 以消除通货膨胀的影响, 便于成本比较。</p>
<p>范围基准：项目范围说明书、WBS、WBS 词典</p>
<p>估算成本过程得到的成本估算, 通常包括以下内容：</p>
<ol>
<li>项目所使用的全部资源的成本</li>
<li>直接成本和间接成本</li>
<li>应急储备和管理储备</li>
</ol>
<h4> ITTO</h4>
<figure><img src="/assets/project-cost-management-2.png" alt="项目成本管理-估算成本" tabindex="0" loading="lazy"><figcaption>项目成本管理-估算成本</figcaption></figure>
<h3> 制定预算</h3>
<p>制定预算是汇总所有单个活动或工作包的估算成本, 建立一个经批准的成本基准的过程。本过程的主要作用是, 确定可据以监督和控制项目绩效的成本基准。</p>
<p>项目进度计划：项目进度计划包括项目活动、里程碑、工作包和控制账户的计划开始和完成日期。可根据这些信息, 把计划成本和实际成本汇总到相应的日历时段中。</p>
<p>成本基准：经过批准的、按时间段分配的项目预算, 不包括任何管理储备, 只有通过正式的变更控制程序才能变更,
用作与实际结果进行比较的依据。成本基准是不同进度活动经批准的预算的总和。</p>
<p>成本基准包含应急储备, 但不包括管理储备。想要使用管理储备需要走变更流程, 项目经理不能直接使用。</p>
<p>成本基准+管理基准=项目预算</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-cost-management-3.png" alt="项目成本管理-制定预算" tabindex="0" loading="lazy"><figcaption>项目成本管理-制定预算</figcaption></figure>
<h2> 控制过程组</h2>
<h3> 控制成本</h3>
<p>控制成本是监督项目状态, 以更新项目成本和管理成本基准变更的过程。本过程的主要作用是, 在整个项目期间保持对成本基准的维护。</p>
<h4> ITTO</h4>
<ul>
<li>
<p>挣值分析：BAC、PV、EV、AC</p>
</li>
<li>
<p>偏差分析：SV、CV、SPI、CPI</p>
</li>
<li>
<p>趋势分析：EAC、ETC</p>
</li>
<li>
<p>SV = EV - PV &lt; 0；SPI = EV / PC &lt; 1 =&gt; 进度落后 =&gt; 需要采取进度压缩、赶工、快速跟进方法</p>
</li>
<li>
<p>SV = EV - PV = 0；SPI = EV / PC = 1 =&gt; 与计划一致</p>
</li>
<li>
<p>SV = EV - PV &gt; 0；SPI = EV / PC &gt; 1 =&gt; 进度提前</p>
</li>
<li>
<p>CV = EV - AC &lt; 0；CPI = EV / AC &lt; 1 =&gt; 成本超支 =&gt; 需要采取资源平滑、资源平衡</p>
</li>
<li>
<p>CV = EV - AC = 0；CPI = EV / AC = 1 =&gt; 与计划一致</p>
</li>
<li>
<p>CV = EV - AC &gt; 0；CPI = EV / AC &gt; 1 =&gt; 成本节约</p>
</li>
<li>
<p>TCPI = (BAC - EV) / (BAC - AC) &gt; 1 =&gt; 很难完成</p>
</li>
<li>
<p>TCPI = (BAC - EV) / (BAC - AC) = 1 =&gt; 正好完成</p>
</li>
<li>
<p>TCPI = (BAC - EV) / (BAC - AC) &lt; 1 =&gt; 很容易完成</p>
</li>
<li>
<p>SPI 仅反映总工作量, 还需要对关键路径单独风险。</p>
</li>
<li>
<p>EV = BAC；当挣值等于预算时, 说明项目的总计划价值已被完全挣回, 项目已经完工。</p>
</li>
</ul>
<figure><img src="/assets/project-cost-management-4.png" alt="项目成本管理-控制成本" tabindex="0" loading="lazy"><figcaption>项目成本管理-控制成本</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-cost-management.png" type="image/png"/>
    </item>
    <item>
      <title>第四章：项目整合管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-integration-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-integration-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第四章：项目整合管理</source>
      <description>前言 记录项目整合管理章节的相关知识、频繁考点。 核心概念 整体管理是指识别、定义、结合、统一与协调项目管理过程组中的各个过程以及项目管理活动, 用一句话来总结项目整合管理, 其作用犹如项链中的那根线, 将项目管理过程组中需要的各个过程进行有效综合。 整理管理的主要内容是制定项目章程、制定项目管理计划、指导和管理项目工作、监督项目工作等。 在项目管理中...</description>
      <category>PMP</category>
      <pubDate>Sat, 16 Jul 2022 20:02:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目整合管理章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 核心概念</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>整体管理是指识别、定义、结合、统一与协调项目管理过程组中的各个过程以及项目管理活动, 用一句话来总结项目整合管理,
其作用犹如项链中的那根线, 将项目管理过程组中需要的各个过程进行有效综合。</p>
<p>整理管理的主要内容是制定项目章程、制定项目管理计划、指导和管理项目工作、监督项目工作等。</p>
</div>
<ul>
<li>在项目管理中, 整合兼具统一、合并、沟通和建立联系的性质, 这些行动应该贯穿项目始终</li>
<li>项目整合管理由项目经理负责, 并且整合管理的责任不能被授权或者转移</li>
<li>项目经理必须对整个项目承担最终责任</li>
<li>项目越复杂, 相关方的期望越多样化,就需要越全面的整合方法</li>
</ul>
<h2> 发展趋势和新兴实践</h2>
<ul>
<li>项目整合管理知识领域要求整合所有其他知识领域的成果</li>
<li>与整合管理过程相关的发展趋势包括
<ul>
<li>使用自动化工具</li>
<li>使用可视化管理工具</li>
<li>项目知识管理</li>
<li>增加项目经理的职责</li>
<li>混合型方法</li>
</ul>
</li>
</ul>
<h2> 迭代和敏捷</h2>
<ul>
<li>团队成员以领域专家的身份参与整合管理
<ul>
<li>团队成员自行制定计划</li>
<li>团队成员自行决定各个组件的整合方式</li>
</ul>
</li>
</ul>
<h2> 商业论证</h2>
<p>商业论证内包括对于项目目标、方案效益、相对重大事件的简要概叙, 里程碑指某个时间节点, 与之切合。</p>
<h2> 项目管理流程</h2>
<p>创建项目章程 =&gt; 收集需求 =&gt; 定义范围 =&gt; 创建 WBS =&gt; 定义活动 =&gt; 排列活动顺序 =&gt; 估算活动持续时间 =&gt; 制定进度计划 =&gt; 估算成本
=&gt; 制定预算</p>
<h2> 思维导图</h2>
<figure><img src="/assets/project-integration-management.png" alt="项目整合管理" tabindex="0" loading="lazy"><figcaption>项目整合管理</figcaption></figure>
<h2> 启动过程组</h2>
<h3> 制定项目章程</h3>
<p>编写一份正式批准项目并授权项目经理在项目活动中使用组织资源的文件过程。</p>
<p>项目由项目以外的实体来启动,如发起人、项目集或项目管理办公室。</p>
<p>尽早确认并任命项目经理,项目经理应该参与项目章程的制定,以便对项目需求有基本的了解。</p>
<p>最好在制定项目章程时就任命,最晚也必须在规划开始之前。</p>
<p>项目章程是由项目启动者或发起人发布的, 正式批准项目成立, 并授权项目经理动用组织资源开展项目活动的文件。（是项目的“宪法”,
是项目经理的“尚方宝剑”）</p>
<p>内容：</p>
<ul>
<li>委派的项目经理及其权责</li>
<li>项目的目的、目标、项目的成功标准</li>
<li>高层级的需求、高层级的项目描述、高层级的战略和运营假设条件和制约因素</li>
<li>总体里程碑进度计划、总体预算、整体项目风险</li>
</ul>
<h4> ITTO</h4>
<figure><img src="/assets/project-integration-management-1.png" alt="项目整合管理-制定项目章程" tabindex="0" loading="lazy"><figcaption>项目整合管理-制定项目章程</figcaption></figure>
<h2> 计划过程组</h2>
<h3> 制定项目管理计划</h3>
<p>项目管理计划由项目的主要相关方进行批准。</p>
<p>指南（一般情况下不允许被修改）：</p>
<p>范围管理计划、需求管理计划、进度管理计划、成本管理计划、质量管理计划、资源管理计划、沟通管理计划、风险管理计划、采购管理计划、相关方参与计划、变更管理计划、配置管理计划。</p>
<p>项目管理计划是“文件”, 但不是“项目文件”。</p>
<p>准备和协调项目计划所有组成部分, 并把它们整合为一份综合项目管理计划的过程。</p>
<p>计划需要通过不断更新来渐进明细, 并且这些更新需要得到控制和批准。</p>
<p>项目管理计划一旦被确定为基准, 就只有在提出变更请求并经实施整体变更控制过程批准后, 才能变更。</p>
<p>通常将范围、进度和成本基准合并为一个绩效测量基准, 作为项目的整体基准, 以便据此测量项目的整体绩效。
子管理计划包括（但不限于）：</p>
<p>（1）范围管理计划
（2）需求管理计划
（3）进度管理计划
（4）成本管理计划
（5）质量管理计划
（6）资源管理计划
（7）沟通管理计划
（8）风险管理计划
（9）采购管理计划
（10）相关方参与理计划</p>
<p>项目基准包括：</p>
<p>（1）进度基准（做多少）
（2）成本绩效基准（花多少）
（3）范围基准（做什么）</p>
<p>其他组件包括：
（1）变跟管理计划
（2）配置管理计划
（3）绩效测量基准
（4）项目周期描述
（5）开发方法
（6）管理审查</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-integration-management-2.png" alt="项目整合管理-制定项目管理计划" tabindex="0" loading="lazy"><figcaption>项目整合管理-制定项目管理计划</figcaption></figure>
<h2> 执行过程组</h2>
<h3> 指导与管理项目工作</h3>
<p>执行项目管理计划中所确定的工作, 并实施已批准变更的过程。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-integration-management-3.png" alt="项目整合管理-指导与管理项目工作程" tabindex="0" loading="lazy"><figcaption>项目整合管理-指导与管理项目工作程</figcaption></figure>
<h3> 管理项目知识</h3>
<p>使用现有知识并生成新知识, 以实现项目目标, 并且帮助组织学习的过程。支持组织运营和未来的项目或阶段。</p>
<ul>
<li>显性知识：易使用文字、图片和数字进行编撰的知识</li>
<li>隐性知识：个人知识以及难以明确表达的知识</li>
</ul>
<h4> ITTO</h4>
<figure><img src="/assets/project-integration-management-4.png" alt="项目整合管理-管理项目知识" tabindex="0" loading="lazy"><figcaption>项目整合管理-管理项目知识</figcaption></figure>
<h2> 监控过程组</h2>
<h3> 监控项目工作</h3>
<p>跟踪、审查和报告整体项目进展, 实现项目管理计划中确定的绩效目标的过程。监督是贯穿于整个项目的项目管理活动之一。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-integration-management-5.png" alt="项目整合管理-监控项目工作" tabindex="0" loading="lazy"><figcaption>项目整合管理-监控项目工作</figcaption></figure>
<h3> 实施整体变更控制</h3>
<p>实施整体变更控制过程贯穿项目始终, 项目经理对此承担最终责任。</p>
<p>需要了解变更对进度的影响和对成本等等各方面的影响。</p>
<p>项目文件更新：不管变更有没有被批准, 都需要更新变更日志。</p>
<p>变更流程：</p>
<ul>
<li>【记录】=&gt; 书面记录变更请求；项目经理书面记录（书面日志）, 或要求变更提出者提交书面的变更请求</li>
<li>【评估】=&gt; 充分了解变更, 评估变更带来的影响；与相关方沟通评估出的影响</li>
<li>【提交】=&gt; 提交责任人审批；注意, 这里的提交指“项目经理”将变更请求和评估的结果提交给 CCB</li>
<li>【更新】=&gt; 不管变通过还是不通过, 必须更新日志；如果变更通过, 更新项目管理计划（文件）</li>
<li>【通知】=&gt; 应将变更的结果通知相关（受影响）的相关方</li>
</ul>
<h4> 变更请求 4 种情况</h4>
<ol>
<li>预防措施: 为确保项目工作的未来绩效符合项目管理计划而进行的有目的的活动。这里的预防当然是最好的方式, 根据预防描述,
可以减少或者没有变更。对实际工作来说肯定是最好的方式, 变更少, 项目成功的可能性大, 当然前提是项目范围定义的确实符合客观实际需求。</li>
<li>纠正措施: 为使项目工作绩效重新与项目管理计划一致而进行的有目的的活动。纠正说明有偏差了。有偏差要纠正是-大类题目选择依据。</li>
<li>缺陷补救: 为修正不一致的产品或产品组件而进行的有目的的活动。已经出现质量问题了。说明出现了质量问题了, 也可以理解为偏差过大,
已经在可交付成果物中表现出来了。跟纠正措施对照比较, 说明纠正措施中的偏差还比较小, 未在可交付成果物中变现出来这种偏差。</li>
<li>更新: 对正式受控的项目文件或计划等进行的变更, 以反映修改或增加的意见或内容。说明已经为了修正这种巨大偏差,
需要对项目的计划和基准都需要调整了。</li>
</ol>
<h4> ITTO</h4>
<figure><img src="/assets/project-integration-management-6.png" alt="项目整合管理-实施整体变更控" tabindex="0" loading="lazy"><figcaption>项目整合管理-实施整体变更控</figcaption></figure>
<h2> 收尾过程组</h2>
<h3> 结束项目或阶段</h3>
<p>存档项目或阶段信息, 完成计划的工作, 释放组织团队资源以展开新的工作。</p>
<p>项目终止流程（6+2）：</p>
<ol>
<li>获得项目发起人和相关方的批准（验收）</li>
<li>移交最终成果</li>
<li>总结经验教训, 提供未来项目或阶段使用</li>
<li>更新组织过程资产</li>
<li>文件归档</li>
<li>释放资源、解散项目团队</li>
<li>衡量并记录客户满意度</li>
<li>庆功会</li>
</ol>
<p>项目提前终止流程：</p>
<ol>
<li>在正式的收尾文件中说明项目终止的原因</li>
<li>把该项目的已完成和未完成的可交付成果移交他人</li>
<li>总结经验教训, 提供未来项目或阶段使用</li>
<li>更新组织过程资产</li>
<li>文件归档</li>
<li>释放资源、解散项目团队</li>
</ol>
<p>项目在完工前提前终止, 则需要在正式的收尾文件中说明项目终止的原因, 并规定正式程序, 把该项目的已完成和未完成的可交付成果移交他人。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-integration-management-7.png" alt="项目整合管理-结束项目或阶段" tabindex="0" loading="lazy"><figcaption>项目整合管理-结束项目或阶段</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-integration-management.png" type="image/png"/>
    </item>
    <item>
      <title>第三章：项目经理的角色</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-manager.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-manager.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第三章：项目经理的角色</source>
      <description>前言 记录项目经理的角色章节的相关知识、频繁考点。 项目经理 项目经理由执行组织委派, 领导团队实现项目目标的个人。 项目经理 =&amp;gt; 专注项目目标大达成。 项目经理无需承担项目中的每个角色, 但应具备项目管理知识、技术知识、理解能力和相关经验。项目经理通过沟通领导项目团队进行规划和协调。 项目经理的影响范围：项目、组织、行业、专业学科、跨领域 项目目标...</description>
      <category>PMP</category>
      <pubDate>Sat, 16 Jul 2022 15:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目经理的角色章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 项目经理</h2>
<p>项目经理由执行组织委派, 领导团队实现项目目标的个人。</p>
<p>项目经理 =&gt; 专注项目目标大达成。</p>
<p>项目经理无需承担项目中的每个角色, 但应具备项目管理知识、技术知识、理解能力和相关经验。项目经理通过沟通领导项目团队进行规划和协调。</p>
<p>项目经理的影响范围：项目、组织、行业、专业学科、跨领域</p>
<p>项目目标是由发起人制定和最终决定的。项目经理是来带领团队实现这个目标的个人, 不能对目标有决定权。</p>
<h2> PMI 人才三角</h2>
<ul>
<li>技术项目管理技能 =&gt; 有效运用项目管理知识实现项目集或项目的预期成果的能力</li>
<li>战略和商务管理技能 =&gt; 纵览组织概况并有效协商和执行有利于战略调整和创新的决策和行动的能力</li>
<li>领导力技能 =&gt; 指导、激励和带领团队的能力（协商、抗压、沟通、解决问题、批判性思考、人际关系技能）</li>
</ul>
<h2> 项目经理权力</h2>
<ul>
<li>地位 =&gt; 有时称为正式的、权威的、合法权利的, 例如组织或团队授予的正式职位</li>
<li>信息 =&gt; 例如对信息收集或分发的控制</li>
<li>参考 =&gt; 例如因为他人的尊重和赞赏, 获得的信任</li>
<li>情境 =&gt; 例如在特别危机等特殊情况下获得的权利</li>
<li>个性或魅力 =&gt; 例如魅力、吸引力</li>
<li>关系 =&gt; 例如参与人人际交际、联系和结盟</li>
<li>专家 =&gt; 例如拥有的技能和信息、经验、培训、教育、证书</li>
<li>奖励相关的 =&gt; 例如能够给予表扬、金钱或其他奖励</li>
<li>处罚或强制力 =&gt; 例如给予纪律处分或施加负面后果的能力</li>
<li>迎合 =&gt; 例如运用奉承或其他常用手段赢得青睐或合作</li>
<li>施加压力 =&gt; 例如限制选择或活动自由, 以符合预期的行动</li>
<li>愧疚 =&gt; 例如强加的义务或责任感</li>
<li>说服力 =&gt; 例如能够提供论据, 使他人执行预期的行动方案</li>
<li>回避 =&gt; 例如拒绝参与</li>
</ul>
<p>项目经理处于弱矩阵中, 他应该更加注重专家权利、参考权利、魅力权利</p>
<p>在敏捷项目上, 项目经理的角色是激励团队的领导者。</p>
<p>项目整合管理是项目经理绝对不能授权出去的工作。</p>
<h2> 项目经理的领导风格</h2>
<ul>
<li>放任型 =&gt; 或称为“无为而治”,允许团队自主决策和设定目标、适合创新</li>
<li>交易型 =&gt; 关注目标、反馈和成就以确定奖励,例外管理</li>
<li>服务型 =&gt; 服务优先于领导,处处先为他人着想；关注他人的成长、学习、发展、人际关系、团队与合作</li>
<li>变革型 =&gt; 通过理想化特质和行为、鼓舞性激励、促进创新和创造、以及个人关怀提高追随者能力</li>
<li>魅力型 =&gt; 精神饱满、热情洋溢、充满自信、说服力强、能够激励他人</li>
<li>交互型 =&gt; 结合了交易型、变革型和魅力型的特点</li>
</ul>
<p>在项目规划早期和收尾阶段, 独裁式管理风格更加适用。</p>
]]></content:encoded>
    </item>
    <item>
      <title>第二章：项目运行环境</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-operating-environment.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-operating-environment.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第二章：项目运行环境</source>
      <description>前言 记录项目运行环境章节的相关知识、频繁考点。 事业环境因素（EEF） 不可控、需遵守 项目团队不能控制的, 将对项目产生影响、限制或指令作用的各种条件。这些因素可能会提高或限制项目管理的灵活性, 并可能对项目结果产生积极或消极的影响。 事业环境因素可能会提高或限制项目管理的灵活性。 市场条件; 社会和文化影响与问题; 法律限制; 商业数据库; 学术...</description>
      <category>PMP</category>
      <pubDate>Sat, 16 Jul 2022 13:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目运行环境章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 事业环境因素（EEF）</h2>
<p>不可控、需遵守</p>
<p>项目团队不能控制的, 将对项目产生影响、限制或指令作用的各种条件。这些因素可能会提高或限制项目管理的灵活性,
并可能对项目结果产生积极或消极的影响。</p>
<p>事业环境因素可能会提高或限制项目管理的灵活性。</p>
<ul>
<li>市场条件</li>
<li>社会和文化影响与问题</li>
<li>法律限制</li>
<li>商业数据库</li>
<li>学术研究</li>
<li>政府或行业标准</li>
<li>财务考虑因素</li>
<li>物理环境因素</li>
</ul>
<h2> 组织过程资产（OPA）</h2>
<p>可裁剪、多积累</p>
<p>执行组织持有并使用的计划、过程、政策、程序和知识库, 会影响对具体项目的管理。在整个项目期间（项目全过程中）,
项目团队成员可对组织过程资产进行必要的更新和增补。</p>
<ul>
<li>过程、政策和程序</li>
<li>组织知识库</li>
</ul>
<h2> 项目的组织结构</h2>
<p>与 <a href="/views/soft-test/project-management.html#%E9%A1%B9%E7%9B%AE%E7%9A%84%E7%BB%84%E7%BB%87%E7%BB%93%E6%9E%84" target="blank">项目的组织结构</a> 一致</p>
<div class="hint-container danger">
<p class="hint-container-title">警告</p>
<p>"紧密型矩阵"不是组织结构, 是集中办公的另一种说法</p>
</div>
<h2> 项目管理办公室 PMO</h2>
<div class="hint-container tip">
<p class="hint-container-title">定义</p>
<p>组织中对所辖各项目进行集中协调管理的一个永久性部门</p>
</div>
<p>项目管理办公室（PMO）=&gt; 是对与项目相关的治理过程进行标准化, 并促进资源、方法论、工具与技术共享的一个组织结构。PMO
所支持和管理的项目不一定彼此关联。</p>
<p>PMO 的类型：</p>
<ul>
<li>支持型 =&gt; 支持, 是顾问、项目资源库, 对项目控制程度很低
<ul>
<li>顾问的角色, 向项目提供模板、最佳实践、培训, 以及信息和经验教训。这种类型的 PMO 其实就是一个项目资源库, 对项目的控制程度很低。</li>
</ul>
</li>
<li>控制型 =&gt; 支持+要求服从, 对项目控制程度中等
<ul>
<li>控制型 PMO 不仅给项目提供支持, 而且通过各种手段要求项目服从。</li>
</ul>
</li>
<li>指令型 =&gt; 直接管理和控制, 对项目控制程度很高, 关注项目中的每一个细节
<ul>
<li>指令型 PMO 直接管理和控制项目。这种类型的 PMO 对项目的控制程度很高。</li>
</ul>
</li>
</ul>
<p>PMO 的主要职能：</p>
<ul>
<li>对 PMO 所辖的全部项目的共享资源进行管理</li>
<li>识别和制定项目管理方法、最佳实践和标准</li>
<li>指导、辅导、培训和监督</li>
<li>通过项目审计, 监督对项目管理标准、政策、程序和饿模版的遵守程度</li>
<li>制定和管理项目政策、程序、模版和其他共享的文件（组织过程资产）</li>
<li>对跨项目的沟通进行协调</li>
</ul>
<h2> 组织文化与影响</h2>
<p>组织文化是一种事业环境因素。文化已成为决定项目成功的关键因素, 多元文化能力已成为项目经理的重要能力。</p>
<h2> 组织系统</h2>
<ul>
<li>系统是动态的</li>
<li>系统是能优化的</li>
<li>系统组件睡能优化的</li>
<li>系统及其组件是不能同时优化</li>
<li>系统呈现非线性响应（输入的变更并不会产生可预测的输出）</li>
</ul>
<h2> 组织治理框架</h2>
<p>影响：</p>
<ul>
<li>组织目标的设定和实现方式</li>
<li>风险监控和评估方式</li>
<li>绩效优化方式</li>
</ul>
<h2> 项目治理</h2>
<p>必须执行的四大职能：监督、控制、整合和决策</p>
<p>四个治理领域：一致性、风险、绩效、沟通</p>
]]></content:encoded>
    </item>
    <item>
      <title>第六章：项目进度管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-progress-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-progress-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第六章：项目进度管理</source>
      <description>前言 记录项目进度管理章节的相关知识、频繁考点。 核心概念 项目进度管理是指让一切按照既定的进度进行, 对项目进行合理的时间管理, 才是保证项目顺利交付的关键, 那么如何才能做好项目时间管理呢？可以从六个方面入手：定义项目范围, 注重分解工作；对项目工作进行优先排序；项目工期估算；制定项目进度表；进行进度控制；工具使用等。 具有未完项的迭代型进度计划：...</description>
      <category>PMP</category>
      <pubDate>Wed, 20 Jul 2022 19:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目进度管理章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 核心概念</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>项目进度管理是指让一切按照既定的进度进行, 对项目进行合理的时间管理, 才是保证项目顺利交付的关键,
那么如何才能做好项目时间管理呢？可以从六个方面入手：定义项目范围, 注重分解工作；对项目工作进行优先排序；项目工期估算；制定项目进度表；进行进度控制；工具使用等。</p>
</div>
<p>具有未完项的迭代型进度计划：将需求记录在用户故事中, 然后在建造之前按优先级排序并优化用户故事, 最后在规定的时间盒内开发产品功能。</p>
<p>按需进度计划：不依赖于以前为产品开发或产品增量制定的进度计划, 而是在资源可用时立即从未完项和工作序列中提取出来开展。</p>
<h2> 思维导图</h2>
<figure><img src="/assets/project-progress-management.png" alt="项目进度管理" tabindex="0" loading="lazy"><figcaption>项目进度管理</figcaption></figure>
<h2> 如何做好项目进度管理</h2>
<figure><img src="/assets/project-progress-management-0.png" alt="项目进度管理" tabindex="0" loading="lazy"><figcaption>项目进度管理</figcaption></figure>
<h2> 规划过程组</h2>
<h3> 规划进度管理</h3>
<p>进度管理计划无进度, 只是一个描述如何管理进度的指南。</p>
<p>为如何在整个项目期间管理项目提供指南和方向。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-progress-management-1.png" alt="项目进度管理-规划进度管理" tabindex="0" loading="lazy"><figcaption>项目进度管理-规划进度管理</figcaption></figure>
<h3> 定义活动</h3>
<p>识别和记录为完成项目可交付成果而需采取的具体行动的过程。</p>
<p>将工作包分解为进度活动, 作为对项目工作进行进度估算、规划、执行、监督和控制的基础。</p>
<p>范围基准：在定义活动时, 需明确考虑范围基准中的项目 WBS、可交付成果、制约因素和假设条件。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-progress-management-2.png" alt="项目进度管理-定义活动" tabindex="0" loading="lazy"><figcaption>项目进度管理-定义活动</figcaption></figure>
<h3> 排列活动顺序</h3>
<p>本过程的主要作用是定义工作之间的逻辑顺序, 以便在既定的所有项目制约因素下获得最高的效率。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-progress-management-3.png" alt="项目进度管理-排列活动顺序" tabindex="0" loading="lazy"><figcaption>项目进度管理-排列活动顺序</figcaption></figure>
<h3> 估算活动持续时间</h3>
<p>估算活动持续时间是根据资源估算的结果, 估算完成单项活动所需工作时段数的过程。</p>
<p>储备分析：</p>
<ul>
<li>应急储备（已知 --- 未知）【事先能识别出来的（想得到的） --- 不需求（或不能）主动管理】
<ul>
<li>是保护在进度基准中的一段持续时间, 用来应对已经接受的已知风险。</li>
<li>应急储备在最终的基准中</li>
<li>项目经理可以直接使用, 不需要走变更流程</li>
</ul>
</li>
<li>管理储备（未知 --- 未知）【事先不能识别出来（想不到的） --- 不需求（或不能）主动管理】
<ul>
<li>是为管理控制的目的而特别留出的项目预算, 用来应对项目范围中不可预见的工作。</li>
<li>管理储备不在最终的基准中</li>
<li>项目经理需要走变更流程申请</li>
</ul>
</li>
</ul>
<h4> ITTO</h4>
<figure><img src="/assets/project-progress-management-4.png" alt="项目进度管理-估算活动持续时间" tabindex="0" loading="lazy"><figcaption>项目进度管理-估算活动持续时间</figcaption></figure>
<h3> 制定进度计划</h3>
<p>制定进度计划是分析活动顺序、持续时间、资源需求和进度制约因素, 创建进度模型, 从而落实项目执行和监控的过程。</p>
<h4> ITTO</h4>
<p>关键路径法</p>
<ul>
<li>关键路径是项目中时间最长的活动顺序, 决定着可能的项目最短工期</li>
<li>总浮动时间：活动延期但不至于延迟项目完工日期。体现进度灵活性</li>
<li>自由浮动时间：活动延期但不延误任何紧后活动最早开始时间</li>
<li>关键路径法排出来的进度计划未必可行, 关键路径法不考虑资源约束, 需要配合资源平衡处理</li>
<li>关键路径上的关键活动的总浮动时间可能是正值也可能是负值</li>
<li>关键路径不考虑资源约束, 只是考虑约束</li>
</ul>
<p>在关键路径上可以进行压缩工期以使总工期缩短, 在非关键路径上利用资源平滑进行抽取资源, 减少人员短缺带来的影响。</p>
<p>资源优化（解决资源负荷过大）：根据资源供需情况, 来调整进度模型的技术, 用于减少资源负荷的变化。包括：</p>
<p>（1）资源平衡：如果共享资源或关键资源只在特定时间可用, 数量有限, 或被过度分配,
就需要进行资源平衡。也可以为保持资源使用量处于均衡水平而进行资源平衡。资源平衡往往导致关键路径改变。【资源被过渡分配,
出现了资源短缺, 需要进行资源平衡】
（2）资源平滑：资源平滑不会改变项目关键路径, 活动只在其自由和总浮动时间内延迟, 但资源平滑技术可能无法实现所有资源的优化。【当各个时间段内所需的资源数量起伏太大时,
需要做资源平滑】</p>
<p>进度压缩（解决工期问题）：进度压缩技术是指在不缩减项目范围的前提下, 缩短或加快进度工期, 使进度符合要求。</p>
<p>（1）赶工：通过增加资源, 以最小的成本代价来压缩进度工期的一种技术。例子包括：批准加班、增加额外资源或支付加急费用。只适用于那些通过增加资源就能缩短持续时间的,
且位于关键路径上的活动。（增加成本）
（2）快速跟进：将正常情况下按顺序进行的活动或阶段改为至少是部分并行开展。只适用于相互为选择性依赖关系的活动。在某一项活动完成之前开始另一项活动。（增加风险）</p>
<p>进度落后优先级选择：进度压缩 &gt; 赶工 &gt; 快速跟进</p>
<figure><img src="/assets/project-progress-management-5.png" alt="项目进度管理-制定进度计划" tabindex="0" loading="lazy"><figcaption>项目进度管理-制定进度计划</figcaption></figure>
<h2> 控制过程组</h2>
<h3> 控制进度</h3>
<p>控制进度是监督项目状态, 以更新项目进度和管理进度基准变更的过程。本过程的主要作用是在整个项目期间保持对进度基准的维护,
且需要在整个项目期间开展。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-progress-management-6.png" alt="项目进度管理-控制进度" tabindex="0" loading="lazy"><figcaption>项目进度管理-控制进度</figcaption></figure>
<h2> 本章重点</h2>
<ul>
<li>如果在执行过程中发现某个活动的总浮动时间为负, 极有可能该活动是关键活动, 而且已经延期</li>
<li>如果题目中体现了时间要缩短, 需要压缩工期, 选择进度压缩（赶工或者快速跟进）</li>
<li>如果题目中体现了资源负荷大, 需要平摊负荷, 选择资源优化（资源平衡或资源平滑）</li>
<li>关键路径上压工期, 非关键路径上抽资源</li>
<li>进度落后, 产生进度偏差, 优先考虑用纠正措施压缩进度（赶工或快速跟进）；</li>
<li>如果实在无法符合进度, 不得已的情况下, 再考虑通过变更流程缩减范围或延长进度。</li>
</ul>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-progress-management.png" type="image/png"/>
    </item>
    <item>
      <title>第十二章：项目采购管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-purchasing-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-purchasing-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第十二章：项目采购管理</source>
      <description>前言 记录项目采购管理章节的相关知识、频繁考点。 核心概念 项目经理不必成为采购管理法律法规领域的专家, 但是应该对采购过程有足够的了解。采购管理的过程包括规划采购管理、实施采购、控制采购和结束采购四个环节。 通常情况下, 项目经理无权签署对组织有约束力的法律协议, 这项工作仅由具备相关职权的人员执行。 因应用领域不同, 协议可以是合同、服务水平协议（...</description>
      <category>PMP</category>
      <pubDate>Mon, 15 Aug 2022 19:50:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目采购管理章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 核心概念</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>项目经理不必成为采购管理法律法规领域的专家, 但是应该对采购过程有足够的了解。采购管理的过程包括规划采购管理、实施采购、控制采购和结束采购四个环节。</p>
</div>
<p>通常情况下, 项目经理无权签署对组织有约束力的法律协议, 这项工作仅由具备相关职权的人员执行。</p>
<p>因应用领域不同, 协议可以是合同、服务水平协议（SLA）、谅解备忘录、协议备忘录（MOA）或订购单。</p>
<h2> 思维导图</h2>
<figure><img src="/assets/project-purchasing-management.png" alt="项目采购管理" tabindex="0" loading="lazy"><figcaption>项目采购管理</figcaption></figure>
<h2> 规划过程组</h2>
<h3> 规划采购管理</h3>
<p>规划采购管理是记录项目采购决策、明确采购方法, 及识别潜在卖方的过程。</p>
<p>作用：确定是否从项目外部获取货物和服务。如果是, 则还要确定将在什么时间、以什么方式获取什么货物和服务。</p>
<h4> 总价合同</h4>
<ul>
<li>固定总（FFP） =&gt; 价格固定不变（除非工作范围变更）;适用于：已明确定义需求, 且不会出现重大范围变更的情况下使用;此类合同为既定产品、服务或成果的采购设定一个总价</li>
<li>总价+激励（FPIF） =&gt; 最高限价、有目标绩效、有分摊比例
<ul>
<li>总价 = 实际成本 + 目标利润 +（目标成本 - 实际成本）* 卖方应承担比例</li>
<li>和最高限价比较, 计算最终总价</li>
<li>利润 = 最终总价 - 实际成本</li>
</ul>
</li>
<li>总价加经济价格调整（FP-EPA） =&gt; 跨越较长时期（数年）、考虑通货膨胀、成本增降</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">固定总价合同（FFP）</p>
<p>FFP 是最常用的合同类型。大多数买方都喜欢这种合同</p>
<ul>
<li>因为采购的价格在一开始就确定, 并且不允许改变（除非工作范围发生变更）。</li>
<li>卖方有义务完成工作, 并且承担因不良绩效导致的任何成本增加。</li>
<li>在 FFP 合同下, 买方应该准确定义拟采购的产品和服务, 对采购规范的任何变更都会增加买方的成本</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">总价加激励费用合同（FPIF）</p>
<p>允许一定的绩效偏离, 并对实现既定目标给与相关的财务奖励（通常取决于卖方的成本、进度或技术绩效）。</p>
<ul>
<li>在 FPIF 合同中, 要设置价格上限, 卖方必须完成工作并且要承担高于上限的全部成本。</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">总价加经济价格调整合同（FPEPA）</p>
<p>适用于：卖方履约期将跨越几年；将以不同货币支付价款。</p>
<ul>
<li>允许根据条件变化（如通货膨胀、某些特殊商品的成本增降), 以事先确定的方式对合同价格进行最终调整。</li>
</ul>
</div>
<h4> 工料合同</h4>
<ul>
<li>T&amp;M =&gt; 工期短、金额小、不复杂、紧急情况、无 SOW</li>
<li>兼具成本补偿合同和总价合同的某些特点的混合型合同</li>
<li>适用于, 在无法快速编制出准确的工作说明书的情况下扩充人员、聘用专家或寻求外部支持。</li>
</ul>
<h4> 成本补偿合同</h4>
<p>向卖方支付为完成工作而发生的全部合法实际成本（可报销成本）, 外加一笔费用作为卖方的利润;适用于：工作范围预计会在合同执行期间发生重大变更</p>
<ul>
<li>成本+激励（CPIF） =&gt; 可能有利润上下限、有目标绩效、有分摊比例
<ul>
<li>利润 = 目标利润 + （目标成本 - 实际成本）* 卖方应承担比例</li>
<li>和利润上下限比, 技术最终利润</li>
<li>总价 = 最终利润 + 实际成本</li>
</ul>
</li>
<li>成本+奖励（CPAF） =&gt; 绩效标准主观笼统、不允许申诉</li>
<li>成本+固定费用（CPFF） =&gt; 初始成本估算的百分比, 不考虑绩效
<ul>
<li>实际总价 = 实际成本+初始成本百分比</li>
</ul>
</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">成本加固定费用合同（CPFF）</p>
<p>为卖方报销履行合同工作所发生的一切可列支成本, 并向卖方支付一笔固定费用, 该费用以项目初始成本估算的某一百分比计算。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">成本加激励费用（CPIF）</p>
<p>为卖方报销履行合同工作所发生的一切可列支成本, 并在卖方达到合同规定的绩效目标时, 向卖方支付预先确定的激励费用。</p>
<ul>
<li>在 CPIF 合同中, 如果最终成本低于或高于原始估算成本, 则买方和卖方需要根据事先商定的成本分摊比例来分享节约部分或分担超出部分。</li>
<li>与总价加激励费用相比, 不存在总价上的最高限价。</li>
<li>但有时会出现利润的最高限价和最低限价。</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">成本加奖励费用（CPAF）</p>
<p>为卖方报销一切合法成本, 但只有在卖方满足合同规定的、某些笼统主观的绩效标准的情况下, 才向卖方支付大部分费用。</p>
<ul>
<li>完全由买方根据自己对卖方绩效的主观判断来决定奖励费用, 并且通常不允许申诉.</li>
</ul>
</div>
<h4> ITTO</h4>
<p>预先批准的卖方清单----经过适当审查的卖方清单可以简化招标所需的步骤, 并缩短卖方甄选过程的时间</p>
<p>采购工作说明书：充分详细地描述拟采购的产品、服务或成果, 以便潜在卖方确定是否有能力提供此类产品、服务或成果。采购工作说明书应力求清晰、完整和简练。它需要说明所需的附加服务,
例如, 报告绩效, 或对采购品的后续运营支持。在采购过程中, 应根据需要对工作说明书进行修订, 直到它成为所签协议的一部分。</p>
<figure><img src="/assets/project-purchasing-management-1.png" alt="项目采购管理-规划采购管理" tabindex="0" loading="lazy"><figcaption>项目采购管理-规划采购管理</figcaption></figure>
<h2> 实施过程组</h2>
<h3> 实施采购</h3>
<p>实施采购是获取卖方应答、选择卖方并授予合同的过程。主要作用是, 选定合格卖方并签署关于货物或服务交付的法律协议。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-purchasing-management-2.png" alt="项目采购管理-实施采购管理" tabindex="0" loading="lazy"><figcaption>项目采购管理-实施采购管理</figcaption></figure>
<h2> 监控过程组</h2>
<h3> 控制采购</h3>
<p>控制采购是管理采购关系, 监督合同绩效, 实施必要的变更和纠偏, 以及关闭合同的过程。</p>
<h4> 合同提前终止</h4>
<p>合同提前终止是结束采购的一个特例, 有以下三种情况会提前终止：</p>
<ol>
<li>合同可由双方协商一致而提前终止,</li>
<li>或因一方违约而提前终止,</li>
<li>或者为买方的便利而提前终止（如果合同中有这种规定）。</li>
</ol>
<p>如果合同提前终止：</p>
<ol>
<li>对该合同或该部分中已经完成和验收的工作支付报酬</li>
<li>对卖方为该合同或该部分所做的准备工作给予补偿</li>
</ol>
<h4> ITTO</h4>
<figure><img src="/assets/project-purchasing-management-3.png" alt="项目采购管理-实施采购管理" tabindex="0" loading="lazy"><figcaption>项目采购管理-实施采购管理</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-purchasing-management.png" type="image/png"/>
    </item>
    <item>
      <title>第八章：项目质量管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-quality-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-quality-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第八章：项目质量管理</source>
      <description>前言 记录项目质量管理章节的相关知识、频繁考点。 核心概念 项目质量管理主要包含了规划质量管理、管理质量、控制质量三个过程, 目的是做出合格的质量、建立信心(客户/团队) 、满足特定的需求和期望、审计质量要求和质量控制测量结果和改进生产过程。 项目质量管理需要兼顾项目管理与项目可交付成果两个方面。 【质量】作为实现的性能或成果, 是“一系列内在特性满足...</description>
      <category>PMP</category>
      <pubDate>Wed, 27 Jul 2022 19:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目质量管理章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 核心概念</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>项目质量管理主要包含了规划质量管理、管理质量、控制质量三个过程, 目的是做出合格的质量、建立信心(客户/团队)
、满足特定的需求和期望、审计质量要求和质量控制测量结果和改进生产过程。</p>
</div>
<p>项目质量管理需要兼顾项目管理与项目可交付成果两个方面。</p>
<ul>
<li>【质量】作为实现的性能或成果, 是“一系列内在特性满足要求的程度”。</li>
<li>【等级】作为设计意图, 是对用途相同但技术特性不同的可交付成果的级别分类。</li>
</ul>
<p>五种质量管理水平：客户 &lt; QC &lt; QA &lt; QP &lt; 文化。</p>
<ul>
<li>【预防】=&gt; 保证过程总共不出现错误</li>
<li>【检查】=&gt; 保证错误不落到客户手中</li>
<li>【属性抽样】=&gt; 结果为合格或不合格</li>
<li>【变量抽样】=&gt; 表明合格的程度</li>
<li>【公差】=&gt; 结果的可接受范围</li>
<li>【控制界限】=&gt; 稳定过程的普通偏差的边界</li>
</ul>
<p>项目经理及项目管理团队负责权衡, 以便同时达到所要求的质量与等级水平。</p>
<p>项目质量管理的核心概念 =&gt; 按有效性递增的五种质量管理水平</p>
<h2> 思维导图</h2>
<figure><img src="/assets/project-quality-management.png" alt="项目质量管理" tabindex="0" loading="lazy"><figcaption>项目质量管理</figcaption></figure>
<h2> 项目质量管理流程</h2>
<figure><img src="/assets/project-quality-management-0.png" alt="项目质量管理" tabindex="0" loading="lazy"><figcaption>项目质量管理</figcaption></figure>
<h2> 规划过程组</h2>
<h3> 规划质量管理</h3>
<p>规划质量管理是识别项目及其可交付成果的质量要求和（或）标准, 并书面描述项目将如何证明符合质量要求和（或）标准的过程。</p>
<p>主要作用是, 为在整个项目期间如何管理和核实质量提供指南和方向。</p>
<h4> ITTO</h4>
<p>组织过程资产 =&gt; 执行组织的质量政策是高级管理层所推崇的, 规定了组织在质量管理方面的工作。</p>
<p>质量成本（不包含生产成本） =&gt; 在产品生命周期中为预防不符合要求, 为评价产品或服务是否符合要求, 以及因未达到要求（返工）,
而发生的所有成本。</p>
<ul>
<li>一致性成本（为了防止失败）
<ul>
<li>预防成本（培训、设备、流程文档化、选择正确时间）</li>
<li>评价成本（检查、测试、破坏性测试）</li>
</ul>
</li>
<li>非一致性成本（为了处理失败）
<ul>
<li>内部失败成本（返工、废品）</li>
<li>外部失败成本（债务、保修、业务流失）</li>
</ul>
</li>
</ul>
<p>流程图 =&gt; 可以通过分析流程图来估算质量成本。通过展示过程步骤, 可帮助改进过程并识别可能出现质量缺陷或可以纳入质量检查的地方。</p>
<figure><img src="/assets/project-quality-management-1.png" alt="项目质量管理-规划质量管理" tabindex="0" loading="lazy"><figcaption>项目质量管理-规划质量管理</figcaption></figure>
<h3> 管理质量</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>主要针对过程的管理, 老版本中叫“质量保证”, QA。代表的工具为质量审计, 用于管理过程。</p>
</div>
<p>管理质量是把组织的质量政策用于项目, 并将质量管理计划转化为可执行的质量活动的过程。主要作用是, 提高实现质量目标的可能性,
以及识别无效过程和导致质量低劣的原因。</p>
<p>在敏捷项目中, 整个项目期间的质量管理由所有团队成员执行；但在传统项目中, 质量管理通常是特定团队成员的职责。</p>
<h4> ITTO</h4>
<ul>
<li>亲和图：可以对潜在缺陷成因进行分类, 展示最应关注的领域。</li>
<li>因果图：“鱼骨图”、“why-why 分析图”和“石川图”, 找根本原因。</li>
<li>直方图：一种展示数字数据的条形图, 可以展示每个可交付成果的缺陷数量、缺陷成因的排列、各个过程的不合规次数,
或项目或产品缺陷的其他表现形式。</li>
<li>帕累托：二八原则, 累积频率, 找主要原因, 便于有针对性地解决问题。</li>
<li>散点图：展示两个变量之间的关系的图形。</li>
<li>（质量）审计：于确定项目活动是否遵循了组织和项目的政策、过程与程序的一种结构化且独立的过程；包括：1 识别, 2 分享, 3 协助, 4
积累, 5 确 认；可事先安排, 也可随机进行；可由内部或外部审计师进行。</li>
<li>面向 X 的设计 (DfX) ：产品设计期间可采用的一系列技术指南, 旨在优化设计的特定方面。</li>
<li>问题解决：1 定义, 2 识别, 3 方案, 4 选择, 5 执行, 6 验证。</li>
<li>质量改进方法：PDCA, 六西格玛。</li>
<li>控制图：显示过程是否稳定、是否有可预测的绩效</li>
</ul>
<p>质量测量指标 =&gt; 描述项目或产品属性, 以及控制质量过程将如何验证符合程度。（属于“项目文件“）</p>
<p>质量审计是识别改进领域的工具之一, 是一种独立审查、确保项目执行过程符合组织或项目定义的方针政策、标准和程序。</p>
<p>质量审计的目标</p>
<ul>
<li>识别最佳实践、违规做法、差距及不足</li>
<li>分享类似项目的良好实践</li>
<li>协助过程改进、提高生产效率</li>
<li>积累经验教训</li>
<li>确认已批准的变更请求的实施情况</li>
</ul>
<p>过程分析 =&gt; 识别过程改进机会, 发现一个过程中存在的问题、制约因素、和非增值活动。</p>
<p>问题解决步骤</p>
<p>1、 定义（问题）；2、识别（根本原因）；3、方案（生成方案）；4、选择（最佳方案）；5、执行；6、验证（有效性）</p>
<figure><img src="/assets/project-quality-management-2.png" alt="项目质量管理-管理质量" tabindex="0" loading="lazy"><figcaption>项目质量管理-管理质量</figcaption></figure>
<h2> 控制过程组</h2>
<h3> 控制质量</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>主要针对结果的检查, QC。代表的工具为检查, 检查结果。</p>
</div>
<p>核实项目可交付成果和工作已经达到主要相关方的质量要求, 可供最终验收。</p>
<p>由于缺陷, 客户拒绝交付, 若要避免这个问题, 项目经理事先应该定期检查核实可交付成果。</p>
<p>在可交付成果中发现大量缺陷：</p>
<ul>
<li>少量部分 =&gt; 查原因、走变更流程</li>
<li>大量部分 =&gt; 审查过程、过程改进</li>
</ul>
<figure><img src="/assets/project-quality-management-3.png" alt="项目质量管理-控制质量" tabindex="0" loading="lazy"><figcaption>项目质量管理-控制质量</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-quality-management.png" type="image/png"/>
    </item>
    <item>
      <title>第十三章：项目相关方管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-related-party-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-related-party-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第十三章：项目相关方管理</source>
      <description>前言 记录项目相关方管理章节的相关知识、频繁考点。 核心概念 项目始于干系人需求, 终于干系人满意。项目干系人是指受项目影响或能影响项目的任何个人、小组或组织, 也可以说, 与项目有直接或间接关系的任何个人、小组或组织, 都是项目干系人。项目干系人管理应该按照如下步骤开展：识别干系人、规划干系人管理、管理干系人参与和控制干系人参与。 项目干系人管理是项...</description>
      <category>PMP</category>
      <pubDate>Wed, 03 Aug 2022 21:10:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目相关方管理章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 核心概念</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>项目始于干系人需求, 终于干系人满意。项目干系人是指受项目影响或能影响项目的任何个人、小组或组织, 也可以说, 与项目有直接或间接关系的任何个人、小组或组织, 都是项目干系人。项目干系人管理应该按照如下步骤开展：识别干系人、规划干系人管理、管理干系人参与和控制干系人参与。</p>
<p>项目干系人管理是项目管理中的重要内容之一, 目的是调动积极因素, 化解消极影响, 确保项目成功。</p>
</div>
<p>相关方 =&gt; 会受到项目的积极或消极影响, 或者能对项目施加积极或消极的影响的任何人。</p>
<p>相关方满意度应作为项目目标加以识别和管理。</p>
<p>识别相关方和引导相关方参与的过程需要迭代开展, 至少要在以下时点开展这些活动：</p>
<ol>
<li>项目进入其生命周期的不同阶段；</li>
<li>当前相关方不再与项目工作有关, 或者在项目的相关方社区中出现了新的相关方成员；</li>
<li>组织内部或更大区域的相关方社区发生重大变化。</li>
</ol>
<h2> 思维导图</h2>
<figure><img src="/assets/project-related-party-management.png" alt="项目相关方管理" tabindex="0" loading="lazy"><figcaption>项目相关方管理</figcaption></figure>
<h2> 启动过程组</h2>
<h3> 识别相关方</h3>
<p>识别相关方是定期识别项目相关方, 分析和记录他们的利益、参与度、相互依赖性、影响力和对项目成功的潜在影响的过程。</p>
<h4> ITTO</h4>
<p>头脑写作：头脑风暴的改良形式, 让个人参与者有时间在小组创意讨论开始前单独思考问题。信息可通过面对面小组会议收集,
或在由技术支持的虚拟环境中收集。</p>
<p>相关方分析：相关方分析会产生相关方清单和关于相关方的各种信息, 包括：兴趣、权利、所有权、知识、贡献。</p>
<p>权力利益方格、权力影响方格, 或作用影响方格</p>
<p>权利 =&gt; 职权
利益 =&gt; 对项目结果的关注程度
影响 =&gt; 主动参与项目的程度
作用 =&gt; 改变项目计划或执行的能力</p>
<p>相关方登记册：身份信息、评估信息、相关方分类。</p>
<figure><img src="/assets/project-related-party-management-1.png" alt="项目相关方管理-识别相关方" tabindex="0" loading="lazy"><figcaption>项目相关方管理-识别相关方</figcaption></figure>
<h2> 规划过程组</h2>
<h3> 规划相关方管理</h3>
<p>根据相关方的需求、期望、利益和对项目的潜在影响, 制定项目相关方参与项目的方法的过程。本过程的主要作用是, 提供与相关方进行有效互动的可行计划。</p>
<h4> ITTO</h4>
<p>相关方参与计划：相关方参与计划可包括（但不限于）调动个人或相关方参与的特定策略或方法。</p>
<figure><img src="/assets/project-related-party-management-2.png" alt="项目相关方管理-规划相关方管理" tabindex="0" loading="lazy"><figcaption>项目相关方管理-规划相关方管理</figcaption></figure>
<h2> 执行过程组</h2>
<h3> 管理相关方参与</h3>
<p>与相关方进行沟通和协作以满足其需求与期望、处理问题, 并促进相关方合理参与的过程。主要作用是, 让项目经理能够提高相关方的支持,
并尽可能降低相关方的抵制。</p>
<p>管理相关方参与包括以下活动：</p>
<ol>
<li>在适当的项目阶段引导相关方参与, 以便获取、确认或维持他们对项目成功的持续承诺；</li>
<li>通过谈判和沟通管理相关方期望；</li>
<li>通过谈判和沟通管理相关方期望；</li>
<li>澄清和解决已识别的问题。</li>
</ol>
<h4> ITTO</h4>
<figure><img src="/assets/project-related-party-management-3.png" alt="项目相关方管理-管理相关方参与" tabindex="0" loading="lazy"><figcaption>项目相关方管理-管理相关方参与</figcaption></figure>
<h2> 监控过程组</h2>
<h3> 监督相关方参与</h3>
<p>监督项目相关方关系, 并通过修订参与策略和计划来引导相关方合理参与项目的过程。主要作用是, 随着项目进展和环境变化,
维持或提升相关方参与活动的效率和效果。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-related-party-management-4.png" alt="项目相关方管理-监督相关方参与" tabindex="0" loading="lazy"><figcaption>项目相关方管理-监督相关方参与</figcaption></figure>
<h2> 事先与事后</h2>
<ul>
<li>事先：早识别、早分析、早参与</li>
<li>事后：管理相关方参与（或审查相关方参与计划）</li>
</ul>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-related-party-management.png" type="image/png"/>
    </item>
    <item>
      <title>第九章：项目资源管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-resource-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-resource-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第九章：项目资源管理</source>
      <description>前言 记录项目资源管理章节的相关知识、频繁考点。 核心概念 人才是企业最重要的财富, 项目人力资源管理是项目管理的一个重要组成部分。项目人力资源管理的四个过程：制定人力资源计划、组建项目团队、建设项目团队和管理项目团队。 项目经理必须做到对人要体谅和尊敬、明白什么能激励人、与人仔细沟通, 只有集中精力做好人力资源管理才能使下属很好的完成任务。 激励理论...</description>
      <category>PMP</category>
      <pubDate>Mon, 01 Aug 2022 19:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目资源管理章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 核心概念</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>人才是企业最重要的财富, 项目人力资源管理是项目管理的一个重要组成部分。项目人力资源管理的四个过程：制定人力资源计划、组建项目团队、建设项目团队和管理项目团队。</p>
<p>项目经理必须做到对人要体谅和尊敬、明白什么能激励人、与人仔细沟通, 只有集中精力做好人力资源管理才能使下属很好的完成任务。</p>
</div>
<h3> 激励理论</h3>
<ul>
<li>马斯洛的需求层次理论 =&gt; 从最低等级到最高等级依次是：生理需求、安全需求、社交需求、尊重需求、自我实现需求</li>
<li>赫兹伯格的双因素理论 =&gt; 保健因素、激励因素
<ul>
<li>保健因素 =&gt; 是导致不满足的因素, 这些因素做得好不会提高激励, 做的不好就会损害激励</li>
<li>激励因素 =&gt; 是导致满足感的因素, 能够真正起激励作用的。</li>
</ul>
</li>
<li>麦格雷戈的 X 理论和 Y 理论
<ul>
<li>X 理论认为只能用低层次的需求进行激励</li>
<li>Y 理论认为人更应该受到高层次需求的激励, 鼓励团队成员参与到目标的制定中, 没有严格的等级和监控制度</li>
</ul>
</li>
</ul>
<h2> 思维导图</h2>
<figure><img src="/assets/project-resource-management.png" alt="项目资源管理" tabindex="0" loading="lazy"><figcaption>项目资源管理</figcaption></figure>
<h2> 规划过程组</h2>
<h3> 规划资源管理</h3>
<p>规划资源管理是定义如何估算、获取、管理和利用团队以及实物资源的过程。</p>
<p>数据表现-层级型：</p>
<ul>
<li>工作分解结构 WBS =&gt; 可交付成果为导向的工作层级分解, 有助于明确高层级的指责</li>
<li>组织分解结构 OBS =&gt; 组织的部门, 单元或团队为导向的成绩分解, 有助于查看对应的全部项目职责</li>
<li>资源分解结构 RBS =&gt; 资源的类别和类型为导向的层级分解, 用于规划、管理和监控项目工作</li>
</ul>
<p>RACI 矩阵 =&gt; RACI 矩阵对明确划分角色和期望特别有用。RACI 中每个活动只肯能有一个 “A（负责）”</p>
<ul>
<li>R =&gt; 执行；A =&gt; 负责；C =&gt; 咨询；I =&gt; 知情</li>
<li>反应与每个人相关的所有活动</li>
<li>反应与每项活动相关的人员</li>
<li>确保任何一项任务都只有一个人负责, 从而避免职责不清</li>
</ul>
<p>资源管理计划：资源管理计划提供了关于如何分类、分配、管理和释放项目资源的指南。包括：
角色与职责：</p>
<ul>
<li>
<p>角色：在项目中, 某人承担的职务或分配给某人的职务。</p>
</li>
<li>
<p>职权：使用项目资源、做出决策、签字批准、验收可交付成果并影响他人开展项目工作的权力。</p>
</li>
<li>
<p>职责：为完成项目活动, 项目团队成员必须履行的职责和工作。</p>
</li>
<li>
<p>能力：为完成项目活动, 项目团队成员需具备的技能和才干。</p>
</li>
<li>
<p>项目组织图：项目组织图以图形方式展示项目团队成员及其报告关系。</p>
</li>
<li>
<p>培训：针对项目成员的培训策略。</p>
</li>
<li>
<p>团队建设：建设项目团队的方法。</p>
</li>
<li>
<p>认可计划：将给予团队成员哪些认可和奖励, 以及何时给予。</p>
</li>
</ul>
<p>团队章程：为团队创建团队价值观、共识和工作指南的文件。尽早认可并遵守明确的规则, 有助于减少误解, 提高生产力；可定期审查和更新团队章程,
确保团队始终了解团队基本规则, 并指导新成员融入团队。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-resource-management-1.png" alt="项目资源管理-规划资源管理" tabindex="0" loading="lazy"><figcaption>项目资源管理-规划资源管理</figcaption></figure>
<h3> 估算活动资源</h3>
<p>估算执行项目所需的团队资源, 材料、设备和用品的类型和数量的过程。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-resource-management-2.png" alt="项目资源管理-估算活动资源" tabindex="0" loading="lazy"><figcaption>项目资源管理-估算活动资源</figcaption></figure>
<h2> 执行过程组</h2>
<h3> 获取资源</h3>
<p>获取资源是获取项目所需的团队成员、设施、设备、材料、用品和其他资源的过程。本过程的主要作用是, 概述和指导资源的选择,
并将其分配给相应的活动。</p>
<p>在获取项目资源过程中应注意下列事项：</p>
<ol>
<li>项目经理或项目团队应该进行有效谈判。</li>
<li>不能获得项目所需的资源时会影响项目, 甚至可能导致项目取消。</li>
<li>无法获得所需团队资源, 项目经理或项目团队可能不得不用替代资源。</li>
</ol>
<h4> ITTO</h4>
<p>预分派 =&gt; 事先确定项目的实物或团队资源。</p>
<ol>
<li>竞标过程中承诺分派</li>
<li>项目取决于特定人员的专有技能</li>
<li>项目章程中指定</li>
</ol>
<p>虚拟团队 =&gt; 具有共同目标、在完成角色人物的过程中很少或没有时间面对面工作的一群人</p>
<p>实物资源分配单：项目将使用的材料、设备、用品、地点和其他实物资源。</p>
<p>项目团队派工单：记录了团队成员及其在项目中的角色和职责（花名册）。</p>
<p>资源日历：资源何时可用, 可用多久。</p>
<figure><img src="/assets/project-resource-management-3.png" alt="项目资源管理-获取资源" tabindex="0" loading="lazy"><figcaption>项目资源管理-获取资源</figcaption></figure>
<h3> 建设团队</h3>
<p>建设团队是提高工作能力, 促进团队成员互动, 改善团队整体氛围, 以提高项目绩效的过程。</p>
<p>塔克曼阶梯理论：</p>
<ul>
<li>形成阶段：相互认识, 相互独立, 不一定开诚布公。</li>
<li>震荡阶段：不同观点和意见, 有冲突。</li>
<li>规范阶段：开始协同工作, 学习相互信任。</li>
<li>成熟阶段：组织有序, 相互依靠, 平稳高效。</li>
<li>解散阶段：释放人员, 解散团队。</li>
</ul>
<h4> ITTO</h4>
<p>集中办公：增进沟通和集体感, 老版本中有“紧密矩阵”的说法。</p>
<p>团队建设：各种活动（甚至开会）目的：协同工作、增强信任。是为了更好的协同工作。</p>
<p>培训：包括旨在提高项目团队成员能力、减少成员之间的差异的全部活动。</p>
<p>团队绩效评价：1.个人技能的改进, 2.团队能力的改进, 3.团队成员离职率的降低, 4.团队凝聚力的加强。</p>
<figure><img src="/assets/project-resource-management-4.png" alt="项目资源管理-建设团队" tabindex="0" loading="lazy"><figcaption>项目资源管理-建设团队</figcaption></figure>
<h3> 管理团队</h3>
<p>管理团队是跟踪团队成员工作表现, 提供反馈, 解决问题并管理团队变更, 以优化项目绩效的过程。本过程的主要作用是,
影响团队行为、管理冲突以及解决问题。</p>
<h4> ITTO</h4>
<p>成功的冲突管理可提高生产力, 改进工作关系。1.团队成员解决, 2.项目经理协助, 3.正式的程序, 包括惩戒措施。</p>
<p>冲突来源：1.资源稀缺；2.进度优先级排序；3.个人工作风格差异；4.性格差异</p>
<p>冲突管理的解决步骤：</p>
<ol>
<li>首先由项目团队成员负责解决</li>
<li>冲突升级, 项目经理应提供协助（私下处理）</li>
<li>如果破坏性冲突绩效存在, 则可使用正式程序, 包括采取惩戒措施</li>
</ol>
<p>五种常用的冲突解决方法：</p>
<ul>
<li>撤退/回避：从冲突中退出, 推迟, 推给他人解决。</li>
<li>缓和/包容：强调一致而非差异；考虑其他方的需要。（求同存异）</li>
<li>妥协/调解：部分解决问题, 一定程度上满意。</li>
<li>强迫/命令：推行一方观点；通常通过权力强行解决紧急问题。</li>
<li>合作/解决问题：综合考虑不同的观点和意见, 合作的态度和开放式对话达成共识, 引导各方达成共识和承诺。（最佳方式）</li>
</ul>
<figure><img src="/assets/project-resource-management-5.png" alt="项目资源管理-管理团队" tabindex="0" loading="lazy"><figcaption>项目资源管理-管理团队</figcaption></figure>
<h2> 控制过程组</h2>
<h3> 控制资源</h3>
<p>确保按计划为项目分配实物资源, 监督资源实际使用情况, 并采取必要纠正措施的过程。主要作用是, 确保资源适时适地可用于项目,
且在不再需要时被释放。</p>
<p>应在所有项目阶段和整个项目生命周期期间持续开展控制资源过程。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-resource-management-6.png" alt="项目资源管理-控制资源" tabindex="0" loading="lazy"><figcaption>项目资源管理-控制资源</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-resource-management.png" type="image/png"/>
    </item>
    <item>
      <title>第十一章：项目风险管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-risk-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-risk-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第十一章：项目风险管理</source>
      <description>前言 记录项目风险管理章节的相关知识、频繁考点。 核心概念 项目风险管理的目标在于提高正面风险的概率和影响, 降低负面风险的概率和影响, 从而提高项目成功的可能性。 项目风险管理的目标在于提高正面风险的概率和（或）影响, 降低负面风险的概率和（或）影响, 从而提高项目成功的可能性。 项目的独特性带来风险。 风险三要素：风险事件、概率、影响。 单个项目风...</description>
      <category>PMP</category>
      <pubDate>Thu, 28 Jul 2022 21:50:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目风险管理章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 核心概念</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>项目风险管理的目标在于提高正面风险的概率和影响, 降低负面风险的概率和影响, 从而提高项目成功的可能性。</p>
</div>
<p>项目风险管理的目标在于提高正面风险的概率和（或）影响, 降低负面风险的概率和（或）影响, 从而提高项目成功的可能性。</p>
<p>项目的独特性带来风险。</p>
<p>风险三要素：风险事件、概率、影响。</p>
<p>单个项目风险是一旦发生, 会对一个或多个项目目标产生正面或负面影响的不确定事件或条件。</p>
<p>整体项目风险是不确定性对项目整体的影响, 是相关方面临的项目结果正面和负面变异区间。它源于包括单个风险在内的所有不确定性。</p>
<h3> 三种性质的项目风险</h3>
<ul>
<li>已知-已知风险 =&gt; 已识别并分析过程的风险, 可对这些风险规划应对措施。（计入时间/成本）</li>
<li>已知-未知风险 =&gt; 已识别, 但又无法主动管理的风险, 要分配一定的应急储备。（应急储备）</li>
<li>未知-未知风险 =&gt; 无法进行主动管理, 因此需要分配一定的管理储备。（管理储备）</li>
</ul>
<h3> 影响风险态度的因素</h3>
<p>（1）风险偏好
（2）风险承受力
（3）风险的临界值</p>
<h2> 思维导图</h2>
<figure><img src="/assets/project-risk-management.png" alt="项目风险管理" tabindex="0" loading="lazy"><figcaption>项目风险管理</figcaption></figure>
<h2> 如何做好项目风险管理</h2>
<figure><img src="/assets/project-risk-management-0.png" alt="项目风险管理" tabindex="0" loading="lazy"><figcaption>项目风险管理</figcaption></figure>
<h2> 规划过程组</h2>
<h3> 规划风险管理</h3>
<p>规划风险管理是定义如何实施项目风险管理活动的过程。</p>
<h4> ITTO</h4>
<p>风险管理计划：如何安排与实施风险管理活动。风险管理计划无风险。</p>
<p>主要包括：</p>
<ul>
<li>风险类别：通常借助风险分解结构 (RBS)来构建风险类别。RBS 是潜在风险来源的层级展现, 有助于项目团队考虑单个项目风险的全部可能来源,
对识别风险或归类已识别风险特别有用。</li>
<li>相关方风险偏好：应在风险管理计划中记录项目关键相关方的风险偏好。</li>
<li>风险概率和影响定义：根据具体的项目环境, 组织和关键相关方的风险偏好和临界值, 来制定风险概率和影响定义。</li>
<li>概率和影响矩阵：组织可在项目开始前确定优先级排序规则, 并将其纳入组织过程资产, 或者也可为具体项目量身定制优先级排序规则。</li>
</ul>
<figure><img src="/assets/project-risk-management-1.png" alt="项目风险管理-规划风险管理" tabindex="0" loading="lazy"><figcaption>项目风险管理-规划风险管理</figcaption></figure>
<h3> 识别风险</h3>
<p>应鼓励所有项目相关方参与单个项目风险的识别工作。识别风险是一个迭代的过程。迭代的频率和每次迭代所需的参与程度因情况而异,
应在风险管理计划中做出相应规定。</p>
<h4> ITTO</h4>
<p>SWOT 分析：对项目的优势、劣势、机会和威胁 (SWOT) 进行逐个检查。</p>
<p>提示清单：可作为框架用于协助项目团队形成想法。用风险分解结构底层的风险类别作为提示清单可以识别单个风险；识别整体项目风险
PESTLE、TECOP、VUCA。</p>
<p>风险登记册：记录已识别单个项目风险的详细信息。包括：已识别风险的清单、潜在风险责任人、潜在风险应对措施清单。</p>
<figure><img src="/assets/project-risk-management-2.png" alt="项目风险管理-识别风险" tabindex="0" loading="lazy"><figcaption>项目风险管理-识别风险</figcaption></figure>
<h3> 实施定性风险分析</h3>
<p>评估单个项目风险发生的概率和影响以及其他特征, 对风险进行优先级排序, 从而为后续分析或行动提供基础的过程。主要作用是重点关注高优先级的风险。</p>
<p>本过程会为每个风险识别出责任人, 以便由他们负责规划风险应对措施, 并确保应对措施的实施。</p>
<h4> ITTO</h4>
<p>风险概率和影响评估：概率评估考虑的是特定风险发生的可能性, 影响评估考虑的是风险对一项或多项项目目标的潜在影响。低概率和影响的风险将被列入风险登记册中的观察清单,
以供未来监控。</p>
<figure><img src="/assets/project-risk-management-3.png" alt="项目风险管理-实施定性风险分析" tabindex="0" loading="lazy"><figcaption>项目风险管理-实施定性风险分析</figcaption></figure>
<h3> 实施定量风险分析</h3>
<p>量化整体项目风险敞口, 并提供额外的定量风险信息, 以支持风险应对规划。</p>
<p>并非所有项目都需要实施定量风险分析。</p>
<h4> ITTO</h4>
<p>敏感性分析：确定哪些单个项目风险或其他不确定性来源对项目结果具有最大的潜在影响。敏感性分析的结果通常用龙卷风图来表示。</p>
<p>决策树分析：用决策树在若干备选行动方案中选择一个最佳方案（EMV 预期货币价值分析）</p>
<figure><img src="/assets/project-risk-management-4.png" alt="项目风险管理-实施定量风险分析" tabindex="0" loading="lazy"><figcaption>项目风险管理-实施定量风险分析</figcaption></figure>
<h3> 规划风险应对</h3>
<p>制定可选方案、选择应对策略并商定应对行动的过程。主要作用是, 制定应对整体项目风险和单个项目风险的适当方法；还将分配资源,
并根据需要将相关活动添加进项目文件和项目管理计划。</p>
<ul>
<li>次生风险 =&gt; 实施风险应对措施的直接结果, 由于应对一个风险而产生的另一个风险</li>
<li>残余风险 =&gt; 执行风险应对计划后仍然残留的风险, 通常是可接受的</li>
</ul>
<h4> 威胁应对策略</h4>
<table>
<thead>
<tr>
<th>策略类别</th>
<th>定义</th>
<th>举例</th>
<th>注意点</th>
</tr>
</thead>
<tbody>
<tr>
<td>上报</td>
<td>风险将在更高层面加以管理</td>
<td>上报（一旦上报, 项目团队不再进一步监督）</td>
<td>相关人员必须愿意承担应对责任</td>
</tr>
<tr>
<td>规避</td>
<td>消除威胁</td>
<td>延长进度、改变策略、缩小范围、澄清需求、获取信息、改善沟通、取得专有技能</td>
<td>适用于高优先级威胁</td>
</tr>
<tr>
<td>转移</td>
<td>转移给第三方</td>
<td>保险、履约保函、 担保、外包</td>
<td>需要支付风险转移费用。 转移风险是把风险管理责任简单地推给另一方, 而并非消除风险</td>
</tr>
<tr>
<td>减轻</td>
<td>降低威胁发生的概率和（或）影响</td>
<td>更简单的流程、更多的测试、更可靠的卖方、原型开发、加入冗余部件</td>
<td>不利风险的概率和/或影响降低到可接受的临界值范围</td>
</tr>
<tr>
<td>接收</td>
<td>承认威胁的存在, 但不主动采取措施</td>
<td>主动接受：建立应急储备； 被动接受：记录策略, 定期复查</td>
<td>适用于低优先级威胁</td>
</tr>
</tbody>
</table>
<h4> 机会应对策略</h4>
<table>
<thead>
<tr>
<th>策略类别</th>
<th>定义</th>
<th>举例</th>
<th>注意点</th>
</tr>
</thead>
<tbody>
<tr>
<td>上报</td>
<td>风险将在更高层面加以管理</td>
<td>上报（一旦上报, 项目团队不再进一步监督）</td>
<td>相关人员必须愿意承担应对责任</td>
</tr>
<tr>
<td>开拓</td>
<td>让机会 100%发生</td>
<td>把组织中最有能力的资源分配给项目来缩短完成时间； 采用全新或升级的技术来节约成本 （牛 X 的人或技术）</td>
<td>适用于高优先级机会</td>
</tr>
<tr>
<td>分享</td>
<td>转移给第三方, 使其享有机会所带来的部分收益</td>
<td>建立合伙关系、合作团队、特殊公司、合资企业</td>
<td>必须为已分享的机会安排新的风险责任人（最有能力抓住机会的人）</td>
</tr>
<tr>
<td>提高</td>
<td>提高机会出现的概率和（或）影响</td>
<td>为早日完成活动而增加资源（普通人）</td>
<td>不利风险的概率和/或影响降低到可接受的临界值范围</td>
</tr>
<tr>
<td>接收</td>
<td>承认机会的存在, 但不主动采取措施。</td>
<td>主动接受：建立应急储备； 被动接受：记录策略, 无需任何其他行动, 需要定期复查</td>
<td>适用于低优先级机会</td>
</tr>
</tbody>
</table>
<h4> ITTO</h4>
<p>应急应对策略：仅在特定事件发生时才采用的应对措施。包括应急计划和弹回计划。</p>
<p>风险登记册：</p>
<ol>
<li>商定的应对策略、实施应对策略所需的具体行动</li>
<li>风险发生的触发条件、征兆和预警信号</li>
<li>实施所选 应对策略所需的预算和进度活动</li>
<li>应急计划、弹回计划、残余风险、次生风险</li>
</ol>
<figure><img src="/assets/project-risk-management-5.png" alt="项目风险管理-规划风险应对" tabindex="0" loading="lazy"><figcaption>项目风险管理-规划风险应对</figcaption></figure>
<h2> 执行过程组</h2>
<h3> 实施风险应对</h3>
<p>实施风险应对是执行商定的风险应对计划的过程。本过程的主要作用是, 确保按计划执行商定的风险应对措施。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-risk-management-6.png" alt="项目风险管理-实施风险应对" tabindex="0" loading="lazy"><figcaption>项目风险管理-实施风险应对</figcaption></figure>
<h2> 监控过程组</h2>
<h3> 监督风险</h3>
<p>在整个项目期间, 监督商定的风险应对计划的实施、跟踪已识别风险、识别和分析新风险, 以及评估风险管理有效性的过程。</p>
<h4> ITTO</h4>
<p>技术绩效分析：把技术成果与取得技术成果的计划进行比较。实际结果偏离计划的程度可以代表威胁或机会的潜在影响。</p>
<p>储备分析：在项目的任一时点比较剩余应急储备与剩余风险量, 从而确定剩余储备是否仍然合理。</p>
<p>风险审计：评估风险管理过程的有效性。项目经理负责确保按项目风险管理计划所规定的频率开展风险审计。</p>
<figure><img src="/assets/project-risk-management-7.png" alt="项目风险管理-监督风险" tabindex="0" loading="lazy"><figcaption>项目风险管理-监督风险</figcaption></figure>
<h2> 答题技巧</h2>
<p>首先看是“识别了风险”还是“风险发生了”。</p>
<ul>
<li>如是“识别了风险”, 则更新风险登记册, 或者, 查阅风险登记册、记录在风险登记册。</li>
<li>如是“发生了风险”, 则确定是“已知”风险还是“未知”风险：</li>
<li>已知风险：查阅风险登记册, 直接应对；如果要使用储备, 一般是使用应急储备。</li>
<li>未知风险：采取权变措施, 提交变更请求, 使用管理储备。</li>
</ul>
<p>如果是“已知”风险, 但是应对无效, 同样需要权变, 提交变更请求, 使用管理储备。</p>
<p>风险管理的顺序如下：1.识别 2.定性（必须要做）3.定量（可以不做）4.规划应对 5.实施应对</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-risk-management.png" type="image/png"/>
    </item>
    <item>
      <title>第五章：项目范围管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-scope-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-scope-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第五章：项目范围管理</source>
      <description>前言 记录项目范围管理章节的相关知识、频繁考点。 核心概念 项目范围管理是指确保项目包括成功完成项目所需的功全部工作, 但又只包括必须完成的工作的各个过程, 一句话概括为：做且只做该做的事, 不该做的不做。 项目范围管理包括做且只做所需的全部工作。; “范围” = 产品范围+项目范围; 产品范围 =&amp;gt; 某项产品、服务或成果所具有的特性和功能；完成情况是...</description>
      <category>PMP</category>
      <pubDate>Mon, 18 Jul 2022 21:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目范围管理章节的相关知识、频繁考点。</p>
</div>
<!-- more -->
<h2> 核心概念</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>项目范围管理是指确保项目包括成功完成项目所需的功全部工作, 但又只包括必须完成的工作的各个过程, 一句话概括为：做且只做该做的事,
不该做的不做。</p>
</div>
<ul>
<li>项目范围管理包括做且只做所需的全部工作。</li>
<li>“范围” = 产品范围+项目范围
<ul>
<li>产品范围 =&gt; 某项产品、服务或成果所具有的特性和功能；完成情况是根据产品需求来衡量的</li>
<li>项目范围 =&gt; 为交付具有规定特性与功能的产品、服务或成果而必须完成的工作；完成情况是根据项目管理计划来衡量的</li>
</ul>
</li>
<li>需求
<ul>
<li>产品、服务或成果必须具备的条件或能力</li>
<li>已量化且书面记录的需要和期望</li>
<li>项目执行开始后对其进行测量</li>
<li>工作分解结构（WBS）的基础</li>
<li>发起人、客户和其他相关方收集并衡量</li>
</ul>
</li>
</ul>
<p>项目范围说明书的组成部分：</p>
<p>（1）产品范围描述
（2）验收标准
（3）可交付成果
（4）除外责任</p>
<p>哪儿找可交付成果和验收标准 =&gt; 首选范围说明书, 次选 WEB 词典, 再次选范围基准</p>
<h2> 思维导图</h2>
<figure><img src="/assets/project-scope-management.png" alt="项目范围管理" tabindex="0" loading="lazy"><figcaption>项目范围管理</figcaption></figure>
<h2> 如何做好项目范围管理</h2>
<figure><img src="/assets/project-scope-management-0.png" alt="项目范围管理" tabindex="0" loading="lazy"><figcaption>项目范围管理</figcaption></figure>
<h2> 规划过程组</h2>
<h3> 规划范围管理</h3>
<ul>
<li>范围管理计划（指南）：描述如何定义、制定、监督、控制和确认项目范围
<ul>
<li>范围管理计划无范围, 范围是记录在范围基准中的</li>
</ul>
</li>
<li>需求管理计划：描述如何分析、记录和管理项目和产品需求
<ul>
<li>需求管理计划无需求, 需求是记录在需求文件中的</li>
</ul>
</li>
</ul>
<h4> ITTO</h4>
<figure><img src="/assets/project-scope-management-1.png" alt="项目范围管理-规划范围管理" tabindex="0" loading="lazy"><figcaption>项目范围管理-规划范围管理</figcaption></figure>
<h3> 收集需求</h3>
<p>需求是指根据特定协议或其他强制性规范, 产品、服务或成果必须具备的条件或能力。</p>
<ul>
<li>
<p>需求 =&gt; 需求是一种需要</p>
</li>
<li>
<p>范围 =&gt; 范围是满足“需求”必须交付的可交付成果和相关工作</p>
</li>
<li>
<p>需求文件：需求文件描述各种单一需求将如何满足与项目相关的业务需求。</p>
</li>
<li>
<p>需求跟踪矩阵：需求跟踪矩阵是把产品需求从其来源连接到能满足需求的可交付成果的一种表格。</p>
</li>
</ul>
<h4> ITTO</h4>
<figure><img src="/assets/project-scope-management-2.png" alt="项目范围管理-收集需求" tabindex="0" loading="lazy"><figcaption>项目范围管理-收集需求</figcaption></figure>
<h3> 定义范围</h3>
<p>定义范围是制定项目和产品详细描述的过程。本过程的主要作用是, 描述产品、服务或成果的边界和验收标准。可减少客户改动范围。</p>
<p>项目范围说明书：记录了整个范围, 包括项目和产品范围；详细描述了项目的可交付成果；还代表项目相关方之间就项目范围所达成的共识。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-scope-management-3.png" alt="项目范围管理-定义范围" tabindex="0" loading="lazy"><figcaption>项目范围管理-定义范围</figcaption></figure>
<h3> 创建 WBS</h3>
<p>把项目可交付成果和项目工作分解成较小、更易于管理的组件的过程。</p>
<p>WBS 组织并定义了项目的总范围, 代表着经批准的当前项目范围说明书中所规定的工作。WBS 最低层的组成部分称为工作包。</p>
<p>WBS 最低层的组成部分称为工作包, 其中包括计划的工作。</p>
<p>项目范围说明书：描述了需要实施的工作及不包含在项目中的工作。</p>
<p>需求文件：需求文件详细描述了各种单一需求如何满足项目的业务需要。</p>
<p>范围基准：经过批准的范围说明书、WBS 和相应的 WBS 词典。</p>
<p>即 WBS 为可交付物最佳的定义和组织了项目范围。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-scope-management-4.png" alt="项目范围管理-创建 WBS" tabindex="0" loading="lazy"><figcaption>项目范围管理-创建 WBS</figcaption></figure>
<h2> 监控过程组</h2>
<h3> 确认范围</h3>
<p>确认范围过关注可交付成果的验收, 而控制质量关注可交付成果的正确性及是否满足质量要求。控制质量过程通常先于确认范围过程,
但二者也可同时进行。</p>
<p>核实的可交付成果：核实的可交付成果是指已经完成, 并被控制质量过程检查为正确的可交付成果。</p>
<p>确认项目可交付成果是否符合产品验收标准并满足客户的期望。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-scope-management-5.png" alt="项目范围管理-确认范围" tabindex="0" loading="lazy"><figcaption>项目范围管理-确认范围</figcaption></figure>
<h3> 控制范围</h3>
<p>属于变更流程。</p>
<p>控制范围是监督项目和产品的范围状态, 管理范围基准变更的过程。本过程的主要作用是, 在整个项目期间保持对范围基准的维护。</p>
<h3> 范围蔓延、镀金、范围潜变</h3>
<div class="hint-container tip">
<p class="hint-container-title">范围蔓延</p>
<ul>
<li>未对时间、成本和资源做相应调整, 未经控制的产品或项目范围的扩大。</li>
<li>来自团队内部原因造成的范围蔓延称为“镀金”。</li>
<li>来自团队外部原因造成的范围蔓延称为“范围潜变”。</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">镀金</p>
<p>项目人员为了“讨好”客户而做的不解决实际问题、没有应用价值的项目活动。</p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">范围潜变</p>
<p>范围潜变是指客户不断提出小的、不易察觉的范围改变, 如果不加控制, 累计起来导致项目严重偏离既定的范围基准, 导致项目失控和失败。</p>
</div>
<p>如果已经出现了范围蔓延, 需要停止不良变更, 补变更流程。如果变更没有获得批准, 需要取消不良变更。</p>
<h4> ITTO</h4>
<figure><img src="/assets/project-scope-management-6.png" alt="项目范围管理-确认范围" tabindex="0" loading="lazy"><figcaption>项目范围管理-确认范围</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-scope-management.png" type="image/png"/>
    </item>
    <item>
      <title>Mac 下 brew 切换为国内源</title>
      <link>https://vxhly.github.io/views/liunx/HomeBrew-change-source.html</link>
      <guid>https://vxhly.github.io/views/liunx/HomeBrew-change-source.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Mac 下 brew 切换为国内源</source>
      <description>前言 Homebrew 是一款自由及开放源代码的软件包管理系统, 用以简化 macOS 和 linux 系统上的软件安装过程。以下是提供 Homebrew 的国内切源方法。</description>
      <category>liunx</category>
      <pubDate>Sat, 10 Sep 2016 14:04:39 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Homebrew 是一款自由及开放源代码的软件包管理系统, 用以简化 macOS 和 linux 系统上的软件安装过程。以下是提供 Homebrew 的国内切源方法。</p>
</div>
<!-- more -->
<h2> 简介</h2>
<p>Homebrew 是一款自由及开放源代码的软件包管理系统, 用以简化 macOS 和 linux 系统上的软件安装过程。它拥有安装、卸载、更新、查看、搜索等很多实用的功能, 通过简单的一条指令, 就可以实现包管理, 十分方便快捷。</p>
<p><code>Homebrew</code> 主要有四个部分组成: <code>brew</code>、<code>homebrew-core</code> 、<code>homebrew-bottles</code>、<code>homebrew-cask</code>。</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>brew</td>
<td>Homebrew 源代码仓库</td>
</tr>
<tr>
<td>homebrew-core</td>
<td>Homebrew 核心软件仓库</td>
</tr>
<tr>
<td>homebrew-bottles</td>
<td>Homebrew 预编译二进制软件包</td>
</tr>
<tr>
<td>homebrew-cask</td>
<td>提供 macOS 应用和大型二进制文件</td>
</tr>
</tbody>
</table>
<h2> 查看本地的源</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 替换为阿里源</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 替换为清华源</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 替换为中科大源</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 重置为官方源</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>APP开发-概念篇</title>
      <link>https://vxhly.github.io/views/app/app-develop-concept.html</link>
      <guid>https://vxhly.github.io/views/app/app-develop-concept.html</guid>
      <source url="https://vxhly.github.io/rss.xml">APP开发-概念篇</source>
      <description>前言 表面上看, 手机 App 都是同样的东西, 就是手机上的应用程序, 点击图标就能运行, 但是它们的底层技术不一样。接下本篇将介绍一下常见的 APP 开发技术以及其的优缺点。</description>
      <category>app</category>
      <pubDate>Thu, 23 Jan 2020 09:42:39 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>表面上看, 手机 App 都是同样的东西, 就是手机上的应用程序, 点击图标就能运行, 但是它们的底层技术不一样。接下本篇将介绍一下常见的 APP 开发技术以及其的优缺点。</p>
</div>
<!-- more -->
<h2> 文章著作权声明</h2>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>声明以下内容摘自原文 <a href="https://www.ruanyifeng.com/blog/2019/12/hybrid-app-concepts.html" target="_blank" rel="noopener noreferrer">H5 手机 App 开发入门：概念篇</a></p>
</div>
<h2> 分类</h2>
<p>按照 APP 的开发技术, APP 大概可以分为以下三类</p>
<div class="hint-container tip">
<p class="hint-container-title">App 分类</p>
<ul>
<li>原生应用（native application, 简称 Native App）</li>
<li>Web 应用（web application, 简称 Web App）</li>
<li>混合应用（hybrid application, 简称 Hybrid App）</li>
</ul>
</div>
<h2> 优缺点对比</h2>
<table>
<thead>
<tr>
<th>特性</th>
<th>Native APP</th>
<th>Web APP</th>
<th>Hybrid APP</th>
</tr>
</thead>
<tbody>
<tr>
<td>开发语言</td>
<td>原生语言（Objective-C、Java、. Net）</td>
<td>网页语言（HTML5+CSS+JS）</td>
<td>原生语言+网页语言</td>
</tr>
<tr>
<td>跨平台性</td>
<td>低</td>
<td>高</td>
<td>高</td>
</tr>
<tr>
<td>设备访问能力</td>
<td>高</td>
<td>低</td>
<td>高</td>
</tr>
<tr>
<td>开发成本</td>
<td>高</td>
<td>低</td>
<td>中</td>
</tr>
<tr>
<td>用户体验</td>
<td>好</td>
<td>差</td>
<td>较好</td>
</tr>
<tr>
<td>安装体验</td>
<td>高（通过应用商店安装）</td>
<td>中（通过移动浏览器）</td>
<td>高（通过应用商店安装）</td>
</tr>
<tr>
<td>升级灵活度</td>
<td>低（总通过应用商店升级）</td>
<td>高</td>
<td>中（总通过应用商店升级）</td>
</tr>
<tr>
<td>向后兼容</td>
<td>差</td>
<td>好</td>
<td>好</td>
</tr>
<tr>
<td>维护更新</td>
<td>复杂</td>
<td>简单</td>
<td>简单</td>
</tr>
<tr>
<td>高级图形</td>
<td>高</td>
<td>中</td>
<td>中</td>
</tr>
</tbody>
</table>
<h2> Native App</h2>
<div class="hint-container tip">
<p class="hint-container-title">定义</p>
<p>Native App 是一种基于智能手机本地操作系统如 iOS、Android、WP 并使用原生程式编写运行的第三方应用程序, 也叫本地 App。原生 App 使用与手机操作系统相同的语言。iOS 的原生 App 使用 Objective-C 语言或 Swift 语言, 安卓使用 Java 语言或 Kotlin 语言。由于跟底层系统的语言和技术模型一致, 所以原生 App 的性能和用户体验都很好。</p>
</div>
<h3> 优缺点</h3>
<h4> 优点</h4>
<ol>
<li>较好的性能和体验</li>
<li>可以使用系统的所有硬件和软件 API, 比如 GPS、摄像头、麦克风、加速计、通知推送等等, 能充分发挥系统的潜力</li>
</ol>
<h4> 缺点</h4>
<ol>
<li>开发成本高, 每个手机平台都要建立一个独立的开发团队, 一般都有 iOS 和安卓两个开发团队。如果出现第三个平台（以前的 Windows Phone, 也许将来的华为鸿蒙 OS）, 就要组建第三个团队, 成本就更高。</li>
<li>原生 App 使用底层操作系统的语言, 都是很重的编译型语言, 开发和调试成本相对较高, 时间周期长</li>
<li>原生 App 必须下载安装才能使用, 只要升级版本, 就必须重新下载安装。用户往往不愿意更新版本, 厂商被迫不得不长期支持很久以前的旧版本。</li>
</ol>
<h2> Web App</h2>
<div class="hint-container tip">
<p class="hint-container-title">定义</p>
<p>WebApp 是指基于 Web 的系统和应用, 其作用是向广大的最终用户发布一组复杂的内容和功能。WebApp 提供一种简单的方式来开始为 App Engine 开发应用程序。Web App 就是运行于网络和标准浏览器上, 基于网页技术开发实现特定功能的应用。</p>
</div>
<h3> 优缺点</h3>
<h4> 优点</h4>
<ol>
<li>不需要下载安装, 打开浏览器就能使用, 而且总是使用最新版本</li>
<li>对于开发者来说, Web App 写起来比较快, 调试容易, 不需要应用商店的批准就能发布。</li>
</ol>
<h4> 缺点</h4>
<ol>
<li>浏览器提供的 API（即 Web API）很有限（目前只有相机、GPS、电池等少数几个）, 大部分系统硬件都不能通过网页访问, 也无法直接读取硬盘文件, 所以 Web App 无法充分利用平台的硬件。</li>
<li>网页通过浏览器渲染, 性能不如原生 App, 不适合做性能要求较高的页面。</li>
</ol>
<h3> 阻碍推广缘由</h3>
<p>为了推广 Web App, 谷歌公司的 Chrome 浏览器团队做了很多努力。他们认为, Web App 足以满足大多数 App 的需求, 但是三大缺陷阻碍它的推广。</p>
<ol>
<li>不能从手机的首屏直接进入。</li>
<li>缺乏手机状态栏和锁屏时的通知推送能力。</li>
<li>不支持脱机访问（即断网也能使用）。</li>
</ol>
<h2> Hybrid APP</h2>
<div class="hint-container tip">
<p class="hint-container-title">定义</p>
<p>Hybrid App, 基于第三方跨平台移动应用引擎框架进行开发。使用 HTML5 和 JS 作为开发, 调用引擎封装的底层功能如照相机、传感器、通讯录等。其具有 Native App 良好用户交互体验的优势, 同时, 具有 Web App 跨平台开发的优势。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>React Native 填坑指南</title>
      <link>https://vxhly.github.io/views/app/react-native-filling-guide.html</link>
      <guid>https://vxhly.github.io/views/app/react-native-filling-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">React Native 填坑指南</source>
      <description>前言 开始学习 React Native, 期间也遇上了许多坑, 本篇将在官方文档基础上补充一些填坑的指南。</description>
      <category>app</category>
      <pubDate>Thu, 02 Jul 2020 20:58:47 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>开始学习 React Native, 期间也遇上了许多坑, 本篇将在官方文档基础上补充一些填坑的指南。</p>
</div>
<!-- more -->
<h2> 官方文档</h2>
<p><a href="https://reactnative.cn/" target="_blank" rel="noopener noreferrer">React Native 官方文档</a></p>
<h2> 搭建开发环境</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这里并不推荐大家使用沙箱环境。沙盒环境大量依赖于国外网络环境, 也不能直接安装第三方原生组件。不建议国内用户使用。</p>
</div>
<p>这一步及其重要, 多数人都会卡在这一步, 包括博主也是在这一步也是卡了很久, 开发环境搭建好了一定会事半功倍, 接下的内容将会带领你少走弯路。</p>
<h3> 搭建前请换源</h3>
<p>使用过 Node.js 开发项目的都知道我们的 Node.js 项目在安装项目依赖时受限于国内的网络环境, 并不能快速的下载项目依赖, 接下几个步骤教你换源</p>
<p>首先是 <code>yarn</code> 和 <code>npm</code> 的软件源, 使用到的是 <code>cgr</code> 这个命令来快速的切源</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当然也可以使用以下命令来快速的切源</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在开发 IOS 的应用时还需切换 CocoaPods 镜像, 可以参照 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/CocoaPods/" target="_blank" rel="noopener noreferrer">CocoaPods 镜像使用帮助</a> 进行切源</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>MacOS 下建议还需更换 brew 的软件源, 可以参照 <a href="https://developer.aliyun.com/mirror/homebrew" target="_blank" rel="noopener noreferrer">阿里云的镜像源</a> 进行切源</p>
<p>Bash 终端配置</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Zsh 终端配置</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container danger">
<p class="hint-container-title">绝对禁止</p>
<p>windows 环境下不使用 cnpm 就好, cnpm 安装的模块路径比较奇怪, packager 不能正常识别！</p>
</div>
<h3> 安装依赖和运行</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>安装依赖这边不做重复声明, 官方文档已经非常详细了</p>
</div>
<div class="hint-container warning">
<p class="hint-container-title">坑</p>
<p>React Native 运行时将监听 8081 端口, 所以 8081 端口绝对不能被占用, 否则会导致编译失败等问题</p>
<p>当然如果是因为这个引起的编译失败也不要慌, 将你的 8081 端口占用的进程关掉即可</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div>
<h2> 开发填坑</h2>
<h3> 导入 IconFont 自定义图标库</h3>
<p>参考 <a href="https://github.com/iconfont-cli/react-native-iconfont-cli" target="_blank" rel="noopener noreferrer">react-native-iconfont-cli</a></p>
<h4> Step 1</h4>
<p>安装插件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> Step 2</h4>
<p>静态链接。请注意您使用的 React-Native 版本号</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> Step 3</h4>
<p>生成配置文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> Step 4</h4>
<p>开始生成 React-Native 标准组件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Windows 下安装 MongoDB</title>
      <link>https://vxhly.github.io/views/design/install-mongodb-on-windwos.html</link>
      <guid>https://vxhly.github.io/views/design/install-mongodb-on-windwos.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Windows 下安装 MongoDB</source>
      <description>前言 MongoDB 是目前在 IT 行业非常流行的一种非关系型数据库 (NoSql), 其灵活的数据存储方式备受当前 IT 从业人员的青睐。这里主要讲如何在 Windows 平台下安装 MongoDB。</description>
      <category>design</category>
      <pubDate>Mon, 29 May 2017 17:11:30 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>MongoDB 是目前在 IT 行业非常流行的一种非关系型数据库 (NoSql), 其灵活的数据存储方式备受当前 IT 从业人员的青睐。这里主要讲如何在 Windows 平台下安装 MongoDB。</p>
</div>
<!-- more -->
<h2> 下载</h2>
<p><a href="http://www.mongodb.com/download-center?jmp=nav#community" target="_blank" rel="noopener noreferrer">MongoDB 官网下载链接</a></p>
<h2> 手动简单的配置</h2>
<h3> 配置环境变量</h3>
<p>安装成功之后, 将 mongodb 目录下的 bin 目录添加至 path 变量中, 如:</p>
<figure><img src="/assets/install-mongodb-1.png" alt="Windows 下安装 MongoDB" tabindex="0" loading="lazy"><figcaption>Windows 下安装 MongoDB</figcaption></figure>
<h3> 创建数据库文件存放目录</h3>
<p>创建数据库文件的存放位置, 比如 <code>D:\mongodb\data\db</code> 。启动 mongodb 服务之前需要必须创建数据库文件的存放文件夹, 否则命令不会自动创建, 而且不能启动成功。</p>
<figure><img src="/assets/install-mongodb-2.png" alt="Windows 下安装 MongoDB" tabindex="0" loading="lazy"><figcaption>Windows 下安装 MongoDB</figcaption></figure>
<p>接下来打开命令行窗口, 切换到 <code>D:\MongoDB\bin</code> 目录执行如下命令:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这是命令行窗口会打印一些启动信息, 最后一行显示为如下信息时表示启动成功了</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 创建日志文件存放目录</h3>
<p>我们需要指定 log 目录, 所以我们创建 log 目录 <code>D:\MongoDB\data\logs\mongodb.log</code> .</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/install-mongodb-3.png" alt="Windows 下安装 MongoDB" tabindex="0" loading="lazy"><figcaption>Windows 下安装 MongoDB</figcaption></figure>
<p>这是命令行窗口会打印一些启动信息, 最后一行显示为如下信息时表示启动成功了</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 安装为 Windows 服务</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动服务时需要管理员权限</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/install-mongodb-4.png" alt="Windows 下安装 MongoDB" tabindex="0" loading="lazy"><figcaption>Windows 下安装 MongoDB</figcaption></figure>
<h2> 使用配置文件</h2>
<p>很遗憾, 官方下载的安装包里面没有默认的配置文件, 若想使用配置文件只能自己建一个了, 另外个人也推荐使用配置文件来管理 MongoDB 的配置, 使用配置文件配置数据库文件、日志文件以及其它的一些配置都一目了然</p>
<ol>
<li>解压安装包到 <code>D:\MongoDB</code></li>
<li>建立数据库目录 <code>D:\MongoDB\data</code></li>
<li>建立日志目录 <code>D:\MongoDB\logs</code></li>
<li>建立配置文件目录 <code>D:\MongoDB\etc</code></li>
<li>建立配置文件 <code>D:\MongoDB\etc\mongodb.conf</code></li>
</ol>
<h3> 配置文件</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里仅指定了几个常用项, 更多详细配置请参考官方文档 <a href="https://docs.mongodb.org/manual/reference/configuration-options/" target="_blank" rel="noopener noreferrer">https://docs.mongodb.org/manual/reference/configuration-options/</a></p>
<h3> 普通启动</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 安装为 Windows 服务</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 使用 SC 安装为 Windows 服务</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动服务时需要管理员权限</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 浏览器测试</h3>
<p>打开浏览器, 访问 <a href="http://127.0.0.1:27017/" target="_blank" rel="noopener noreferrer">http://127.0.0.1:27017/</a> , 显示以下内容表示安装成功<br></p>
<figure><img src="/assets/install-mongodb-5.png" alt="Windows 下安装 MongoDB" tabindex="0" loading="lazy"><figcaption>Windows 下安装 MongoDB</figcaption></figure>
<h2> 附上 Ubuntu 下安装</h2>
<p>Ubuntu 下安装非常简单, 执行一条命令就行, 无需任何配置, 执行完后直接使用。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 图形化管理工具</h2>
<div class="hint-container tip">
<p class="hint-container-title">工具推荐</p>
<p>工具推荐推荐图形化管理工具 <a href="http://adminmongo.markmoffat.com/" target="_blank" rel="noopener noreferrer">adminMongo</a></p>
</div>
<h3> 环境需求</h3>
<ul>
<li>Node.js(使用 nvm 进行安装)</li>
<li>pm2( <code>npm -g pm2</code> )</li>
<li>git</li>
</ul>
<h3> 下载</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> pm2 启动</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 访问测试</h3>
<p>打开浏览器, 访问 <a href="http://127.0.0.1:1234/" target="_blank" rel="noopener noreferrer">http://127.0.0.1:1234/</a> , 显示以下内容表示安装成功<br></p>
<figure><img src="/assets/install-mongodb-6.png" alt="Windows 下安装 MongoDB" tabindex="0" loading="lazy"><figcaption>Windows 下安装 MongoDB</figcaption></figure>
<h3> 配置使用</h3>
<p>Connection name =&gt; 连接名随意 Connection string =&gt; 连接方法: <code>mongodb://&lt;user&gt;:&lt;password&gt;@127.0.0.1:&lt;port&gt;/&lt;db&gt;</code> Connection options =&gt; 链接选项 <a href="http://mongodb.github.io/node-mongodb-native/2.1/reference/connecting/connection-settings/" target="_blank" rel="noopener noreferrer">docs</a></p>
<p>连接成功后创建一个数据库进行测试<br></p>
<figure><img src="/assets/install-mongodb-7.png" alt="Windows 下安装 MongoDB" tabindex="0" loading="lazy"><figcaption>Windows 下安装 MongoDB</figcaption></figure>
<p>随意添加一些数据, 注意数据为 JSON 格式<br></p>
<figure><img src="/assets/install-mongodb-8.png" alt="Windows 下安装 MongoDB" tabindex="0" loading="lazy"><figcaption>Windows 下安装 MongoDB</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/install-mongodb-1.png" type="image/png"/>
    </item>
    <item>
      <title>JavaScript 生成随机数</title>
      <link>https://vxhly.github.io/views/design/js-generated-random-number.html</link>
      <guid>https://vxhly.github.io/views/design/js-generated-random-number.html</guid>
      <source url="https://vxhly.github.io/rss.xml">JavaScript 生成随机数</source>
      <description>前言 为 JS 中的 Math 对象新增生成不重复随机数方法。</description>
      <category>design</category>
      <pubDate>Tue, 02 Aug 2016 13:49:41 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>为 JS 中的 Math 对象新增生成不重复随机数方法。</p>
</div>
<!-- more -->
<h2> 方法源码一</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 如何调用</h3>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> demo1</h3>
<p>控制台代码</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出 =&gt; <code>[4, 15, 15, 15, 17]</code></p>
<h3> demo2</h3>
<p>控制台代码</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出 =&gt; <code>[15, 14, 6, 11, 4]</code></p>
<h2> 方法源码二</h2>
<blockquote>
<p>一种更简单的写法</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>JavaScript 获取 URL 请求参数</title>
      <link>https://vxhly.github.io/views/design/js-get-url-request.html</link>
      <guid>https://vxhly.github.io/views/design/js-get-url-request.html</guid>
      <source url="https://vxhly.github.io/rss.xml">JavaScript 获取 URL 请求参数</source>
      <description>前言 通过 JavaScript 原生方法, 获取 URL 所带的请求参数备用。</description>
      <category>design</category>
      <pubDate>Sun, 07 Aug 2016 19:21:58 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>通过 JavaScript 原生方法, 获取 URL 所带的请求参数备用。</p>
</div>
<!-- more -->
<h2> 方法一(使用正则表达式匹配)</h2>
<h3> 方法源码</h3>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 如何使用?</h3>
<p>若地址栏 URL 为: <code>abc.html?id=1234&amp;&amp;url=https://www.baidu.com</code> 则</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出 =&gt; <code>123</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出 =&gt; <a href="https://www.baidu.com%60" target="_blank" rel="noopener noreferrer">https://www.baidu.com`</a></p>
<h2> 方法二（普通字符串截取）</h2>
<h3> 方法源码</h3>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 如何使用?</h3>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若地址栏 URL 为: <code>abc.html?id=1234&amp;&amp;url=https://www.baidu.com</code> 则</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出=&gt; <code>123</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输出 =&gt; &lt;<code>https://www.baidu.com</code>&gt;</p>
]]></content:encoded>
    </item>
    <item>
      <title>移动端网页自适应方案</title>
      <link>https://vxhly.github.io/views/design/layout-project-for-moblie.html</link>
      <guid>https://vxhly.github.io/views/design/layout-project-for-moblie.html</guid>
      <source url="https://vxhly.github.io/rss.xml">移动端网页自适应方案</source>
      <description>前言 解决移动端网页的自适应, 让开发变得更加简洁。</description>
      <category>design</category>
      <pubDate>Sat, 13 Aug 2016 19:40:34 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>解决移动端网页的自适应, 让开发变得更加简洁。</p>
</div>
<!-- more -->
<h2> mate 标签</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>首先要让页面大小铺满屏幕又不能溢出。只需要在 html 的 head 标签内加入 viewport（如下）, 参数分别表示: 页面宽度＝屏幕宽度, 最大和最小伸缩比都是 1, 不允许用户拉缩。</p>
</div>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>width</strong>: viewport 的宽度, 可以指定为一个像素值, 如: 640, 或者为特殊的值, 如: device-width （设备的宽度）。</li>
<li><strong>initial-scale</strong>: 初始缩放比例, 即当浏览器第一次加载页面时的缩放比例。值为 1.0 即原始尺寸。</li>
<li><strong>maximum-scale</strong>: 允许浏览者缩放到的最大比例, 一般设为 1.0, 即原始尺寸。</li>
<li><strong>minimum-scale</strong>: 允许浏览者缩放到的最小比例, 一般设为 1.0, 即原始尺寸。</li>
<li><strong>user-scalable</strong>: 浏览者是否可以手动缩放, yes 或 no 。</li>
</ul>
<h2> 使用百分比自适应</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>把长度单位转换为百分比来表示, 这样在不同的宽度下, 元素的长宽也会随之变化。</p>
</div>
<ul>
<li>优点: 宽度之间无缝衔接, 操作起来也相对比较方便。</li>
<li>缺点: 字体大小需要另外一套自适应方法来调整；当屏幕宽度大于 <code>700px</code> 后, 继续按照百分比元素会偏大, 这个时候调整起来会比较麻烦。</li>
</ul>
<h2> rem, em 自适应</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>用媒体查询的方法, 确定在不同屏幕宽度下, 改变 html 或 body 的 font-size。再用 rem , em 替代 px 作为单位实现自适应。</p>
</div>
<ul>
<li>优点: 可以根据不同屏幕宽度来设置, 可以完美解决上面说的屏幕偏大时的比例问题。字体的大小也不存在问题。</li>
<li>缺点: 根据宽度区间来设置, 无法实现无缝变换。</li>
</ul>
<h2> 引入 JavaScript 代码</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这些兼容方法各有优缺点, 都不算完美, 怎样才能把优点结合在一起, 同时避免缺点呢? 引入 JavaScript 方法源码, 方法原理: 使页面 html 的 font-size 会根据屏幕的宽度自动调整, 而且屏幕宽度和所设字体大小的商是一定的, 然后按照固定比例缩小后作为 rem 的单位长度实现自适应。</p>
</div>
<h3> 方法源码一（需引入 jQuery）</h3>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 方法源码二（JavaScript 原生代码）</h3>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 常见问题</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>以上两个方法源码是 rem 布局的核心代码。 如果你的页面不需要引入 jQuery, 建议你使用 JavaScript 原生代码。 代码大意: 如果页面的宽度超过了 640px, 那么页面中 html 的 font-size 恒为 100px, 否则, 页面中 html 的 font-size 的大小为: <code>100 \ (当前页面宽度 / 640)</code></p>
</div>
<h3> 为什么是 640px?</h3>
<p>对于手机屏幕来说, <code>640px</code> 的页面宽度是一个安全的最大宽度, 保证了移动端页面两边不会留白。注意这里的 <code>px</code> 是 <code>css</code> 逻辑像素, 与设备的物理像素是有区别的。 如果要切移动端页面, 你可以先把效果图宽度等比例缩放到 <code>640px</code> , 很好用。</p>
<h3> 为什么要设置 html 的 font-size?</h3>
<p><code>rem</code> 就是根元素（即: <code>html</code> ）的字体大小。 <code>html</code> 中的所有标签样式凡是涉及到尺寸的（如: <code>height</code> , <code>width</code> , <code>padding</code> , <code>margin</code> , <code>font-size</code> 。甚至 <code>left</code> , <code>top</code> 等）你都可以放心大胆的用 <code>rem</code> 作单位。 如果你把 <code>html</code> 的 <code>font-size</code> 设为 <code>20px</code> , 前面说过, <code>rem</code> 就是 <code>html</code> 的字体大小, 那么 <code>1rem = 20px</code> 。</p>
<h3> 模拟为什么要使用 iphone 4?</h3>
<p>假设你部门的设计师给你的页面标准宽度为 <code>640px</code> , 则页面中所有的 <code>宽高</code> 全部除以 2 , Chrome 浏览器 模拟手机页面 设置手机型号为 <code>IPhone 4</code> 。 这也就是为什么要将所有的宽高除以 2 的原因: <code>IPhone 4</code> 标准 宽 是 <code>320 px</code> 。 然后正常的用 <code>px</code> 为单位 写你的 <code>css</code> , 你所需要做的就是你写的页面, 要在 <code>IPhone 4</code> 完全正确显示。 如果你说, 那设计那边给的不是 <code>640px</code> 标准怎么办? 你只要让你的页面按照设计图在 <code>iphone 4</code> 上正确显示, 就木问题。</p>
<h3> rem 单位是如何换算的?</h3>
<p>页面 <code>css</code> 全部写完之后, 将所有的 <code>px</code> 转换为以 <code>rem</code> 为单位的数字。 例如 我设置 <code>body</code> 的 <code>width: 320px；</code> 则根据设置的 <code>font - size</code> 值, 转换为 <code>rem</code> , 则是 <code>width: 16 rem；</code> 【320 / 20 (你设置的标准 <code>font - size</code> ) = 16】。</p>
<h3> 如何使用插件换算?</h3>
<p>如果你说一个页面的 <code>css</code> 有几百行, 写完再去改太麻烦了, 那可以用 <code>px</code> 转换成 <code>rem</code> 的插件。 我这里有一款推荐: <code>cssrem</code> （下载使用网址 <a href="http://github.com/flashlizi/cssrem" target="_blank" rel="noopener noreferrer">cssrem</a>）。 该插件是 <code>sublime text</code> 的一款插件。<br></p>
<figure><img src="/assets/layout-moblie.gif" alt="cssrem" tabindex="0" loading="lazy"><figcaption>cssrem</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/layout-moblie.gif" type="image/gif"/>
    </item>
    <item>
      <title>需要一款称手的编辑器</title>
      <link>https://vxhly.github.io/views/design/need-a-super-software.html</link>
      <guid>https://vxhly.github.io/views/design/need-a-super-software.html</guid>
      <source url="https://vxhly.github.io/rss.xml">需要一款称手的编辑器</source>
      <description>前言 以下介绍的编辑器是跨平台, 无论是 Windows, 还是 Liunx, 甚至是 Mac, 都可以成为程序员称手的利器。</description>
      <category>design</category>
      <pubDate>Sun, 07 Aug 2016 16:49:47 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>以下介绍的编辑器是跨平台, 无论是 Windows, 还是 Liunx, 甚至是 Mac, 都可以成为程序员称手的利器。</p>
</div>
<!-- more -->
<h2> Atom</h2>
<p>开源。功能强大, 是 Github 团队推出的简洁编辑器, 自带 <code>Node.js</code> 环境。</p>
<h3> 下载地址</h3>
<p>官网下载地址: <a href="http://github.com/atom/atom/releases" target="_blank" rel="noopener noreferrer">Atom</a><br> 官网下载地址下不下来点击以下链接下载: <a href="http://oss-blog.test.upcdn.net/atom-amd64.deb?attname=" target="_blank" rel="noopener noreferrer">atom-amd64.deb</a> <a href="http://oss-blog.test.upcdn.net/AtomSetup.exe?attname=" target="_blank" rel="noopener noreferrer">AtomSetup.exe</a></p>
<h3> 安装插件</h3>
<p>使用 <code>Ctrl+,</code> 调出设置页面, 在 <code>install</code> 中查询插件并安装。自带 <code>Node.js</code> 环境。部分插件支持自定义设置。</p>
<h3> 插件推荐</h3>
<ul>
<li><strong>emmet</strong> =&gt; 前端开发者必备</li>
<li><strong>atom-beautify</strong> =&gt; 格式化编程语言文件, 支持的语法较广, 如 <code>PHP</code> 、 <code>Python</code> 、 <code>Ruby</code> 、 <code>Java</code> 、 <code>C</code> 等</li>
<li><strong>atom-html-perview</strong> =&gt; <code>html</code> 文件实时预览</li>
<li><strong>atom-minify</strong> =&gt; 压缩 <code>Html</code> 、 <code>CSS</code> 文件</li>
<li><strong>autoprefixer</strong> =&gt; <code>CSS3</code> 私有前缀自动补全插件</li>
<li><strong>csscomb</strong> =&gt; <code>CSS</code> 属性自动排序</li>
<li><strong>docblockr</strong> =&gt; 可以自动生成 <code>PHPDoc</code> 风格的注释</li>
<li><strong>atom-ternjs</strong> =&gt; <code>javascript</code> 代码提示</li>
<li><strong>autocomplete-paths</strong> =&gt; 引入文件时, 自动补全路径</li>
<li><strong>language-markdown</strong> =&gt; <code>markdown</code> 文件语法高亮</li>
<li><strong>language-vue</strong> =&gt; <code>vue</code> 文件语法高亮</li>
<li><strong>logo-file-icons</strong> =&gt; 文件图标</li>
<li><strong>markdown-scroll-sync</strong> =&gt; <code>markdown</code> 文件预览自动滚动</li>
<li><strong>simplified-chinese-menu</strong> =&gt; <code>Atom</code> 简体中文语言包</li>
<li><strong>vue-autocomplete</strong> =&gt; <code>vue</code> 文件代码自动提示</li>
<li><strong>vue-format</strong> =&gt; <code>vue</code> 文件自动格式化</li>
<li><strong>sync-settings</strong> =&gt; atom 插件备份(需要 Githunb Access Token 和 Gist Id)</li>
</ul>
<h2> Brackets</h2>
<p>开源。功能强大, 是一个非常优秀的 <code>WEB</code> 设计和前端开发的源代码编辑器。当然也支持 <code>C</code> 、 <code>Java</code> 、 <code>Python</code> 等编程语言。支持实时预览。自带 <code>Node.js</code> 环境。</p>
<h3> 下载地址</h3>
<p><a href="http://github.com/adobe/brackets/releases" target="_blank" rel="noopener noreferrer">Brackets</a><br> 官网下载地址下不下来点击以下链接下载: <a href="http://oss-blog.test.upcdn.net/Brackets.Release.1.8.msi?attname=" target="_blank" rel="noopener noreferrer">Brackets. Release.1.8.msi</a><br> <a href="http://oss-blog.test.upcdn.net/Brackets.Release.1.8.64-bit.deb?attname=" target="_blank" rel="noopener noreferrer">Brackets. Release.1.8.64-bit.deb</a></p>
<h3> 安装插件</h3>
<p>部分插件是使用国外源的, 很容易被墙的。所以系统最好要有个代理服务器, 这里推荐 <a href="http://www.gaotizi.com/aff.php?aff=133" target="_blank" rel="noopener noreferrer">高梯子</a>。</p>
<h3> 如何安装</h3>
<p>最快速的安装 <code>Bracket</code> s 扩展的方法是使用扩展管理器（ <code>Extension Manager</code> ）– 直接在 <code>Brackets</code> 的工具栏选择 <code>File &gt; Extension Manager</code> 即可。</p>
<h3> 修改界面语言</h3>
<p>改成中文。 Debug-&gt;Switch Language</p>
<h3> 插件推荐</h3>
<ul>
<li><strong>Emmet</strong> =&gt; 前端开发者必备</li>
<li><strong>Autoprefixer</strong> =&gt; <code>CSS3</code> 私有前缀自动补全插件</li>
<li><strong>CSScomb</strong> =&gt; <code>CSS</code> 属性自动排序</li>
<li><strong>Brackets Icons</strong> =&gt; 为你的 <code>Brackets</code> 边栏添加文件图标</li>
<li><strong>Brackets CSS Class Code hint</strong> =&gt; 输入 <code>class</code> 或 <code>id</code> 时会出现 <code>css</code> 里面的 <code>class／id</code></li>
<li><strong>JS CSS Minifier</strong> =&gt; 压缩 <code>JS</code> 和 <code>CSS</code> 文件</li>
<li><strong>Beautify</strong> =&gt; 这个扩展可以让你的 <code>HTML</code> 、 <code>CSS</code> 、 <code>JavaScript</code> 等代码格式化一致, 从而提升可读性</li>
<li><strong>Simple To-Do</strong> =&gt; 使用 <code>Simple To-Do</code> 可以确保你不会忘记项目的任务。它允许你在 <code>Brackets</code> 中为每一个项目创建 <code>TODO</code> 列表。</li>
<li><strong>Markdown Preview</strong> =&gt; <code>Markdown</code> 文件实时预览</li>
<li><strong>Markdown Toolbar</strong> =&gt; <code>Markdown</code> 文件的快捷工具栏</li>
<li><strong>JavaScript Globals</strong> =&gt; <code>javascript</code> 全局变量高亮</li>
<li><strong>Brackets Vue</strong> =&gt; <code>Vue</code> 文件语法高亮</li>
</ul>
<h2> Sublime Text 3</h2>
<p>非开源。功能强大, 可以编译 <code>C</code> 、 <code>Java</code> 、 <code>Python</code> 等编程语言。 <code>Liunx</code> 下启动可以在终端输入 <code>subl</code> 。部分插件依赖于 <code>Node.js</code> 。</p>
<h3> 下载地址</h3>
<p>官网下载地址: <a href="http://www.sublimetext.com/3" target="_blank" rel="noopener noreferrer">Sublime Text 3</a><br> 官网下载地址下不下来点击以下链接下载: <a href="http://oss-blog.test.upcdn.net/Sublime%20Text%20Build%203126%20Setup.exe?attname=" target="_blank" rel="noopener noreferrer">Sublime Text Build 3126 Setup.exe</a><br> <a href="http://oss-blog.test.upcdn.net/Sublime%20Text%20Build%203126%20x64%20Setup.exe?attname=" target="_blank" rel="noopener noreferrer">Sublime Text Build 3126 x64 Setup.exe</a></p>
<h3> 安装插件</h3>
<h3> 直接安装:</h3>
<p>安装 Sublime text 3 插件很方便, 可以直接下载安装包解压缩到 Packages 目录（菜单-&gt;preferences-&gt;packages）</p>
<h3> 使用 Package Control 安装</h3>
<p>按 <code>Ctrl+</code> 调出 <code>console</code> 粘贴以下代码到底部命令行并回车:</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启 <code>Sublime Text 3</code> 。 如果在 <code>Perferences</code> -&gt; <code>package settings</code> 中看到 <code>package control</code> 这一项, 则安装成功。 顺便贴下 Sublime Text2 的代码。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 用组件安装插件的方法:</h3>
<ol>
<li>按下 <code>Ctrl+Shift+P</code> 调出命令面板</li>
<li>输入 <code>install</code> 调出 Install Package 选项并回车, 然后在列表中选中要安装的插件。</li>
</ol>
<h3> 注意</h3>
<p>国内使用 <code>Sublime Text 3</code> , 经常可能遇到无法安装可用插件问题, 可 <code>remove</code> 掉 <code>Package Control</code> 重新安装下；如遇到连 <code>Package Control</code> 也无法安装, 则可以在别处拷贝一份关于 <code>Package Control</code> 的文件( <code>Package Control.sublime-package</code> )存放于 <code>Installed Packages</code> 目录之下即可</p>
<h3> 插件推荐</h3>
<ul>
<li><strong>Emmet</strong> =&gt; 前端开发者必备</li>
<li><strong>Autoprefixer</strong> =&gt; <code>CSS3</code> 私有前缀自动补全插件</li>
<li><strong>CSScomb</strong> =&gt; <code>CSS</code> 属性自动排序</li>
<li><strong>JsFormat</strong> =&gt; 一个 <code>JS</code> 代码格式化插件</li>
<li><strong>Tag</strong> =&gt; 格式化 <code>Html/Xml</code> 代码</li>
<li><strong>phpFormat</strong> =&gt; 格式化 <code>php</code> 代码</li>
<li><strong>HTML-CSS-JS Prettify</strong> =&gt; 一款集成了格式化（美化）html、css、js 三种文件类型的插件, 依赖于 <code>Node.js</code></li>
<li><strong>Minify</strong> =&gt; 自动压缩 <code>JS</code> 、 <code>CSS</code> 文件</li>
<li><strong>ColorPicker</strong> =&gt; 颜色选择器</li>
<li><strong>BracketHighlighter</strong> =&gt; 类似于代码匹配, 可以匹配括号, 引号等符号内的范围</li>
<li><strong>SublimeCodeIntel</strong> =&gt; 代码自动提示</li>
<li><strong>SublimeLinter</strong> =&gt; 用于高亮提示用户编写的代码中存在的不规范和错误的写法</li>
<li><strong>DocBlockr</strong> =&gt; 可以自动生成 <code>PHPDoc</code> 风格的注释</li>
<li><strong>ChineseLocalizations</strong> =&gt; 汉化 <code>Sublime Text</code></li>
<li><strong>MarkDownEditing</strong> =&gt; <code>markdown</code> 文件语法高亮</li>
<li><strong>vue Syntax Highlight</strong> =&gt; <code>vue</code> 文件语法高亮</li>
</ul>
<h2> Visual Studio Code</h2>
<p>微软开发的一款编辑器, 免费而且跨平台, 可以编写 <code>C</code> 、 <code>Java</code> 、 <code>Python</code> 等代码, 在界面上与 Sublime Text 非常相似</p>
<h3> 下载地址</h3>
<p>官网下载地址: <a href="http://code.visualstudio.com/Download" target="_blank" rel="noopener noreferrer">VS code</a></p>
<h3> 安装插件</h3>
<p>使用 <code>Ctrl + Shift + X</code> 调出安装插件界面</p>
<h3> 插件推荐</h3>
<ul>
<li><strong>HTML Snippets</strong> =&gt; 超级实用且初级的 <code>H5</code> 代码片段以及提示</li>
<li><strong>HTML CSS Support</strong> =&gt; 让 <code>html</code> 标签上写 class 智能提示当前项目所支持的样式</li>
<li><strong>Debugger for Chrome</strong> =&gt; 让 vscode 映射 chrome 的 debug 功能, 静态页面都可以用 vscode 来打断点调试</li>
<li><strong>vscode-icons</strong> =&gt; 让 vscode 资源树目录加上图标</li>
<li><strong>Path Intellisense</strong> =&gt; 自动路劲补全, 默认不带这个功能的</li>
<li><strong>Document this</strong> =&gt; js 的注释模板</li>
<li><strong>ESlint</strong> =&gt; 代码规范性检查</li>
<li><strong>vetur</strong> =&gt; <code>vue</code> 语法高亮</li>
<li><strong>Git Easy</strong> =&gt; <code>git</code> 管理</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>网页设计规范-网页设计稿尺寸</title>
      <link>https://vxhly.github.io/views/design/web-design-specification.html</link>
      <guid>https://vxhly.github.io/views/design/web-design-specification.html</guid>
      <source url="https://vxhly.github.io/rss.xml">网页设计规范-网页设计稿尺寸</source>
      <description>前言 最近为了适配多平台、多分辨率甚是烦恼, 先不说代码写的对不对, 是不是完美的, 这次就先从源头(UI 设计稿)抓一抓吧, 这里举例的是某宝的设计团队多年的经验, 作为借鉴引用给前端工作人员以及 UI 设计师们。</description>
      <category>design</category>
      <pubDate>Thu, 08 Aug 2019 10:07:37 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>最近为了适配多平台、多分辨率甚是烦恼, 先不说代码写的对不对, 是不是完美的, 这次就先从源头(UI 设计稿)抓一抓吧, 这里举例的是某宝的设计团队多年的经验, 作为借鉴引用给前端工作人员以及 UI 设计师们。</p>
</div>
<!-- more -->
<h2> 痛点</h2>
<p>虽然 H5 的页面与 PC 的 Web 页面相比简单了不少, 但让我们头痛的事情是要想尽办法让页面能适配众多不同的终端设备。看看下图你就会知道, 这是多么痛苦的一件事情:</p>
<figure><img src="/assets/web-design-1.png" alt="web-design-1" tabindex="0" loading="lazy"><figcaption>web-design-1</figcaption></figure>
<h2> 手淘团队适配协作模式</h2>
<p>早期移动端开发, 对于终端设备适配问题只属于 Android 系列, 只不过很多设计师常常忽略 Android 适配问题, 只出一套 iOS 平台设计稿。但随着 iPhone6, iPhone6+的出现, 从此终端适配问题不再是 Android 系列了, 也从这个时候让移动端适配全面进入到“杂屏”时代。</p>
<figure><img src="/assets/web-design-2.png" alt="web-design-2" tabindex="0" loading="lazy"><figcaption>web-design-2</figcaption></figure>
<p>上图来自于 <a href="http://www.paintcodeapp.com/news/ultimate-guide-to-iphone-resolutions" target="_blank" rel="noopener noreferrer">paintcodeapp.com</a></p>
<p>为了应对这多么的终端设备, 设计师和前端开发之间又应该采用什么协作模式? 或许大家对此也非常感兴趣。</p>
<p>而整个手淘设计师和前端开发的适配协作基本思路是:</p>
<ul>
<li>选择一种尺寸作为设计和开发基准</li>
<li>定义一套适配规则, 自动适配剩下的两种尺寸(其实不仅这两种, 你懂的)</li>
<li>特殊适配效果给出设计效果</li>
</ul>
<p>还是上一张图吧, 因为一图胜过千言万语:</p>
<figure><img src="/assets/web-design-3.jpg" alt="web-design-3" tabindex="0" loading="lazy"><figcaption>web-design-3</figcaption></figure>
<p>在此也不做更多的阐述。在手淘的设计师和前端开发协作过程中: 手淘设计师常选择 iPhone6 作为基准设计尺寸, 交付给前端的设计尺寸是按 750px * 1334px 为准(高度会随着内容多少而改变)。前端开发人员通过一套适配规则自动适配到其他的尺寸。著作权归作者所有。</p>
<h2> 移动端 H5 设计稿尺寸</h2>
<p>移动端 H5 尺寸 设计移动端 H5 项目的时候, 我们一般以用户量较高的 iPhone6/7/8 的尺寸: 750x1334px 为准, 然后我们要在顶部预留出微信或者浏览器导航区域。主要内容区域就可以自由设计了。一般 H5 的操作是上下滑动。字体方面使用苹方字体, 并且字号设置为 24PX 以上, 渲染方式设置成锐利。英文则需要使用 SF-UI 代替。当然 H5 可以调用背景音乐、视频、链接等多媒体, 让体验更佳。除了让前端小哥哥们开发之外, 其实还有一种方式可以无需代码生成简易版的 H5, 就是通过 H5 工具生成。目前比较火的 H5 生成工具有: MAKA、iH5、兔展等, 如果我们要自己生成而不是通过前端开发, 那么我们设计稿的尺寸需要设置为 640x1008PX。这些工具较为简单, 注册后将 PSD 上传即可对每个原件进行动效的设置了。但是如果需要复杂的动效和交互, 还是需要前端工程师的配合。</p>
<h2> 电脑 Web 页 Banner 设计稿尺寸</h2>
<p>Banner 的宽度有两种, 一种是满屏（1920PX）、一种是基于安全距离的满尺寸（1200px 或 1000px）。高度要注意了: 一般以 1920x1080px 为基准的用户屏幕, 加上浏览器本身与插件和底部工具条等距离, 留给网站的一屏高度大概为 900px, 所以 banner 不可以做得很高, 否则第一屏信息会显示得不够。你可能会说, 那就让用户往下拉啊。但是在网站的访问用户之中, 第二屏触及到的用户比第一屏会少很多。也就是很多用户可能点击网站后就会跳走或者关闭, 那么第一屏的信息真的非常重要了, 可谓是寸土寸金。所以我们的 banner 不应该占据过大的区域。比如站酷网的 Banner 区域为 1380x350px。</p>
<h2> 画板尺寸</h2>
<p>因为网页尺寸与用户屏幕相关, 而用户屏幕的种类难以统计。所以我们的设计稿只能主要顾及主流用户的分辨率, 其他分辨率用适配的方式来解决。在最新版 Photoshop 网站 Web 预设尺寸给了我们一些启示: 常见尺寸（1366x768px）、大网页（1920x1080px）、最小尺寸（1024x768px）、Macbook Pro13 （2560x1600px）、MacBook Pro15（2880x1800px）、iMac 27（2560x1440px）等。这些是主流尺寸, 而我们如果做网站时建议按主流的分辨率 1920x1080px 来设计。所以我们通常设计网站时的网站宽度为 1920px, 每个屏幕的高度约为 900px。为什么是 900px 呢? 因为 1080 还要减去浏览器头部和底部高度, 大约就是 900px 了。内容安全区域为 1200px （或 1000px / 1400px）。以这个尺寸来设计相对标准。当然在设计网页前需要知会前端设计尺寸, 因为对于适配的方式和后续配合他们更有发言权。</p>
<h2> web 字体要求</h2>
<p>在网站设计中我们的文字大小一般来说是 12-20 像素。为什么不能比 12px 更小? 因为如果比 12 像素更小的中文无法放得下复杂的笔画了。而且奇数的文字表现和适配都不好做, 也就是说我们必须使用偶数的字号来设计。如: 文字使用宋体、大小为 12px、渲染方式选择无。稍大一些的字体使用微软雅黑、大小为 14-20px、渲染方式选择 Windows Lcd 或锐利。另外, 英文和数字需使用 Arial 字体, 渲染方式选择无。</p>
<h2> 文字排版八条定律</h2>
<ul>
<li>第一, 保证文字是可读的。</li>
<li>第二, 不要在一个版面中使用三种以上的字体。</li>
<li>第三, 如果英文标题或单独进行排版时, 尽量全部使用大写而非首字母大写。中文标题或单独进行排版时结尾不需要句号。</li>
<li>第四, 文字之间的间距在 UI 设计中一般设置为 0, 行距一般为字号本身的 1.5 倍到 2 倍。但是考虑到用户使用场景, 比如用户在地- 铁内阅读新闻时可能地铁会出现晃的情况而导致串行, 就需要我们考虑增加行距。总之字间距和行距以及文字大小都要依据实际场景来决定。在 UI 设计中文字大小单位须设置成 PX（像素）, 大小必须是偶数。如: 24px、26px、28px 等。</li>
<li>第五, 文字阅读需要清晰地背景区分, 比如黑纸白字和白纸黑字原则。</li>
<li>第六, 除非不得已尽量避免在一个版式中使用中英文混排。</li>
<li>第七, 文本左边对齐同时右边也需要对齐。可以通过 PS 中的段落面板设置间距组合和避头尾法则, 但是有时半角符号可能会让我们很棘手, 那就要通过调整间距和空格等方式让文本尽量对齐。</li>
<li>第八, 中文前面需要空两个全角字符空格, 英文前面无需空格, 但需要大写。</li>
</ul>
<h2> 总结</h2>
<p>无论您面对的项目是 To C 的还是 To B 的网站产品, 我们都应该首先 <code>确立设计风格</code> &gt; <code>寻找设计素材</code> &gt; <code>建立情绪板</code> &gt; <code>完成视觉稿</code> &gt; <code>切图标注</code> &gt; <code>建立视觉规范</code> &gt; <code>进行项目走查</code> 如果设计一般网站的页面, 可以按照 1920 X 1080px 尺寸设计。每屏高度 900px, 字体使用宋体 12px、无和微软雅黑 14-20、Windows LCD。Banner 尽量满屏, 但是图片需要按照 4:3 或 16:9 等比例来设计。做网站时可以建立栅格以更好地进行自适应和响应式布局, 我们也要为超链接和按钮设计不同的相应鼠标的状态；另外我们也可以多多尝试在网站设计中加入视差滚动、雪碧图动画等好玩的交互。</p>
<p>如果设计手机端的页面, 可以按照 750X1334PX 尺寸设计。字体使用苹方 24PX 以上、锐利。英文字体使用 SF UI。按钮和点击区域需要大于 88PX 方便手指点击。并且头部需要预留出微信或浏览器的导航区域。</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/web-design-1.png" type="image/png"/>
    </item>
    <item>
      <title>初学 electron-vue</title>
      <link>https://vxhly.github.io/views/electron/learn-electron-vue.html</link>
      <guid>https://vxhly.github.io/views/electron/learn-electron-vue.html</guid>
      <source url="https://vxhly.github.io/rss.xml">初学 electron-vue</source>
      <description>前言 记录学习 electron-vue 时遇到的一些坑, 从报错或者日常需求上出发找寻解决方案。</description>
      <category>electron</category>
      <pubDate>Tue, 05 Nov 2019 15:29:47 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录学习 electron-vue 时遇到的一些坑, 从报错或者日常需求上出发找寻解决方案。</p>
</div>
<!-- more -->
<h2> 坑一</h2>
<p>一般的高版本的 node, 大于 12 的版本时候。初步运行 electron-vue 项目时候会报错！</p>
<div class="hint-container danger">
<p class="hint-container-title">报错特征</p>
<p>ERROR in Template execution failed: ReferenceError: process is not defined</p>
<p>ERROR in ReferenceError: process is not defined</p>
<ul>
<li>
<p>index.ejs:102</p>
<p>/Users/codeman/github/my-project/src/index.ejs:102:2</p>
</li>
<li>
<p>index.ejs:107 module.exports</p>
<p>/Users/codeman/github/my-project/src/index.ejs:107:3</p>
</li>
<li>
<p>index.js:284</p>
<p>[my-project]/[html-webpack-plugin]/index.js:284:18</p>
</li>
</ul>
</div>
<h3> 解决方案</h3>
<p>修改 <code>.electron-vue/webpack.renderer.config.js</code> 和 <code>.electron-vue/webpack.web.config.js</code> 如下：</p>
<p><code>.electron-vue/webpack.renderer.config.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>.electron-vue/webpack.web.config.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 坑二</h2>
<p>在初步使用 <code>electron-builder</code> 编译 electron-vue 项目时候会报错（PS：一般出现在 MacOS 下）</p>
<div class="hint-container danger">
<p class="hint-container-title">报错特征</p>
<p>Error: Exit code: 2. Command failed: /usr/bin/perl /private/var/folders/mj/n34f_bp95zq2_1fwll3bq70m0000gn/T/t-51hskU/1-dmgProperties.pl Can't locate Mac/Memory.pm in @INC (you may need to install the Mac:: Memory module) (@INC contains: /Library/Perl/5.18/darwin-thread-multi-2level /Library/Perl/5.18 /Network/Library/Perl/5.18/darwin-thread-multi-2level /Network/Library/Perl/5.18 /Library/Perl/Updates/5.18.4 /System/Library/Perl/5.18/darwin-thread-multi-2level /System/Library/Perl/5.18 /System/Library/Perl/Extras/5.18/darwin-thread-multi-2level /System/Library/Perl/Extras/5.18 .) at /private/var/folders/mj/n34f_bp95zq2_1fwll3bq70m0000gn/T/t-51hskU/1-dmgProperties.pl line 4. BEGIN failed--compilation aborted at /private/var/folders/mj/n34f_bp95zq2_1fwll3bq70m0000gn/T/t-51hskU/1-dmgProperties.pl line 4.</p>
</div>
<h3> 解决方案</h3>
<p>升级你的 <code>electron-builder</code> 依赖包</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 坑三</h2>
<p>默认项目配置的 sass/scss 编译器为 <code>node-sass</code> , 该编译器在 Windows 环境下及其的不友好, 所以这里比较推荐的是使用 <code>Dart Sass</code> , 有兴趣的小伙伴传送门在这里 <a href="/views/manual/usage-of-docker.html#%E6%8B%93%E5%B1%95-2" target="blank">为啥要用 Dart sass</a></p>
<h3> 解决方案</h3>
<p>删除你的原有的 <code>node-sass</code> 依赖项, <code>node-sass</code> 和 <code>Dart Sass</code> 几乎无缝转换, 所以不用担心兼容问题</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 坑四</h2>
<p>CI 自动编译时会报 <code>Node.js</code> 的版本过低, 导致编译错误, <code>Travis CI</code> 平台上的日志特征</p>
<div class="hint-container danger">
<p class="hint-container-title">报错特征</p>
<p>$ yarn yarn install v1.19.2 warning You are using Node "7.10.1" which is not supported and may encounter bugs or unexpected behavior. Yarn supports the following semver range: "^4.8.0 || ^5.7.0 || ^6.2.2 || &gt;=8.0.0" warning package.json: No license field warning demo@0.0.1: No license field [1/4] Resolving packages... [2/4] Fetching packages... error getmac@4.3.0: The engine "node" is incompatible with this module. Expected version "&gt;=8". Got "7.10.1" error Found incompatible module. info Visit <a href="https://yarnpkg.com/en/docs/cli/install" target="_blank" rel="noopener noreferrer">https://yarnpkg.com/en/docs/cli/install</a> for documentation about this command. The command "yarn" failed and exited with 1 during . Your build has been stopped.</p>
</div>
<h3> 解决方案</h3>
<p>建议在 <code>.travis.yml</code> 和 <code>appveyor.yml</code> 中修改 <code>Node.js</code> 的版本</p>
<p><code>.travis.yml</code></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>appveyor.yml</code></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 坑五</h2>
<p>CI 自动编译成功但是并未成功发布到 GitHub 上, <code>Appveyor CI</code> 平台上的日志特征</p>
<div class="hint-container danger">
<p class="hint-container-title">报错特征</p>
<p>• publishing publisher=Github (owner: vxhly, project: demo, version: 0.0.1) • uploading file=demo-setup-0.0.1.exe.blockmap provider=GitHub • uploading file=demo-setup-0.0.1.exe provider=GitHub • skipped publishing file=demo-setup-0.0.1.exe.blockmap reason=release doesn't exist and not created because "publish" is not "always" and build is not on tag tag=v0.0.1 version=0.0.1 • skipped publishing file=demo-setup-0.0.1.exe reason=release doesn't exist and not created because "publish" is not "always" and build is not on tag tag=v0.0.1 version=0.0.1 • skipped publishing file=latest.yml reason=release doesn't exist and not created because "publish" is not "always" and build is not on tag tag=v0.0.1 version=0.0.1 Done in 128.39s. Updating build cache... Cache 'node_modules' - Updated Cache entry not found: C:\Users\appveyor\AppData\Roaming\npm-cache Cache 'C:\Users\appveyor.electron' - Updated Cache 'C:\Users\appveyor\AppData\Local\Yarn\cache' - Updated Build success</p>
</div>
<h3> 解决方案</h3>
<p>可能原因一：自带的 <code>npm run build</code> 这个脚本让 CI 去执行构建, 但是发现无法自动上传到 GitHub 的 release 里可能原因二：未发布 tag</p>
<p>步骤一：在 <code>package.json</code> 中配置运行 <code>script</code></p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>步骤二：修改 <code>.travis.yml</code> 和 <code>appveyor.yml</code> 文件（PS：在坑四中已体现, 这边就不重复了）</p>
<h2> 坑六</h2>
<p>在 Windows 下打包之后, 未能正确的显示安装路径而是直接安装</p>
<h3> 解决方案</h3>
<p>在 <code>package.json</code> 中修改</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 坑七</h2>
<p><code>MacOS</code> 下打包未能正确识别到签名证书, 报错特征</p>
<div class="hint-container danger">
<p class="hint-container-title">报错特征</p>
<p>• electron-builder version=21.2.0 os=19.0.0 • loaded configuration file=package.json ("build" field) • writing effective config file=build/builder-effective-config.yaml • rebuilding native dependencies dependencies=grpc@1.24.2 platform=darwin arch=x64 • rebuilding native dependency name=grpc version=1.24.2 • packaging platform=darwin arch=x64 electron=2.0.18 appOutDir=build/mac • skipped macOS application code signing reason=cannot find valid "Developer ID Application" identity or custom non-Apple code signing certificate, see <a href="https://electron.build/code-signing" target="_blank" rel="noopener noreferrer">https://electron.build/code-signing</a> allIdentities=</p>

</div>
<h3> 解决方案</h3>
<p>使用 <code>X-code</code> 进行 mac 版本上代码签名</p>
<ol>
<li>打开 xcode 主界面</li>
<li>Xcode==&gt;Preferences…</li>
</ol>
<figure><img src="/assets/electron-1.png" alt="electron-mac" tabindex="0" loading="lazy"><figcaption>electron-mac</figcaption></figure>
<ol start="3">
<li>Accounts==&gt;Apple IDs==&gt;Manage Certificates…, 如果没有登录的话, 先登录 Apple ID, 注意一定要登录开发者账号。登录成功后再进行 Manage Certificates；</li>
</ol>
<figure><img src="/assets/electron-2.png" alt="electron-mac" tabindex="0" loading="lazy"><figcaption>electron-mac</figcaption></figure>
<ol start="4">
<li>添加“+”Developer ID Application,注意一定要添加 Developer ID Application 到钥匙串中, 不要选错了。</li>
</ol>
<figure><img src="/assets/electron-3.png" alt="electron-mac" tabindex="0" loading="lazy"><figcaption>electron-mac</figcaption></figure>
<ol start="5">
<li>成功添加到钥匙串我的证书中, 经过以上的步骤可以成功添加一个证书到钥匙串中的我的证书中。</li>
</ol>
<figure><img src="/assets/electron-4.png" alt="electron-mac" tabindex="0" loading="lazy"><figcaption>electron-mac</figcaption></figure>
<figure><img src="/assets/electron-5.png" alt="electron-mac" tabindex="0" loading="lazy"><figcaption>electron-mac</figcaption></figure>
<ol start="6">
<li>正确签名之后, 打包成功！</li>
</ol>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/electron-1.png" type="image/png"/>
    </item>
    <item>
      <title>graphql 学习</title>
      <link>https://vxhly.github.io/views/graphql/learn-graphql.html</link>
      <guid>https://vxhly.github.io/views/graphql/learn-graphql.html</guid>
      <source url="https://vxhly.github.io/rss.xml">graphql 学习</source>
      <description>前言 记录 graphql 的学习笔记.</description>
      <category>graphql</category>
      <pubDate>Fri, 11 Jun 2021 15:41:21 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录 graphql 的学习笔记.</p>
</div>
<!-- more -->
<h2> 简介</h2>
<h2> Schema 包含的类型</h2>
<ul>
<li>
<p><code>Scalar types</code></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ul>
<li>下面的数据类型类似于我们平常使用的编程语言中的原始类型。</li>
<li>需要定义非空类型时, 需要添加 <code>!</code>, 例如：<code>Int!</code></li>
</ul>
</div>
<ul>
<li><code>Int</code>：有符号 32 位整数。</li>
<li><code>Float</code>：有符号双精度浮点值。</li>
<li><code>String</code>：UTF‐8 字符序列。</li>
<li><code>Boolean</code>： true 或者 false 。</li>
<li><code>ID</code>：ID 标量类型表示一个唯一标识符, 通常用以重新获取对象或者作为缓存中的键。ID 类型使用和 String 一样的方式序列化；然而将其定义为 ID 意味着并不需要人类可读型。</li>
</ul>
</li>
<li>
<p><code>Object types</code></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>一个对象类型包含一组字段, 每个字段可以是标量类型或另一种对象类型。</p>
</div>
<div class="language-graphql line-numbers-mode" data-ext="graphql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><code>The Query type</code></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ul>
<li>定义客户端可以针对您的数据图执行哪些 GraphQL 读取操作。</li>
<li>Query 类型的每个字段定义了不同支持查询的名称和返回类型。</li>
</ul>
</div>
<div class="language-graphql line-numbers-mode" data-ext="graphql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>执行查询一</p>
</div>
<div class="language-graphql line-numbers-mode" data-ext="graphql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>=&gt; 返回</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>执行查询二</p>
</div>
<div class="language-graphql line-numbers-mode" data-ext="graphql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>=&gt; 返回</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><code>The Mutation type</code></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ul>
<li>定义支持的写操作。</li>
<li>Mutation 类型的每个字段定义了不同突变的签名和返回类型。</li>
</ul>
</div>
<div class="language-graphql line-numbers-mode" data-ext="graphql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>执行添加</p>
</div>
<div class="language-graphql line-numbers-mode" data-ext="graphql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>=&gt; 返回</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
<li>
<p><code>Input type</code></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ul>
<li>允许您将对象作为参数传递给的特殊对象类型进行查询和突变。</li>
<li>帮助保持操作签名清洁。</li>
</ul>
</div>
<div class="language-graphql line-numbers-mode" data-ext="graphql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>输入类型</p>
</div>
<div class="language-graphql line-numbers-mode" data-ext="graphql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>JDK 的安装和环境变量的配置</title>
      <link>https://vxhly.github.io/views/java/install-jdk-on-windows.html</link>
      <guid>https://vxhly.github.io/views/java/install-jdk-on-windows.html</guid>
      <source url="https://vxhly.github.io/rss.xml">JDK 的安装和环境变量的配置</source>
      <description>前言 JDK 是 Java 语言的软件开发工具包, 主要用于移动设备、嵌入式设备上的 java 应用程序。JDK 是整个 java 开发的核心, 它包含了 JAVA 的运行环境, JAVA 工具和 JAVA 基础的类库。这里将介绍在 Windows 下 JDK 的安装和环境变量的配置。</description>
      <category>java</category>
      <pubDate>Fri, 30 Sep 2016 19:36:02 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>JDK 是 Java 语言的软件开发工具包, 主要用于移动设备、嵌入式设备上的 java 应用程序。JDK 是整个 java 开发的核心, 它包含了 JAVA 的运行环境, JAVA 工具和 JAVA 基础的类库。这里将介绍在 Windows 下 JDK 的安装和环境变量的配置。</p>
</div>
<!-- more -->
<h2> 安装 JDK</h2>
<p>安装 JDK 时。第一次是安装 jdk , 第二次是安装 jre 。建议两个都安装在同一个 java 文件夹中的不同文件夹中。（不能都安装在 java 文件夹的根目录下, jdk 和 jre 安装在同一文件夹会出错）。</p>
<p><code>For Example:</code> <br></p>
<figure><img src="/assets/jdk-1.png" alt="JDK 安装" tabindex="0" loading="lazy"><figcaption>JDK 安装</figcaption></figure>
<p>安装 <code>jdk</code> 随意选择目录 只需把默认安装目录 <code>\java</code> 之前的目录修改即可<br></p>
<figure><img src="/assets/jdk-2.png" alt="JDK 安装" tabindex="0" loading="lazy"><figcaption>JDK 安装</figcaption></figure>
<p>安装 <code>jre</code> → <code>更改</code> → <code>\java</code> 之前目录和安装 <code>jdk</code> 目录相同即可<br></p>
<figure><img src="/assets/jdk-3.png" alt="JDK 安装" tabindex="0" loading="lazy"><figcaption>JDK 安装</figcaption></figure>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>若无安装目录要求, 可全默认设置。无需做任何修改, 两次均直接点下一步。</p>
</div>
<h2> 环境变量配置</h2>
<p>安装完 JDK 后配置环境变量, 依次选择: <code>计算机</code> → <code>属性</code> → <code>高级系统设置</code> → <code>高级</code> → <code>环境变量</code> <br></p>
<figure><img src="/assets/jdk-4.png" alt="JDK 环境变量配置" tabindex="0" loading="lazy"><figcaption>JDK 环境变量配置</figcaption></figure>
<h3> 指定 JAVA 程序目录</h3>
<p>新建 <code>JAVA_HOME</code> 变量 。变量值填写 <code>jdk</code> 的安装目录（本人是 <code>D:\Java\jdk</code> )<br></p>
<figure><img src="/assets/jdk-5.png" alt="JDK 环境变量配置" tabindex="0" loading="lazy"><figcaption>JDK 环境变量配置</figcaption></figure>
<h3> 修改 Path 变量</h3>
<p>在变量值最后输入 <code>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</code> （注意原来 <code>Path</code> 的变量值末尾有没有 <code>;</code> 号, 如果没有, 先输入 <code>;</code> 号再输入上面的代码）<br></p>
<figure><img src="/assets/jdk-6.png" alt="JDK 环境变量配置" tabindex="0" loading="lazy"><figcaption>JDK 环境变量配置</figcaption></figure>
<h3> 新建 CLASSPATH 变量</h3>
<p>在变量值中输入 <code>.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar</code> （注意最前面有一点）<br></p>
<figure><img src="/assets/jdk-7.png" alt="JDK 环境变量配置" tabindex="0" loading="lazy"><figcaption>JDK 环境变量配置</figcaption></figure>
<p>到此系统的环境变量已经全部配置完毕。</p>
<h2> 检验安装完成</h2>
<p>运行 cmd 输入 <code>java -version</code> （java 和 -version 之间有空格）。 若如图所示, 显示版本信息, 则说明安装和配置成功。<br></p>
<figure><img src="/assets/jdk-8.png" alt="JDK 环境变量配置" tabindex="0" loading="lazy"><figcaption>JDK 环境变量配置</figcaption></figure>
<h2> 附加 liunx 下环境变量配置</h2>
<p>安装包只需在官网下载源码安装包即可, 下载之后解压在 <code>~/java/jdk</code> 下即可</p>
<p>在 <code>/etc/profile</code> 和 <code>/etc/bash.bashrc</code> 下粘贴以下代码</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>之后分别运行 <code>source /etc/profile</code> 、 <code>source /etc/bash.bashrc</code> 来让配置生效</p>
<p>生效之后可以运行 <code>java -version</code> 来验证一下</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/jdk-1.png" type="image/png"/>
    </item>
    <item>
      <title>在 IntelliJ IDEA 中配置 Spring Boot 项目的热部署</title>
      <link>https://vxhly.github.io/views/java/spring-boot-by-idea-hot-deploy.html</link>
      <guid>https://vxhly.github.io/views/java/spring-boot-by-idea-hot-deploy.html</guid>
      <source url="https://vxhly.github.io/rss.xml">在 IntelliJ IDEA 中配置 Spring Boot 项目的热部署</source>
      <description>前言 Spring Boot 是由 Pivotal 团队提供的全新框架, 其设计目的是用来简化新 Spring 应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置, 从而使开发人员不再需要定义样板化的配置。Spring Boot 的 Web 项目, 在每一次修改了 java 文件或者是 resource 的时候, 都必须去重启一下项目, 这样的话浪费了很多的时间, 实现了热部署, 在每一次作了修改之后, 都会自动的重启。</description>
      <category>java</category>
      <pubDate>Wed, 22 Aug 2018 14:47:20 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Spring Boot 是由 Pivotal 团队提供的全新框架, 其设计目的是用来简化新 Spring 应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置, 从而使开发人员不再需要定义样板化的配置。Spring Boot 的 Web 项目, 在每一次修改了 java 文件或者是 resource 的时候, 都必须去重启一下项目, 这样的话浪费了很多的时间, 实现了热部署, 在每一次作了修改之后, 都会自动的重启。</p>
</div>
<!-- more -->
<h2> 使用 IntelliJ IDEA 创建 Spring Boot 项目</h2>
<h3> 新建 Spring Initializr 项目</h3>
<figure><img src="/assets/spring-boot-1.png" alt="Spring Boot" tabindex="0" loading="lazy"><figcaption>Spring Boot</figcaption></figure>
<h3> 填写项目信息</h3>
<figure><img src="/assets/spring-boot-2.png" alt="Spring Boot" tabindex="0" loading="lazy"><figcaption>Spring Boot</figcaption></figure>
<h3> 选择项目使用的技术</h3>
<figure><img src="/assets/spring-boot-3.png" alt="Spring Boot" tabindex="0" loading="lazy"><figcaption>Spring Boot</figcaption></figure>
<h3> 填写项目名称</h3>
<figure><img src="/assets/spring-boot-4.png" alt="Spring Boot" tabindex="0" loading="lazy"><figcaption>Spring Boot</figcaption></figure>
<h3> 项目架构及依赖</h3>
<figure><img src="/assets/spring-boot-5.png" alt="Spring Boot" tabindex="0" loading="lazy"><figcaption>Spring Boot</figcaption></figure>
<h2> 添加测试控制器</h2>
<p>找到入口的文件, 将其修改成如下所示</p>
<div class="language-java line-numbers-mode" data-ext="java"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>@SpringBootApplication</code> 是 Spring Boot 项目的核心注解, 主要目的是开启自动配置。main 方法是一个标准的 Java 应用的 main 方法, 主要作用是作为项目启动的入口。</p>
</div>
<h3> 访问测试</h3>
<p>运行项目, 把它当成一个 java 类运行就可以了</p>
<figure><img src="/assets/spring-boot-6.png" alt="Spring Boot" tabindex="0" loading="lazy"><figcaption>Spring Boot</figcaption></figure>
<p>运行信息</p>
<figure><img src="/assets/spring-boot-7.png" alt="Spring Boot" tabindex="0" loading="lazy"><figcaption>Spring Boot</figcaption></figure>
<p>浏览器访问</p>
<figure><img src="/assets/spring-boot-8.png" alt="Spring Boot" tabindex="0" loading="lazy"><figcaption>Spring Boot</figcaption></figure>
<h2> IntelliJ IDEA 配置热部署</h2>
<h3> 配置 pom.xml</h3>
<p>引入热加载的插件</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>project 中添加 spring-boot-maven-plugin, 主要在 eclipse 中起作用, idea 不需要加此配置, springboot 项目的话, 应该是有此配置, 加里面的内容即可。</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 配置 Maven 下载加速</h3>
<p>右键项目选中 maven 选项, 然后选择 "open settings.xml" 或者 "create settings.xml", 然后把如下代码粘贴进去就可以了. 重启 IDE, 感受速度飞起来的感觉吧！！！</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> IntelliJ IDEA 相关配置</h3>
<p>点击 file , Settings , Build , Execution, Deplment</p>
<figure><img src="/assets/spring-boot-9.png" alt="Spring Boot" tabindex="0" loading="lazy"><figcaption>Spring Boot</figcaption></figure>
<p>然后记得 apply, ok</p>
<p>组合键: <code>Shift+ALT+Ctrl+/</code> , 选择"Registry", 回车, 找到"complier.automake.allow.when.app.running"</p>
<figure><img src="/assets/spring-boot-10.png" alt="Spring Boot" tabindex="0" loading="lazy"><figcaption>Spring Boot</figcaption></figure>
<p>到此全部配置完毕, 手动重启一次, 修改代码保持即可看到控制台在自动重启</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/spring-boot-1.png" type="image/png"/>
    </item>
    <item>
      <title>Spring Boot 整合 Mybatis</title>
      <link>https://vxhly.github.io/views/java/spring-boot-integration-mybatis.html</link>
      <guid>https://vxhly.github.io/views/java/spring-boot-integration-mybatis.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Spring Boot 整合 Mybatis</source>
      <description>提示 MyBatis 是一款优秀的持久层框架, 它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。这里介绍 Spring Boot 整合 Mybatis 的步骤, 数据库选用 MYSQL。</description>
      <category>java</category>
      <pubDate>Wed, 22 Aug 2018 16:01:15 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>MyBatis 是一款优秀的持久层框架, 它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。这里介绍 Spring Boot 整合 Mybatis 的步骤, 数据库选用 MYSQL。</p>
</div>
<!-- more -->
<h2> 修改 pom.xml</h2>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 修改 Spring Boot 配置文件</h2>
<p>这里使用 yml 格式的配置文件, 将 application.properties 改名为 application.yml, 下面配置请根据自己的需求而修改</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Spring Boot 会自动加载 application.yml 相关配置, 数据源就会自动注入到 s qlSessionFactory 中, sqlSessionFactory 会自动注入到 Mapper 中。</p>
<h2> 使用插件快速生成代码</h2>
<h3> 配置 pom.xml</h3>
<p>添加 Mybatis-generator 插件</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 编写配置文件 generatorConfig.xml</h3>
<p>在 IntelliJ IDEA 开发环境下, 此文件需要放在 resource 根目录下, mybatis generator 默认加载此目录的配置文件, 以下文件需要根据自己的情况进行配置</p>
<div class="language-xml line-numbers-mode" data-ext="xml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 在 IntelliJ IDEA 配置</h3>
<p>配置命令 <code>mybatis-generator:generate -e</code></p>
<figure><img src="/assets/spring-boot-11.png" alt="Spring Boot" tabindex="0" loading="lazy"><figcaption>Spring Boot</figcaption></figure>
<p>配置好之后点击旁边的运行按钮</p>
<figure><img src="/assets/spring-boot-12.png" alt="Spring Boot" tabindex="0" loading="lazy"><figcaption>Spring Boot</figcaption></figure>
<p>当然也可以在 plugins 中找到 mybatis-generator, 双击运行或右击运行都可</p>
<figure><img src="/assets/spring-boot-13.png" alt="Spring Boot" tabindex="0" loading="lazy"><figcaption>Spring Boot</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/spring-boot-11.png" type="image/png"/>
    </item>
    <item>
      <title>RedHat 系统安全加固（一）帐号安全</title>
      <link>https://vxhly.github.io/views/liunx/account-security.html</link>
      <guid>https://vxhly.github.io/views/liunx/account-security.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（一）帐号安全</source>
      <description>前言 本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。 本篇主要介绍相关于帐号安全的加固策略, 加强系统的防御能力。</description>
      <category>liunx</category>
      <pubDate>Fri, 14 Oct 2016 11:06:38 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。 本篇主要介绍相关于帐号安全的加固策略, 加强系统的防御能力。</p>
</div>
<!-- more -->
<h2> 密码规则</h2>
<h3> 密码长度和有效期</h3>
<p><strong>/etc/login.defs</strong> 文件是当创建用户时的一些规划, 比如创建用户时, 是否需要家目录, UID 和 GID 的范围; 用户的期限等等, 这个文件是可以通过 <code>root</code> 来定义的</p>
<p><code>Default Configuration:</code></p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>以上只对之后新增的用户有效, 如果要修改已存在的用户密码规则, 需要使用 <code>chage</code> 命令</p>
</div>
<p>使用以下命令, 可以查看用户的密码规则, <code>Command Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>For Examlpe:</code> <br></p>
<figure><img src="/assets/redhat-reinforce-1.png" alt="RedHat 系统安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 系统安全加固</figcaption></figure>
<h2> chage 命令</h2>
<p>设置最大最小使用天数, 以及警告天数, <code>For Examlpe:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>不要用该命令给 root 用户加上有效期, 如果密码过期, 再加上后文说的 <code>/etc/shadow</code> 文件加锁禁止修改, 会导致 root 提示修改密码, 无法成功修改密码, 从而无法登陆。</p>
</div>
<p><code>chage</code> 选项解释</p>
<ul>
<li><strong>-m</strong> =&gt; 密码可更改的最小天数。 为零时代表任何时候都可以更改密码。</li>
<li><strong>-M</strong> =&gt; 密码保持有效的最大天数。</li>
<li><strong>-w</strong> =&gt; 用户密码到期前, 提前收到警告信息的天数。</li>
<li><strong>-E</strong> =&gt; 帐号到期的日期。 过了这天, 此帐号将不可用。</li>
<li><strong>-d</strong> =&gt; 上一次更改的日期。</li>
<li><strong>-i</strong> =&gt; 停滞时期。 如果一个密码已过期这些天, 那么此帐号将不可用。</li>
<li><strong>-l</strong> =&gt; 例出当前的设置。 由非特权用户来确定他们的密码或帐号何时过期。</li>
</ul>
<p>如果要修改密码过期时间为 <code>“从不”</code> , <code>For Examlpe:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 空密码检查</h2>
<p><strong>/etc/shadow</strong> 文件中的记录行与 <strong>/etc/passwd</strong> 中的一一对应, 是记录系统中用户的密码的, 此文件只有 <code>root</code> 用户可以对其进行修改</p>
<p>使用 <code>awk</code> 命令可以检查是否存在空密码, <code>For Examlpe:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 没密码检查</h2>
<p>空密码跟没有密码是俩回事, 体现于 <strong>/etc/shadow</strong> 中的密码那一列, 空密码是显示空, 没有密码是显示 <code>！ ！</code> 使用 <code>awk</code> 命令可以检查是否存在空密码, <code>For Examlpe:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> awk 命令</h2>
<p>查询 UID 为 0 的用户, <code>For Examlpe:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>UID 为 0 的任何用户都拥有系统的最高特权, 保证只有 root 用户的 UID 为 0</p>
</div>
<p><code>awk</code> 选项解释</p>
<ul>
<li><strong><code>-F fs</code></strong> =&gt; fs 指定输入分隔符, fs 可以是字符串或正则表达式, 如 <code>-F:</code></li>
<li><strong><code>-v var=value</code></strong> =&gt; 赋值一个用户定义变量, 将外部变量传递给 <code>awk</code></li>
<li><strong><code>-f scripfile</code></strong> =&gt; 从脚本文件中读取 awk 命令</li>
<li><strong><code>-m[fr] val</code></strong> =&gt; 对 val 值设置内在限制, <code>-mf</code> 选项限制分配给 val 的最大块数目; <code>-mr</code> 选项限制记录的最大数目。 这两个功能是 Bell 实验室版 <code>awk</code> 的扩展功能, 在标准 <code>awk</code> 中不适用。</li>
</ul>
<h2> 密码复杂度</h2>
<p>redhat 公司专门开发了 <code>cracklib</code> 这个安装包来判断密码的复杂度。</p>
<p>检查是否安装了 <code>cracklib</code> 模块</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/redhat-reinforce-3.png" alt="RedHat 系统安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 系统安全加固</figcaption></figure>
<p>在 <code>/etc/pam.d/system-auth</code> 中修改</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/redhat-reinforce-4.png" alt="RedHat 系统安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 系统安全加固</figcaption></figure>
<h3> 参数说明</h3>
<ul>
<li><strong><code>retry=N</code></strong> =&gt; 改变输入密码的次数, 默认值是 1, 一般设置为 3。 就是说, 如果用户输入的密码强度不够可以重复输入的次数。</li>
<li><strong><code>minlen=N</code></strong> =&gt; 密码最小长度（除了 <code>credit</code> 信用度的字符长度以外）</li>
<li><strong><code>dcredit=N</code></strong> =&gt; 密码中至少 <code>(N&lt;0)</code> 或至多 <code>(N&gt;=0)</code> 有几个数字</li>
<li><strong><code>ucredit=N</code></strong> =&gt; 密码中至少 <code>(N&lt;0)</code> 或至多 <code>(N&gt;=0)</code> 有几个大写字母</li>
<li><strong><code>lcredit=N</code></strong> =&gt; 密码中至少 <code>(N&lt;0)</code> 或至多 <code>(N&gt;=0)</code> 有几个小写字母</li>
<li><strong><code>ocredit=N</code></strong> =&gt; 密码中至少 <code>(N&lt;0)</code> 或至多 <code>(N&gt;=0)</code> 有几个特殊字符</li>
<li><strong><code>difok=M</code></strong> =&gt; 新密码与前一个旧密码之间至少有 M 个字符不相同</li>
</ul>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p><code>dcredit</code> 、 <code>ucredit</code> 、 <code>lcredit</code> 、 <code>ocredit</code> 为信用度字符, 如果 <code>N&lt;0</code> , 表示至少, 则新密码长度最小长度就等于 minlen.。 而当 <code>N&gt;0</code> 时, 表示至多, 比如 <code>ocredit=1</code> , 至多有一个特殊字符, 这样的话, 即使没有特殊字符也会允许设置新密码。 还有, 此时新密码长度会大于 minlen。 算法交复杂, 这里不赘述。 因此, 通常情况下推荐使用 <code>N&lt;0</code> 来做密码复杂度限制。 另外, 此密码规则对 root 用户无效, 只针对普通用户修改自身密码</p>
</div>
<h2> 登录验证规则</h2>
<h3> 记录普通用户登录失败次数并锁定用户</h3>
<p>在 ** <code>/etc/pam.d/system-auth**</code>中<code>"#%PAM-1.0"</code>下面一行加入,<code>For Example:</code></p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>一定要加在 <code>#%PAM-1.0</code> 下面一行</p>
</div>
<p>参数说明</p>
<ul>
<li><strong><code>deny[=n]</code></strong> =&gt; 用户连续错误登陆的最大次数, 超过则锁定</li>
<li><strong><code>unlock_time</code></strong> =&gt; 设定普通用户锁定后, 多少时间后解锁, 单位是秒</li>
<li><strong><code>even_deny_root</code></strong> =&gt; 也限制 root 用户</li>
<li><strong><code>root_unlock_time[=n]</code></strong> =&gt; 设定 root 用户锁定后, 多少时间后解锁, 单位是秒</li>
<li><strong><code>quiet</code></strong> =&gt; 不对已锁定的用户发出提示信息</li>
</ul>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>以上参数根据实际需要取舍, 如果使用了 even_deny_root 参数限制 root 用户登录错误次数, 而没有配置 root_unlock_time 的话, 一旦 root 用户被锁, 解锁将很麻烦。</p>
</div>
<h3> 查看用户登录失败次数</h3>
<p>当登录错误次数达到最大限制后, 用户再次登录时, 会提示</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/redhat-reinforce-6.png" alt="RedHat 系统安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 系统安全加固</figcaption></figure>
<p>通过以下命令可以查看用户登录失败次数, <code>Command Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>For Example:</code> <br></p>
<figure><img src="/assets/redhat-reinforce-7.png" alt="RedHat 系统安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 系统安全加固</figcaption></figure>
<h3> 解锁已经锁定的用户</h3>
<ul>
<li>自动解锁</li>
</ul>
<p>-- 如果配置了 <code>unlock_time</code> 或 <code>root_unlock_time</code> (针对 <code>root</code> 用户)参数, 则等待超过这个时长后, 帐户会自动解锁</p>
<ul>
<li>手动解锁:</li>
</ul>
<p>-- 只能以 <code>root</code> 用户通过命令 <code>pam_tally2 -u [userName] -r</code> 可以手动解锁因登录错误次数达到最大限制后自动锁定的用户, 同时登录错误次数会被重置为 0</p>
<h2> 登录超时</h2>
<p>对于 bash 用户, 修改 <code>/etc/profile</code> 或 <code>/etc/bashrc</code> , 所有使用 bash 的用户都会继承, <code>For Example:</code> <br></p>
<figure><img src="/assets/redhat-reinforce-8.png" alt="RedHat 系统安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 系统安全加固</figcaption></figure>
<p>对于 csh 用户, 修改 <code>/etc/csh.cshrc</code> , 所有使用 csh 的用户都会继承, <code>For Example:</code> <br></p>
<figure><img src="/assets/redhat-reinforce-9.png" alt="RedHat 系统安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 系统安全加固</figcaption></figure>
<p>对于 bash 用户, 修改 <code>/etc/profile</code> 或 <code>/etc/bashrc</code> , 所有使用 bash 的用户都会继承, <code>For Example:</code> <br></p>
<figure><img src="/assets/redhat-reinforce-8.png" alt="RedHat 系统安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 系统安全加固</figcaption></figure>
<p>对于 csh 用户, 修改 <code>/etc/csh.cshrc</code> , 所有使用 csh 的用户都会继承, <code>For Example:</code> <br></p>
<figure><img src="/assets/redhat-reinforce-9.png" alt="RedHat 系统安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 系统安全加固</figcaption></figure>
<h2> SSH</h2>
<h3> 禁止 root 用户远程 ssh 登录</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>由于之前的笔记已经记录过了, 这里就不再重复了</p>
</div>
<h3> ssh 的黑白名单（指定用户或组）</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>由于之前的笔记已经记录过了, 这里就不再重复了</p>
</div>
<h3> ssh 的黑白名单（指定 IP）</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>由于之前的笔记已经记录过了, 这里就不再重复了</p>
</div>
<h2> Telnet</h2>
<h3> 禁止 root 用户远程 telnet 登录</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>系统安装 <code>telnet-server</code> 服务后, 默认就是禁止 root 用户直接远程 telnet 登录的。 确认只要存在 <code>/etc/securetty</code> 文件, 就可以限制 root 直接远程 telnet 登录。</p>
</div>
<h3> telnet 的黑白名单（指定用户或组）</h3>
<p>系统不支持限制普通用户 telnet 远程登录</p>
<h3> telnet 的黑白名单（指定 IP）</h3>
<p>与 <code>SSH</code> 中的相差无几, 同样是在 <code>/etc/hosts.allow</code> 里添加白名单, 在 <code>/etc/hosts.deny</code> 里添加黑名单, <code>For Example:</code></p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 禁止普通用户登录 shell</h2>
<p>使用 <code>usermod</code> 命令修改用户的登录 <code>shell</code> 就好, <code>Command Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 避免普通用户 su 到 root 用户</h2>
<p>在 ** <code>/etc/pam.d/su**</code>中<code>"#%PAM-1.0"</code> 下面一行加入</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/redhat-reinforce-5.png" alt="RedHat 系统安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 系统安全加固</figcaption></figure>
<p>当然只去除红框中的 <code>#</code> 也是 ok 的<br></p>
<figure><img src="/assets/redhat-reinforce-10.png" alt="RedHat 系统安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 系统安全加固</figcaption></figure>
<p>这样以来只有 wheel 组的用户可以 su 作为 root</p>
<h2> 指定可以 su 到 root 的用户</h2>
<p>指定某个用户可以 su 到 root 用户, 需要将该用户加入到 wheel 组中</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>如果禁止 root 用户直接登录, 也不存在 wheel 组的用户, 就无法进入 root 用户了</p>
</div>
<figure><img src="/assets/redhat-reinforce-11.png" alt="RedHat 系统安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 系统安全加固</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/redhat-reinforce-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 学习笔记（三）文件的压缩与解压缩</title>
      <link>https://vxhly.github.io/views/liunx/file-compression-and-decompression.html</link>
      <guid>https://vxhly.github.io/views/liunx/file-compression-and-decompression.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（三）文件的压缩与解压缩</source>
      <description>前言 本篇是 Liunx 的学习笔记系列第三篇, 这一篇将介绍在 Liunx 下压缩解压文件或目录常用命令。压缩文件及目录可以大大增加磁盘的利用率。</description>
      <category>liunx</category>
      <pubDate>Sat, 10 Sep 2016 14:04:39 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的学习笔记系列第三篇, 这一篇将介绍在 Liunx 下压缩解压文件或目录常用命令。压缩文件及目录可以大大增加磁盘的利用率。</p>
</div>
<!-- more -->
<h2> .gz 格式</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>只能压缩文件而不能压缩目录, 且不保留原文件</p>
</div>
<h2> .tar.gz 格式</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 选项解释</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>可以打包或压缩目录和文件, -f 选项是必须的, 且必须放在选项中的最后一位, 可以保留原文件</p>
</div>
<h2> .zip 格式</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 选项解释</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> .gz 格式</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>只能压缩文件而不能压缩目录, 且不保留原文件</p>
</div>
<h2> .zip 格式</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>选项解释</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>可以压缩目录或文件, -r 选项用于压缩目录, 可以保留原文件</p>
</div>
<h2> .bz2 格式</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>选项解释</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>bzip2 命令, 只能压缩文件, 不能压缩目录, 要使原文件保留, 使用 -k 选 项；要压缩目录使用 tar 命令的 -j 选项 用 tar 命令的 -j 选项</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>RedHat 系统安全加固（五）防火墙 (iptables) 的设置</title>
      <link>https://vxhly.github.io/views/liunx/iptables-settings.html</link>
      <guid>https://vxhly.github.io/views/liunx/iptables-settings.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（五）防火墙 (iptables) 的设置</source>
      <description>前言 本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记记录 RedHat 下的防火请的开启和关闭, 还有允许哪些端口通过防火墙。</description>
      <category>liunx</category>
      <pubDate>Thu, 27 Oct 2016 10:00:55 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记记录 RedHat 下的防火请的开启和关闭, 还有允许哪些端口通过防火墙。</p>
</div>
<!-- more -->
<h2> 防火墙的开启和关闭</h2>
<h3> 永久性生效</h3>
<p>使用 <code>chkconfig</code> , 重启后不会复原</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 即时生效</h3>
<p>使用 <code>service</code> , 重启后复原</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> iptables 命令解释</h2>
<h3> 选项解释</h3>
<ul>
<li><strong>-t&lt;表&gt;</strong>: 指定要操纵的表；</li>
<li><strong>-A</strong>: 向规则链中添加条目；</li>
<li><strong>-D</strong>: 从规则链中删除条目；</li>
<li><strong>-I</strong>: 向规则链中插入条目；</li>
<li><strong>-R</strong>: 替换规则链中的条目；</li>
<li><strong>-L</strong>: 显示规则链中已有的条目；</li>
<li><strong>-F</strong>: 清楚规则链中已有的条目；</li>
<li><strong>-Z</strong>: 清空规则链中的数据包计算器和字节计数器；</li>
<li><strong>-N</strong>: 创建新的用户自定义规则链；</li>
<li><strong>-P</strong>: 定义规则链中的默认目标；</li>
<li><strong>-h</strong>: 显示帮助信息；</li>
<li><strong>-p</strong>: 指定要匹配的数据包协议类型；</li>
<li><strong>-s</strong>: 指定要匹配的数据包源 ip 地址；</li>
<li><strong>-j&lt;目标&gt;</strong>: 指定要跳转的目标；</li>
<li><strong>-i&lt;网络接口&gt;</strong>: 指定数据包进入本机的网络接口；</li>
<li><strong>-o&lt;网络接口&gt;</strong>: 指定数据包要离开本机所使用的网络接口。</li>
</ul>
<h3> 命令输入顺序</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li><strong>表名包括</strong></li>
</ul>
<p>-- <strong>raw</strong>: 高级功能, 如: 网址过滤。 -- <strong>mangle</strong>: 数据包修改（QOS）, 用于实现服务质量。 -- <strong>net</strong>: 地址转换, 用于网关路由器。 -- <strong>filter</strong>: 包过滤, 用于防火墙规则。</p>
<ul>
<li><strong>规则链名包括</strong></li>
</ul>
<p>-- <strong>INPUT 链</strong>: 处理输入数据包。 -- <strong>OUTPUT 链</strong>: 处理输出数据包。 -- <strong>PORWARD 链</strong>: 处理转发数据包。 -- <strong>PREROUTING 链</strong>: 用于目标地址转换（DNAT）。 -- <strong>POSTOUTING 链</strong>: 用于源地址转换（SNAT）。</p>
<ul>
<li><strong>动作包括</strong></li>
</ul>
<p>-- <strong>ACCEPT</strong>: 接收数据包。 -- <strong>DROP</strong>: 丢弃数据包。 -- <strong>REDIRECT</strong>: 重定向、映射、透明代理。 -- <strong>SNAT</strong>: 源地址转换。 -- <strong>DNAT</strong>: 目标地址转换。 -- <strong>MASQUERADE</strong>: IP 伪装（NAT）, 用于 ADSL。 -- <strong>LOG</strong>: 日志记录。</p>
<h2> iptables 的设置与查看</h2>
<h3> 查看 iptables 的设置</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/iptables-1.png" alt="iptables 的设置与查看" tabindex="0" loading="lazy"><figcaption>iptables 的设置与查看</figcaption></figure>
<h3> 清除已有 iptables 规则</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/iptables-2.png" alt="iptables 的设置与查看" tabindex="0" loading="lazy"><figcaption>iptables 的设置与查看</figcaption></figure>
<h3> 开放指定的端口</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>-A</code> 是在 <code>iptables</code> 的最后添加一条规则, <code>-I</code> 是在 <code>iptables</code> 的前面添加一条规则</p>
</div>
<figure><img src="/assets/iptables-3.png" alt="iptables 的设置与查看" tabindex="0" loading="lazy"><figcaption>iptables 的设置与查看</figcaption></figure>
<h3> 屏蔽 IP</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 保存当前设置的规则</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/iptables-4.png" alt="iptables 的设置与查看" tabindex="0" loading="lazy"><figcaption>iptables 的设置与查看</figcaption></figure>
<br>
<figure><img src="/assets/iptables-5.png" alt="iptables 的设置与查看" tabindex="0" loading="lazy"><figcaption>iptables 的设置与查看</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/iptables-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 学习笔记（五）基础操作</title>
      <link>https://vxhly.github.io/views/liunx/liunx-basic-operation.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-basic-operation.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（五）基础操作</source>
      <description>前言 本篇是 Liunx 的学习笔记系列第五篇, 这一篇将介绍 Liunx 的基础操作。很多人觉得 Liunx 非常难学, 但不其然, 只要掌握一些基础的命令操作, Liunx 还是非常好上手的。</description>
      <category>liunx</category>
      <pubDate>Thu, 15 Sep 2016 16:09:27 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的学习笔记系列第五篇, 这一篇将介绍 Liunx 的基础操作。很多人觉得 Liunx 非常难学, 但不其然, 只要掌握一些基础的命令操作, Liunx 还是非常好上手的。</p>
</div>
<!-- more -->
<h2> Liunx 终端</h2>
<h3> 终端和控制台的区别</h3>
<p>终端 (Terminal) 和控制台 (Console) 是有区别的</p>
<p>终端本质上是对应着 Liunx 上的 <code>/dev/tty</code> 设备, Liunx 的多用户登陆就是通过不同的 <code>/dev/tty</code> 设备完成的, Liunx 默认提供了 6 个纯命令行界面的 <code>"terminal"</code> （准确的说这里应该是 6 个 <code>virtual consoles</code> ）来让用户登录, 你可以通过使用 <code>[Ctrl]+[Alt]+[F1]～[F6]</code> 进行切换, 不过在在线实验环境中可能无法切换, 因为特殊功能按键会被你主机系统劫持。当你切换到其中一个终端后想要切换回图形界面, 你可以按下 <code>[Ctrl]+[Alt]+[F7]</code> 来完成</p>
<h3> Shell</h3>
<p>Shell 是指"提供给使用者使用界面"的软件（命令解析器）, 类似于 DOS 下的 command (命令行)和后来的 cmd.exe。之所以被称作 shell 是因为它隐藏了操作系统底层的细节。就像是个 Shell (壳), 有壳就有核, 这里的核就是指的 UNIX/Liunx 内核。</p>
<h3> 重要的快捷键（只列出常用的）</h3>
<table>
<thead>
<tr>
<th>按键</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Tab</strong></td>
<td>进行命令补全</td>
</tr>
<tr>
<td><strong>Ctrl+c</strong></td>
<td>强行终止当前程序（最常用, 你可以放心它并不会使终端退出)</td>
</tr>
<tr>
<td><strong>Ctrl+d</strong></td>
<td>这个才是强制退出终端的(不用敲 exit 了)</td>
</tr>
<tr>
<td><strong>Ctrl+s</strong></td>
<td>暂定当前程序, 暂停后按下任意键恢复运行(网络交互有用)</td>
</tr>
<tr>
<td><strong>Ctrl+z</strong></td>
<td>将当前程序放到后台运行, 恢复到前台为命令 fg</td>
</tr>
<tr>
<td><strong>Ctrl+u</strong></td>
<td>删除光标所在的整行</td>
</tr>
<tr>
<td><strong>Ctrl+l</strong></td>
<td>清屏, 最常用</td>
</tr>
<tr>
<td><strong>Ctrl+k</strong></td>
<td>删除从光标所在位置到行末</td>
</tr>
<tr>
<td><strong>Alt+Backspace</strong></td>
<td>向前删除一个单词</td>
</tr>
<tr>
<td><strong>Shift+PgUp</strong></td>
<td>将终端显示向上滚动</td>
</tr>
<tr>
<td><strong>Shift+PgDn</strong></td>
<td>将终端显示向下滚动</td>
</tr>
</tbody>
</table>
<h3> 使用通配符</h3>
<p><code>举例:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-basic-1.png" alt="使用通配符" tabindex="0" loading="lazy"><figcaption>使用通配符</figcaption></figure>
<h3> shell 常用通配符</h3>
<table>
<thead>
<tr>
<th>通配符</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>*</strong></td>
<td>匹配 0 或多个字符</td>
</tr>
<tr>
<td><strong>?</strong></td>
<td>匹配任意一个字符</td>
</tr>
<tr>
<td><strong>[list]</strong></td>
<td>匹配 list 中的任意单一字符</td>
</tr>
<tr>
<td><strong>[!list]</strong></td>
<td>匹配 除 list 中的任意单一字符以外的字符</td>
</tr>
<tr>
<td><strong>[c1-c2]</strong></td>
<td>匹配 c1-c2 中的任意单一字符 如: <code>[0-9] [a-z]</code></td>
</tr>
<tr>
<td><strong>{string1, string2, ...}</strong></td>
<td>匹配 sring1 或 string2 (或更多)其一字符串</td>
</tr>
<tr>
<td><strong>{c1..c2}</strong></td>
<td>匹配 c1-c2 中全部字符 如 <code>{1..10}</code></td>
</tr>
</tbody>
</table>
<h2> 命令手册速查</h2>
<p>Liunx 下命令成千上百, 有个速查手册也是不错的, <a href="http://man.linuxde.net/" target="_blank" rel="noopener noreferrer">Liunx 命令速查手册</a></p>
<h2> Liunx 用户管理</h2>
<h3> 获取当前登录的用户</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-basic-2.png" alt="获取当前登录的用户" tabindex="0" loading="lazy"><figcaption>获取当前登录的用户</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>第一列表示打开当前伪终端的用户的用户名<br> 第二列的 pts/0 中 pts 表示伪终端, 所谓伪是相对于 /dev/tty 设备而言的, 使用 <code>[Ctrl]+[Alt]+[F1]～[F7]</code> 进行切换的 /dev/tty 设备, 这是"真终端", 伪终端就是当你在图形用户界面使用 /dev/tty7 时每打开一个终端就会产生一个伪终端, pts/0 后面那个数字就表示打开的伪终端序号<br> 第三列则表示当前伪终端的启动时间</p>
</div>
<h3> 创建用户、切换用户</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>用户信息将被保存至 <code>/etc/passwd</code>, 用户密码将被保存至 <code>/etc/shadow</code><br> 使用 root 用户可以修改其内容, 只需使用 wq!, 强制保存就好</p>
</div>
<h3> 创建组、添加组成员</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>组信息将被保存至 <code>/etc/group</code>, 组密码将保存至 <code>/etc/gshadow</code><br> 使用 root 用户可以修改其内容, 只需使用 wq!, 强制保存就好</p>
</div>
<h3> 禁用和解锁用户</h3>
<h4> passwd 方法</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4> 修改 <code>/etc/shadow</code> 文件（root 用户）</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>禁用则在密码位前手工添加 ! （启用删除 ! 即可）, 如:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 <code>:wq!</code> 强制保存</p>
<h4> usermod 方法</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 设置用户一登录就要修改密码</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 查看当前登录的用户的环境变量</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> Liunx 文件权限</h2>
<h3> 查看文件权限</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 权限介绍</h4>
<figure><img src="/assets/liunx-basic-3.png" alt="权限介绍" tabindex="0" loading="lazy"><figcaption>权限介绍</figcaption></figure>
<br>
<figure><img src="/assets/liunx-basic-4.png" alt="权限介绍" tabindex="0" loading="lazy"><figcaption>权限介绍</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>通常我们使用数字表示权限, 4 为读取权限, 2 为写入权限, 1 为执行权限。所以权限为 777 的为最高权限</p>
</div>
<h3> 权限的设置</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 修改所属者和所属组</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> Liunx 文件的基本操作（很重要且很常用）</h2>
<h3> 文件操作</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 目录操作</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 复制操作</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 移动、重命名操作</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 查看文件</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>适用于快速查看文件, 都是用来打印文件内容到标准输出（终端), 相同的命令有: cat (正序)、tac (倒序)、tail(按要求输出)和 nl 命令</p>
<h2> 搜索文件</h2>
<h3> whereis</h3>
<p>直接从数据库中查询简单快速</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> locate</h3>
<p>快而全</p>
<p>通过 <code>"/var/lib/mlocate/mlocate.db"</code> 数据库查找, 不过这个数据库也不是实时更新的, 系统会使用定时任务每天自动执行 updatedb 命令更新一次, 所以有时候你刚添加的文件, 它可能会找不到, 你就得自己执行一次 updatedb 命令（在我们的环境中必须先执行一次该命令）。它可以用来查找指定目录下的不同文件类型,</p>
<p>如: 查找 <code>/etc</code> 下所有以 sh 开头的文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意, 它不只是在 etc 目录下查找并会自动递归子目录进行查找 查找 <code>/usr/share/</code> 下所有 jpg 文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意要添加 <strong>*</strong> 号前面的反斜杠转义, 否则会无法找到 只统计数目可以加上 -c 参数, -i 参数忽略大小写进行查找, whereis 的 -b, -m, -s 同样适用</p>
<h3> which</h3>
<p>避免了进入程序进行测试, 很有用</p>
<p>which 本身是 shell 内建的一个命令, 我们通常使用 which 来确定是否安装了某个指定的软件, 因为它只从 PATH 环境变量指定的路径中去搜索命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> find</h3>
<p>太精和太细, 知道前面的命令就已经足够了</p>
<p>find 应该是这几个命令中最强大的了, 它不但可以通过文件类型、文件名进行查找而且可以根据文件的属性（如文件的时间戳, 文件的权限等）进行搜索</p>
<p>举个栗子: 在指定目录下搜索指定文件名的文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意 find 命令的路径是作为第一个参数的, 基本命令格式为 <code>find [path] [option] [action]</code></p>
<h2> 简单文件系统操作</h2>
<h3> 查看磁盘和目录的容量</h3>
<h4> 使用 df 命令查看磁盘的容量</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4> 使用 du 命令查看目录的容量</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 挂载光盘和卸载光盘</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> wc 命令, 简单小巧的计数工具</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>分别只输出行数、单词数、字节数、字符数和输入文本中最长一行的字节数</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>对于西文字符来说, 一个字符就是一个字节, 但对于中文字符一个汉子是大于 2 个字节的, 具体数目是由字符编码决定的</p>
</div>
<h2> 常用的文本处理命令</h2>
<h3> tr 命令</h3>
<p>tr 命令可以用来删除一段文本信息中的某些文字。或者将其进行转换 使用方式:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>常用选项:</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>-d</strong></td>
<td>删除和 set1 匹配的字符, 注意不是全词匹配也不是按字符顺序匹配</td>
</tr>
<tr>
<td><strong>-s</strong></td>
<td>去除 set1 指定的在输入文本中连续并重复的字符</td>
</tr>
</tbody>
</table>
<p><code>操作举例: </code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> col 命令</h3>
<p>col 命令可以将 Tab 换成对等数量的空格建, 或反转这个操作. 用来格式化代码超爽 使用方式:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>常用的选项有:</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>-x</strong></td>
<td>将 Tab 转换为空格</td>
</tr>
<tr>
<td><strong>-h</strong></td>
<td>将空格转换为 Tab（默认选项）</td>
</tr>
</tbody>
</table>
<p><code>操作举例: </code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 福利-使用 wget 克隆网站</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-basic-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 命令练习</title>
      <link>https://vxhly.github.io/views/liunx/liunx-command-testing.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-command-testing.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 命令练习</source>
      <description>前言 简单的一些 Liunx 命令练习。</description>
      <category>liunx</category>
      <pubDate>Sun, 03 Sep 2017 20:46:08 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>简单的一些 Liunx 命令练习。</p>
</div>
<!-- more -->
<h2> 【文件的压缩和解压缩】</h2>
<div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>使用 tar 命令将 <code>/etc</code> 目录打包至 <code>/tmp</code> 目录下（仅打包, 不压缩）, 将打包后的文件, 以 <code>gzip</code> 方式压缩【共两条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 【创建软链接和硬链接】</h2>
<div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>给系统文件 <code>/etc/profile</code> 创建一个软链接 <code>lnsprofile</code> 和一个硬链接 <code>lnhprofile</code>【共两条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 【为文件设置隐藏属性】</h2>
<div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>为文件 <code>test</code> 设置隐藏属性, 要求其只能无法写入数据, 也无法删除它【共一条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 【创建目录和删除目录】</h2>
<div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>创建目录 <code>./test/2017/6/25</code>, 并切换目录至 <code>./test/2017/6</code>, 删除空目录 ./25（不能使用 rm -rf）【共三条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>查看当前所在的目录【共一条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>查看当前目录下有哪些文件或目录（包括隐藏文件）【共一条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 【普通用户提权】</h2>
<div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>普通用户切换成 root 超级用户【举例两个】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 【创建用户和用户组】</h2>
<div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>创建一个用户 stuxxx, 其家目录为 <code>/home/stu</code>, 备注信息为 "this is student, ID is xxxxxx", 登录 shell 为 <code>/sbin/nologi</code>n, 并设置登陆密码【共三条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>创建一个 uid 为 0 的用户 student【共一条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>创建用户组 test【共一条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 【用户管理】</h2>
<div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>锁定用户 stuxxx, 使其不能登陆系统【共一条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 【新建文件】</h2>
<div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>新建一个文件 file, 添加内容 "this is text, ID is xxxxxx", 设置其权限为 000【共三条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 【文件的快速搜索】</h2>
<div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>在 <code>/etc</code> 目录下搜索 apache、ssh、ftp 的配置文件【共三条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 【文件的查看和快速定位】</h2>
<div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>查看 <code>/etc/passwd</code> 文件和 <code>/etc/shadow</code> 文件, 并使用 grep 过滤出 student 用户的信息【共两条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 【更改目录或者文件的属性】</h2>
<div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>将目录 <code>./test/\*</code> 的所有者和所有组修改成 student【共一条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 【系统环境变量的查看与配置】</h2>
<div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>查看当前的系统环境变量配置【共两条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>将 <code>/tmp</code> 目录添加至系统 <code>$PATH</code> 变量中【共一条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 【iptables 规则】</h2>
<div class="hint-container tip">
<p class="hint-container-title">需求</p>
<p>设置 iptables 规则, 只允许 80 端口和 22 端口通过防火墙【共两条命令】</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Liunx 学习笔记（一）目录结构说明</title>
      <link>https://vxhly.github.io/views/liunx/liunx-directory-structure.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-directory-structure.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（一）目录结构说明</source>
      <description>前言 接触了 Liunx 也有一段时间了, 也算对 Liunx 有一定的了解, 在这里将陆续的推出 Liunx 的学习笔记系列, 做个记录, 方便以后忘记有处可循。Liunx 是以文件系统为主的, 所以 Liunx 下的每一个目录都有其各自的作用, 则本篇将介绍 Liunx 的各个目录结构及其说明。</description>
      <category>liunx</category>
      <pubDate>Thu, 08 Sep 2016 19:35:12 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>接触了 Liunx 也有一段时间了, 也算对 Liunx 有一定的了解, 在这里将陆续的推出 Liunx 的学习笔记系列, 做个记录, 方便以后忘记有处可循。Liunx 是以文件系统为主的, 所以 Liunx 下的每一个目录都有其各自的作用, 则本篇将介绍 Liunx 的各个目录结构及其说明。</p>
</div>
<!-- more -->
<h2> 目录结构图</h2>
<figure><img src="/assets/liunx-directory-structure.png" alt="目录结构图" tabindex="0" loading="lazy"><figcaption>目录结构图</figcaption></figure>
<h2> 目录结构说明</h2>
<table>
<thead>
<tr>
<th>目录</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>/</strong></td>
<td>根目录。在 <code>Windows</code> , <code>DOS</code> 或者其他类似的操作系统里面, 每个分区都会有一个相应的根目录。但是 <code>Linux</code> 和其他 <code>UNIX</code> 系统则把所有的文件都放在一个目录树里面, <code>/</code> 就是唯一的根目录。一般来讲, 根目录下面很少保存什么文件, 或者只有一个内核映像在这里。</td>
</tr>
<tr>
<td><strong>/boot</strong></td>
<td>很多 <code>Linux</code> 系统把内核映像和其他一些和启动有关的文件都放在这里。</td>
</tr>
<tr>
<td><strong>/tmp</strong></td>
<td>一般只有启动时产生的临时文件才会放在这个地方。我们自己的临时文件都放在 <code>/var/tmp</code> 。</td>
</tr>
<tr>
<td><strong>/mnt</strong></td>
<td>这个目录下面放着一些用来安装其他设备的子目录, 比如说 <code>/mnt/cdrom</code> 或者 <code>/mnt/floppy</code> 。在有些 <code>Linux</code> 中这个目录被 <code>/mount</code> 代替。</td>
</tr>
<tr>
<td><strong>/lib</strong></td>
<td>启动的时候所要用到的库文件都放在这个目录下。那些非启动用的库文件都会放在 <code>/usr/lib</code> 下。内核模块是放在 <code>/lib/modules/</code> （内核版本）下的。</td>
</tr>
<tr>
<td><strong>/proc</strong></td>
<td>这个目录在磁盘上其实是不存在的。里面的文件都是关于当前系统的状态, 包括正在运行的进程、硬件状态、内存使用的多少等。</td>
</tr>
<tr>
<td><strong>/dev</strong></td>
<td>这个目录下保存着所有的设备文件。里面有一些是由 <code>Linux</code> 内核创建的用来控制硬件设备的特殊文件。</td>
</tr>
<tr>
<td><strong>/var</strong></td>
<td>这里有一些被系统改变过的数据。比如说 <code>/var/tmp</code> , 就是用来储存临时文件的。还有很多其他的进程和模块把它们的记录文件也放在这个地方, 包括如下一些重要的子目录</td>
</tr>
<tr>
<td><strong>/var/log</strong></td>
<td>这里放着绝大部分的记录文件。随着时间的增长, 这个目录会变得很庞大, 所以要定期清理。</td>
</tr>
<tr>
<td><strong>/var/run</strong></td>
<td>包括了各种运行时的信息。</td>
</tr>
<tr>
<td><strong>/var/lib</strong></td>
<td>包括了一些系统运行时需要的文件。</td>
</tr>
<tr>
<td><strong>/var/spool</strong></td>
<td>邮件, 新闻, 打印序列的所在地。</td>
</tr>
<tr>
<td><strong>/root</strong></td>
<td><code>root</code> 用户的主目录。</td>
</tr>
<tr>
<td><strong>/home</strong></td>
<td>一般用户的主目录都会放在这个目录下。在 <code>Linux</code> 下, 可以通过 <code>#cd ~</code> 来进入自己的主目录。</td>
</tr>
<tr>
<td><strong>/etc</strong></td>
<td>这里保存着绝大部分的系统配置文件。相对来讲, 单个用户的系统配置文件会保存在这个用户自己的主目录里面。下面列举其中一些重要的子目录。</td>
</tr>
<tr>
<td><strong>/etc/X11</strong></td>
<td>这里放着 X 窗口系统（ <code>Linux</code> 中的图形用户界面系统）所需要的配置文件。 <code>XF86Config</code> 就是把配置储存到这个地方的。 <code>/etc/X11/fonts</code> 里面放着一些服务器需要的字体, 还存放一些窗口管理器存放的配置文件。</td>
</tr>
<tr>
<td><strong>/etc/init.d</strong></td>
<td>这个目录保存着启动描述文件, 包括各种模块和服务的加载描述。所以如果不清楚的话, 千万不要随便删除其中的文件, 这里存放的文件都是系统自动进行配置的, 不需要用户配置。</td>
</tr>
<tr>
<td><strong>/etc/rcS.d</strong></td>
<td>这里放着一些连接到 <code>/etc/init.d</code> 的文件, 根据 <code>runlevel</code> 的不同而执行相应的描述。这里的文件名都是由 <code>S</code> 来开头的, 然后是一个两位的数字----表示各种服务启动的顺序。比如, <code>S24foo</code> 就是在 <code>S42bar</code> 前面执行的。接着就是相应的连接到 <code>/etc/init.d</code> 下面的文件名字了。</td>
</tr>
<tr>
<td><strong>/etc/rc0.d - /etc/rc6.d</strong></td>
<td>这里面也是一些连接文件, 和 <code>/etc/rcS.d</code> 差不多。不同的是, 这些只会在指定的 <code>runlevel</code> 下运行相应的描述。 <code>0</code> 表示关机, <code>6</code> 表示重启。所有以 <code>K</code> 开头的文件表示关闭, 所有以 <code>S</code> 开头的文件表示重启。目前来讲, 文件的命名方式和 <code>/etc/rcS.d</code> 是一样的。</td>
</tr>
<tr>
<td><strong>/bin, /sbin</strong></td>
<td>这里分别放着启动时所需要的普通程序和系统程序。很多程序在启动以后也很有用, 它们放在这个目录下是因为它们经常要被其他程序调用。</td>
</tr>
<tr>
<td><strong>/usr</strong></td>
<td>这是一个很复杂、庞大的目录。除了上述目录之外, 几乎所有的文件都存放在这下面。下面列举其中一些重要的子目录。</td>
</tr>
<tr>
<td><strong>/usr/X11R6, /usr/X11, /usr/Xfree86</strong></td>
<td>这里保存着 X 窗口系统所需要的文件, 它的目录结构和 <code>/usr</code> 是一样的。</td>
</tr>
<tr>
<td><strong>/usr/bin</strong></td>
<td>二进制可执行文件存放的目录, 这里放着绝大部分的应用程序。</td>
</tr>
<tr>
<td><strong>/usr/sbin</strong></td>
<td>这里放着绝大部分的系统程序。</td>
</tr>
<tr>
<td><strong>/usr/games</strong></td>
<td>游戏程序和相应的数据会放在这里。</td>
</tr>
<tr>
<td><strong>/usr/include</strong></td>
<td>这个目录保存着 <code>C</code> 和 <code>C++</code> 的头文件。</td>
</tr>
<tr>
<td><strong>/usr/lib</strong></td>
<td>启动时用不到的库文件都会放在这里。</td>
</tr>
<tr>
<td><strong>/usr/info</strong></td>
<td>这里保存着 <code>GNU Info</code> 程序所需要的数据。</td>
</tr>
<tr>
<td><strong>/usr/man</strong></td>
<td>这里保存着 <code>man</code> 程序所需要的数据。</td>
</tr>
<tr>
<td><strong>/usr/src</strong></td>
<td>这里保存着源代码文件。</td>
</tr>
<tr>
<td><strong>/usr/doc</strong></td>
<td>这里保存着各种文档文件。这些文件可以帮助你了解 <code>Linux</code> , 解决问题和提供一些技巧。</td>
</tr>
<tr>
<td><strong>/usr/local</strong></td>
<td>这里保存着本地计算机所需要的文件。在用户进行远程访问的时候特别有意义。这个目录在有些 <code>Linux</code> 系统下就是一个单独的分区, 存放一些这台机子所属的那个用户的文件。里面的结构和 <code>/usr</code> 是一样的。</td>
</tr>
<tr>
<td><strong>/usr/shared, /usr/share</strong></td>
<td>这里保存着各种共享文件。</td>
</tr>
</tbody>
</table>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-directory-structure.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（四）APACHE 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-apache.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-apache.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（四）APACHE 服务安全配置</source>
      <description>前言 本篇是 Liunx 的服务配置笔记系列第四篇, 这一篇将具体介绍 Red Hat Liunx 下 APACHE 服务的安全配置。所谓 APACHE 就是一个 WEB 服务器, 为 WEB 网页提供服务。</description>
      <category>liunx</category>
      <pubDate>Mon, 19 Sep 2016 14:58:33 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的服务配置笔记系列第四篇, 这一篇将具体介绍 Red Hat Liunx 下 APACHE 服务的安全配置。所谓 APACHE 就是一个 WEB 服务器, 为 WEB 网页提供服务。</p>
</div>
<!-- more -->
<h2> 配置文件的位置</h2>
<p>主配置文件: <strong>/etc/httpd/conf/httpd.conf</strong></p>
<h2> 服务的启动与停止</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>APACHE 的服务名并不叫做 <code>http</code> , 而是 <code>httpd</code> 。<br> 修改配置文件过后一定要重启 <code>httpd</code> 服务。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 安全配置</h2>
<h3> 修改网站的根目录</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>APACHE 默认配置的网站根目录是在 <code>/var/www/html</code> 下, 我们可以根据需求修改它。修改这个配置项的时候, 还需同时修改 <code>&lt;Directory "/var/www/html"&gt;</code> 这个配置项。</p>
</div>
<p>修改主配置文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。使用浏览器打开即可。</p>
<p>验证之前, 还需创建网站存放的目录, 然后在创建一个测试的网页进行测试。</p>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来, 在浏览器里输入你的服务器的 <code>IP</code> 地址就可以访问了。<br></p>
<figure><img src="/assets/liunx-apache-2.png" alt="APACHE 服务安全配置" tabindex="0" loading="lazy"><figcaption>APACHE 服务安全配置</figcaption></figure>
<h3> 配置目录的别名</h3>
<p>修改主配置文件</p>
<p>目录别名设置, 就是浏览器访问 <code>http://[host]/test</code> 时, 实际上访问的是 <code>/var/www/html/test</code> 目录。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-apache-3.png" alt="APACHE 服务安全配置" tabindex="0" loading="lazy"><figcaption>APACHE 服务安全配置</figcaption></figure>
<h4> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。使用浏览器打开即可。这时候就需要跟上目录名了。</p>
<p>验证之前, 还需要创建测试目录和测试网站文件。</p>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来, 在浏览器里输入 <code>IP/test</code> 就可以访问了。注意大小写敏感。<br></p>
<figure><img src="/assets/liunx-apache-4.png" alt="APACHE 服务安全配置" tabindex="0" loading="lazy"><figcaption>APACHE 服务安全配置</figcaption></figure>
<h3> 关闭版本信息的显示</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你访问一个不存在的目录, 默认是会显示 APACHE 的版本信息, 这是很不安全的, 建议关掉, 注意大小写敏感。还可以设置为 <code>Off</code> 和 <code>EMail</code> 。其中 <code>Off</code> 是隐藏信息, <code>EMail</code> 是会显示管理员的 email 信息的。</p>
<p>修改主配置文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 使用客户端进行验证</h4>
<p>先看一下, 没有进行修改之前会显示什么吧！随便写一个目录, 访问它吧！</p>
<figure><img src="/assets/liunx-apache-5.png" alt="APACHE 服务安全配置" tabindex="0" loading="lazy"><figcaption>APACHE 服务安全配置</figcaption></figure>
<p>修改好配置之后, 重新访问, 再次看一下有没有吧！</p>
<figure><img src="/assets/liunx-apache-6.png" alt="APACHE 服务安全配置" tabindex="0" loading="lazy"><figcaption>APACHE 服务安全配置</figcaption></figure>
<h3> 禁用目录浏览、符号连接追踪</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Index</code> 是定义是否开启目录浏览, 默认开启, 要关闭只需添加 <code>-</code> ； <code>FollowSymLinks</code> 是定义是否符号连接追踪, 默认开启, 要关闭只需添加 <code>-</code> 。</p>
<p>修改主配置文件</p>
<p>由于之前修改过网站根目录, 所以在这里直接使用。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-apache-7.png" alt="APACHE 服务安全配置" tabindex="0" loading="lazy"><figcaption>APACHE 服务安全配置</figcaption></figure>
<h4> 使用客户端进行验证</h4>
<ul>
<li>配置禁用目录浏览, 说白了就是当一个目录下没有类似于 <code>index.php</code> 、 <code>index.html</code> 、 <code>default.php</code> 、 <code>defaule.html</code> 等这样子的主页, APACHE 默认会把该目录下的目录结构给列出来, 禁用就是阻止其列出。</li>
<li>配置禁用符号连接追踪, 说白了就是防止某个用户偶然创建的一个符号连接指向文件爱呢系统的某一部分。</li>
<li>配置白名单, 其实就是限制一些 IP 地址, 让其不能访问 APACHE。</li>
<li>这些配置, 在实际使用的过程中才会有体会, 这里就不再进行测试了。</li>
</ul>
<h3> 开启白名单</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接修改 <code>Allow from</code> 这一项, <code>Allow from</code> 是定义白名单, 默认是允许所有 IP 地址访问, 要限制只需把 <code>all</code> 替换成允许访问的 IP 地址就好。</p>
<p>修改主配置文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 限制 http 请求包上限</h3>
<p>HTTP 协议包包含请求包和应答包。HTTP 请求包(GET、POST 等请求方法)由三个部分构成, 分别是: <code>方法-URI-协议/版本</code> , 请求头即请求正文；HTTP 应答包和 HTTP 请求包相似, 由三个部分构成, 分别是: <code>协议-状态代码-描述</code> , 应答头即应答正文。</p>
<h4> LimitRequestLine 指令</h4>
<p>设置 HTTP 请求行的字节数限制。</p>
<p>LimitRequestLine 指令允许服务器管理员增加或减少客户端 HTTP 请求行允许大小的限制。因为请求行包括 HTTP 方法、URI、协议版本, 所以 LimitRequestLine 指令会限制请求 URI 的长度。服务器会需要这个值足够大以装载它所有的资源名, 包括可能在 GET 请求中所传递的查询部分的所有信息。</p>
<p>这个指令给了服务器管理员更大的可控性以控制客户端不正常的请求行为。这有助于避免某些形式的拒绝服务攻击。</p>
<h4> LimitRequestFieldSize 指令</h4>
<p>指定 HTTP 请求头允许的字节大小。</p>
<p>LimitRequestFieldSize 指令允许服务器管理员增加或减少 HTTP 请求头域大小的限制。一般来说, 服务器需要此值足够大, 以适应普通客户端的任何请求的头域大小。一个普通头域的大小对于不同的客户端来说是有很大差别的, 一般与用户配置他们的浏览器以支持更多的内容协议密切相关。SPNEGO 的认证头最大可能达到 12392 字节。</p>
<p>这个指令给了服务器管理员更大的可控性以控制客户端不正常的请求行为。这有助于避免某些形式的拒绝服务攻击。</p>
<h4> 示例配置</h4>
<p>默认配置中是没有 LimitRequestLine 指令和 LimitRequestFieldSize 指令, 需要手动添加</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-apache-15.png" alt="APACHE 服务安全配置" tabindex="0" loading="lazy"><figcaption>APACHE 服务安全配置</figcaption></figure>
<h2> 配置 https</h2>
<p>HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议要比 http 协议安全。</p>
<h3> 生成密钥</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这是用 128 位 rsa 算法生成密钥, 得到 <code>server.key</code> 文件</p>
<h3> 生成证书请求文件</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这是用上面的密钥生成证书请求文件 <code>server.csr</code></p>
<h3> 生成证书</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这是用前面生成的密钥和证书请求生成证书 <code>server.crt</code> , -days 参数指明证书有效期, 单位为天</p>
<h3> 生成证书和密钥的例子</h3>
<p>注意路径, 记住它。</p>
<figure><img src="/assets/liunx-apache-9.png" alt="APACHE 服务安全配置" tabindex="0" loading="lazy"><figcaption>APACHE 服务安全配置</figcaption></figure>
<h3> 确认是否安装 ssl 模块</h3>
<p>只要确定系统中有 <code>mod_ssl.so</code> 文件, 就可以确定已经安装好 ssl 模块。记住路径吧！</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-apache-8.png" alt="APACHE 服务安全配置" tabindex="0" loading="lazy"><figcaption>APACHE 服务安全配置</figcaption></figure>
<h3> 配置 httpd-ssl.conf 文件</h3>
<p>注意在此文件中配置证书和密钥, 注意路径, 这里就使用上面的路径。</p>
<p>系统中可能没有此文件, 可以先创建它, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改主配置文件, 添加如下内容, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 配置 httpd.conf 文件</h3>
<h4> 虚拟机设置</h4>
<p>修改主配置文件, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-apache-10.png" alt="APACHE 服务安全配置" tabindex="0" loading="lazy"><figcaption>APACHE 服务安全配置</figcaption></figure>
<h4> 修改主配置文件</h4>
<p>打开 ssl 模块, 并引入配置文件</p>
<p>修改主配置文件, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-apache-11.png" alt="APACHE 服务安全配置" tabindex="0" loading="lazy"><figcaption>APACHE 服务安全配置</figcaption></figure>
<p>这里提供简洁方法, 在 vi 下使用 <code>:r !find / -iname "*mod_ssl.so*"</code> , 在配置文件中也可以很任性的将 <code>httpd-ssl.conf</code> 里的内容填入主配置文件。</p>
<p>修改主配置文件, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上的配置写在任何地方均生效, 但要注意的是配置中可能没有以下选项, 需要手动添加, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>但是最好还是写在 <code>&lt;VirtualHost *:443&gt;&lt;/VirtualHost&gt;</code> 这个地方, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 将监听 80 端口注释</h4>
<p>如果不注释的话, 依然还可以通过 <code>http</code> 方式访问, 注释掉, 只能使用 <code>https</code> 方式访问。</p>
<p><code>For Example:</code> <br></p>
<figure><img src="/assets/liunx-apache-12.png" alt="APACHE 服务安全配置" tabindex="0" loading="lazy"><figcaption>APACHE 服务安全配置</figcaption></figure>
<h3> 访问</h3>
<p>配置好了, 重启服务, 接下来就可以愉快的使用 <code>https</code> 来访问了。</p>
<p><code>For Example:</code> <br></p>
<figure><img src="/assets/liunx-apache-13.png" alt="APACHE 服务安全配置" tabindex="0" loading="lazy"><figcaption>APACHE 服务安全配置</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-apache-2.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（六）DNS 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-dns.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-dns.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（六）DNS 服务安全配置</source>
      <description>前言 这篇是 Liunx 的服务配置笔记系列第五篇, 这一篇将具体介绍 Red Hat Liunx 下 DNS 服务的安全配置。所谓 DNS 就是一个域名解析服务器, 其中 DNS 还包含正向解析和反向解析。</description>
      <category>liunx</category>
      <pubDate>Tue, 27 Sep 2016 13:25:48 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>这篇是 Liunx 的服务配置笔记系列第五篇, 这一篇将具体介绍 Red Hat Liunx 下 DNS 服务的安全配置。所谓 DNS 就是一个域名解析服务器, 其中 DNS 还包含正向解析和反向解析。</p>
</div>
<!-- more -->
<h2> 服务的安装</h2>
<h3> 创建挂载目录</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 挂在光盘</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 安装</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-dns-1.png" alt="DNS" tabindex="0" loading="lazy"><figcaption>DNS</figcaption></figure>
<h3> 复制模板配置文件</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-dns-2.png" alt="DNS" tabindex="0" loading="lazy"><figcaption>DNS</figcaption></figure>
<p>复制的时候, 建议带上 <code>-p</code> 选项, 否则不能使用该文件, 如果忘记加上 <code>-p</code> 选项, 不要紧, 使用以下命令还可以挽救。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 安全配置</h2>
<h3> 限制递归查询功能</h3>
<p>默认没有这个功能, 需要手动添加。递归查询指 一般客户机和服务器之间属 递归查询 , 即当客户机向 DNS 服务器发 出请求后, 若 DNS 服务器本身不能解析, 则会向另外的 DNS 服务 器发出查询请求, 得到结果后转交给客户机。<br> 这个选项, 即可填 IP 地址, 也可以填网络段, 当然也可以填 any（所有）。</p>
<p>修改主配置文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-dns-3.png" alt="DNS" tabindex="0" loading="lazy"><figcaption>DNS</figcaption></figure>
<h3> 限制查询</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>allow-query 配置项用来设置允许 DNS 查询的客户端地址, 默认的客户端地址为本机。这里可以设置为某个网段、所有、具体的某台主机三种情况。</p>
<p>修改主配置文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-dns-4.png" alt="DNS" tabindex="0" loading="lazy"><figcaption>DNS</figcaption></figure>
<h3> 限制区传送</h3>
<p>默认没有这个功能, 需要手动添加。如果没有限制区传送, 那么 DNS 服务器允许对任何人都进行区域传输, 因此网络架构中的主机名、主机 IP 列表、路由器名和路由 IP 列表, 甚至包括各主机所在的位置和硬件配置等情况都很容易被入侵者得到在 DNS 配置文件中通过设置来限制允许区传送的主机, 从一定程度上能减轻信息泄漏。</p>
<p>修改主配置文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-dns-5.png" alt="DNS" tabindex="0" loading="lazy"><figcaption>DNS</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-dns-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（三）FTP 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-ftp.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-ftp.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（三）FTP 服务安全配置</source>
      <description>前言 本篇是 Liunx 的服务配置笔记系列第三篇, 这一篇将具体介绍 Red Hat Liunx 下 FTP 服务的安全配置。确切的说, 应该叫它 vsFTP, 就是文件的上传和下载服务, 主要的功能是在服务器与客户端之间进行文件的传输。</description>
      <category>liunx</category>
      <pubDate>Fri, 16 Sep 2016 20:56:49 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的服务配置笔记系列第三篇, 这一篇将具体介绍 Red Hat Liunx 下 FTP 服务的安全配置。确切的说, 应该叫它 vsFTP, 就是文件的上传和下载服务, 主要的功能是在服务器与客户端之间进行文件的传输。</p>
</div>
<!-- more -->
<h2> 配置文件的位置</h2>
<p>主配置文件: <strong>/etc/vsftpd/vsftpd.conf</strong></p>
<h2> 服务的启动与停止</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>FTP 的服务名并不叫做 <code>vsftp</code> , 而是 <code>vsftpd</code> 。<br> 修改配置文件过后一定要重启 <code>vsftpd</code> 服务。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 服务的安装</h2>
<h3> 创建挂载目录</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 挂载光盘</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 安装</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ftp-1.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h2> 安全配置</h2>
<h3> 禁止匿名用户登录</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认的值是允许的, 这样匿名用户就可以不需要密码就可以登录 FTP 了, 这样很不安全, 把它修改成 NO 吧。</p>
<figure><img src="/assets/liunx-ftp-7.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h4> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。我们就直接使用 FTP 用户登录吧。</p>
<p><code>Connection Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>若没有成功登录, 则会显示</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 <code>bye</code> , 可以退出 FTP, 成功则会显示</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ftp-8.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h3> 使用户不能登录系统, 但可以登录 FTP</h3>
<p>首先要创建一个普通的用户, 使他不能登录系统, 只需设置登录的 shell 就好了。</p>
<p>创建一个新用户, 别忘了设置密码, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>For Example:</code> <br></p>
<figure><img src="/assets/liunx-ftp-9.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h4> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。这时候, 我们就要使用之前创建的用户进行验证了。</p>
<p>若登录成功, 则会显示</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ftp-11.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h3> 禁止用户写入或者上传文件</h3>
<p><code>Default Configuration:</code> <br></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认是允许用户进行上传或者写入文件, 我们可以根据需求进行修改。</p>
<figure><img src="/assets/liunx-ftp-12.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h4> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。这时候, 我们仍然使用之前创建的用户进行验证。</p>
<p>无法创建目录, 则会显示</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>尝试切换目录, 成功则会显示</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ftp-12.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h3> 配置空闲会话中断时间</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认的配置时间是十分钟, （默认的单位为秒）, 我们可以根据需求进行修改。</p>
<figure><img src="/assets/liunx-ftp-2.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h4> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。成功登录之后, 我们等待一段时间, 在进行操作。</p>
<p>若超时, 则会显示</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ftp-3.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h3> 配置数据连接超时时间</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认的配置是两分钟, （默认的单位为秒）, 我们可以根据需求进行修改。</p>
<figure><img src="/assets/liunx-ftp-4.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h4> 使用客户端进行验证</h4>
<p>此选项需要在传输数据的时候可用, 这里不再进行演示。</p>
<h3> 限制普通用户只能在家目录中</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>默认是允许用户跳出自己的家目录的, 我们可以限制他只能在自己的家目录里。注意, 要将用户限制在家目录中, 还需要设置 'chroot_local_user=YES'。</p>
<figure><img src="/assets/liunx-ftp-5.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<p>别忘了将禁止的用户添加至 <code>/etc/vsftpd/chroot_list</code></p>
<h4> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。这时候, 我们仍然使用之前创建的用户进行验证。</p>
<p>不能切换目录, 则会显示</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ftp-6.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h3> 设置黑名单</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认情况下就是开启的, 若无开启, 我们可以根据需求进行修改。</p>
<figure><img src="/assets/liunx-ftp-13.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<p>别忘了, 将禁止的用户填入 <code>/etc/vsftpd/ftpusers</code></p>
<h4> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。这时候, 我们新建一个用户, 然后将其加入黑名单, 再进行验证。</p>
<p>新建用户, <code>For Example:</code> <br></p>
<figure><img src="/assets/liunx-ftp-14.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<p>添加至黑名单, <code>For Example:</code> <br></p>
<figure><img src="/assets/liunx-ftp-15.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<figure><img src="/assets/liunx-ftp-16.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h2> 配置虚拟用户登录</h2>
<h3> 先安装 db4</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ftp-17.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h3> 生成虚拟用户口令库文件</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>需要注意的是, 该文件的格式如下, 单数行为用户名, 偶数行为口令。</p>
<figure><img src="/assets/liunx-ftp-18.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h3> 生成口令库文件, 并修改其权限</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意要设置权限, 只有 root 用户拥有读写权限。</p>
<figure><img src="/assets/liunx-ftp-19.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h3> 修改虚拟用户的 PAM 文件</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>加入如下内容, 其他的全部注释掉</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ftp-20.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<p>数据文件的地址, 记得要写对哦。</p>
<h3> 建立虚拟用户, 并设置权限</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ftp-21.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h4> 修改主配置文件</h4>
<p>添加如下内容, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ftp-24.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<h4> 创建配置文件存放目录</h4>
<p>此目录一定要与配置文件中的一致, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 为虚拟用户创建配置文件</h4>
<p>为虚拟口令库中的每个用户分别创建一个配置文件, 配置文件中的配置于匿名用户的配置相差无几。</p>
<p>先创建配置文件, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在配置文件中配置如下内容,</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ftp-25.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
<p>最后只需创建一下虚拟用户登录后的主目录, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 登录测试</h3>
<p>这时候就要使用虚拟用户口令库文件里的用户名和密码来登录 FTP 服务器</p>
<figure><img src="/assets/liunx-ftp-23.png" alt="FTP 安全配置" tabindex="0" loading="lazy"><figcaption>FTP 安全配置</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-ftp-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（五）SAMBA 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-samba.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-samba.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（五）SAMBA 服务安全配置</source>
      <description>前言 本篇是 Liunx 的服务配置笔记系列第五篇, 这一篇将具体介绍 Red Hat Liunx 下 SAMBA 服务的安全配置。所谓 SAMBA 就是建立 Liunx 和 Windows 之间的共享, 使 Windows 能够访问 Liunx 下共享出来的文件。</description>
      <category>liunx</category>
      <pubDate>Mon, 19 Sep 2016 19:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的服务配置笔记系列第五篇, 这一篇将具体介绍 Red Hat Liunx 下 SAMBA 服务的安全配置。所谓 SAMBA 就是建立 Liunx 和 Windows 之间的共享, 使 Windows 能够访问 Liunx 下共享出来的文件。</p>
</div>
<!-- more -->
<h2> 配置文件的位置</h2>
<p>主配置文件: <strong>/etc/samba/smb.conf</strong></p>
<h2> 服务的启动与停止</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>SAMBA 的服务名并不叫做 <code>samba</code> , 而是 <code>smb</code> 。<br> 修改配置文件过后一定要重启 <code>smb</code> 服务。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 服务的安装</h2>
<h3> 创建挂载目录</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 挂在光盘</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 安装</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/liunx-samba-1.png" alt="SAMBA 服务安全配置" tabindex="0" loading="lazy"><figcaption>SAMBA 服务安全配置</figcaption></figure>
<h2> 安全配置</h2>
<h3> 配置工作组和 NetBIOS 名字</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>该文件默认配置的工作组是 MYGROUP, 而 Windows 下的工作组默认为 WORKGROUP, Liunx 和 Windows 的工作组一定要一样, 才能访问共享的文件。<br> 该文件默认将 NetBIOS 的名字注释掉了, NetBIOS 名字就是会在 Windows 下的网上邻居能够看到的名字, 注释掉就是会看不到, 建议去掉注释。</p>
</div>
<figure><img src="/assets/liunx-samba-2.png" alt="SAMBA 服务安全配置" tabindex="0" loading="lazy"><figcaption>SAMBA 服务安全配置</figcaption></figure>
<h3> 配置安全级别</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认的配置是 <code>user</code> 模式, 在该模式下, Windows 下访问 SAMBA 需要用户名和密码, 还可以设置的选项还有 <code>share/user/server/domain/ads</code> 。可以根据需求修改此选项。</p>
<ul>
<li><strong>share</strong>: 访问 Samba 服务器共享资源时不需要输入用户名和密码, 属于匿名访问。</li>
<li><strong>user</strong>: 访问 Samba 服务器共享资源时需要输入用户名和密码, 认证用户来源为 Samba 服务器本机。</li>
<li><strong>server</strong>: 访问 Samba 服务器共享资源时需要输入用户名和密码, 认证用户来源为另一台 Samba 服务器或 Windows 服务器。</li>
<li><strong>domain</strong>: Samba 服务器在一个基于 Windows NT 平台的 Windows 域中, 访问共享资源需要输入用户名和密码, 认证用户来源为 Windows 域。</li>
<li><strong>ads</strong>: Samba 服务器在一个基于 Windows 200X 平台的 Windows 活动目录中, 访问共享资源需要输入用户名和密码, 认证用户来源为 Windows 活动目录。</li>
</ul>
<h3> 配置认证密码在传输过程中加密</h3>
<p>在默认的配置文件中没有此选项, 可以手动添加, 正常情况下是需要开启的。</p>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-samba-3.png" alt="SAMBA 服务安全配置" tabindex="0" loading="lazy"><figcaption>SAMBA 服务安全配置</figcaption></figure>
<h3> 配置用户密码的存储方式</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>默认的配置为 <code>tdbsam</code> , 配置这个选项就是需要 <code>smbpasswd -a [userName]</code> 来建立 Samba 用户。还可以配置项为 <code>tdbsam/smbpasswd/ldapsam/mysql</code> 。可以根据需求进行修改。</p>
</div>
<ul>
<li><strong>tdbsam</strong>: 该方式使用一个数据库文件来建立用户数据库, 数据库文件名为 passdb.tdb 。可以使用 smbpasswd -a [用户名] 来建立 Samba 用户。也可以使用 pdbedit 命令来建立用户。</li>
<li><strong>smbpasswd</strong>: 该方式使用 Samba 提供的工具 smbpasswd 来给系统用户设置一个用于访问 Samba 服务的密码, 客户端就用这个密码访问 Samba 共享资源。此方式还要使用一个 smb passwd file = /usr/local/samba/etc/smbpasswd（或 /etc/samba/smbpasswd） 参数来指定保存用户名和密码的文件, 该文件需要手动建立。不推荐使用此方法。</li>
<li><strong>ldapsam</strong>: 该方式基于 LADP 的账户管理方式来验证用户, 先要建立 LDAP 服务。</li>
<li><strong>mysql</strong>: 该方式是将 Samba 服务器的用户名和密码存储到 MySQL 数据库中。</li>
</ul>
<figure><img src="/assets/liunx-samba-4.png" alt="SAMBA 服务安全配置" tabindex="0" loading="lazy"><figcaption>SAMBA 服务安全配置</figcaption></figure>
<h3> 设置白名单</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>默认的配置是将白名单进行注释掉的, 这里需要注意的是, 可以配置一个具体的 IP 地址, 也可以配置一个 IP 地址段, 在配置 IP 地址段的时候要注意最后一个 <code>.</code> 不要忘了写。如默认配置中的 <code>127.</code> 就是规定 <code>127.0.0.1 ～ 127.255.255.254</code> 这个 IP 地址段可以进行访问, 具体的 IP 地址不需要最后的 <code>.</code> .</p>
</div>
<p><code>For Example:</code> <br></p>
<figure><img src="/assets/liunx-samba-5.png" alt="SAMBA 服务安全配置" tabindex="0" loading="lazy"><figcaption>SAMBA 服务安全配置</figcaption></figure>
<h3> 单目录限定用户访问, 禁止写入文件</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外还可以配置以下参数</p>
<ul>
<li><strong>read only</strong> =&gt; 设置是否只读, <code>yes/no</code></li>
<li><strong>public</strong> =&gt; 设置是否让所有可以登录的用户看到这个项目</li>
<li><strong>create mode</strong> =&gt; 指明新建立的文件的属性, 一般是 <code>0755</code> 。</li>
<li><strong>directory mode</strong> =&gt; 指明新建立的目录的属性, 一般是 <code>0755</code> 。</li>
</ul>
<figure><img src="/assets/liunx-samba-6.png" alt="SAMBA 服务安全配置" tabindex="0" loading="lazy"><figcaption>SAMBA 服务安全配置</figcaption></figure>
<h3> 创建共享目录, 设置权限</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>共享目录一定要有执行权限, 一般 <code>755</code> 就够了, 这里设置 <code>777</code> 就是权限大一点就是了。</p>
</div>
<figure><img src="/assets/liunx-samba-7.png" alt="SAMBA 服务安全配置" tabindex="0" loading="lazy"><figcaption>SAMBA 服务安全配置</figcaption></figure>
<h3> 添加 SAMBA 用户</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>这里需要注意的是, 要使用 <code>smbpasswd -a</code> 创建用户, 因为之前设置了用户密码的存储方式为 <code>tdbsam</code> 。</p>
</div>
<figure><img src="/assets/liunx-samba-8.png" alt="SAMBA 服务安全配置" tabindex="0" loading="lazy"><figcaption>SAMBA 服务安全配置</figcaption></figure>
<h3> 使用 windows 访问</h3>
<p><code>For Example:</code> <br></p>
<figure><img src="/assets/liunx-samba-9.png" alt="SAMBA 服务安全配置" tabindex="0" loading="lazy"><figcaption>SAMBA 服务安全配置</figcaption></figure>
<p>输入用户名和密码, 就可以愉快的进行测试了, 这里就不多说了。</p>
<h3> 使用 smbclient 访问</h3>
<h4> 列出共享文件夹</h4>
<p>列出某个 IP 地址所提供的共享文件夹</p>
<p><code>Connect Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 像 FTP 客户端一样使用 smbclient</h4>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>执行 smbclient 命令成功后, 进入 smbclient 环境, 出现提示符: <code>smb:\&gt;</code> 这里有许多命令和 ftp 命令相似, 如 <code>cd</code> 、 <code>lcd</code> 、 <code>get</code> 、 <code>megt</code> 、 <code>put</code> 、 <code>mput</code> 等。通过这些命令, 我们可以访问远程主机的共享资源。</p>
</div>
<p><code>Connect Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-samba-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（二）SSH 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-ssh.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-ssh.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（二）SSH 服务安全配置</source>
      <description>前言 本篇是 Liunx 的服务配置笔记系列第二篇, 这一篇将具体介绍 Red Hat Liunx 下 SSH 服务的安全配置。所谓 SSH 就是加密的数据传输, 但是使用其的默认配置并不是安全的, 所以还需要对其进行详细的配置。</description>
      <category>liunx</category>
      <pubDate>Fri, 16 Sep 2016 11:59:15 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的服务配置笔记系列第二篇, 这一篇将具体介绍 Red Hat Liunx 下 SSH 服务的安全配置。所谓 SSH 就是加密的数据传输, 但是使用其的默认配置并不是安全的, 所以还需要对其进行详细的配置。</p>
</div>
<!-- more -->
<h2> 配置文件的位置</h2>
<p>主配置文件: <strong>/etc/ssh/sshd_config</strong></p>
<h2> 服务的启动与停止</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>SSH 的服务名并不叫做 <code>ssh</code> , 而是 <code>sshd</code> 。<br> 修改配置文件过后一定要重启 <code>sshd</code> 服务。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 安全配置</h2>
<h3> 修改端口号</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>配置文件中将其注释掉, 则采用默认的端口 22, 我们可以修改它。去掉 # , 修改成我们想要的端口号。</p>
</div>
<p><code>Example Configuration:</code> <br></p>
<figure><img src="/assets/liunx-ssh-1.png" alt="SSH 服务安全配置" tabindex="0" loading="lazy"><figcaption>SSH 服务安全配置</figcaption></figure>
<h4> 使用客户端进行验证</h4>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>验证之前, 请重启服务。默认是允许 root 用户登录的, 以下测试例子是使用 root 用户登录的。</p>
</div>
<p>使用默认端口连接, <code>Connection Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>若端口不对则会显示</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>Example Connection:</code> <br></p>
<figure><img src="/assets/liunx-ssh-2.png" alt="SSH 服务安全配置" tabindex="0" loading="lazy"><figcaption>SSH 服务安全配置</figcaption></figure>
<p>使用配置端口连接, <code>Connection Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>连接成功则会显示</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>Example Connection:</code> <br></p>
<figure><img src="/assets/liunx-ssh-3.png" alt="SSH 服务安全配置" tabindex="0" loading="lazy"><figcaption>SSH 服务安全配置</figcaption></figure>
<h3> 禁止 root 用户登录</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认情况下是允许 root 用户登录的, 是十分不安全, 毕竟 root 用户权限太大了。我们可以去除 #, 将 yes 修改成 no, 这就禁止了 root 用户登录。</p>
<p><code>Example Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ssh-4.png" alt="SSH 服务安全配置" tabindex="0" loading="lazy"><figcaption>SSH 服务安全配置</figcaption></figure>
<h4> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。我们已经禁止 root 用户登录了, 以下测试例子仍然使用 root 用户进行验证。</p>
<p>由于之前配置过端口号, 这时候就要使用配置的端口号了, <code>Connection Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 <code>exit</code> 可以退出当前的连接, 退出成功将会显示</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>Example Connection:</code> <br></p>
<figure><img src="/assets/liunx-ssh-5.png" alt="SSH 服务安全配置" tabindex="0" loading="lazy"><figcaption>SSH 服务安全配置</figcaption></figure>
<h3> 禁止空密码登录</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认情况下, SSH 已经禁止了使用空密码登录系统, 即使配置文件中将其注释掉。如果被设置成 yes, 则就是不安全的, 我们可以修改成 no。</p>
<p><code>Example Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ssh-6.png" alt="SSH 服务安全配置" tabindex="0" loading="lazy"><figcaption>SSH 服务安全配置</figcaption></figure>
<h4> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。我们已经禁止 root 用户登录了, 以下测试我们将使用普通用户。注意: 使用普通用户之前, 先确保服务端是有该用户的。</p>
<p>由于之前配置过端口号, 这时候就要使用配置的端口号了, <code>Connection Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果是第一次连接的话, 会提示是否保存密钥信息, 输入 <code>yes</code> 就好。</p>
<p><code>Example Connection:</code> <br></p>
<figure><img src="/assets/liunx-ssh-7.png" alt="SSH 服务安全配置" tabindex="0" loading="lazy"><figcaption>SSH 服务安全配置</figcaption></figure>
<p>断开连接, 我们尝试使用空密码连接, 只需回车就好</p>
<p><code>Example Connection:</code> <br></p>
<figure><img src="/assets/liunx-ssh-8.png" alt="SSH 服务安全配置" tabindex="0" loading="lazy"><figcaption>SSH 服务安全配置</figcaption></figure>
<h3> 设置必需使用密码登录</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认的配置就是需要使用密码登录的, 即使它是注释的。若遇到配置值为 no 的, 一定要修改成 yes。</p>
<p><code>Example Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 使用客户端进行验证</h4>
<p>前面已经验证过了, 这里不再重复</p>
<h3> 设置仅允许密钥登录</h3>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>密钥登录是与密码登录是不一样的。只允许密钥登录的时候必须要把允许密码登录的选项禁用。</p>
</div>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接下来就是将下图所示的注释去掉, 就好了<br></p>
<h4> 免密码登录</h4>
<p>主机生成密钥对（包含公钥和私钥）</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>把本地主机的公钥复制到远程主机的 <code>authorized_keys</code> 文件上</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 限制登录失败之后重试次数</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认情况下可以重试 6 次, 如果你觉得这个不合理, 当然可以修改它。同理将 # 去除, 将 6 修改成我们想要的次数。</p>
<p><code>Example Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ssh-9.png" alt="SSH 服务安全配置" tabindex="0" loading="lazy"><figcaption>SSH 服务安全配置</figcaption></figure>
<h4> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。之前我们在服务器上新建了一个用户, 那么我们将用这个用户进行连接。</p>
<p>当我们输入错误的密码时, 则会显示</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当我们最后一次输入错误的密码时, 则会显示</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>Example Connection:</code> <br></p>
<figure><img src="/assets/liunx-ssh-10.png" alt="SSH 服务安全配置" tabindex="0" loading="lazy"><figcaption>SSH 服务安全配置</figcaption></figure>
<h3> 设置多长时间没有成功连接上, 就断线</h3>
<p><code>Default Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认的等待时间为 2 分钟, 如果没有单位将以秒作为单位, 可用的单位分别为 h, m、s。我们可以根据需求修改, 当然是越短越安全。</p>
<p><code>Example Configuration:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-ssh-11.png" alt="SSH 服务安全配置" tabindex="0" loading="lazy"><figcaption>SSH 服务安全配置</figcaption></figure>
<h4> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。之前我们在服务器上新建了一个用户, 那么我们仍然使用用这个用户进行连接。</p>
<p>我们可以输入一个错误的密码, 在等待一段时间, 按下回车, 则会显示</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>Example Connection:</code> <br></p>
<figure><img src="/assets/liunx-ssh-12.png" alt="SSH 服务安全配置" tabindex="0" loading="lazy"><figcaption>SSH 服务安全配置</figcaption></figure>
<h3> 设置白名单和黑名单</h3>
<p>默认配置中是没有白名单和黑名单这个选项的, 我们可以自己添加上去。多个用户之间必须使用空格分割。同理, 用户组也一样。</p>
<p><code>白名单</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>黑名单</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Example Configuration:</code> <br></p>
<figure><img src="/assets/liunx-ssh-13.png" alt="SSH 服务安全配置" tabindex="0" loading="lazy"><figcaption>SSH 服务安全配置</figcaption></figure>
<h4> 使用客户端进行验证</h4>
<p>验证之前, 请重启服务。由于白名单与黑名单效果是一致的, 这里只提供白名单的验证测试。注意: 服务器上依然需要新建测试用户（包含设置密码, 否则, 不能登录）。</p>
<p>这时候, 我们就需要输入正确的密码。</p>
<p><code>Example Connection:</code> <br></p>
<figure><img src="/assets/liunx-ssh-14.png" alt="SSH 服务安全配置" tabindex="0" loading="lazy"><figcaption>SSH 服务安全配置</figcaption></figure>
<h3> 限制 IP 登录</h3>
<h4> 方法一</h4>
<p>在 <code>/etc/hosts.allow</code> 中添加 SSH 登录的 ip 或者网段, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>/etc/hosts.deny</code> 中添加不允许 SSH 登录的 IP, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 方法二</h4>
<p>使用 <code>iptables</code> , <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4> 方法三</h4>
<p>修改 sshd 主配置文件 <code>/etc/ssh/sshd_config</code> , <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-ssh-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（一）概述</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（一）概述</source>
      <description>前言 Liunx 的学习笔记已经推出有一段时间了, 现继续推出在 Liunx 中 SAMBA 服务、SSH 服务、FTP 服务、APACHE 服务、DNS 服务的安全配置。本文就先介绍这几个服务的相关内容。</description>
      <category>liunx</category>
      <pubDate>Thu, 15 Sep 2016 18:59:15 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Liunx 的学习笔记已经推出有一段时间了, 现继续推出在 Liunx 中 SAMBA 服务、SSH 服务、FTP 服务、APACHE 服务、DNS 服务的安全配置。本文就先介绍这几个服务的相关内容。</p>
</div>
<!-- more -->
<h2> SAMBA 服务</h2>
<p>即 Windows 下的共享, SAMBA 服务只不过是将 Liunx 下的文件共享给 Windows。</p>
<h3> 使用到的端口号</h3>
<ul>
<li>NetBIOS 名字服务（默认为 <code>137</code> 端口(UDP)）</li>
<li>NetBIOS 数据报服务（默认为 <code>138</code> 端口(UDP)）</li>
<li>文件和打印共享（默认为 <code>139</code> 端口(TCP)）</li>
<li>NetBIOS 服务在 windos 2000 及以后版本使用此端口（默认为 <code>445</code> 端口(TCP)）</li>
</ul>
<h3> 所需软件</h3>
<ul>
<li><strong>samba</strong></li>
</ul>
<p>-- 这个软件主要包含了 SAMBA 的主要 daemon 文件（smbd 及 nmbd）、SAMBA 的文件（document）与 SAMBA 相关的 logrotate 设置文件及开机默认选项文件等。</p>
<ul>
<li><strong>samba-common</strong></li>
</ul>
<p>-- 这个软件主要提供了 SAMBA 的主要配置文件（smb.conf）、smb.conf 语法检验的测试程序（testparm）等</p>
<ul>
<li><strong>samba-client</strong></li>
</ul>
<p>-- 这个软件提供了当 Liunx 作为 SAMBA 客户端时, 所需的工具指令, 例如挂载 SAMBA 文件格式的执行文件 smbmount 等</p>
<h3> 主配置文件</h3>
<ul>
<li><strong>/etc/samba/smb.conf</strong></li>
</ul>
<p>-- 是 SAMBA 的主要配置文件, 基本上, SAMBA 就仅有这个配置文件而已, 且这个配置文件本身就是很详细的说明文件, 这个文件主要在设置工作组、NetBIOS 名称以及共享目录等。</p>
<h3> 查看主配置文件的帮助</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 重要选项说明</h3>
<h4> 全局选项</h4>
<ul>
<li><strong>workgroup = [MYGROUP]</strong></li>
</ul>
<p>-- 定义 samba 服务器所在的工作组或者域（如果设置 <code>security = domain</code> 的话）。</p>
<ul>
<li><strong>server string = [Samba server]</strong></li>
</ul>
<p>-- 设定 samba 服务器的描述, 通过网络邻居访问时可在备注中查看到该描述信息。</p>
<ul>
<li><strong>netbios name = [MyServer]</strong></li>
</ul>
<p>-- 主机 NetBIOS 名称, 每台机子皆不同</p>
<ul>
<li><strong>security = share/user/server/domain/ads</strong></li>
</ul>
<p>-- <strong>share</strong>: 访问 Samba 服务器共享资源时不需要输入用户名和密码, 属于匿名访问。 -- <strong>user</strong>: 访问 Samba 服务器共享资源时需要输入用户名和密码, 认证用户来源为 Samba 服务器本机。 -- <strong>server</strong>: 访问 Samba 服务器共享资源时需要输入用户名和密码, 认证用户来源为另一台 Samba 服务器或 Windows 服务器。 -- <strong>domain</strong>: Samba 服务器在一个基于 Windows NT 平台的 Windows 域中, 访问共享资源需要输入用户名和密码, 认证用户来源为 Windows 域。 -- <strong>ads</strong>: Samba 服务器在一个基于 Windows 200X 平台的 Windows 活动目录中, 访问共享资源需要输入用户名和密码, 认证用户来源为 Windows 活动目录。</p>
<ul>
<li><strong>encrypt passwords = yes | no</strong></li>
</ul>
<p>-- 设定是否对密码进行加密。如果不对密码进行加密的话, 在认证会话期间, 客户端与服务器传递的是明文密码。</p>
<ul>
<li><strong>passdb backend = tdbsam/smbpasswd/ldapsam/mysql</strong></li>
</ul>
<p>-- <strong>tdbsam</strong>: 该方式使用一个数据库文件来建立用户数据库, 数据库文件名为 passdb.tdb 。可以使用 <code>smbpasswd -a [userName]</code> 来建立 Samba 用户。也可以使用 <code>pdbedit</code> 命令来建立用户。 -- <strong>smbpasswd</strong>: 该方式使用 Samba 提供的工具 smbpasswd 来给系统用户设置一个用于访问 Samba 服务的密码, 客户端就用这个密码访问 Samba 共享资源。此方式还要使用一个 <code>smb passwd file = /usr/local/samba/etc/smbpasswd</code> （或 <code>/etc/samba/smbpasswd</code> ） 参数来指定保存用户名和密码的文件, 该文件需要手动建立。不推荐使用此方法。 -- <strong>ldapsam</strong>: 该方式基于 LADP 的账户管理方式来验证用户, 先要建立 LDAP 服务。 -- <strong>mysql</strong>: 该方式是将 Samba 服务器的用户名和密码存储到 MySQL 数据库中。</p>
<h4> 局部设置</h4>
<ul>
<li><strong>comment = [comment]</strong></li>
</ul>
<p>-- 设定共享服务的描述信息。</p>
<ul>
<li><strong>path = [path]</strong></li>
</ul>
<p>-- 设定共享服务的路径。</p>
<ul>
<li><strong>read only = yes | no</strong></li>
</ul>
<p>-- 设定该共享服务是否为只读, 该选项有一个同义选项 <code>writeable</code> 。</p>
<ul>
<li><strong>user = <a href="@%5BgroupName%5D">userName</a></strong></li>
</ul>
<p>-- 设定所有可能使用该共享服务的用户, 可以使用 <code>@group</code> 来设置群组 group 中的所有用户账号。该选项的值为列表, 不同的项目之间使用空格或逗号隔开。在设置 <code>security = share</code> 时, 客户端要访问某共享服务时提供的密码会与该选项指定的所有用户进行一一配对认证, 若某用户认证通过, 则以该用户权限进行共享服务访问, 否则拒绝客户端的访问（设置 <code>security = share</code> 不是允许游客访问, 只有 <code>guest ok = yes</code> 才是允许游客访问, 切记！！！）。</p>
<ul>
<li><strong>valid users = <a href="@%5BgroupName%5D">userName</a></strong></li>
</ul>
<p>-- 设定能够使用该共享服务的用户和组, 其值的格式与 user 选项一样。</p>
<ul>
<li><strong>invalid users = <a href="@%5BgroupName%5D">userName</a></strong></li>
</ul>
<p>-- 设定不能够使用该共享服务的用户和组, 其值的格式与 user 选项一样。</p>
<ul>
<li><strong>invalid users = <a href="@%5BgroupName%5D">userName</a></strong></li>
</ul>
<p>-- 设定不能够使用该共享服务的用户和组, 其值的格式与 user 选项一样。</p>
<ul>
<li><strong>read list = <a href="@%5BgroupName%5D">userName</a></strong></li>
</ul>
<p>-- 设定对该共享服务只有读取权限的用户和组, 其值的格式与 user 选项一样。</p>
<ul>
<li><strong>write list = <a href="@%5BgroupName%5D">userName</a></strong></li>
</ul>
<p>-- 设定对该共享服务拥有读写权限的用户和组, 其值的格式与 user 选项一样。</p>
<ul>
<li><strong>admin list = <a href="@%5BgroupName%5D">userName</a></strong></li>
</ul>
<p>-- 设定对该共享服务拥有管理权限的用户和组, 其值的格式与 user 选项一样。</p>
<ul>
<li><strong>public = yes | no</strong></li>
</ul>
<p>-- 设定该共享服务是否能够被游客访问, 其同义选项有 guest ok。</p>
<ul>
<li><strong>create mode = mode</strong></li>
</ul>
<p>-- mode 为八进制值, 如 0755, 其默认值为 0744。该选项指定的值用于过滤新建文件的访问权限, 新建文件的默认权限将与 create mode 指定的值进行按位与操作, 将结果再与 force create mode 指定的值进行按位或操作, 得到的结果即为新建文件的访问权限。</p>
<h3> 服务的启动与停止</h3>
<p>SAMBA 的服务名并不叫做 <code>samba</code> , 而是 <code>smb</code> 。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 设置开机自启</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> SSH 服务</h2>
<p>更安全的远程连接, 它通过对联机数据包加密的技术来进行数据传输, 因此, 数据就更安全了。</p>
<h3> 使用到的端口号</h3>
<ul>
<li>安全的数据传输（默认为 <strong><code>22</code></strong> 端口）</li>
</ul>
<h3> 所需软件</h3>
<p>一般情况下, RedHat 已经预装了 openssh, 所以这里不做过多的阐述了</p>
<h3> 主配置文件</h3>
<ul>
<li><strong>/etc/ssh/sshd_config</strong></li>
</ul>
<p>-- <strong>sshd_config</strong> 是 SSH 的主要配置文件, 基本上, SSH 相关的配置都放在这里, 这个文件的默认配置项已经很完美了, 事实上不需要过多的改动。</p>
<h3> 查看主配置文件的帮助</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 重要选项说明</h3>
<h4> 监听相关配置</h4>
<ul>
<li><strong>Port 22</strong></li>
</ul>
<p>-- 设置连接到远程主机的端口, 可以进行修改</p>
<ul>
<li><strong>ListenAddress [192.168.1.1]</strong></li>
</ul>
<p>-- 设置 sshd 服务器绑定的 IP 地址</p>
<h4> 密码、登录相关配置</h4>
<ul>
<li><strong>MaxAuthTries 3</strong></li>
</ul>
<p>-- 最大密码输入错误次数</p>
<ul>
<li><strong>PermitRootLogin no</strong></li>
</ul>
<p>-- 设置 root 能不能用 ssh 登录。这个选项一定不要设成 <code>“yes”</code></p>
<ul>
<li><strong>LoginGraceTime 600</strong></li>
</ul>
<p>-- 当用户连接上 SSH 时, 在输入密码界面, 设置在多长时间内没有成功连接 SSH , 就断线（若无单位默认以秒为单位）</p>
<ul>
<li><strong>PasswordAuthentication yes</strong></li>
</ul>
<p>-- 设置是否允许口令验证</p>
<ul>
<li><strong>PermitEmptyPasswords no</strong></li>
</ul>
<p>-- 设置是否允许用口令为空的帐号登录</p>
<h4> 用户限制配置</h4>
<ul>
<li><strong>AllowUsers [userName]</strong></li>
</ul>
<p>-- 设置白名单, 可以跟着任意的数量的用户名的匹配串（patterns）或 user@host 这样的匹配串, 这些字符串用空格隔开。</p>
<ul>
<li><strong>AllowGroups [groupName]</strong></li>
</ul>
<p>-- 设置白名单, 可以跟着任意的数量的组名的匹配串（patterns）或 user@host 这样的匹配串, 这些字符串用空格隔开。</p>
<ul>
<li><strong>DenyUsers [userName]</strong></li>
</ul>
<p>-- 设置黑名单, 与 <code>AllowUsers</code> 写法一致。</p>
<ul>
<li><strong>DenyGroups [groupName]</strong></li>
</ul>
<p>-- 设置黑名单, 与 <code>AllowGroups</code> 写法一致。</p>
<h3> 服务的启动与停止</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>SSh 的服务名并不叫做 <code>ssh</code> , 而是 <code>sshd</code> 。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 设置开机自启</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> FTP 服务</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>确切的说, 应该叫它 vsFTP。vsFTP 是一个基于 GPL 发布的类 Unix 系统上使用的 FTP 服务器软件, 它的全称是 <code>Very Secure FTP</code></p>
</div>
<h3> 使用到的端口号</h3>
<ul>
<li>命令通道的 FTP（默认为 <strong><code>21</code></strong> 端口）</li>
<li>数据传输的 FTP-data（默认为 <strong><code>20</code></strong> 端口）</li>
</ul>
<h3> 所需软件</h3>
<ul>
<li><strong>vsftpd</strong></li>
</ul>
<p>-- 这个软件主要包含了 vsFTP 的主要 daemon 文件。</p>
<h3> 主要的配置文件</h3>
<ul>
<li><strong>/etc/vsftp/vsftpd.conf</strong></li>
</ul>
<p>-- 严格来说, 整个 vsFTP 的配置文件就只有这一个。这个配置文件的设置是以 bash 的变量相同的设置方式来处理的, 也就是 <code>“参数=设置值”</code> 来设置的, 注意, 等号两边不能有空格。</p>
<ul>
<li><strong>/etc/vsftpd/chroot_list</strong></li>
</ul>
<p>-- 用来限制用户只能在家目录的文件, 需要在主配置文件中进行配置, 默认没有这个文件, 需要手动创建, 如果文件名不同, 主配置文件也要对其相应的修改。</p>
<ul>
<li><strong>/etc/vsftpd/ftpusers</strong></li>
</ul>
<p>-- 黑名单列表, 就是用来规定哪些用户不能登录 FTP。</p>
<h3> 查看主配置文件的帮助</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 重要选项说明</h3>
<h4> 全局设置</h4>
<ul>
<li><strong>write_enable=YES/NO</strong></li>
</ul>
<p>-- 是否允许登陆用户有写权限。属于全局设置, 默认值为 YES。</p>
<ul>
<li><strong>data_connection_timeout=120</strong></li>
</ul>
<p>-- 设置建立 FTP 数据连接的超时时间, 单位为秒。默认值为 120。</p>
<ul>
<li><strong>idle_session_timeout=300</strong></li>
</ul>
<p>-- 设置多长时间不对 FTP 服务器进行任何操作, 则断开该 FTP 连接, 单位为秒。默认值为 300 。</p>
<h4> 与本地用户相关的设置值</h4>
<ul>
<li><strong>local_enable=YES/NO</strong></li>
</ul>
<p>-- 控制是否允许本地用户登入, YES 为允许本地用户登入, NO 为不允许。默认值为 YES。</p>
<ul>
<li><strong>local_umask=022</strong></li>
</ul>
<p>-- 本地用户新增档案时的 umask 值。默认值为 <code>077</code> 。</p>
<ul>
<li><strong>file_open_mode=0755</strong></li>
</ul>
<p>-- 本地用户上传档案后的档案权限, 与 chmod 所使用的数值相同。默认值为 <code>0666</code> 。</p>
<ul>
<li><strong>userlist_enable=YES/NO</strong></li>
</ul>
<p>-- 设置是否阻止 user_list 文件中的用户登录 FTP 服务器, 默认为 YES</p>
<h4> 与虚拟用户相关的设置值</h4>
<ul>
<li><strong>guest_enable=YES/NO</strong></li>
</ul>
<p>-- 启用虚拟用户。默认值为 NO。启用时, 非匿名用户登录的帐号, 会被当成访客, 访客在 vsFTP 中默认会取得 FTP 这个用户的权限。</p>
<ul>
<li><strong>guest_username=FTP</strong></li>
</ul>
<p>-- 在 <code>guest_enable=YES</code> 下才生效, 指定游客的身份而已。默认为 FTP。</p>
<ul>
<li><strong>user_config_dir=</strong></li>
</ul>
<p>-- 指定游客用户的配置文件存放的目录, 无默认值, 需自己定义。</p>
<h4> 与匿名用户相关的设置值</h4>
<ul>
<li><strong>anonymous_enable=YES/NO</strong></li>
</ul>
<p>-- 控制是否允许匿名用户登入, YES 为允许匿名登入, NO 为不允许。</p>
<ul>
<li><strong>anon_upload_enable=YES/NO</strong></li>
</ul>
<p>-- 如果设为 YES, 则允许匿名登入者有上传文件（非目录）的权限, 只有在 <code>write_enable=YES</code> 时, 此项才有效。当然, 匿名用户必须要有对上层目录的写入权。默认值为 NO。</p>
<ul>
<li><strong>anon_world_readable_only=YES/NO</strong></li>
</ul>
<p>-- 如果设为 YES, 则允许匿名登入者下载可阅读的档案（可以下载到本机阅读, 不能直接在 FTP 服务器中打开阅读）。默认值为 YES。</p>
<ul>
<li><strong>anon_mkdir_write_enable=YES/NO</strong></li>
</ul>
<p>-- 如果设为 YES, 则允许匿名登入者有新增目录的权限, 只有在 <code>write_enable=YES</code> 时, 此项才有效。当然, 匿名用户必须要有对上层目录的写入权。默认值为 NO。</p>
<ul>
<li><strong>anon_other_write_enable=YES/NO</strong></li>
</ul>
<p>-- 如果设为 YES, 则允许匿名登入者更多于上传或者建立目录之外的权限, 譬如删除或者重命名。（如果 <code>anon_upload_enable=NO</code> , 则匿名用户不能上传文件, 但可以删除或者重命名已经存在的文件；如果 <code>anon_mkdir_write_enable=NO</code> , 则匿名用户不能上传或者新建文件夹, 但可以删除或者重命名已经存在的文件夹。）默认值为 NO。</p>
<h4> 与用户限制相关的设置值</h4>
<ul>
<li><strong>chroot_list_enable=YES/NO</strong></li>
</ul>
<p>-- 设置是否启用 <code>chroot_list_file</code> 配置项指定的用户列表文件。默认值为 NO。</p>
<ul>
<li><strong>chroot_list_file=/etc/vsftpd.chroot_list</strong></li>
</ul>
<p>-- 用于指定用户列表文件, 该文件用于控制哪些用户可以切换到用户家目录的上级目录。</p>
<ul>
<li><strong>chroot_local_user=YES/NO</strong></li>
</ul>
<p>-- 用于指定用户列表文件中的用户是否允许切换到上级目录。默认值为 NO。</p>
<h3> 服务的启动与停止</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>FTP 的服务名并不叫做 <code>vsftp</code> , 而是 <code>vsftpd</code> 。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 设置开机自启</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> APACHE 服务</h2>
<p>APACHE 是一款 WEB 服务器软件, 它可以运行在几乎所有广泛使用的计算机平台上, 由于其跨平台和安全性被广泛使用, 是最流行的 WEB 服务器端软件之一。</p>
<h3> 使用到的端口号</h3>
<ul>
<li>超文本传输协议（默认为 <code>80</code> 端口）</li>
<li>更安全的超文本传输协议（默认为 <code>443</code> 端口）</li>
</ul>
<h3> 所需软件</h3>
<p>APACHE 服务需要较多的软件进行支持, RedHat 已经预装了此软件, 这里就不一一阐述了。</p>
<h3> 主要的配置文件</h3>
<ul>
<li><strong>/etc/httpd/conf/httpd.conf</strong></li>
</ul>
<p>-- 最主要的配置文件, 里买内包含了 APACHE 服务器主配置文件. 包括服务器指令的目录设置。</p>
<h3> 查看配置文件爱呢的帮助</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 重要选项说明</h3>
<ul>
<li><strong>Listen 80</strong></li>
</ul>
<p>-- 设置监听的端口号</p>
<ul>
<li><strong>DocumentRoot "/var/www/html"</strong></li>
</ul>
<p>-- 定义网站的根目录, 默认的目录在 <code>/var/www/html</code> , 修改此选项时, 要同时修改下面一个选项。</p>
<ul>
<li>&lt;<strong>Directory "/var/www/html"</strong>&gt;</li>
</ul>
<p>-- 定义网站的一个目录, 修改此选项时, 要同时修改上面一个选项。</p>
<ul>
<li><strong>Alias /icons/ "/var/www/icons"</strong></li>
</ul>
<p>-- 目录的别名设置, 就是浏览器访问 <code>http://[host]/icons</code> 时, 实际上访问的是 <code>/var/www/icons</code> 目录, 配置此选项时, 要同时配置下面的目录权限。</p>
<ul>
<li>
<p>&lt;<strong>Directory "/var/www/icons"</strong>&gt;</p>
</li>
<li>
<p><strong>Options Index FollowSymLinks</strong></p>
</li>
</ul>
<p>-- <code>Index</code> 设置是否开启目录浏览, 默认启用, 禁止在前面加一个 <code>-</code> -- <code>FollowSymLinks</code> 设置是否禁用符号连接追踪, 默认启用, 禁止在前面加一个 <code>-</code></p>
<ul>
<li><strong>Allow from all</strong></li>
</ul>
<p>-- 配置白名单, 默认允许所有的 IP 段访问。</p>
<ul>
<li><strong>ServerSignature On</strong></li>
</ul>
<p>-- 配置是否隐藏 APACHE 的版本信息, 默认是开启, 还可以设置为 <code>Off</code> 和 <code>EMail</code> 。其中 <code>Off</code> 是隐藏信息, <code>EMail</code> 是会显示管理员的 email 信息的。</p>
<ul>
<li><strong>NameVirtualHost *:443</strong></li>
</ul>
<p>-- 设置开放的端口, 一般在配置 <code>https</code> 时候修改它, 修改这个选项, 要同时修改下面一个选项。</p>
<ul>
<li>&lt;<strong>VirtualHost *:443</strong>&gt;</li>
</ul>
<p>-- 设置开放的端口。</p>
<h3> 服务的启动与停止</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>APACHE 的服务名并不叫做 <code>http</code> , 而是 <code>httpd</code> 。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 设置开机自启</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> DNS 服务</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>DNS（Domain Name Server, 域名服务器）是进行域名(domain name)和与之相对应的 IP 地址 (IP address) 转换的服务器。</p>
</div>
<h3> 使用到的端口号</h3>
<ul>
<li>UDP 解析（默认为 <code>53</code> 端口）</li>
</ul>
<h3> 所需软件</h3>
<ul>
<li><strong>bind</strong></li>
</ul>
<p>-- DNS 主要的包, 包含 named 守护进程（用来回答查询结果的）, 还有一些重要命令: <code>nslookup</code> , <code>dig</code> 和 <code>host</code> , 等等。</p>
<ul>
<li><strong>caching-nameserver</strong></li>
</ul>
<p>-- 包含 DNS 的主配置文件模板, 区域配置文件模板等。</p>
<h3> 主配置文件</h3>
<ul>
<li><strong>/etc/named-caching-nameserver.conf</strong></li>
</ul>
<p>-- DNS 主配置文件, 实际中需要把此文件复制成 <code>named.conf</code> , 方能使用</p>
<ul>
<li><strong>/etc/named-rfc1912.zones</strong></li>
</ul>
<p>-- DNS 区域配置文件, 实际中需要把此文件复制成 <code>named.zones</code> , 方能使用</p>
<ul>
<li><strong>/var/named/named.zero</strong></li>
</ul>
<p>-- DNS 正向解析文件, 实际中需要把此文件复制成 <code>named.zones</code> 中配置的文件名</p>
<ul>
<li><strong>/var/named/named.local</strong></li>
</ul>
<p>-- DNS 反向解析文件, 实际中需要把此文件复制成 <code>named.zones</code> 中配置的文件名</p>
<h3> 查看主配置文件的帮助</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 重要选项说明</h3>
<ul>
<li>**allow-query { any; }; **</li>
</ul>
<p>-- 表示所有人能查询这台服务器, 可以修改成 IP 地址或网段, 限制其查询</p>
<ul>
<li>**allow-recursion { any; }; **</li>
</ul>
<p>-- 只针对收到的递归查询请求, 对于非递归请求不关心, 可以修改成 IP 地址或网段, 限制其递归查询</p>
<ul>
<li>**allow-transfer { any; }; **</li>
</ul>
<p>-- 限制哪些主机或者网络可以传递信息至区域文件</p>
<h3> 服务的启动与停止</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>DNS 的服务名并不叫做 <code>name</code> , 而是 <code>named</code> 。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 设置开机自启</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>RedHat 系统安全加固（三）系统日志审计</title>
      <link>https://vxhly.github.io/views/liunx/log-audit-function.html</link>
      <guid>https://vxhly.github.io/views/liunx/log-audit-function.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（三）系统日志审计</source>
      <description>前言 本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录系统日志审计的配置, 加强系统的防御能力。</description>
      <category>liunx</category>
      <pubDate>Sun, 16 Oct 2016 13:39:09 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录系统日志审计的配置, 加强系统的防御能力。</p>
</div>
<!-- more -->
<h2> syslog 登录事件记录</h2>
<p>查看参数 <code>authpriv</code> 值, <code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>表名登录事件记录在 <code>/var/log/secure</code> 文件中, 使用以下命令检查非法记录</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/redhat-reinforce-16.png" alt="RedHat 安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 安全加固</figcaption></figure>
<h2> 审计功能的进程</h2>
<p>启动审计进程, <code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>启动 <code>psacct</code> 服务</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 查看记录审计的日志</h2>
<ul>
<li><code>auditd</code> 审计进程日志记录在 <code>/var/log/audit/audit.log</code></li>
<li><code>psacct</code> 日志记录在 <code>/var/account/pacct</code></li>
</ul>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p><code>pacct</code> 日志是二进制文件, 使用以下命令进行查看</p>
</div>
<p><code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 登录日志查看</h2>
<p><code>lastlog</code> 查看用户最后一次登录时间, <code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/redhat-reinforce-17.png" alt="RedHat 安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 安全加固</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/redhat-reinforce-16.png" type="image/png"/>
    </item>
    <item>
      <title>MySQL 数据库安全加固</title>
      <link>https://vxhly.github.io/views/liunx/mysql-database-user-policy.html</link>
      <guid>https://vxhly.github.io/views/liunx/mysql-database-user-policy.html</guid>
      <source url="https://vxhly.github.io/rss.xml">MySQL 数据库安全加固</source>
      <description>前言 数据库作为数据管理的平台, 它的安全性首先由系统内部和网络安全两部分来决定的。对于系统管理员来说, 首先要保证系统本身的安全, 在安装 MySQL 数据时, 需要对基础环境进行较好的配置。本篇笔记将记录在 RedHat Liunx 系统下 MySQL 数据库的安全加固方法。</description>
      <category>liunx</category>
      <pubDate>Sun, 30 Oct 2016 16:02:43 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>数据库作为数据管理的平台, 它的安全性首先由系统内部和网络安全两部分来决定的。对于系统管理员来说, 首先要保证系统本身的安全, 在安装 MySQL 数据时, 需要对基础环境进行较好的配置。本篇笔记将记录在 RedHat Liunx 系统下 MySQL 数据库的安全加固方法。</p>
</div>
<!-- more -->
<h2> 修改 root 用户口令</h2>
<p>缺省安装的 MySQL 的 root 用户是空密码的, 为了安全起见, 必须修改为强密码, 所谓的强密码, 至少 8 位, 由字母、数字和符号组成的不规律密码。使用 MySQL 自带的命令 <code>mysqladmin</code> 修改 root 密码, 同时也可以登陆数据库, 修改数据库 mysql 下的 user 表的字段内容</p>
<h3> 使用 mysqladmin 命令</h3>
<p>修改密码, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-1.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<h3> 使用 SQL 语句修改</h3>
<p><code>Connection Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输入之前设置的密码 <code>upassword</code> , 连接数据库</p>
<p>修改密码, <code>For Example:</code></p>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-2.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<p>修改完成之后可以执行 SQL 语句查询, <code>For Example:</code></p>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 删除默认数据库和数据库用户</h2>
<p>一般情况下, MySQL 数据库安装在本地, 并且也只需要本地的 php 脚本对 mysql 进行读取, 所以很多用户不需要, 尤其是默认安装的用户。MySQL 初始化后会自动生成空用户和 test 库, 进行安装的测试, 这会对数据库的安全构成威胁, 有必要全部删除, 最后的状态只保留单个 root 即可, 当然以后根据需要增加用户和数据库。</p>
<p>执行以下 SQL 语句, <code>For Example:</code></p>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-3.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<br>
<figure><img src="/assets/mysql-reinforce-4.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<br>
<figure><img src="/assets/mysql-reinforce-5.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<h2> 改变默认 MySQL 管理员账号</h2>
<p>系统 MySQL 的管理员名称是 root, 而一般情况下, 数据库管理员都没进行修改, 这一定程度上对系统用户穷举的恶意行为提供了便利, 此时修改为复杂的用户名, 请不要在设定为 admin 或者 administraror 的形式, 因为它们也在易猜的用户字典中。</p>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-6.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<h2> 关于密码的管理</h2>
<p>密码是数据库安全管理的一个很重要因素, 不要将纯文本密码保存到数据库中。如果你的计算机有安全危险, 入侵者可以获得所有的密码并使用它们。相反, 应使用 <code>MD5()</code> 、 <code>SHA1()</code> 或单向哈希函数。也不要从词典中选择密码, 有专门的程序可以破解它们, 请选用至少八位, 由字母、数字和符号组成的强密码。在存取密码时, 使用 mysql 的内置函数 <code>password（）</code> 的 sql 语句, 对密码进行加密后存储。例如以下方式在 users 表中加入新用户。</p>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 使用独立用户运行 MySQL</h2>
<p>绝对不要作为使用 root 用户运行 <code>MySQL 服务器</code> 。这样做非常危险, 因为任何具有 FILE 权限的用户能够用 root 创建文件(例如: <code>~root/.bashrc</code> )。mysqld 拒绝使用 root 运行, 除非使用 <code>–user=root</code> 选项明显指定。应该用普通非特权用户运行 mysqld。</p>
<p>要想用其它 Unix 用户启动 mysqld, , 增加 user 选项指定 <code>/etc/my.cnf</code> 选项文件或服务器数据目录的 <code>my.cnf</code> 选项文件中的 <code>[mysqld]</code> 组的用户名。</p>
<h3> 加固</h3>
<p><code>/etc/my.cnf</code> 配置文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-7.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<p>该命令使服务器用指定的用户来启动, 无论你手动启动或通过 <code>mysqld_safe</code> 或 <code>mysql.server</code> 启动, 都能确保使用 mysql 的身份。也可以在启动数据库是, 加上 <code>user</code> 参数。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>作为其它 linux 用户而不用 root 运行 mysqld, 你不需要更改 user 表中的 root 用户名, 因为 <code>MySQL 账户</code> 的用户名与 <code>linux 账户</code> 的用户名无关。确保 mysqld 运行时, 只使用对数据库目录具有读或写权限的 linux 用户来运行。</p>
<figure><img src="/assets/mysql-reinforce-8.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<h2> 禁止远程连接数据库</h2>
<p>在命令行 <code>netstat -ant</code> 下看到, 默认的 <code>3306</code> 端口是打开的, 此时打开了 <code>mysqld</code> 的网络监听, 允许用户远程通过帐号密码连接数本地据库, 默认情况是允许远程连接数据的。为了禁止该功能, 启动 <code>skip-networking</code> , 不监听 sql 的任何 <code>TCP/IP</code> 的连接, 切断远程访问的权利, 保证安全性。假如需要远程管理数据库, 可通过安装 <code>PhpMyadmin</code> 来实现。假如确实需要远程连接数据库, 至少修改默认的监听端口, 同时添加防火墙规则, 只允许可信任的网络的 <code>mysql</code> 监听端口的数据通过。</p>
<h3> 加固</h3>
<p>编辑 <code>/etc/my.cnf</code> , 加入如下语句</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-9.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<p>执行重启语句, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 限制连接用户的数量</h2>
<p>数据库的某用户多次远程连接, 会导致性能的下降和影响其他用户的操作, 有必要对其进行限制。可以通过限制单个账户允许的连接数量来实现, 设置 <code>my.cnf</code> 文件的 <code>mysqld</code> 中的 <code>max_user_connections</code> 变量来完成。 <code>GRANT</code> 语句也可以支持 资源控制选项来限制服务器对一个账户允许的使用范围。</p>
<p>编辑 <code>/etc/my.cnf</code> , 加入如下语句</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-10.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<h2> 用户目录权限限制</h2>
<p>默认的 MySQL 是安装在 <code>/usr/share/mysql</code> , 而对应的数据库文件在 <code>/var/lib/mysql</code> 目录下, 因此, 必须保证该目录不能让未经授权的用户访问后把数据库打包拷贝走了, 所以要限制对该目录的访问。确保 <code>mysqld</code> 运行时, 只使用对数据库目录具有读或写权限的 linux 用户来运行。</p>
<p>修改权限, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-11.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<h2> 命令历史记录保护</h2>
<p>数据库相关的 shell 操作命令都会分别记录在 <code>.bash_history</code> , 如果这些文件不慎被读取, 会导致数据库密码和数据库结构等信息泄露, 而登陆数据库后的操作将记录在 <code>/etc/my.cnf</code> 文件配置的文件中, 如果使用 <code>update</code> 表信息来修改数据库用户密码的话, 也会被读取密码, 因此需要删除这两个文件, 同时在进行登陆或备份数据库等与密码相关操作时, 应该使用 <code>-p</code> 参数加入提示输入密码后, 隐式输入密码, 建议将以上文件置空。</p>
<h3> 加固</h3>
<p>配置文件 <code>/etc/my.cnf</code> 中配置数据库操作日志存放路径, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-12.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<p>随意执行一些操作, <code>For Example:</code> <br></p>
<figure><img src="/assets/mysql-reinforce-13.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<p>查看 <code>~/.mysql_history</code> 文件, 可以看到数据库操作纪录（将会纪录所有成功或者失败的操作 SQL 语句）<br></p>
<figure><img src="/assets/mysql-reinforce-14.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<p>查看 <code>~/.bash_history</code> 文件, 可以看到有关于数据操作的 shell 命令<br></p>
<figure><img src="/assets/mysql-reinforce-15.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<p>删除操作命令, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-16.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<h2> 禁止 MySQL 对本地文件存取</h2>
<p>在 mysql 中, 提供对本地文件的读取, 使用的是 <code>load data local infile</code> 命令, 默认在 5.0 版本中, 该选项是默认打开的, 该操作令会利用 MySQL 把本地文件读到数据库中, 然后用户就可以非法获取敏感信息了, 假如你不需要读取本地文件, 请务必关闭。</p>
<h3> 测试存取</h3>
<p>测试: 首先在测试数据库下建立 <code>sqlfile.txt</code> 文件, 用逗号隔开各个字段<br></p>
<figure><img src="/assets/mysql-reinforce-19.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<p>在测试数据库, 先新建一张表, 建表的 SQL 语句如下, <code>For Example:</code></p>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-17.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<p>执行导入语句, <code>For Example:</code></p>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-18.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<p>成功的将本地数据插入数据中, 此时应该禁止 MySQL 中用 <code>load data local infile</code> 命令。网络上流传的一些攻击方法中就有用它 <code>load data local infile</code> 的, 同时它也是很多新发现的 <code>SQL Injection</code> 攻击利用的手段！黑客还能通过使用 <code>load data local infile</code> 装载 <code>/etc/passwd</code> 进一个数据库表, 然后能用 <code>SELECT</code> 显示它, 这个操作对服务器的安全来说, 是致命的。可以在 <code>/etc/my.cnf</code> 中添加 <code>local-infile=0</code> , 或者加参数 <code>local-infile=0</code> 启动 <code>mysql</code> 。</p>
<h3> SQL 攻击</h3>
<p>黑客使用 <code>load data local infile</code> 获取 <code>/etc/passwd</code> 文件内容步骤<br></p>
<figure><img src="/assets/mysql-reinforce-20.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<p>接下来黑客只需执行 <code>select * from test.passwd</code> 就可以查询到数据了。</p>
<h4> 加固</h4>
<p>编辑 <code>/etc/my.cnf</code> 文件, 加入如下语句, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-21.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<p>或者直接执行命令, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>再次执行 <code>load data local infile</code> 命令, 导入 <code>/etc/passwd</code> 内容, 发现命令出错</p>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-22.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<h2> MySQL 服务器权限控制</h2>
<p>MySQL 权限系统的主要功能是证实连接到一台给定主机的用户, 并且赋予该用户在数据库上的 <code>SELECT</code> 、 <code>INSERT</code> 、 <code>UPDATE</code> 和 <code>DELETE</code> 等权限（详见 user 超级用户表）。它的附加的功能包括有匿名的用户并对于 MySQL 特定的功能例如 <code>load data local infile</code> 进行授权及管理操作的能力。</p>
<p>FILE 权限允许用户在 MySQL 服务器具有写权限的目录下创建新文件, 但不能覆盖已有文件在 user 表的 <code>File_priv</code> 设置 <code>Y</code> 或 <code>N</code> 。, 所以当你不需要对服务器文件读取时, 请关闭该权限。</p>
<h3> 加固</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>需要将之前的加固配置项（ <code>local-infile=0</code> ）清掉</p>
</div>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/mysql-reinforce-23.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<br>
<figure><img src="/assets/mysql-reinforce-24.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>刷新授权表之后, 一定要重新登录再进行测试, 否则还是会执行成功的</p>
</div>
<p>当 <code>file_priv='N'</code> , 黑客进行以下语句的时候, 就会出错</p>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当然还原配置之后, 黑客就可以很愉快的获取数据库中内容</p>
<figure><img src="/assets/mysql-reinforce-25.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<br>
<figure><img src="/assets/mysql-reinforce-26.png" alt="MySQL 数据库加固" tabindex="0" loading="lazy"><figcaption>MySQL 数据库加固</figcaption></figure>
<h2> 使用 chroot 来控制 MySQL 的运行目录</h2>
<p><code>Chroot</code> 是 linux 中的一种系统高级保护手段, 它的建立会将其与主系统几乎完全隔离, 也就是说, 一旦遭到什么问题, 也不会危及到正在运行的主系统。这是一个非常有效的办法, 特别是在配置网络服务程序的时候。</p>
<h2> 关闭对 Web 访问的支持</h2>
<p>如果不打算让 Web 访问使用 MySQL 数据库, 没有提供诸如 PHP 这样的 Web 语言的时候, 重新设置或编译你的 PHP, 取消它们对 MySQL 的默认支持。假如服务器中使用 PHP 等 web 程序, 试试用 Web 形式非法的请求, 如果得到任何形式的 MySQL 错误, 立即分析原因, 及时修改 Web 程序, 堵住漏洞, 防止 MySQL 暴露在 web 面前。 对于 Web 的安全检查, 在 MySQL 官方文档中这么建议, 对于 web 应用, 至少检查以下清单:</p>
<ul>
<li>试试用 Web 形式输入单引号和双引号( <code>‘’’</code> 和 <code>‘”’</code> )。如果得到任何形式的 MySQL 错误, 立即分析原因。</li>
<li>试试修改动态 URL, 可以在其中添加 <code>%22(‘”’)</code> 、 <code>%23(‘#’)</code> 和 <code>%27(‘’’)</code> 。</li>
<li>试试在动态 URL 中修改数据类型, 使用前面示例中的字符, 包括数字和字符类型。你的应用程序应足够安全, 可以防范此类修改和类似攻击。</li>
<li>试试输入字符、空格和特殊符号, 不要输入数值字段的数字。你的应用程序应在将它们传递到 MySQL 之前将它们删除或生成错误。将未经过检查的值传递给 MySQL 是很危险的！</li>
<li>将数据传给 MySQL 之前先检查其大小。</li>
<li>用管理账户之外的用户名将应用程序连接到数据库。不要给应用程序任何不需要的访问权限。</li>
</ul>
<h2> 数据库备份策略</h2>
<p>使用 <code>mysqldump</code> 可以把整个数据库装载到一个单独的文本文件中。这个文件包含有所有重建您的数据库所需要的 SQL 命令。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> mysqld 安全相关启动项</h2>
<p>下列 <code>mysqld</code> 选项影响安全:</p>
<ul>
<li><strong><code>--allow-suspicious-udfs</code></strong></li>
</ul>
<p>-- 该选项控制是否可以载入主函数只有 xxx 符的用户定义函数。默认情况下, 该选项被关闭, 并且只能载入至少有辅助符的 UDF。这样可以防止从未包含合法 UDF 的共享对象文件载入函数。</p>
<ul>
<li><strong><code>--local-infile[={0|1}]</code></strong></li>
</ul>
<p>-- 如果用 <code>–local-infile=0</code> 启动服务器, 则客户端不能使用 LOCAL in LOAD DATA 语句。</p>
<ul>
<li><strong><code>--old-passwords</code></strong></li>
</ul>
<p>-- 强制服务器为新密码生成短( <code>pre-4.1</code> )密码哈希。当服务器必须支持旧版本客户端程序时, 为了保证兼容性这很有用。</p>
<ul>
<li><strong><code>(OBSOLETE) --safe-show-database</code></strong></li>
</ul>
<p>-- 在以前版本的 MySQL 中, 该选项使 <code>SHOW DATABASES</code> 语句只显示用户具有部分权限的数据库名。在 <code>MySQL 5.1</code> 中, 该选项不再作为现在的 默认行为使用, 有一个 <code>SHOW DATABASES</code> 权限可以用来控制每个账户对数据库名的访问。</p>
<ul>
<li><strong><code>--safe-user-create</code></strong></li>
</ul>
<p>-- 如果启用, 用户不能用 <code>GRANT</code> 语句创建新用户, 除非用户有 <code>mysql.user</code> 表的 <code>INSERT</code> 权限。如果你想让用户具有授权权限来创建新用户, 你应给用户授予下面的权限: <code>mysql&gt; GRANT INSERT(user) ON mysql.user TO ‘user_name’@'host_name’;</code> 这样确保用户不能直接更改权限列, 必须使用 GRANT 语句给其它用户授予该权限。</p>
<ul>
<li><strong><code>--secure-auth</code></strong></li>
</ul>
<p>-- 不允许鉴定有旧( <code>pre-4.1</code> )密码的账户。</p>
<ul>
<li><strong><code>--skip-grant-tables</code></strong></li>
</ul>
<p>-- 这个选项导致服务器根本不使用权限系统。这给每个人以完全访问所有的数据库的权力！（通过执行 <code>mysqladmin flush-privileges</code> 或 <code>mysqladmin eload</code> 命令, 或执行 <code>FLUSH PRIVILEGES</code> 语句, 你能告诉一个正在运行的服务器再次开始使用授权表。）</p>
<ul>
<li><strong><code>--skip-name-resolve</code></strong></li>
</ul>
<p>-- 主机名不被解析。所有在授权表的 Host 的列值必须是 IP 号或 localhost。</p>
<ul>
<li><strong><code>--skip-networking</code></strong></li>
</ul>
<p>-- 在网络上不允许 TCP/IP 连接。所有到 mysqld 的连接必须经由 Unix 套接字进行。</p>
<ul>
<li><strong><code>--skip-show-database</code></strong></li>
</ul>
<p>-- 使用该选项, 只允许有 <code>SHOW DATABASES</code> 权限的用户执行 <code>SHOW DATABASES</code> 语句, 该语句显示所有数据库名。不使用该选项, 允许所有用户执行 <code>SHOW DATABASES</code> , 但只显示用户有 <code>SHOW DATABASES</code> 权限或部分数据库权限的数据库名。请注意全局权限指数据库的权限。</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/mysql-reinforce-1.png" type="image/png"/>
    </item>
    <item>
      <title>RedHat 系统安全加固（四）服务和进程管理</title>
      <link>https://vxhly.github.io/views/liunx/service-and-process-management.html</link>
      <guid>https://vxhly.github.io/views/liunx/service-and-process-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（四）服务和进程管理</source>
      <description>前言 本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录系统服务和进程的查看与关闭, 通俗的来说进程是运行起来的程序。唯一标示进程的是进程描述符（PID）, 在 linux 内核中是通过 task_struck 和 task_list 来定义和管理进程的。</description>
      <category>liunx</category>
      <pubDate>Wed, 19 Oct 2016 11:01:04 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录系统服务和进程的查看与关闭, 通俗的来说进程是运行起来的程序。唯一标示进程的是进程描述符（PID）, 在 linux 内核中是通过 task_struck 和 task_list 来定义和管理进程的。</p>
</div>
<!-- more -->
<h2> ps 查看系统进程</h2>
<div class="hint-container tip">
<p class="hint-container-title">命令作用</p>
<p><code>ps</code> 命令用于报告当前系统的进程状态。可以搭配 <code>kill</code> 指令随时中断、删除不必要的程序。 <code>ps</code> 命令是最基本同时也是非常强大的进程查看命令, 使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等, 总之大部分信息都是可以通过执行该命令得到的。</p>
</div>
<h3> 相关选项</h3>
<ul>
<li><strong>-a</strong> -------------------- 显示所有终端机下执行的程序, 除了阶段作业领导者之外</li>
<li><strong>a</strong> -------------------- 显示现行终端机下的所有程序, 包括其他用户的程序</li>
<li><strong>-A</strong> -------------------- 显示所有程序</li>
<li><strong>-u&lt;用户识别码&gt;</strong> -------------------- 此选项的效果和指定 <code>"-U"</code> 选项相同</li>
<li><strong>u</strong> -------------------- 以用户为主的格式来显示程序状况</li>
<li><strong>-U&lt;用户识别码&gt;</strong> -------------------- 列出属于该用户的程序的状况, 也可使用用户名称来指定</li>
<li><strong>U&lt;用户名称&gt;</strong> -------------------- 列出属于该用户的程序的状况</li>
<li><strong>-e</strong> -------------------- 此选项的效果和指定 <code>"A"</code> 选项相同</li>
<li><strong>e</strong> -------------------- 列出程序时, 显示每个程序所使用的环境变量</li>
<li><strong>-f</strong> -------------------- 显示 UID, PPIP, C 与 STIME 栏位</li>
<li><strong>f</strong> -------------------- 用 ASCII 字符显示树状结构, 表达程序间的相互关系</li>
</ul>
<h3> 示例</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/process-1.png" alt="RedHat 安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 安全加固</figcaption></figure>
<h2> netstat 查看网络情况</h2>
<p>netstat 命令用来打印 Linux 中网络系统的状态信息, 可让你得知整个 Linux 系统的网络情况。</p>
<h3> 相关选项</h3>
<ul>
<li><strong>-t 或 --tcp</strong> -------------------- 显示 TCP 传输协议的连线状况</li>
<li><strong>-u 或 --udp</strong> -------------------- 显示 UDP 传输协议的连线状况</li>
<li><strong>-n 或 --numeric</strong> -------------------- 直接使用 ip 地址, 而不通过域名服务器</li>
<li><strong>-p 或 --programs</strong> -------------------- 显示正在使用 Socket 的程序识别码和程序名称</li>
<li><strong>-l 或 --listening</strong> -------------------- 显示监控中的服务器的 Socket</li>
</ul>
<h3> 示例</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/process-2.png" alt="RedHat 安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 安全加固</figcaption></figure>
<h2> chkconfig 查看系统服务</h2>
<div class="hint-container tip">
<p class="hint-container-title">命令作用</p>
<p>chkconfig 命令检查、设置系统的各种服务。这是 Red Hat 公司遵循 GPL 规则所开发的程序, 它可查询操作系统在每一个执行等级中会执行哪些系统服务, 其中包括各类常驻服务。谨记 chkconfig 不是立即自动禁止或激活一个服务, 它只是简单的改变了符号连接。</p>
</div>
<h3> 选项解释</h3>
<ul>
<li><strong>--add</strong> -------------------- 增加所指定的系统服务, 让 <code>chkconfig</code> 指令得以管理它, 并同时在系统启动的叙述文件内增加相关数据；</li>
<li><strong>--del</strong> -------------------- 删除所指定的系统服务, 不再由 <code>chkconfig</code> 指令管理, 并同时在系统启动的叙述文件内删除相关数据；</li>
<li><strong>--level&lt;等级代号&gt;</strong> -------------------- 指定读系统服务要在哪一个执行等级中开启或关毕。</li>
</ul>
<p>-- 等级 <code>0</code> 表示 -------------------- 表示关机 -- 等级 <code>1</code> 表示 -------------------- 单用户模式 -- 等级 <code>2</code> 表示 -------------------- 无网络连接的多用户命令行模式 -- 等级 <code>3</code> 表示 -------------------- 有网络连接的多用户命令行模式 -- 等级 <code>4</code> 表示 -------------------- 不可用 -- 等级 <code>5</code> 表示 -------------------- 带图形界面的多用户模式 -- 等级 <code>6</code> 表示 -------------------- 重新启动</p>
<ul>
<li><strong>--list</strong> -------------------- 列出系统服务列表</li>
</ul>
<h3> 示例</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/process-3.png" alt="RedHat 安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 安全加固</figcaption></figure>
<h2> 关闭进程或服务</h2>
<h3> kill 杀死进程</h3>
<div class="hint-container tip">
<p class="hint-container-title">命令作用</p>
<p>kill 命令用来删除执行中的程序或工作。kill 可将指定的信息送至程序。预设的信息为 SIGTERM(15), 可将指定程序终止。若仍无法终止该程序, 可使用 SIGKILL(9) 信息尝试强制删除程序。程序或工作的编号可利用 ps 指令或 job 指令查看。</p>
</div>
<h4> 选项解释</h4>
<ul>
<li><strong>-a</strong>-------------------- 当处理当前进程时, 不限制命令名和进程号的对应关系；</li>
<li><strong>-l &lt;信息编号&gt;</strong>-------------------- 若不加 <code>&lt;信息编号&gt;</code> 选项, 则 <code>-l</code> 参数会列出全部的信息名称；</li>
<li><strong>p</strong>-------------------- 指定 kill 命令只打印相关进程的进程号, 而不发送任何信号；</li>
<li><strong>-s &lt;信息名称或编号&gt;</strong>-------------------- 指定要送出的信息；</li>
<li><strong>-u</strong>-------------------- 指定用户。 参数</li>
</ul>
<p>只有第 9 种信号( <code>SIGKILL</code> )才可以无条件终止进程, 其他信号进程都有权利忽略, 下面是常用的信号--------------------</p>
<ul>
<li><strong>HUP</strong> 1 终端断线</li>
<li><strong>INT</strong> 2 中断（同 <code>Ctrl + C</code> ）</li>
<li><strong>QUIT</strong> 3 退出（同 <code>Ctrl + \</code> ）</li>
<li><strong>TERM</strong> 15 终止</li>
<li><strong>KILL</strong> 9 强制终止</li>
<li><strong>CONT</strong> 18 继续（与 <code>STOP</code> 相反, <code>fg/bg</code> 命令）</li>
<li><strong>STOP</strong> 19 暂停（同 <code>Ctrl + Z</code> ）</li>
</ul>
<h4> 示例</h4>
<p>用 ps 查找进程, 然后用 kill 杀掉, <code>For Examlpe:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>用 netstat 查找进程, 然后用 kill 杀掉, <code>For Examlpe:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/process-4.png" alt="RedHat 安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 安全加固</figcaption></figure>
<h3> service 关闭服务</h3>
<div class="hint-container tip">
<p class="hint-container-title">命令作用</p>
<p>service 命令是 Redhat Linux 兼容的发行版中用来控制系统服务的实用工具, 它以启动、停止、重新启动和关闭系统服务, 还可以显示所有系统服务的当前状态。</p>
</div>
<h4> 选项信息</h4>
<ul>
<li><strong>-h</strong>-------------------- 显示帮助信息；</li>
<li><strong>--status-all</strong>-------------------- 显示所服务的状态。</li>
</ul>
<h4> 示例</h4>
<p><code>For Examlpe:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/process-5.png" alt="RedHat 安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 安全加固</figcaption></figure>
<p>那么要是系统没有 <code>service</code> 命令, 怎么办呢? Liunx 系统下是所有的服务名是存放在 <code>/etc/init.d/</code> 下的, 所以也可以使用以下命令来停止服务, <code>For Examlpe:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/process-6.png" alt="RedHat 安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 安全加固</figcaption></figure>
<h3> chkconfig 删除服务</h3>
<h4> 示例</h4>
<p><code>For Examlpe:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/process-7.png" alt="RedHat 安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 安全加固</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/process-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 学习笔记（七）文件的特殊权限</title>
      <link>https://vxhly.github.io/views/liunx/special-permissions-for-files.html</link>
      <guid>https://vxhly.github.io/views/liunx/special-permissions-for-files.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（七）文件的特殊权限</source>
      <description>前言 本篇是 Liunx 的学习笔记系列第七篇, 在 Liunx 中文件除了 rwx 权限, 还存在 SetUID 、 SetGID 、 Sicky BIT 特殊权限, 本篇就是来介绍这些特殊权限。</description>
      <category>liunx</category>
      <pubDate>Fri, 14 Oct 2016 19:25:27 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的学习笔记系列第七篇, 在 Liunx 中文件除了 rwx 权限, 还存在 SetUID 、 SetGID 、 Sicky BIT 特殊权限, 本篇就是来介绍这些特殊权限。</p>
</div>
<!-- more -->
<h2> SetUID</h2>
<h3> 针对文件的作用</h3>
<ul>
<li>只有可以执行的二进制程序才能设定 SUID 权限</li>
<li>命令执行者要对该程序用于 x（执行）权限</li>
<li>命令执行者在执行该程序是获得该程序文件属主的身份（在执行程序的过程中灵魂附体成文件的属主）</li>
<li>SetUID 权限只在该程序执行过程中有效, 也就是说身份改变只在程序执行过程中有效</li>
</ul>
<h3> 概念图</h3>
<figure><img src="/assets/setuid-1.png" alt="SetUID" tabindex="0" loading="lazy"><figcaption>SetUID</figcaption></figure>
<h3> 设置 SUID</h3>
<p>只能针对二进制可执行文件</p>
<h4> 4 代表 SUID</h4>
<p><code>Command Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当然还可以用以下命令设置, <code>Command Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4> S 与 s 的区别</h4>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>区别大写 <code>S</code> 其实是报错, 因为我们用来测试的文件并非二进制文件, 或者说是可执行程序, 只需添加 x 权限即可变为小写 <code>s</code> , 实际上生效的是小写 <code>s</code></p>
</div>
<p><code>For Examlpe:</code> <br></p>
<figure><img src="/assets/setuid-2.png" alt="SetUID" tabindex="0" loading="lazy"><figcaption>SetUID</figcaption></figure>
<h3> 危险的 SetUID</h3>
<ul>
<li>关键目录应严格控制写权限。比如 <code>“/”</code> 、 <code>”/usr“</code> 等</li>
<li>用户的密码设置要严格遵守密码三原则</li>
<li>对系统中默认应该具有 SetUID 权限的文件作一列表, 定时检查没有这个之外的文件是否被设置了 SetUID 权限</li>
</ul>
<h2> SetGID</h2>
<p>既可以针对二进制可执行文件, 也可以针对目录</p>
<h3> 针对文件的作用</h3>
<ul>
<li>只有可以执行的二进制程序才能设定 SGID 权限</li>
<li>命令执行者要对该程序用于 x（执行）权限</li>
<li>命令执行者在执行该程序的时候, 组身份升级为该程序的属组</li>
<li>SetUID 权限同样只在该程序执行过程中有效, 也就是说组身份改变只在程序执行过成中有效</li>
</ul>
<h3> 针对目录的作用</h3>
<ul>
<li>普通用户必须对此目录拥有 r 和 x 权限, 才能进入此目录</li>
<li>普通用户在此目录中的有效组会变成此目录的属组</li>
<li>若普通用户对此目录拥有 w 权限时, 新建的文件的默认属组是这个目录的属组</li>
</ul>
<h3> 设置 SGID</h3>
<h4> 2 代表 SGID</h4>
<p><code>Command Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当然还可以用以下命令设置, <code>Command Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4> S 与 s 的区别</h4>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>区别大写 S 其实是报错, 因为我们用来测试的文件并非二进制文件, 或者说是可执行程序, 只需添加 x 权限即可变为小写 s</p>
</div>
<p><code>For Examlpe:</code> <br></p>
<figure><img src="/assets/setgid.png" alt="SetUID" tabindex="0" loading="lazy"><figcaption>SetUID</figcaption></figure>
<h2> Sicky BIT</h2>
<p>只能针对目录</p>
<h3> 针对目录的作用</h3>
<h3> 设置 SBIT</h3>
<ul>
<li>粘着位目前对目录有效</li>
<li>普通用户对该目录拥有 w 和 x 权限, 即普通用户可以在此目录拥有写入权限</li>
<li>如果没有粘着位, 因为普通用户拥有 w 权限, 所以可以删除此目录下所有文件, 包括其他用户建立的文件。一但赋予粘着位, 除了 root 可以删除所有文件, 普通用户就算拥有 w 权限, 也只能删除自己建立的文件, 但是不能删除其他用户建立的文件</li>
</ul>
<h4> 1 代表 SBIT</h4>
<p><code>Command Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当然还可以用以下命令设置, <code>Command Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4> 举例</h4>
<p><code>For Examlpe:</code> <br></p>
<figure><img src="/assets/sticky-bit.png" alt="SetUID" tabindex="0" loading="lazy"><figcaption>SetUID</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/setuid-1.png" type="image/png"/>
    </item>
    <item>
      <title>浅谈 SSH 服务</title>
      <link>https://vxhly.github.io/views/liunx/talk-ssh-service.html</link>
      <guid>https://vxhly.github.io/views/liunx/talk-ssh-service.html</guid>
      <source url="https://vxhly.github.io/rss.xml">浅谈 SSH 服务</source>
      <description>前言 SSH 是每一台 Linux 系统的标准配置服务, 本文将总结 SSH 的常见用法。</description>
      <category>liunx</category>
      <pubDate>Tue, 15 Aug 2017 21:42:25 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>SSH 是每一台 Linux 系统的标准配置服务, 本文将总结 SSH 的常见用法。</p>
</div>
<!-- more -->
<h2> 什么是 SSH</h2>
<p>SSH 为 <code>Secure Shell</code> 的缩写, 中文名字为安全外壳协议。SSH 是目前较可靠, 专为远程登录会话和其他网络服务提供安全性的协议。利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。需要指出的是, SSH 只是一种协议, 存在多种实现, 既有商业实现, 也有开源实现。</p>
<h1> 基本用法</h1>
<p>SSH 主要用于远程登录, 只要一条简单命令就可以了。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果本地用户名与远程用户名一致, 登录时可以省略用户名。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>SSH 的默认端口是 22, 当然也可以使用 <code>-p</code> 修改这个端口。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 中间人攻击</h2>
<p>SSH 之所以能够保证安全, 原因在于它采用了公钥加密。</p>
<p>整个过程是这样的:</p>
<ul>
<li>远程主机收到用户的登录请求, 把自己的公钥发给用户。</li>
<li>用户使用这个公钥, 将登录密码加密后, 发送回来。</li>
<li>远程主机用自己的私钥, 解密登录密码, 如果密码正确, 就同意用户登录。</li>
</ul>
<p>这个过程本身是安全的, 但是实施的时候存在一个风险: 如果有人截获了登录请求, 然后冒充远程主机, 将伪造的公钥发给用户, 那么用户很难辨别真伪。因为不像 https 协议, SSH 协议的公钥是没有证书中心（CA）公证的, 也就是说, 都是自己签发的。</p>
<p>可以设想, 如果攻击者插在用户与远程主机之间（比如在公共的 wifi 区域）, 用伪造的公钥, 获取用户的登录密码。再用这个密码登录远程主机, 那么 SSH 的安全机制就荡然无存了。</p>
<p>这种风险就是著名的<a href="http://en.wikipedia.org/wiki/Man-in-the-middle_attack" target="_blank" rel="noopener noreferrer">"中间人攻击"</a>（Man-in-the-middle attack）。</p>
<h2> 口令登录</h2>
<p>如果你是第一次登录对方主机, 系统会出现下面的提示:</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>The authenticity of host 'host (12.18.429.21)' can't be established.<br> RSA key fingerprint is 98:2e:d7:e0🇩🇪9f:ac:67:28:c2:42:2d:37:16:58:4d.<br> Are you sure you want to continue connecting (yes/no)?</p>
</div>
<p>这段话的意思是, 无法确认 host 主机的真实性, 只知道它的公钥指纹, 问你还想继续连接吗?</p>
<p>所谓"公钥指纹", 是指公钥长度较长（这里采用 RSA 算法, 长达 1024 位）, 很难比对, 所以对其进行 MD5 计算, 将它变成一个 128 位的指纹。上例中是 <code>98:2e:d7:e0:de:9f:ac:67:28:c2:42:2d:37:16:58:4d</code> , 再进行比较, 就容易多了。</p>
<p>很自然的一个问题就是, 用户怎么知道远程主机的公钥指纹应该是多少? 回答是没有好办法, 远程主机必须在自己的网站上贴出公钥指纹, 以便用户自行核对。</p>
<p>假定经过风险衡量以后, 用户决定接受这个远程主机的公钥。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Are you sure you want to continue connecting (yes/no)? yes</p>
</div>
<p>系统会出现一句提示, 表示 host 主机已经得到认可。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Warning: Permanently added 'host, 12.18.429.21' (RSA) to the list of known hosts.</p>
</div>
<p>然后, 会要求输入密码。</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Password: (enter password)</p>
</div>
<p>如果密码正确, 就可以登录了。</p>
<p>当远程主机的公钥被接受以后, 它就会被保存在文件 <code>$HOME/.ssh/known_hosts</code> 之中。下次再连接这台主机, 系统就会认出它的公钥已经保存在本地了, 从而跳过警告部分, 直接提示输入密码。</p>
<p>每个 SSH 用户都有自己的 <code>known_hosts</code> 文件, 此外系统也有一个这样的文件, 通常是 <code>/etc/ssh/ssh_known_hosts</code> , 保存一些对所有用户都可信赖的远程主机的公钥。</p>
<h2> 公钥登录</h2>
<p>使用密码登录, 每次都必须输入密码, 非常麻烦。好在 SSH 还提供了公钥登录, 可以省去输入密码的步骤。</p>
<p>所谓"公钥登录", 原理很简单, 就是用户将自己的公钥储存在远程主机上。登录的时候, 远程主机会向用户发送一段随机字符串, 用户用自己的私钥加 密后, 再发回来。远程主机用事先储存的公钥进行解密, 如果成功, 就证明用户是可信的, 直接允许登录 shell, 不再要求密码。</p>
<p>这种方法要求用户必须提供自己的公钥。如果没有现成的, 可以直接用 ssh-keygen 生成一个:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行上面的命令以后, 系统会出现一系列提示, 可以一路回车。其中有一个问题是, 要不要对私钥设置口令（passphrase）, 如果担心私钥的安全, 这里可以设置一个。</p>
<p>运行结束以后, 在 <code>$HOME/.ssh/</code> 目录下, 会新生成两个文件: <code>id_rsa.pub</code> 和 <code>id_rsa</code> 。前者是你的公钥, 后者是你的私钥。</p>
<p>这时再输入下面的命令, 将公钥传送到远程主机 host 上面:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>好了, 从此你再登录, 就不需要输入密码了。</p>
<h2> authorized_keys 文件</h2>
<p>远程主机将用户的公钥, 保存在登录后的用户主目录的 <code>$HOME/.ssh/authorized_keys</code> 文件中。公钥就是一段字符串, 只要把它追加在 authorized_keys 文件的末尾就行了。</p>
<p>这里不使用上面的 <code>ssh-copy-id</code> 命令, 改用下面的命令, 解释公钥的保存过程:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这条命令由多个语句组成, 依次分解开来看:</p>
<ul>
<li><strong><code>ssh [userName]@[hostIP]</code></strong>, 表示登录远程主机</li>
<li>单引号中的 <strong><code>mkdir .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys</code></strong>, 表示登录后在远程 shell 上执行的命令</li>
<li><strong><code>mkdir .ssh</code></strong> 的作用是, 如果用户主目录中的 .ssh 目录不存在, 就创建一个</li>
<li><strong><code>cat &gt;&gt; .ssh/authorized_keys' &lt; ~/.ssh/id_rsa.pub</code></strong> 的作用是, 将本地的公钥文件 <code>~/.ssh/id_rsa.pub</code> , 重定向追加到远程文件 authorized_keys 的末尾。</li>
</ul>
<p>写入 authorized_keys 文件后, 公钥登录的设置就完成了。</p>
<h2> 远程操作</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>单引号中间的部分, 表示在远程主机上执行的操作；后面的输入重定向, 表示数据通过 SSH 传向远程主机。</p>
<p>这就是说, SSH 可以在用户和远程主机之间, 建立命令和数据的传输通道, 因此很多事情都可以通过 SSH 来完成。</p>
<h3> 【例 1】</h3>
<p>将 <code>$HOME/src/</code> 目录下面的所有文件, 复制到远程主机的 <code>$HOME/src/</code> 目录。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 【例 2】</h3>
<p>将远程主机 <code>$HOME/src/</code> 目录下面的所有文件, 复制到用户的当前目录。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 【例 3】</h3>
<p>查看远程主机是否运行进程 httpd。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 绑定本地端口</h2>
<p>既然 SSH 可以传送数据, 那么我们可以让那些不加密的网络连接, 全部改走 SSH 连接, 从而提高安全性。</p>
<p>假定我们要让 8080 端口的数据, 都通过 SSH 传向远程主机, 命令就这样写:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>SSH 会建立一个 socket, 去监听本地的 8080 端口。一旦有数据传向那个端口, 就自动把它转移到 SSH 连接上面, 发往远程主机。可以想象, 如果 8080 端口原来是一个不加密端口, 现在将变成一个加密端口。</p>
<h2> 本地端口转发</h2>
<p>有时, 绑定本地端口还不够, 还必须指定数据传送的目标主机, 从而形成点对点的"端口转发"。为了区别后文的"远程端口转发", 我们把这种情况称为"本地端口转发"（Local forwarding）。</p>
<p>假定 host1 是本地主机, host2 是远程主机。由于种种原因, 这两台主机之间无法连通。但是, 另外还有一台 host3, 可以同时连通前面两台主机。因此, 很自然的想法就是, 通过 host3, 将 host1 连上 host2。</p>
<p>我们在 host1 执行下面的命令:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>命令中的 L 参数一共接受三个值, 分别是"本地端口: 目标主机: 目标主机端口", 它们之间用冒号分隔。这条命令的意思, 就是指定 SSH 绑定本地端口 2121, 然后指定 host3 将所有的数据, 转发到目标主机 host2 的 21 端口（假定 host2 运行 FTP, 默认端口为 21）。</p>
<p>这样一来, 我们只要连接 host1 的 2121 端口, 就等于连上了 host2 的 21 端口。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>"本地端口转发"使得 host1 和 host3 之间仿佛形成一个数据传输的秘密隧道, 因此又被称为"SSH 隧道"。</p>
<h2> 远程端口转发</h2>
<p>既然"本地端口转发"是指绑定本地端口的转发, 那么"远程端口转发"（remote forwarding）当然是指绑定远程端口的转发。</p>
<p>还是接着看上面那个例子, host1 与 host2 之间无法连通, 必须借助 host3 转发。但是, 特殊情况出现了, host3 是一台内网机器, 它可以连接外网的 host1, 但是反过来就不行, 外网的 host1 连不上内网的 host3。这时, "本地端口转发"就不能用了, 怎么办?</p>
<p>解决办法是, 既然 host3 可以连 host1, 那么就从 host3 上建立与 host1 的 SSH 连接, 然后在 host1 上使用这条连接就可以了。</p>
<p>我们在 host3 执行下面的命令:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>R 参数也是接受三个值, 分别是"远程主机端口: 目标主机: 目标主机端口"。这条命令的意思, 就是让 host1 监听它自己的 2121 端口, 然后将所有数据经由 host3, 转发到 host2 的 21 端口。由于对于 host3 来说, host1 是远程主机, 所以这种情况就被称为"远程端口绑定"。</p>
<p>绑定之后, 我们在 host1 就可以连接 host2 了:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里必须指出, "远程端口转发"的前提条件是, host1 和 host3 两台主机都有 sshD 和 ssh 客户端。</p>
<h2> SHH 的其他参数</h2>
<p>SSH 还有一些别的参数, 也值得介绍。</p>
<p>N 参数, 表示只连接远程主机, 不打开远程 shell；T 参数, 表示不为这个连接分配 TTY。这个两个参数可以放在一起用, 代表这个 SSH 连接只用来传数据, 不执行远程操作。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>f 参数, 表示 SSH 连接成功后, 转入后台运行。这样一来, 你就可以在不中断 SSH 连接的情况下, 在本地 shell 中执行其他操作。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要关闭这个后台连接, 就只有用 kill 命令去杀掉进程。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Ubuntu 开启 root 用户</title>
      <link>https://vxhly.github.io/views/liunx/ubuntu-enble-root.html</link>
      <guid>https://vxhly.github.io/views/liunx/ubuntu-enble-root.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Ubuntu 开启 root 用户</source>
      <description>前言 Ubuntu 默认不开启 root 账户的, 所以有需开启 root 账户的按照以下做法即可, 切换 root 账户后 chromium 浏览器不能使用。</description>
      <category>liunx</category>
      <pubDate>Tue, 02 Aug 2016 15:29:46 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Ubuntu 默认不开启 root 账户的, 所以有需开启 root 账户的按照以下做法即可, 切换 root 账户后 chromium 浏览器不能使用。</p>
</div>
<!-- more -->
<h2> 打开终端开启 root 账户</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 为 root 账户设置密码</h2>
<p>输入两次</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 测试 root 账户</h3>
<p>输入 root 密码, 进入 root 终端</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 设置登录面板, 使其实现 root 登录</h2>
<p>使用 <code>vim</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 <code>gedit</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>添加如下代码, 保存退出</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 重启 ubuntu, 需切换 root 账户</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 删除原先账户</h2>
<p>如果你不喜欢原先的账户, 大可以彻底删除用户</p>
<h3> 在 root 用户下</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 在普通用户下</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>因为需要彻底删除用户, 所以加上 的选项, 在删除用户的同时一起把这个用户的宿主目录和邮件目录删除；userName 需替换成你的原先账户名</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Liunx 学习笔记（二）vim 的使用</title>
      <link>https://vxhly.github.io/views/liunx/usage-of-vim.html</link>
      <guid>https://vxhly.github.io/views/liunx/usage-of-vim.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（二）vim 的使用</source>
      <description>前言 本篇是 Liunx 的学习笔记系列第二篇, 这一篇将介绍 vim 的使用技巧。vim 是一款终端编辑器, 是由 vi 演变而来的, 它与 vi 最大的区别是, vim 拥有代码高亮, 其他操作都是共用的。</description>
      <category>liunx</category>
      <pubDate>Thu, 08 Sep 2016 22:20:23 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的学习笔记系列第二篇, 这一篇将介绍 vim 的使用技巧。vim 是一款终端编辑器, 是由 vi 演变而来的, 它与 vi 最大的区别是, vim 拥有代码高亮, 其他操作都是共用的。</p>
</div>
<!-- more -->
<h2> vim 常用操作</h2>
<h3> 打开文件操作</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>vi</strong></td>
<td>进入 vi 而不读入任何文件</td>
</tr>
<tr>
<td><strong>vi [fileName]</strong></td>
<td>进入 vi 并读入指定名称的文件（新、旧文件均可）。</td>
</tr>
<tr>
<td><strong>vi +n [fileName]</strong></td>
<td>进入 vi 并且由文件的第几行开始。</td>
</tr>
<tr>
<td><strong>vi + [fileName]</strong></td>
<td>进入 vi 并且由文件的最后一行开始。</td>
</tr>
<tr>
<td><strong>vi +/pattern [fileName]</strong></td>
<td>打开文件, 并将光标置于第一个与 pattern 匹配的串处</td>
</tr>
<tr>
<td><strong>vi [fileName]....[fileName]</strong></td>
<td>打开多个文件, 依次进行编辑</td>
</tr>
<tr>
<td><strong>vi -r [fileName]</strong></td>
<td>在上次正用 vi 编辑时发生系统崩溃, 恢复 [fileName]</td>
</tr>
<tr>
<td><strong>vimdiff fileA fileB</strong></td>
<td>比较编辑两个不同的文件</td>
</tr>
</tbody>
</table>
<h3> vim 操作模式转换图</h3>
<figure><img src="/assets/liunx-vim.png" alt="vim 操作模式转换图" tabindex="0" loading="lazy"><figcaption>vim 操作模式转换图</figcaption></figure>
<h3> 插入命令</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>a</strong></td>
<td>在光标所在行行尾插入</td>
</tr>
<tr>
<td><strong>i</strong></td>
<td>在光标所在字符前插入</td>
</tr>
<tr>
<td><strong>I</strong></td>
<td>在光标所在行行首插入</td>
</tr>
<tr>
<td><strong>o</strong></td>
<td>在光标下插入新行</td>
</tr>
<tr>
<td><strong>O</strong></td>
<td>在光标上插入新行</td>
</tr>
</tbody>
</table>
<h3> 定位命令</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>:set nu</strong></td>
<td>设置行号</td>
</tr>
<tr>
<td><strong>:set nonu</strong></td>
<td>取消行号</td>
</tr>
<tr>
<td><strong>gg</strong></td>
<td>到第一行</td>
</tr>
<tr>
<td><strong>G</strong></td>
<td>到最后一行</td>
</tr>
<tr>
<td><strong>nG</strong></td>
<td>到第 n 行</td>
</tr>
<tr>
<td><strong>:n</strong></td>
<td>到第 n 行</td>
</tr>
<tr>
<td><strong>$</strong></td>
<td>光标移至行尾</td>
</tr>
<tr>
<td><strong>0</strong></td>
<td>光标移至行首</td>
</tr>
</tbody>
</table>
<h3> 删除命令</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>x</strong></td>
<td>删除光标所在处字符</td>
</tr>
<tr>
<td><strong>nx</strong></td>
<td>删除光标所在处后 n 个字符</td>
</tr>
<tr>
<td><strong>dd</strong></td>
<td>删除光标所在行</td>
</tr>
<tr>
<td><strong>ndd</strong></td>
<td>删除 n 行</td>
</tr>
<tr>
<td><strong>dG</strong></td>
<td>删除光标所在行到文件末尾内容</td>
</tr>
<tr>
<td><strong>D</strong></td>
<td>删除光标所在处至行尾内容</td>
</tr>
<tr>
<td><strong>:n1, n2d</strong></td>
<td>删除第 n1 行到第 n2 行</td>
</tr>
</tbody>
</table>
<h3> 复制和剪切命令</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>yy</strong></td>
<td>复制当前行</td>
</tr>
<tr>
<td><strong>nyy</strong></td>
<td>复制当前行（包含当前行）以下 n 行</td>
</tr>
<tr>
<td><strong>dd</strong></td>
<td>剪切当前行</td>
</tr>
<tr>
<td><strong>ndd</strong></td>
<td>剪切当前行（包含当前行）以下 n 行</td>
</tr>
<tr>
<td><strong>p</strong></td>
<td>粘贴在当前光标所在行的下一行</td>
</tr>
<tr>
<td><strong>P</strong></td>
<td>粘贴在当前光标所在行的上一行</td>
</tr>
<tr>
<td><strong>nyl</strong></td>
<td>复制 n 个字符</td>
</tr>
<tr>
<td><strong>yw</strong></td>
<td>复制一个单词</td>
</tr>
<tr>
<td><strong>y$</strong></td>
<td>复制从当前位置到行尾</td>
</tr>
<tr>
<td><strong>yG</strong></td>
<td>复制从所在行到最后一行</td>
</tr>
<tr>
<td><strong>:n1, n2 co n3</strong></td>
<td>将 n1 行到 n2 行之间的内容拷贝到第 n3+1 行【n3 行的下一行】</td>
</tr>
<tr>
<td><strong>:n1, n2 m n3</strong></td>
<td>将 n1 行到 n2 行之间的内容移至到第 n3 行下</td>
</tr>
<tr>
<td><strong>J</strong></td>
<td>把下一行的数据连接到本行之后</td>
</tr>
</tbody>
</table>
<h3> 替换和取消命令</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>r</strong></td>
<td>取代光标所在处字符</td>
</tr>
<tr>
<td><strong>R</strong></td>
<td>从光标所在处开始替换字符, 按 Esc 结束</td>
</tr>
<tr>
<td><strong>u</strong></td>
<td>取消上一步操作</td>
</tr>
</tbody>
</table>
<h3> 搜索和搜索替换命令</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>/string</strong></td>
<td>搜索指定字符串</td>
</tr>
<tr>
<td><strong>:set ic</strong></td>
<td>搜索时忽略大小写</td>
</tr>
<tr>
<td><strong>:set noic</strong></td>
<td>取消搜索时忽略大小写</td>
</tr>
<tr>
<td><strong>n</strong></td>
<td>搜索指定字符串的下一个出现位置（即同方向）</td>
</tr>
<tr>
<td><strong>N</strong></td>
<td>在反方向上重复上一次搜索命令</td>
</tr>
<tr>
<td><strong>:%s/old/new/g</strong></td>
<td>全文替换指定字符串；需要替换询问时, g 改成 c</td>
</tr>
<tr>
<td><strong>:n1, n2s/old/new/g</strong></td>
<td>在一定方位范围内替换指定字符串；需要替换询问时, g 改成 c</td>
</tr>
</tbody>
</table>
<h3> 保存和退出命令</h3>
<table>
<thead>
<tr>
<th>命令</th>
<th>作用</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>:w</strong></td>
<td>保存修改</td>
</tr>
<tr>
<td><strong>:w /[path]/[fileName]</strong></td>
<td>另存为指定文件</td>
</tr>
<tr>
<td><strong>:wq</strong>, <strong>:x</strong></td>
<td>保存修改并退出</td>
</tr>
<tr>
<td><strong>ZZ</strong></td>
<td>快捷键, 保存修改并退出</td>
</tr>
<tr>
<td><strong>:q!</strong></td>
<td>不保存修改并退出</td>
</tr>
<tr>
<td><strong>:wq!</strong></td>
<td>保存修改并退出（文件所有者及 root 可使用, 通常在文件无写权限下使用）</td>
</tr>
<tr>
<td><strong>:n1, n2 w ! command</strong></td>
<td>将文件中 n1 行至 n2 行的内容作为 command 的输入并执行之, 若不指定 n1, n2, 则表示将整个文件内容作为 command 的输入【注意空格】例如 <code>:1,4 w! grep tom</code></td>
</tr>
<tr>
<td><strong>:!command</strong></td>
<td>暂时退出 vi 并执行 shell 指令, 执行完毕后再回到 vi。【后期应该有用】</td>
</tr>
<tr>
<td><strong>:r!command</strong></td>
<td>将命令 command 的输出结果放到当前行【强大】</td>
</tr>
<tr>
<td><strong>:sh</strong></td>
<td>暂时退出 vi 到系统下, 结束时按 <code>Ctrl + d</code> 则回到 vi。</td>
</tr>
<tr>
<td><strong>:e [fileName]</strong></td>
<td>打开文件 [fileName] 进行编辑【相当于退出当前的并打开另一个文件】</td>
</tr>
<tr>
<td><strong>:e!</strong></td>
<td>放弃修改文件内容, 重新载入该文件编辑</td>
</tr>
<tr>
<td><strong>:w !sudo tee %</strong></td>
<td>以普通用户身份打开的 vim , 修改后以 root 身份保存</td>
</tr>
</tbody>
</table>
<h2> vim 使用技巧</h2>
<h3> 导入文件内容</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 导入命令执行结果</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 寻找命令所在目录</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 定义快捷键</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>:map</code> 定义快捷键时, 按 Ctrl+V+key 定义快捷键；<code>:map</code> 定义的快捷键, 重启或关机失效</p>
</div>
<h3> 连续行注释</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 替换</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 编辑模式命令, 永久生效</h3>
<p><code>普通</code> 用户</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>root</code> 用户</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>添加类似于以下命令代码, 无需添加 :</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-vim.png" type="image/png"/>
    </item>
    <item>
      <title>RedHat 系统安全加固（二）用户和文件权限</title>
      <link>https://vxhly.github.io/views/liunx/user-and-file-permissions.html</link>
      <guid>https://vxhly.github.io/views/liunx/user-and-file-permissions.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（二）用户和文件权限</source>
      <description>前言 本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录用户和文件的权限（主要是特殊权限）, 加强系统的防御能力。</description>
      <category>liunx</category>
      <pubDate>Fri, 14 Oct 2016 22:08:33 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录用户和文件的权限（主要是特殊权限）, 加强系统的防御能力。</p>
</div>
<!-- more -->
<h2> 主要的介绍</h2>
<p>Linux 文件系统的安全主要是通过设置文件的权限来实现的。每一个 Linux 的文件或目录, 都有 3 组属性, 分别定义文件或目录的所有者, 用户组和其他人的使用权限（ <code>只读</code> 、 <code>可写</code> 、 <code>可执行</code> 、 <code>允许 SUID</code> 、 <code>允许 SGID</code> 等）。特别注意, 权限为 <code>SUID</code> 和 <code>SGID</code> 的可执行文件, 在程序运行过程中, 会给进程赋予所有者的权限, 如果被黑客发现并利用就会给系统造成危害。</p>
<h2> 查找同时存在 SUID 和 SGID 的文件</h2>
<p>使用 <code>find</code> 命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>举例, 普通用户无法直接 vi 修改 <code>/etc/passwd</code> 文件, 但却可以通过 <code>passwd</code> 命令来修改自身的密码。这时就利用了 <code>/bin/passwd</code> 的 SUID 的权限。</p>
<p>如果一个程序被设置成了 <code>S</code> 位标志, 那么普通用户就可以以 root 身份来运行这个程序。对系统安全性有较大不利影响, 所以应禁止所有不必要的 <code>SUID/SGID</code> 程序。</p>
<p>修改部分系统文件的 SUID 和 SGID 的权限:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> find 命令</h3>
<p>选项解释</p>
<ul>
<li><strong><code>-perm &lt;权限数值&gt;</code></strong> =&gt; 查找符合指定的权限数值的文件或目录；</li>
<li><strong><code>-xdev</code></strong> =&gt; 将范围局限在先行的文件系统中；</li>
<li><code>find -perm mode</code> =&gt; 表示严格匹配, 也就是你的文件权限位转换成对应的十进制数字与 mode 一模一样, 那么匹配成功, 需要注意的是如果 mode 给的数字不足 3 位, 那么前面自动添 0 (严格的说是不足 4 位, 原因就是前面所说的 <code>SetUID</code> , <code>SetGID</code> ）</li>
<li><code>find -perm -mode</code> =&gt; 表示模糊查询, 也就是说你的文件权限位转换成对应的十进制数字被 mode 包含, 就会被搜索出来</li>
<li><code>find -perm +mode</code> =&gt; 与 <code>-mode</code> 的区别是 <code>+mode</code> 只需其中的任意一个 1 的部分被匹配, <code>-mode</code> 是所有 1 的部分都必须被匹配, 同样 <code>+mode</code> 也不管 0 位</li>
</ul>
<h2> 文件的默认权限</h2>
<p>使用 <code>umask</code> 指定当前用户创建文件夹和文件的默认权限属性</p>
<ul>
<li>若使用者建立为 <code>文件</code> , 则预设 <code>没有可执行 ( x ) 项目</code> , 亦即只有 <code>rw</code> 这两个项目, 也就是最大为 <code>666</code> , 即权限为 <code>-rw-rw-rw-</code></li>
<li>若使用者建立为 <code>目录</code> , 则由于 <code>x</code> 与是否可以进入此目录有关, 因此预设为所有权限均开放, 亦即为 <code>777</code> , 即权限为 <code>drwxrwxrwx</code></li>
</ul>
<h3> 修改默认权限</h3>
<p>主要修改配置文件 <code>/etc/profile</code> 、 <code>/etc/bashrc</code> 、 <code>/etc/csh.login</code> 、 <code>/etc/csh.cshrc</code></p>
<ul>
<li>生成目录的权限为 <code>777-002=775</code> , 即 <code>drwxrwxr-x</code></li>
<li>生成文件的权限为 <code>666-002=664</code> , 即 <code>-rw-rw-r--</code> <code>For Exmaple:</code></li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li>生成目录的权限为 <code>777-022=755</code> , 即 <code>drwxrwxr-x</code></li>
<li>生成文件的权限为 <code>666-022=644</code> , 即 - <code>rw-r--r--</code> <code>For Exmaple:</code></li>
</ul>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>不要单纯的进行数字加减<br> 比如, <code>umask 003</code> , 如果以数字加减, 则文件权限为 <code>666-003=663</code> , 相当于 <code>-rw-rw--wx</code> , 显然不正确, 应该先转换成权限属性再相减 <code>-rw-rw-rw-</code> 减去 <code>--------wx</code> , 即应该为 <code>-rw-rw-r--</code> <br> 影响: 移动规范要求 <code>umask 027</code> , 这样生成的文件默认权限为 <code>-rw-r-----</code> , 只有本用户可读、写、执行。如果业务需要, 其他用户也需要操作该 用户的文件, 就会有问题。可以使用默认的 <code>022</code></p>
</div>
<h2> 环境变量的安全性</h2>
<h3> root 用户环境变量的安全性</h3>
<p>主要检查 <code>PATH</code> 变量, <code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/redhat-reinforce-12.png" alt="RedHat 安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 安全加固</figcaption></figure>
<p>检查是否包含组目录权限为 <code>o+w</code> 的目录或者 <code>g+w</code> 的目录</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul>
<li><code>-002</code> 表示任何目录或文件, 只要带 <code>o+w</code> 就匹配</li>
<li><code>+002</code> 表示目录或文件只有 <code>o+w</code> 权限, 即 <code>-------w-</code> 可能会出现报错提示 <code>/root/bin</code> 目录不存在, <code>PATH</code> 里有该路径, 而实际上没有, 可以先在 <code>/root</code> 下建立一个 <code>bin</code> 目录</li>
</ul>
<h3> 检查 root 用户环境变量 path 规范</h3>
<p>检查系统 root 用户环境变量 path 中是否包含 <code>“.”</code> , <code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改文件 <code>/etc/profile</code> 、 <code>/etc/bashrc</code> 或 <code>/root/.bash_profile</code> 在 <code>“PATH＝……”</code> 这句中删除</p>
<ul>
<li><code>-002</code> 表示任何目录或文件, 只要带 <code>o+w</code> 就匹配</li>
<li><code>+002</code> 表示目录或文件只有 <code>o+w</code> 权限, 即 <code>-------w-</code> 可能会出现报错提示 <code>/root/bin</code> 目录不存在, <code>PATH</code> 里有该路径, 而实际上没有, 可以先在 <code>/root</code> 下建立一个 <code>bin</code> 目录</li>
</ul>
<h2> 远程连接的安全性配置</h2>
<p>主要查找系统中是否含有 <code>.netrc</code> 和 <code>.rhosts</code> 文件, 如无必要, 删除这两个文件, <code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 重要目录和文件的权限设置</h2>
<p>执行以下命令检查目录和文件的权限设置情况</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于重要目录, 建议执行如下类似操作, <code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样只有 root 可以读、写和执行, 编写脚本一次性执行, <code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意影响</p>
<p>有的移动安全加固标准要求/etc 目录是 750 权限, 但如果/etc 目录是权限是 750（drwxr-x---）的话, 由于其他组没有 x 权限, 那么普通用户就无权访问/etc 目录以及以下所有文件, 用户获取不到基本的环境变量/etc/profile 和/etc/passwd、group 等文件, 一些基本命令都会出现问题, 本用户的文件只有 uid、gid, 无法对应名用户名称和组名称。</p>
</div>
<h2> 检查任何人都有写权限的目录</h2>
<p><code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这些目录是存放每个用户临时文件的, 目录本身是带 <code>Sticky BIT</code> 粘滞位的, 即使里面的文件有 <code>o+w</code> 权限也没问题, 系统本身有保护性措施。</p>
</div>
<h2> 查找任何人都有写权限的文件</h2>
<p><code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/redhat-reinforce-14.png" alt="RedHat 安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 安全加固</figcaption></figure>
<h2> 检查没有属主的文件</h2>
<p><code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>发现没有属主的文件往往就意味着有黑客入侵你的系统了。不能允许没有主 人的文件存在。如果在系统中发现了没有属主的文件或目录, 先查看它的完 整性, 如果一切正常, 给它一个属主。有时候卸载程序可能会出现一些没有 主人的文件或目录, 在这种情况下可以把这些文件和目录删除掉。</p>
<p>在安全加固脚本中, 把没有属主或属组的文件直接赋予了 <code>nobody</code> 用户和组, <code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>命令中排除了 /proc 目录</p>
</div>
<h2> 检查异常隐含文件</h2>
<p><code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时也要注意象 <code>“.xx”</code> 和 <code>“.mail”</code> 这样的文件名的。（这些文件名看起来都很象正常的文件名）在系统的每个地方都要查看一下有没有异常隐含文件（点号是起始字符的, 用 <code>“ls”</code> 命令看不到的文件）, 因为这些文件可能是隐藏的黑客工具或者其它一些信息（口令破解程序、其它系统的口令文件, 等等）。在 <code>UNIX</code> 下, 一个常用的技术就是用一些特殊的名, 如: <code>“...”</code> 、 <code>“.. ”（点点空格</code> ）或 <code>“..^G”（点点 ctrl+v 和 ctrl+G）</code> , 来隐含文件或目录。</p>
<p>基本上系统默认只有一个文件 <code>/usr/share/man/man1/..1.gz</code> , 在加固脚本中的处理方式是存在就直接把它删除掉。<br></p>
<figure><img src="/assets/redhat-reinforce-15.png" alt="RedHat 安全加固" tabindex="0" loading="lazy"><figcaption>RedHat 安全加固</figcaption></figure>
<h2> 加锁重要口令文件和组文件</h2>
<p>可以用下面的命令给口令文件和组文件设置不可改变位加锁, <code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>加锁后, 就不能被改变文件内容。同时会影响 <code>useradd</code> 、 <code>userdel</code> 等跟帐户相关的操作</p>
<p>查看命令, <code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回结果为: <code>----i-------- /etc/passwd</code> 如果要修改文件, 必须先对该文件进行解锁, <code>For Exmaple:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/redhat-reinforce-12.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 学习笔记（六）用户的管理</title>
      <link>https://vxhly.github.io/views/liunx/user-management.html</link>
      <guid>https://vxhly.github.io/views/liunx/user-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（六）用户的管理</source>
      <description>前言 本篇是 Liunx 的学习笔记系列第五篇, 这一篇将介绍 Liunx 下用户的管理。用户管理看似很简单, 但是里面还隐藏着大学问呢。</description>
      <category>liunx</category>
      <pubDate>Fri, 07 Oct 2016 11:31:32 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的学习笔记系列第五篇, 这一篇将介绍 Liunx 下用户的管理。用户管理看似很简单, 但是里面还隐藏着大学问呢。</p>
</div>
<!-- more -->
<h2> 添加用户, 并创建用户宿主目录</h2>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 删除用户, 并删除用户宿主目录</h2>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 添加 uid 为 0 的用户</h2>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 查看用户的 uid 或 gid 等信息</h2>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 为用户添加密码</h2>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>普通用户修改密码命令: passwd</p>
<h2> 查看用户的密码状态</h2>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 禁用和解锁用户</h2>
<h3> passwd 方法</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 修改 /etc/shadow 文件（root 用户）</h2>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>禁用则在密码位前手工添加 <code>!</code> （启用删除 <code>!</code> 即可）</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>:wq!</code> 强制保存, 因为其权限为 <code>000</code></p>
<h3> usermod 方法</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 设置用户一登录就要修改密码</h2>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 查看当前登录的用户是谁</h2>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 查看当前登录的用户的环境变量</h2>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 切换用户</h2>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>关于 Chrome 浏览器的调试方法</title>
      <link>https://vxhly.github.io/views/manual/debug-for-chrome-browser.html</link>
      <guid>https://vxhly.github.io/views/manual/debug-for-chrome-browser.html</guid>
      <source url="https://vxhly.github.io/rss.xml">关于 Chrome 浏览器的调试方法</source>
      <description>前言 作为前端开发人员, 最佳的调试环境便是浏览器自带的开发者工具, 此文则介绍 Chrome 浏览器的开发者工具的使用方法。</description>
      <category>manual</category>
      <pubDate>Fri, 05 Aug 2016 18:24:29 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>作为前端开发人员, 最佳的调试环境便是浏览器自带的开发者工具, 此文则介绍 Chrome 浏览器的开发者工具的使用方法。</p>
</div>
<!-- more -->
<h2> Chrome 浏览器调试窗口中常用的标签页</h2>
<ul>
<li><strong>Elements</strong>: 用于查看页面 <code>html</code> 代码</li>
<li><strong>NetWork</strong>: 用于查看页面的网络请求</li>
<li><strong>Sources</strong>: 用于查看页面所加载的源文件</li>
<li><strong>Timeline</strong>: 用于查看页面加载 <code>JavaScript</code> 、页面元素渲染等的时间</li>
<li><strong>Profiles</strong>: 用于做性能优化的, 包括查看 CPU 执行时间与内存占用</li>
<li><strong>Resource</strong>s: 用于查看保存再本地的一些信息, 比如 <code>cookie</code> 等</li>
<li><strong>Audits</strong>: 一般用于优化前端页面、加速网页加载速度</li>
<li><strong>Console</strong>: <code>JavaScript</code> 控制台, 这个面板可以查看错误信息、打印调试信息、写一些测试脚本, 还可以当作 <code>JavaScript API</code> 查看用。</li>
</ul>
<p>Chrome 浏览器不仅可以调试页面、 JavaScript、请求、资源、 cookie, 还可以模拟手机进行调试</p>
<h2> 打开调试方法</h2>
<h3> 方法一</h3>
<p>直接在页面上点击右键, 然后选择审查元素</p>
<figure><img src="/assets/open-browser-debug-1.png" alt="打开调试方法" tabindex="0" loading="lazy"><figcaption>打开调试方法</figcaption></figure>
<h3> 方法二</h3>
<p>在 Chrome 的工具中找到开发者工具</p>
<figure><img src="/assets/open-broswer-debug-2.png" alt="打开调试方法" tabindex="0" loading="lazy"><figcaption>打开调试方法</figcaption></figure>
<h4> 方法三</h4>
<p>使用快捷键 Ctrl+Shift+I (或者 Ctrl+Shift+J 直接打开控制台), 或者直接按 F12</p>
<figure><img src="/assets/open-browser-debug-3.png" alt="打开调试方法" tabindex="0" loading="lazy"><figcaption>打开调试方法</figcaption></figure>
<h3> Elements 标签页</h3>
<p>Elements 标签页的左侧就是对页面 HTML 结构的查看与编辑, 你可以直接在某个元素上双击修改元素的属性。</p>
<figure><img src="/assets/broswer-debug-elements-1.png" alt="Elements 标签页" tabindex="0" loading="lazy"><figcaption>Elements 标签页</figcaption></figure>
<ul>
<li><strong>Add attribute</strong>: 向该元素添加其他的属性</li>
<li><strong>Edit as HTML</strong>: 直接对元素的 <code>HTML</code> 进行编辑, 或者删除某个元素, 所有的修改都会即时在页面上得到呈现。</li>
<li><strong>Copy</strong>: 可以将 <code>HTML</code> 代码直接复制下来, 在拷贝别人网站上面的 <code>HTML</code> 代码的时候灰常方便, 你懂的~~</li>
<li><strong>Hide element</strong>: 隐藏该元素</li>
<li><strong>Delete element</strong>: 删掉该元素</li>
<li><strong>Scroll into view</strong>: 视图滚动到选择的位置</li>
<li><strong>Break on</strong>: 可以对某个元素进行监听, 在 <code>JavaScript</code> 中对元素的属性或者 <code>HTML</code> 进行修改的时候, 直接触发断点, 跳转到对改元素进行修改的 <code>JavaScript</code> 代码处</li>
</ul>
<p>Elements 标签页的右侧可以对元素的 CSS 进行查看与编辑修改</p>
<figure><img src="/assets/broswer-debug-elements-2.png" alt="Elements 标签页" tabindex="0" loading="lazy"><figcaption>Elements 标签页</figcaption></figure>
<ul>
<li><strong>Styles</strong>: 看 <code>HTML</code> 元素的样式</li>
<li><strong>Computed</strong>: 可以看元素的盒子模型</li>
<li><strong>Event Listeners</strong>: 对元素的监听方法将会显示在这里</li>
<li><strong>DOM Breakpoints</strong>: <code>DOM</code> 树的断点调试, （通过右键某一个元素, 依次选择 <code>Break on</code> , 选择 <code>Attributes modifications</code> ）, 设置后刷新页面, 当元素的属性发生改变时, 暂停脚本并定位到该位置</li>
<li><strong>Properties</strong>: 可以查看到元素具有的方法与属性, 比查 <code>API</code> 手册要方便得多</li>
</ul>
<h2> Network 标签页</h2>
<p>Network 标签页对于分析网站请求的网络情况、查看某一请求的请求头和响应头还有响应内容很有用。 注意是在你打开 Chrome 开发者工具后发起的请求, 才会在这里显示的哦。</p>
<figure><img src="/assets/browser-debug-network-1.png" alt="Network 标签页" tabindex="0" loading="lazy"><figcaption>Network 标签页</figcaption></figure>
<p>点击左侧某一个具体请求 URL, 可以看到该请求的详细 HTTP 请求情况</p>
<figure><img src="/assets/browser-debug-network-2.png" alt="Network 标签页" tabindex="0" loading="lazy"><figcaption>Network 标签页</figcaption></figure>
<p>我们可以在这里看到 <code>HTTP 请求头</code> 、 <code>HTTP 响应头</code> 、 <code>HTTP 返回的内容</code> 等信息。</p>
<ul>
<li><strong>Headers</strong>: 请求头信息和响应头信息</li>
<li><strong>Preview</strong>: 预览结果, 如果是文件可以查看这个文件；如果是图片可以预览这个图片；如果是从服务器返回来的 <code>JSON</code> 数据, 可以查看格式话后的 <code>JSON</code></li>
<li><strong>Response</strong>: 从服务器返回的响应结果</li>
<li><strong>Cookies</strong>: 请求和响应的 <code>Cookie</code></li>
<li><strong>Timing</strong>: 具体的响应时间</li>
</ul>
<figure><img src="/assets/browser-debug-network-4.png" alt="Network 标签页" tabindex="0" loading="lazy"><figcaption>Network 标签页</figcaption></figure>
<br>
<figure><img src="/assets/browser-debug-network-5.png" alt="Network 标签页" tabindex="0" loading="lazy"><figcaption>Network 标签页</figcaption></figure>
<br>
<figure><img src="/assets/browser-debug-network-6.png" alt="Network 标签页" tabindex="0" loading="lazy"><figcaption>Network 标签页</figcaption></figure>
<h2> Sources 标签页</h2>
<p>Sources 标签页可以查看到请求的资源情况, 包括 CSS、 JavaScript、图片等的内容。也可以设置各种断点。对存储的内容进行编辑然后保存也会实时的反应到页面上。</p>
<figure><img src="/assets/browser-debug-sources-1.png" alt="Sources 标签页" tabindex="0" loading="lazy"><figcaption>Sources 标签页</figcaption></figure>
<h2> Audits 标签页</h2>
<p>这个对于优化前端页面、加速网页加载速度很有用哦。（相当与 Yslow）</p>
<figure><img src="/assets/browser-debug-audits-3.png" alt="Audits 标签页" tabindex="0" loading="lazy"><figcaption>Audits 标签页</figcaption></figure>
<h2> Console 标签页</h2>
<p>JavaScript 控制台, 前端开发人员最经常使用它来调试 js 的错误。</p>
<figure><img src="/assets/browser-debug-console-1.png" alt="Console 标签页" tabindex="0" loading="lazy"><figcaption>Console 标签页</figcaption></figure>
<br>
<figure><img src="/assets/browser-debug-console-2.png" alt="Console 标签页" tabindex="0" loading="lazy"><figcaption>Console 标签页</figcaption></figure>
<h2> 移动端开发调试</h2>
<p>可以模拟出不同分辨率的移动端显示的效果, 此效果仅供参考, 因为还有可能受浏览器的不同而显示效果不同。</p>
<figure><img src="/assets/browser-debug-moblie-1.png" alt="移动端开发调试" tabindex="0" loading="lazy"><figcaption>移动端开发调试</figcaption></figure>
<br>
<figure><img src="/assets/browser-debug-moblie-2.png" alt="移动端开发调试" tabindex="0" loading="lazy"><figcaption>移动端开发调试</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/open-browser-debug-1.png" type="image/png"/>
    </item>
    <item>
      <title>Emmet 用法举例</title>
      <link>https://vxhly.github.io/views/manual/emmet-usage-examples.html</link>
      <guid>https://vxhly.github.io/views/manual/emmet-usage-examples.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Emmet 用法举例</source>
      <description>前言 Emmet 的前身是大名鼎鼎的 Zen coding。如果你从事 Web 前端开发的话, 对该插件一定不会陌生。它使用仿 CSS 选择器的语法来代码, 大大提高了 HTML/CSS 代码编写的速度。</description>
      <category>manual</category>
      <pubDate>Thu, 04 Aug 2016 13:20:34 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Emmet 的前身是大名鼎鼎的 Zen coding。如果你从事 Web 前端开发的话, 对该插件一定不会陌生。它使用仿 CSS 选择器的语法来代码, 大大提高了 HTML/CSS 代码编写的速度。</p>
</div>
<!-- more -->
<h2> 子元素: &gt;</h2>
<h3> 例子</h3>
<p><code>nav&gt;ul&gt;li</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 兄弟元素: +</h2>
<h3> 例子</h3>
<p><code>div+p+bq</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 在某个元素之上: ^</h2>
<h3> 例子一</h3>
<p><code>div+div&gt;p&gt;span+em^bq</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 例子二</h3>
<p><code>div+div&gt;p&gt;span+em^^bq</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 分为一组: ()</h2>
<h3> 例子一</h3>
<p><code>div&gt;(header&gt;ul&gt;li*2&gt;a)+footer&gt;p</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 例子二</h3>
<p><code>(div&gt;dl&gt;(dt+dd)*3)+footer&gt;p</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 倍增元素: *</h2>
<h3> 例子</h3>
<p><code>ul&gt;li*5</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 项目数字递增: $</h2>
<h3> 例子一</h3>
<p><code>ul&gt;li.item$*5</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 例子二</h3>
<p><code>h$[title=item$]{Header $}*3</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 例子三</h3>
<p><code>ul&gt;li.item$*5</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 例子四</h3>
<p><code>ul&gt;li.item$@-*5</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 例子五</h3>
<p><code>ul&gt;li.item$@3*5</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> ID 和 CLASS 属性</h2>
<h3> 例子一</h3>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 例子二</h3>
<p><code>.title</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 例子三</h3>
<p><code>footer#search.wide</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 例子四</h3>
<p><code>p.class1.class2.class3</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 自定义属性</h2>
<h3> 例子一</h3>
<p><code>p[title="Hello world"]</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 例子二</h3>
<p><code>td[rowspan=2 colspan=3 title]</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 例子三</h3>
<p><code>[a="value1" b="value2"]</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 文本内容: {}</h2>
<h3> 例子一</h3>
<p><code>a{Click me}</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 例子二</h3>
<p><code>p&gt;{Click }+a{here}+{ to continue}</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 缺省标签名</h2>
<h3> 例子一</h3>
<p><code>.class1</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 例子二</h3>
<p><code>em&gt;.class1</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 例子三</h3>
<p><code>ul&gt;.class1</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 例子四</h3>
<p><code>table&gt;.row&gt;.col</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1> HTML</h1>
<h2> HTML 基本模板</h2>
<h3> doc</h3>
<p><code>扩展写法</code> <code>html&gt;(header&gt;meta[charset=UTF-8]+title{${1:Document}})+body</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> ! 或者 html:5</h3>
<p><code>扩展写法</code> <code>!!!+doc[lang=${lang}]</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> doc4</h3>
<p><code>扩展写法</code> <code>html&gt;(head&gt;meta[http-equiv="Content-Type" content="text/html;charset=${charset}"]+title{${1:Document}})+body</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> html:4t</h3>
<p><code>扩展写法</code> <code>!!!4t+doc4[lang=${lang}]</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> html:4s</h3>
<p><code>扩展写法</code> <code>!!!4s+doc4[lang=${lang}]</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> HTML 基本元素</h2>
<h3> A</h3>
<h4> a:link</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> a:mail</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> area</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> area:d</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> area:c</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> area:r</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> area:p</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> B</h3>
<h4> btn:r</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> btn:s</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> F</h3>
<h4> form:get</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> form:post</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> L</h3>
<h4> link</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> link:css</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> link:print</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> link:favicon</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> link:touch</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> I</h3>
<h4> img</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> inp</h4>
<p>这种写法也适用: <code>input:text input:t</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:hideen</h4>
<p>这种写法也适用: <code>input:h</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:search</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:email</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:url</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:password</h4>
<p>这种写法也适用: <code>input:p</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:datetime</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:date</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:datetime-local</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:month</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:week</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:time</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:number</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:color</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:checkbox</h4>
<p>这种写法也适用: <code>input:c</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:radio</h4>
<p>这种写法也适用: <code>input:r</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:range</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:file</h4>
<p>这种写法也适用: <code>input:f</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:submit</h4>
<p>这种写法也适用: <code>input:s</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:image</h4>
<p>这种写法也适用: <code>input:i</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:button</h4>
<p>这种写法也适用: <code>input:b</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> input:reset</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> M</h3>
<h4> meta:utf</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> meta:win</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> meta:vp</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> meta:compat</h4>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> menu:context</h4>
<p>这种写法也适用: <code>menu:c</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> menu:toolbar</h4>
<p>这种写法也适用: <code>menu:t</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1> CSS</h1>
<h2> 视觉格式</h2>
<h3> position</h3>
<ul>
<li><strong>pos</strong> =&gt; <code>position: relative;</code></li>
<li><strong>pos:s</strong> =&gt; <code>position: static;</code></li>
<li><strong>pos:a</strong> =&gt; <code>position: relative;</code></li>
<li><strong>pos:r</strong> =&gt; <code>position: relative;</code></li>
<li><strong>pos:f</strong> =&gt; <code>position: fixed;</code></li>
<li><strong>t</strong> =&gt; <code>top: ;</code></li>
<li><strong>t:a</strong> =&gt; <code>top: auto;</code></li>
<li><strong>l</strong> =&gt; <code>left: ;</code></li>
<li><strong>l:a</strong> =&gt; <code>left: auto;</code></li>
<li><strong>b</strong> =&gt; <code>bottom: ;</code></li>
<li><strong>b:a</strong> =&gt; <code>bottom: auto;</code></li>
<li><strong>r</strong> =&gt; <code>right: ;</code></li>
<li><strong>r:a</strong> =&gt; <code>right: auto;</code></li>
<li><strong>z</strong> =&gt; <code>z-indet: ;</code></li>
<li><strong>z:a</strong> =&gt; <code>z-indet: auto;</code></li>
</ul>
<h3> float</h3>
<ul>
<li><strong>fl</strong> =&gt; <code>float: left;</code></li>
<li><strong>fl:n</strong> =&gt; <code>float: none;</code></li>
<li><strong>fl:l</strong> =&gt; <code>float: left;</code></li>
<li><strong>fl:r</strong> =&gt; <code>float: right;</code></li>
<li><strong>cl</strong> =&gt; <code>clear: both;</code></li>
<li><strong>cl:n</strong> =&gt; <code>clear: none;</code></li>
<li><strong>cl:l</strong> =&gt; <code>clear: left;</code></li>
<li><strong>cl:r</strong> =&gt; <code>clear: right;</code></li>
<li><strong>cl:b</strong> =&gt; <code>clear: both;</code></li>
</ul>
<h3> dispaly</h3>
<ul>
<li><strong>d</strong> =&gt; <code>display: block;</code></li>
<li><strong>d:n</strong> =&gt; <code>display: none;</code></li>
<li><strong>d:b</strong> =&gt; <code>display: block;</code></li>
<li><strong>d:i</strong> =&gt; <code>display: inline;</code></li>
<li><strong>d:ib</strong> =&gt; <code>display: inline-block;</code></li>
<li><strong>d:f</strong> =&gt; <code>display: flex;</code></li>
<li><strong>d:if</strong> =&gt; <code>display: inline-flex;</code></li>
<li><strong>d:li</strong> =&gt; <code>display: list-item;</code></li>
<li><strong>d:ri</strong> =&gt; <code>display: run-in;</code></li>
<li><strong>d:cp</strong> =&gt; <code>display: compat;</code></li>
<li><strong>d:tb</strong> =&gt; <code>display: table;</code></li>
<li><strong>d:itb</strong> =&gt; <code>display: inline-table;</code></li>
<li><strong>d:tbcp</strong> =&gt; <code>display: table-caption;</code></li>
<li><strong>d:tbcl</strong> =&gt; <code>display: table-column;</code></li>
<li><strong>d:tbclg</strong> =&gt; <code>display: table-column-group;</code></li>
<li><strong>d:tbhg</strong> =&gt; <code>display: table-header-group;</code></li>
<li><strong>d:tbfg</strong> =&gt; <code>display: table-footer-group;</code></li>
<li><strong>d:tbr</strong> =&gt; <code>display: table-row;</code></li>
<li><strong>d:tbrg</strong> =&gt; <code>display: table-row-group;</code></li>
<li><strong>d:tbc</strong> =&gt; <code>display: table-cell;</code></li>
</ul>
<h3> visibility</h3>
<ul>
<li><strong>v</strong> =&gt; <code>visibility: hidden;</code></li>
<li><strong>v:v</strong> =&gt; <code>visibility: visible;</code></li>
<li><strong>v:h</strong> =&gt; <code>visibility: hidden;</code></li>
<li><strong>v:c</strong> =&gt; <code>visibility: collapse;</code></li>
</ul>
<h3> overflow</h3>
<ul>
<li><strong>ov</strong> =&gt; <code>overflow: hidden;</code></li>
<li><strong>ov:v</strong> =&gt; <code>overflow: visible;</code></li>
<li><strong>ov:h</strong> =&gt; <code>overflow: hidden;</code></li>
<li><strong>ov:s</strong> =&gt; <code>overflow: scroll;</code></li>
<li><strong>ov:a</strong> =&gt; <code>overflow: auto;</code></li>
<li><strong>ovx</strong> =&gt; <code>overflow-x: hidden;</code></li>
<li><strong>ovx:v</strong> =&gt; <code>overflow-x: visible;</code></li>
<li><strong>ovx:h</strong> =&gt; <code>overflow-x: hidden;</code></li>
<li><strong>ovx:s</strong> =&gt; <code>overflow-x: scroll;</code></li>
<li><strong>ovx:a</strong> =&gt; <code>overflow-x: auto;</code></li>
<li><strong>ovy</strong> =&gt; <code>overflow-x: hidden;</code></li>
<li><strong>ovy:v</strong> =&gt; <code>overflow-y: visible;</code></li>
<li><strong>ovy:h</strong> =&gt; <code>overflow-y: hidden;</code></li>
<li><strong>ovy:s</strong> =&gt; <code>overflow-y: scroll;</code></li>
<li><strong>ovy:a</strong> =&gt; <code>overflow-y: auto;</code></li>
<li><strong>ovs</strong> =&gt; <code>overflow-style: scrollbar;</code></li>
<li><strong>ovs:a</strong> =&gt; <code>overflow-style: auto;</code></li>
<li><strong>ovs:s</strong> =&gt; <code>overflow-style: scrollbar;</code></li>
<li><strong>ovs:p</strong> =&gt; <code>overflow-style: panner;</code></li>
<li><strong>ovs:m</strong> =&gt; <code>overflow-style: move;</code></li>
<li><strong>ovs:mq</strong> =&gt; <code>overflow-style: marquee;</code></li>
</ul>
<h3> clip</h3>
<ul>
<li><strong>cp</strong> =&gt; <code>clip: ;</code></li>
<li><strong>cp:a</strong> =&gt; <code>clip: auto;</code></li>
<li><strong>cp:r</strong> =&gt; <code>clip: rect(top right bottom left);</code></li>
</ul>
<h3> resize</h3>
<ul>
<li><strong>rsz</strong> =&gt; <code>resize: ;</code></li>
<li><strong>rsz:n</strong> =&gt; <code>resize: none;</code></li>
<li><strong>rsz:b</strong> =&gt; <code>resize: both;</code></li>
<li><strong>rsz:h</strong> =&gt; <code>resize: horizontal;</code></li>
<li><strong>rsz:v</strong> =&gt; <code>resize: vertical;</code></li>
</ul>
<h3> cursor</h3>
<ul>
<li><strong>cur</strong> =&gt; <code>cursor: pointer;</code></li>
<li><strong>cur:a</strong> =&gt; <code>cursor: auto;</code></li>
<li><strong>cur:d</strong> =&gt; <code>cursor: default;</code></li>
<li><strong>cur:c</strong> =&gt; <code>cursor: crosshair;</code></li>
<li><strong>cur:ha</strong> =&gt; <code>cursor: hand;</code></li>
<li><strong>cur:he</strong> =&gt; <code>cursor: help;</code></li>
<li><strong>cur:m</strong> =&gt; <code>cursor: move;</code></li>
<li><strong>cur:p</strong> =&gt; <code>cursor: pointer;</code></li>
<li><strong>cur:t</strong> =&gt; <code>cursor: text;</code></li>
</ul>
<h2> 外边距和内边距</h2>
<h3> margin &amp;&amp; padding</h3>
<ul>
<li><strong>m</strong> =&gt; <code>margin: ;</code></li>
<li><strong>m:a</strong> =&gt; <code>margin: auto;</code></li>
<li><strong>mt</strong> =&gt; <code>margin-top: ;</code></li>
<li><strong>mt:a</strong> =&gt; <code>margin-top: auto;</code></li>
<li><strong>mr</strong> =&gt; <code>margin-right: ;</code></li>
<li><strong>mr:a</strong> =&gt; <code>margin-right: auto;</code></li>
<li><strong>mb</strong> =&gt; <code>margin-bottom: ;</code></li>
<li><strong>mb:a</strong> =&gt; <code>margin-bottom: auto;</code></li>
<li><strong>ml</strong> =&gt; <code>margin-left: ;</code></li>
<li><strong>ml-a</strong> =&gt; <code>margin-left: auto;</code></li>
<li><strong>p</strong> =&gt; <code>padding: ;</code></li>
<li><strong>pt</strong> =&gt; <code>padding-top: ;</code></li>
<li><strong>pr</strong> =&gt; <code>padding-right: ;</code></li>
<li><strong>pb</strong> =&gt; <code>paddng-bottom: ;</code></li>
<li><strong>pl</strong> =&gt; <code>padding-left: ;</code></li>
</ul>
<h2> 盒子模型</h2>
<h3> box</h3>
<ul>
<li><strong>bxz</strong> =&gt; <code>box-sizing: border-box;</code></li>
<li><strong>bxz:cb</strong> =&gt; <code>box-sizing: content-box;</code></li>
<li><strong>bxz:bb</strong> =&gt; <code>box-sizing: border-box;</code></li>
<li><strong>bxsh</strong> =&gt; <code>box-shadow: inset hoff voff blur color;</code></li>
<li><strong>bxsh:r</strong> =&gt; <code>box-shadow: inset hoff voff blur spread rgb(0, 0, 0);</code></li>
<li><strong>bxsh:ra</strong> =&gt; <code>box-shadow: inset h v blur spread rgba(0, 0, 0, .5);</code></li>
<li><strong>bxsh:n</strong> =&gt; <code>box-shadow: none;</code></li>
</ul>
<h3> width &amp;&amp; hight</h3>
<ul>
<li><strong>w</strong> =&gt; <code>width: ;</code></li>
<li><strong>w:a</strong> =&gt; <code>width: auto;</code></li>
<li><strong>h</strong> =&gt; <code>hight: ;</code></li>
<li><strong>h:a</strong> =&gt; <code>hight: auto;</code></li>
<li><strong>maw</strong> =&gt; <code>max-width: ;</code></li>
<li><strong>maw:n</strong> =&gt; <code>max-width: none;</code></li>
<li><strong>mah</strong> =&gt; <code>max-hight: ;</code></li>
<li><strong>mah:n</strong> =&gt; <code>max-hight: none;</code></li>
<li><strong>miw</strong> =&gt; <code>min-width: ;</code></li>
<li><strong>mih</strong> =&gt; <code>min-hight: ;</code></li>
</ul>
<h2> 字体和文本</h2>
<h3> font</h3>
<ul>
<li><strong>f</strong> =&gt; <code>font: ;</code></li>
<li><strong>f+</strong> =&gt; <code>font: 1em Arial,sans-serif;</code></li>
<li><strong>fw</strong> =&gt; <code>font-weight: ;</code></li>
<li><strong>fw:n</strong> =&gt; <code>font-weight: none;</code></li>
<li><strong>fw:b</strong> =&gt; <code>font-weight: bold;</code></li>
<li><strong>fw:br</strong> =&gt; <code>font-weight: bolder;</code></li>
<li><strong>fw:lr</strong> =&gt; <code>font-weight: lighter;</code></li>
<li><strong>fs</strong> =&gt; <code>font-style: italic;</code></li>
<li><strong>fs:n</strong> =&gt; <code>font-style: normal;</code></li>
<li><strong>fs:i</strong> =&gt; <code>font-style: italic;</code></li>
<li><strong>fs:o</strong> =&gt; <code>font-style: oblique;</code></li>
<li><strong>fv</strong> =&gt; <code>font-variant: ;</code></li>
<li><strong>fv:n</strong> =&gt; <code>font-variant: normal;</code></li>
<li><strong>fv:sc</strong> =&gt; <code>font-variant: small-caps;</code></li>
<li><strong>fz</strong> =&gt; <code>font-size: ;</code></li>
<li><strong>fza</strong> =&gt; <code>font-size-adjust: ;</code></li>
<li><strong>fza:n</strong> =&gt; <code>font-size-adjust: none;</code></li>
<li><strong>ff</strong> =&gt; <code>font-family: ;</code></li>
<li><strong>ff:s</strong> =&gt; <code>font-family: serif;</code></li>
<li><strong>ff:ss</strong> =&gt; <code>font-family: sans-serif;</code></li>
<li><strong>ff:c</strong> =&gt; <code>font-family: cursive;</code></li>
<li><strong>ff:f</strong> =&gt; <code>font-family: fantasy;</code></li>
<li><strong>ff:m</strong> =&gt; <code>font-family: monospace;</code></li>
<li><strong>ff:a</strong> =&gt; <code>font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;</code></li>
<li><strong>fef</strong> =&gt; <code>font-effect: ;</code></li>
<li><strong>fef:n</strong> =&gt; <code>font-effect: none;</code></li>
<li><strong>fef:eg</strong> =&gt; <code>font-effect: engrave;</code></li>
<li><strong>fef:eb</strong> =&gt; <code>font-effect: emboss;</code></li>
<li><strong>fef:o</strong> =&gt; <code>font-effect: outline;</code></li>
<li><strong>@i</strong> =&gt; <code>@import url();</code></li>
<li><strong>@f</strong> =&gt;</li>
</ul>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><strong>@f+</strong> =&gt;</li>
</ul>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> vertical</h3>
<ul>
<li><strong>va</strong> =&gt; <code>vertical-align: top;</code></li>
<li><strong>va:sup</strong> =&gt; <code>vertical-align: super;</code></li>
<li><strong>va:t</strong> =&gt; <code>vertical-align: top;</code></li>
<li><strong>va:tt</strong> =&gt; <code>vertical-align: text-top;</code></li>
<li><strong>va:m</strong> =&gt; <code>vertical-align: middle;</code></li>
<li><strong>va:bl</strong> =&gt; <code>vertical-align: baseline;</code></li>
<li><strong>va:b</strong> =&gt; <code>vertical-align: bottom;</code></li>
<li><strong>va:tb</strong> =&gt; <code>vertical-align: text-bottom;</code></li>
<li><strong>va:sub</strong> =&gt; <code>vertical-align: sub;</code></li>
</ul>
<h3> text</h3>
<ul>
<li><strong>ta</strong> =&gt; <code>text-align: left;</code></li>
<li><strong>ta:l</strong> =&gt; <code>text-align: left;</code></li>
<li><strong>ta:c</strong> =&gt; <code>text-align: center;</code></li>
<li><strong>ta:r</strong> =&gt; <code>text-align: right;</code></li>
<li><strong>ta:j</strong> =&gt; <code>text-align: justify;</code></li>
<li><strong>ta-lst</strong> =&gt; <code>text-align-last: ;</code></li>
<li><strong>tal:a</strong> =&gt; <code>text-align-last: auto;</code></li>
<li><strong>tal:l</strong> =&gt; <code>text-align-last: left;</code></li>
<li><strong>tal:c</strong> =&gt; <code>text-align-last: center;</code></li>
<li><strong>tal:r</strong> =&gt; <code>text-align-last: right;</code></li>
<li><strong>tov</strong> =&gt; <code>text-overflow: ellipsis;</code></li>
<li><strong>tov:c</strong> =&gt; <code>text-overflow: clip;</code></li>
<li><strong>tov:e</strong> =&gt; <code>text-overflow: ellipsis;</code></li>
<li><strong>td</strong> =&gt; <code>text-decoration: none;</code></li>
<li><strong>td:n</strong> =&gt; <code>text-decoration: none;</code></li>
<li><strong>td:u</strong> =&gt; <code>text-decoration: underline;</code></li>
<li><strong>td:o</strong> =&gt; <code>text-decoration: overline;</code></li>
<li><strong>td:l</strong> =&gt; <code>text-decoration: line;</code></li>
</ul>
<h2> CSS 3 动画</h2>
<h3> keyframes</h3>
<ul>
<li><strong>@kf</strong> =&gt;</li>
</ul>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> animation</h3>
<ul>
<li><strong>anim-</strong> =&gt; <code>animation: name duration timing-function delay iteration-count direction fill-mode;</code></li>
<li><strong>animdel</strong> =&gt; <code>animation-delay: time;</code></li>
<li><strong>animdir</strong> =&gt; <code>animation-direction: normal;</code></li>
<li><strong>animdir:a</strong> =&gt; <code>animation-direction: alternate;</code></li>
<li><strong>animdir:ar</strong> =&gt; <code>animation-direction: alternate;</code></li>
<li><strong>animdir:n</strong> =&gt; <code>animation-direction: normal;</code></li>
<li><strong>animdir:r</strong> =&gt; <code>animation-direction: reverse;</code></li>
</ul>
<h3> transform</h3>
<ul>
<li><strong>trf</strong> =&gt; <code>transform: ;</code></li>
<li><strong>trf:r</strong> =&gt; <code>transform: rotate(angle);</code></li>
<li><strong>trf:sc</strong> =&gt; <code>transform: scale(x, y);</code></li>
<li><strong>trf:scx</strong> =&gt; <code>transform: scale(x);</code></li>
<li><strong>trf:scy</strong> =&gt; <code>transform: scale(y);</code></li>
<li><strong>trf:skx</strong> =&gt; <code>transform: skewX(angle);</code></li>
<li><strong>trf:sky</strong> =&gt; <code>transform: skewY(angle);</code></li>
<li><strong>trf:t</strong> =&gt; <code>transform: translate(x, y);</code></li>
<li><strong>trf:tx</strong> =&gt; <code>transform: translateX(x);</code></li>
<li><strong>trf:ty</strong> =&gt; <code>transform: translateY(y);</code></li>
<li><strong>trfo</strong> =&gt; <code>transform-origin: ;</code></li>
<li><strong>trfs</strong> =&gt; <code>transform-style: preserve-3d;</code></li>
</ul>
<h3> transition</h3>
<ul>
<li><strong>trs</strong> =&gt; <code>transition: prop time;</code></li>
<li><strong>trsde</strong> =&gt; <code>transition-delay: time;</code></li>
<li><strong>trsdu</strong> =&gt; <code>transition-duration: time;</code></li>
<li><strong>trsp</strong> =&gt; <code>transition-property: prop;</code></li>
<li><strong>trstf</strong> =&gt; <code>transition-timing-function: tfunc;</code> # 更多用法实例</li>
</ul>
<p>在线查看查看 <a href="http://oss-blog.test.upcdn.net/emmet-usage-examples.jpg" target="_blank" rel="noopener noreferrer">emmet-usage-examples.jpg</a><br> 请下载查看 <a href="http://oss-blog.test.upcdn.net/emmet-usage-examples.jpg?attname=" target="_blank" rel="noopener noreferrer">emmet-usage-examples.jpg</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Flexbox 布局</title>
      <link>https://vxhly.github.io/views/manual/flexbox-layout.html</link>
      <guid>https://vxhly.github.io/views/manual/flexbox-layout.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Flexbox 布局</source>
      <description>前言 Flex 布局, 可以简便、完整、响应式地实现各种页面布局, 目前, 它已经得到了所有浏览器的支持。</description>
      <category>manual</category>
      <pubDate>Thu, 11 Aug 2016 14:27:56 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Flex 布局, 可以简便、完整、响应式地实现各种页面布局, 目前, 它已经得到了所有浏览器的支持。</p>
</div>
<!-- more -->
<h2> GithHub 上优秀的样式表插件</h2>
<p><a href="http://github.com/vxhly/scss-flex" target="_blank" rel="noopener noreferrer">scss-flex.css</a><br> <a href="http://github.com/lzxb/flex.css" target="_blank" rel="noopener noreferrer">flex.css</a></p>
<h2> 例子</h2>
<p><a href="https://codepen.io/vxhly/pen/NXwejK" target="_blank" rel="noopener noreferrer">flexbox 布局例子</a></p>
<h2> Flex 布局是什么？</h2>
<p>Flex 是 Flexible Box 的缩写, 意为"弹性布局", 用来为盒状模型提供最大的灵活性。 任何一个容器都可以指定为 Flex 布局。</p>
<h3> 启用 Flex 布局</h3>
<p>设为 Flex 布局以后, 子元素的 float、clear 和 vertical-align 属性将失效</p>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 基本概念</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>采用 Flex 布局的元素, 称为 Flex 容器（flex container）, 简称"容器"。它的所有子元素自动成为容器成员, 称为 Flex 项目（flex item）, 简称"项目"。</p>
</div>
<figure><img src="/assets/flex-layout.png" alt="flex layout" tabindex="0" loading="lazy"><figcaption>flex layout</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>容器默认存在两根轴: 水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做 <code>main start</code> , 结束位置叫做 <code>main end</code> ；交叉轴的开始位置叫做 <code>cross start</code> , 结束位置叫做 <code>cross end</code> 。<br> 项目默认沿主轴排列。单个项目占据的主轴空间叫做 <code>main size</code> , 占据的交叉轴空间叫做 <code>cross size</code> 。</p>
</div>
<h2> 容器的属性</h2>
<p>以下 6 个属性设置在容器上。</p>
<ul>
<li><strong>flex-direction</strong></li>
<li><strong>flex-wrap</strong></li>
<li><strong>flex-flow</strong></li>
<li><strong>justify-content</strong></li>
<li><strong>align-items</strong></li>
<li><strong>align-content</strong></li>
</ul>
<h3> flex-direction</h3>
<div class="hint-container tip">
<p class="hint-container-title">属性作用</p>
<p><code>flex-direction</code> 属性决定主轴的方向（即项目的排列方向）。</p>
</div>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 四个值分别的作用</h4>
<ul>
<li>row（默认值）主轴为水平方向, 起点在左端。</li>
<li>row-reverse: 主轴为水平方向, 起点在右端。</li>
<li>column: 主轴为垂直方向, 起点在上沿。</li>
<li>column-reverse: 主轴为垂直方向, 起点在下沿。</li>
</ul>
<h3> flex-wrap</h3>
<div class="hint-container tip">
<p class="hint-container-title">属性作用</p>
<p><code>flex-wrap</code> 属性定义, 如果一条轴线排不下, 如何换行。默认情况下, 项目都排在一条线（又称"轴线"）上。</p>
</div>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 三个值分别的作用</h4>
<ul>
<li>nowrap（默认）不换行。</li>
<li>wrap: 换行, 第一行在上方。</li>
<li>wrap-reverse: 换行, 第一行在下方。</li>
</ul>
<h3> flex-flow</h3>
<div class="hint-container tip">
<p class="hint-container-title">属性作用</p>
<p><code>flex-flow</code> 属性是 <code>flex-direction</code> 属性和 <code>flex-wrap</code> 属性的简写形式, 默认值为 <code>row nowrap</code> 。</p>
</div>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> justify-content</h3>
<div class="hint-container tip">
<p class="hint-container-title">属性作用</p>
<p><code>justify-content</code> 属性定义了项目在主轴上的对齐方式。</p>
</div>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/flex-justify.png" alt="justify-content" tabindex="0" loading="lazy"><figcaption>justify-content</figcaption></figure>
<h4> 五个值分别的作用</h4>
<ul>
<li>flex-start（默认值）左对齐</li>
<li>flex-end: 右对齐</li>
<li>center: 居中</li>
<li>space-between: 两端对齐, 项目之间的间隔都相等。</li>
<li>space-around: 每个项目两侧的间隔相等。所以, 项目之间的间隔比项目与边框的间隔大一倍。</li>
</ul>
<h3> align-items</h3>
<div class="hint-container tip">
<p class="hint-container-title">属性作用</p>
<p><code>align-items</code> 属性定义项目在交叉轴上如何对齐。</p>
</div>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/flex-align.png" alt="align-items" tabindex="0" loading="lazy"><figcaption>align-items</figcaption></figure>
<h4> 五个值分别的作用</h4>
<ul>
<li>flex-start: 交叉轴的起点对齐。</li>
<li>flex-end: 交叉轴的终点对齐。</li>
<li>center: 交叉轴的中点对齐。</li>
<li>baseline: 项目的第一行文字的基线对齐。</li>
<li>stretch（默认值）如果项目未设置高度或设为 auto, 将占满整个容器的高度。</li>
</ul>
<h3> align-content</h3>
<div class="hint-container tip">
<p class="hint-container-title">属性作用</p>
<p><code>align-content</code> 属性定义了多根轴线的对齐方式。如果项目只有一根轴线, 该属性不起作用。</p>
</div>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/flex-content.png" alt="align-content" tabindex="0" loading="lazy"><figcaption>align-content</figcaption></figure>
<h4> 六个值分别的作用</h4>
<ul>
<li>flex-start: 与交叉轴的起点对齐。</li>
<li>flex-end: 与交叉轴的终点对齐。</li>
<li>center: 与交叉轴的中点对齐。</li>
<li>space-between: 与交叉轴两端对齐, 轴线之间的间隔平均分布。</li>
<li>space-around: 每根轴线两侧的间隔都相等。所以, 轴线之间的间隔比轴线与边框的间隔大一倍。</li>
<li>stretch（默认值）轴线占满整个交叉轴。</li>
</ul>
<h2> 项目的属性</h2>
<p>以下 6 个属性设置在项目上。</p>
<ul>
<li><strong>order</strong></li>
<li><strong>flex-grow</strong></li>
<li><strong>flex-shrink</strong></li>
<li><strong>flex-basis</strong></li>
<li><strong>flex</strong></li>
<li><strong>align-self</strong></li>
</ul>
<h3> order</h3>
<div class="hint-container tip">
<p class="hint-container-title">属性作用</p>
<p><code>order</code> 属性定义项目的排列顺序。数值越小, 排列越靠前, 默认为 0。</p>
</div>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/flex-order.png" alt="order" tabindex="0" loading="lazy"><figcaption>order</figcaption></figure>
<h3> flex-grow</h3>
<div class="hint-container tip">
<p class="hint-container-title">属性作用</p>
<p><code>flex-grow</code> 属性定义项目的放大比例, 默认为 0, 即如果存在剩余空间, 也不放大。</p>
</div>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/flex-grow.png" alt="flex-grow" tabindex="0" loading="lazy"><figcaption>flex-grow</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果所有项目的 <code>flex-grow</code> 属性都为 1, 则它们将等分剩余空间（如果有的话）。如果一个项目的 <code>flex-grow</code> 属性为 2, 其他项目都为 1, 则前者占据的剩余空间将比其他项多一倍。</p>
</div>
<h3> flex-shrink</h3>
<div class="hint-container tip">
<p class="hint-container-title">属性作用</p>
<p><code>flex-shrink</code> 属性定义了项目的缩小比例, 默认为 1, 即如果空间不足, 该项目将缩小。剩余空间将比其他项多一倍。</p>
</div>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/flex-shrink.jpg" alt="flex-shrink" tabindex="0" loading="lazy"><figcaption>flex-shrink</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果所有项目的 <code>flex-shrink</code> 属性都为 1, 当空间不足时, 都将等比例缩小。如果一个项目的 flex-shrink 属性为 0, 其他项目都为 1, 则空间不足时, 前者不缩小。负值对该属性无效。</p>
</div>
<h3> flex-basis</h3>
<div class="hint-container tip">
<p class="hint-container-title">属性作用</p>
<p><code>flex-basis</code> 属性定义了在分配多余空间之前, 项目占据的主轴空间（main size）。浏览器根据这个属性, 计算主轴是否有多余空间。它的默认值为 auto, 即项目的本来大小。</p>
</div>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>它可以设为跟 <code>width</code> 或 <code>height</code> 属性一样的值（比如 350px）, 则项目将占据固定空间。</p>
<h3> flex</h3>
<div class="hint-container tip">
<p class="hint-container-title">属性作用</p>
<p><code>flex</code> 属性是 <code>flex-grow</code> , <code>flex-shrink</code> 和 <code>flex-basis</code> 的简写, 默认值为 <code>0 1 auto</code> 。后两个属性可选。</p>
</div>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>该属性有两个快捷值: <code>auto (1 1 auto)</code> 和 <code>none (0 0 auto)</code> 。 建议优先使用这个属性, 而不是单独写三个分离的属性, 因为浏览器会推算相关值。</p>
</div>
<h3> align-self</h3>
<div class="hint-container tip">
<p class="hint-container-title">属性作用</p>
<p><code>align-self</code> 属性允许单个项目有与其他项目不一样的对齐方式, 可覆盖 <code>align-items</code> 属性。默认值为 <code>auto</code> , 表示继承父元素的 <code>align-items</code> 属性, 如果没有父元素, 则等同于 <code>stretch</code> 。 :::</p>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="/assets/flex-self.png" alt="align-self" tabindex="0" loading="lazy"><figcaption>align-self</figcaption></figure>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>该属性可能取六个值, 除了 <code>auto</code> , 其他都与 <code>align-items</code> 属性完全一致。</p>
</div>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/flex-layout.png" type="image/png"/>
    </item>
    <item>
      <title>git commit 规范指南</title>
      <link>https://vxhly.github.io/views/manual/git-commit-specification-guide.html</link>
      <guid>https://vxhly.github.io/views/manual/git-commit-specification-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">git commit 规范指南</source>
      <description>前言 目前, 社区有多种 Commit message 的写法规范。本文介绍 Angular 规范 是目前使用最广的写法, 比较合理和系统化, 并且有配套的工具。前前端框架 Angular.js 采用的就是该规范。</description>
      <category>manual</category>
      <pubDate>Mon, 14 May 2018 14:25:43 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>目前, 社区有多种 Commit message 的写法规范。本文介绍 <a href="https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#heading=h.greljkmo14y0" target="_blank" rel="noopener noreferrer">Angular 规范</a> 是目前使用最广的写法, 比较合理和系统化, 并且有配套的工具。前前端框架 <a href="https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#toc10" target="_blank" rel="noopener noreferrer">Angular.js</a> 采用的就是该规范。</p>
</div>
<!-- more -->
<h2> Commit message 的作用</h2>
<h3> 提供更多的历史信息, 方便快速浏览。</h3>
<p>比如, 下面的命令显示上次发布后的变动, 每个 commit 占据一行。你只看行首, 就知道某次 commit 的目的。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 可以过滤某些 commit（比如文档改动）, 便于快速查找信息</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 可以直接从 commit 生成 Change log</h3>
<p>Change Log 是发布新版本时, 用来说明与上一个版本差异的文档, 详见后文</p>
<figure><img src="/assets/git-commit-1.png" alt="Change Log" tabindex="0" loading="lazy"><figcaption>Change Log</figcaption></figure>
<h3> 其他优点</h3>
<ul>
<li>可读性好, 清晰, 不必深入看代码即可了解当前 commit 的作用。</li>
<li>为 Code Reviewing 做准备</li>
<li>方便跟踪工程历史</li>
<li>让其他的开发者在运行 git blame 的时候想跪谢</li>
<li>提高项目的整体质量, 提高个人工程素质</li>
</ul>
<h2> Commit message 的格式</h2>
<p>每次提交, Commit message 都包括三个部分: header, body 和 footer。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中, header 是必需的, body 和 footer 可以省略。 不管是哪一个部分, 任何一行都不得超过 72 个字符（或 100 个字符）。这是为了避免自动换行影响美观。</p>
<h3> Header</h3>
<p>Header 部分只有一行, 包括三个字段: type（必需）、scope（可选）和 subject（必需）。</p>
<h4> type</h4>
<p>用于说明 commit 的类别, 只允许使用下面 7 个标识。</p>
<ul>
<li><strong>feat</strong>: 一项新功能</li>
<li><strong>fix</strong>: 修复一个 bug</li>
<li><strong>docs</strong>: 仅仅修改文档（documentation）</li>
<li><strong>style</strong>: 不影响代码含义的更改（空格, 格式, 缺少分号等）</li>
<li><strong>refactor</strong>: 重构（即不是新增功能, 也不是修改 bug 的代码变动）</li>
<li><strong>perf</strong>: 改进性能的代码更改</li>
<li><strong>test</strong>: 添加缺失测试或更正现有测试</li>
<li><strong>build</strong>: 影响构建系统或外部依赖项的更改（示例范围: gulp, broccoli, npm）</li>
<li><strong>ci</strong>: 对 CI 配置文件和脚本的更改（示例范围: Travis, Circle, BrowserStack, SauceLabs）</li>
<li><strong>chore</strong>: 其他不修改 src 或测试文件的更改</li>
<li><strong>revert</strong>: 恢复之前的提交（即回滚）</li>
</ul>
<p>如果 type 为 <code>feat</code> 和 <code>fix</code> , 则该 commit 将肯定出现在 Change log 之中。其他情况（docs、chore、style、refactor、test）由你决定, 要不要放入 Change log, 建议是不要。</p>
<h4> scope</h4>
<p>scope 用于说明 commit 影响的范围, 比如数据层、控制层、视图层等等, 视项目不同而不同。</p>
<p>例如在 Angular, 可以是 $location, $browser, $compile, $rootScope, ngHref, ngClick, ngView 等。</p>
<p>如果你的修改影响了不止一个 scope, 你可以使用 <code>*</code> 代替。</p>
<h4> subject</h4>
<p>subject 是 commit 目的的简短描述, 不超过 50 个字符。</p>
<p>其他注意事项:</p>
<ul>
<li>以动词开头, 使用第一人称现在时, 比如 change, 而不是 changed 或 changes</li>
<li>第一个字母小写</li>
<li>结尾不加句号（.）</li>
</ul>
<h3> Body</h3>
<p>Body 部分是对本次 commit 的详细描述, 可以分成多行。下面是一个范例。</p>
<div class="language-markdown line-numbers-mode" data-ext="md"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>有两个注意点:</p>
<ul>
<li>使用第一人称现在时, 比如使用 change 而不是 changed 或 changes。</li>
<li>永远别忘了第 2 行是空行</li>
<li>应该说明代码变动的动机, 以及与以前行为的对比。</li>
</ul>
<h3> Footer</h3>
<p>Footer 部分只用于以下两种情况:</p>
<h4> 不兼容变动</h4>
<p>如果当前代码与上一个版本不兼容, 则 Footer 部分以 BREAKING CHANGE 开头, 后面是对变动的描述、以及变动理由和迁移方法。</p>
<div class="language-markdown line-numbers-mode" data-ext="md"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 关闭 Issue</h4>
<p>如果当前 commit 针对某个 issue, 那么可以在 Footer 部分关闭这个 issue 。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> Revert</h4>
<p>还有一种特殊情况, 如果当前 commit 用于撤销以前的 commit, 则必须以 revert: 开头, 后面跟着被撤销 Commit 的 Header。</p>
<div class="language-markdown line-numbers-mode" data-ext="md"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Body 部分的格式是固定的, 必须写成 <code>This reverts commit &lt;hash&gt;</code> ., 其中的 hash 是被撤销 commit 的 SHA 标识符。</p>
<p>如果当前 commit 与被撤销的 commit, 在同一个发布（release）里面, 那么它们都不会出现在 Change log 里面。如果两者在不同的发布, 那么当前 commit, 会出现在 Change log 的 Reverts 小标题下面。</p>
<h2> Commitizen</h2>
<p>可以使用典型的 git 工作流程或通过使用 CLI 向导 Commitizen 来添加提交消息格式。</p>
<p>安装</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后, 在项目目录里, 运行下面的命令, 使其支持 Angular 的 Commit message 格式。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以后, 凡是用到 <code>git commit</code> 命令, 一律改为使用 <code>git cz</code> 。这时, 就会出现选项, 用来生成符合格式的 Commit message。</p>
<h2> 生成 Change log</h2>
<p>如果你的所有 Commit 都符合 Angular 格式, 那么发布新版本时, Change log 就可以用脚本自动生成。生成的文档包括以下三个部分:</p>
<div class="language-markdown line-numbers-mode" data-ext="md"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个部分都会罗列相关的 commit , 并且有指向这些 commit 的链接。当然, 生成的文档允许手动修改, 所以发布前, 你还可以添加其他内容。</p>
<p><a href="https://github.com/ajoslin/conventional-changelog" target="_blank" rel="noopener noreferrer">conventional-changelog</a> 就是生成 Change log 的工具, 运行下面的命令即可。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然你也可以在你的 <code>package.json</code> 中添加快捷 script</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/git-commit-1.png" type="image/png"/>
    </item>
    <item>
      <title>Git 远程推送配置</title>
      <link>https://vxhly.github.io/views/manual/git-push-setting.html</link>
      <guid>https://vxhly.github.io/views/manual/git-push-setting.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Git 远程推送配置</source>
      <description>前言 Git 是一个开源的分布式版本控制系统, 可以有效、高速的处理从很小到非常大的项目版本管理。</description>
      <category>manual</category>
      <pubDate>Sun, 31 Jul 2016 16:09:21 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Git 是一个开源的分布式版本控制系统, 可以有效、高速的处理从很小到非常大的项目版本管理。</p>
</div>
<!-- more -->
<h2> 安装 Git</h2>
<p>如果你的系统还没有 Git, 请通过以下命令安装</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 创建帐号</h2>
<p>创建你的 GitHub 帐号, 或者 Git@OSC 帐号</p>
<p><a href="http://github.com/" target="_blank" rel="noopener noreferrer">GitHub</a> 链接<br> <a href="http://git.oschina.net/" target="_blank" rel="noopener noreferrer">Git@OSC</a> 链接</p>
<h2> liunx 创建 SSH 密钥</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 添加 public key</h3>
<p>查看你的 public key, 并把它添加到您的账户中</p>
<p>如 <a href="http://github.com/settings/keys" target="_blank" rel="noopener noreferrer">GitHub key</a> 如 <a href="http://git.oschina.net/profile/sshkeys" target="_blank" rel="noopener noreferrer">Git@OSC key</a></p>
<p>使用以下命令查看</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 测试验证是否成功</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回你在 <code>GitHub</code> 或 <code>Git@OSC</code> 上注册的用户名代表成功。</p>
<h2> GitHub 或 Git@OSC 上创建项目</h2>
<p><a href="http://github.com/" target="_blank" rel="noopener noreferrer">GitHub</a> 链接<br> <a href="http://git.oschina.net/" target="_blank" rel="noopener noreferrer">Git@OSC</a> 链接</p>
<h2> 本地配置</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>尽量保持你的名字和你的邮箱和 GitHub 或 Git@OSC 的注册一致。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 配置大小写敏感</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>在 Git 中默认是不区分大小的, 因此当你修改了文件名的大小写后, git 并不会认为你有修改哦, 使用下面的配置可开启大小写敏感</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 本地多个 ssh-key 的配置</h2>
<p>在 <code>.ssh</code> 目录下面创建名为 <code>config</code> 的配置文件, 配置文件内容如下</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>测试连接</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 常用命令</h2>
<h3> 进入项目目录, 初始化</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 添加项目至本地仓库</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 提交并备注</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 解决冲突</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 强制覆盖本地代码（更新本地源）</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 创建一个新的标签并提交</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 查看本地标签</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 删除远程 tag</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 获取远程 tag</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 修改 remote</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 查看远程分支</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 查看本地分支</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 创建本地分支</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 创建一个空分支</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 删除远程分支</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 本地分支推送到远程分支</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 切换分支</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 合并分支</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果分支合并时出现了冲突, 那么只能强上了</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> submodule</h3>
<p>当项目越来越庞大之后, 不可避免的要拆分成多个子模块, 我们希望各个子模块有独立的版本管理, 并且由专门的人去维护, 这时候我们就要用到 git 的 submodule 功能。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除子模块</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改模块的 URL</p>
<ol>
<li>修改'.gitmodules'文件中对应模块的”url“属性;</li>
<li>使用 <code>git submodule sync</code> 命令, 将新的 URL 更新到文件 <code>.git/config</code> # git 中配置 autocrlf</li>
</ol>
<h2> 高级用法</h2>
<h3> 批量修改历史 commit 的用户名和邮箱</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 换行符</h2>
<h3> 源文件中是换行符是 LF</h3>
<p>如果你的源文件中是换行符是 LF, 而 <code>autocrlf=true</code> , 此时 <code>Git add .</code> 就会遇到 <code>fatal: LF would be replaced by CRLF</code> 的错误。有两个解决办法:</p>
<ol>
<li>将你的源文件中的 LF 转为 CRLF 即可【推荐】</li>
<li>将 autocrlf 设置为 false</li>
</ol>
<h3> 源文件中是换行符是 CRLF</h3>
<p>如果你的源文件中是换行符是 CRLF, 而 <code>autocrlf=input</code> , 此时 <code>Git add .</code> 也会遇到 <code>fatal: CRLF would be replaced by LF</code> 的错误。有两个解决办法:</p>
<ol>
<li>将你源文件中的 CRLF 转为 LF【推荐】</li>
<li>将 autocrlf 设置为 true 或者 false</li>
</ol>
<h2> core.autocrlf</h2>
<p>Git 可以在你提交时自动地把行结束符 CRLF 转换成 LF, 而在签出代码时把 LF 转换成 CRLF。用 core.autocrlf 来打开此项功能, 如果是在 Windows 系统上, 把它设置成 true, 这样当签出代码时, LF 会被转换成 CRLF:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Linux 或 Mac 系统使用 LF 作为行结束符, 因此你不想 Git 在签出文件时进行自动的转换；当一个以 CRLF 为行结束符的文件不小心被引入时你肯定想进行修正, 把 core.autocrlf 设置成 input 来告诉 Git 在提交时把 CRLF 转换成 LF, 签出时不转换:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样会在 Windows 系统上的签出文件中保留 CRLF, 会在 Mac 和 Linux 系统上, 包括仓库中保留 LF。</p>
<p>如果你是 Windows 程序员, 且正在开发仅运行在 Windows 上的项目, 可以设置 false 取消此功能, 把回车符记录在库中:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 建议</h2>
<p>在 Mac/Liunx 上设置 <code>autocrlf = input</code> , 在 Windows 上设置 autocrlf = true（默认值）。</p>
<p>Windows: （true） 提交时, 将 CRLF 转成 LF 再提交；切出时, 自动将 LF 转为 CRLF;</p>
<p>MAC/Linux: (input) 提交时, 将 CRLF 转成 LF 再提交；切出时, 保持 LF 即可</p>
<p>这样即可保证仓库中永远都是 LF. 而且在 Windows 工作空间都是 CRLF, 在 Mac/linux 工作空间都是 LF</p>
]]></content:encoded>
    </item>
    <item>
      <title>Gulp 使用指南</title>
      <link>https://vxhly.github.io/views/manual/gulp-usage-guide.html</link>
      <guid>https://vxhly.github.io/views/manual/gulp-usage-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Gulp 使用指南</source>
      <description>前言 本文主要介绍如何使用 Gulp.js, 来帮助你构建一个自动化的前端开发流程。总结并归类自身使用中所遇到的方法、问题, 便于新人上手和理解, 同时也作为一份 Gulp 参考文档来使用, 让你对 Gulp 有个更深入的了解。</description>
      <category>manual</category>
      <pubDate>Fri, 28 Oct 2016 19:06:15 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本文主要介绍如何使用 Gulp.js, 来帮助你构建一个自动化的前端开发流程。总结并归类自身使用中所遇到的方法、问题, 便于新人上手和理解, 同时也作为一份 Gulp 参考文档来使用, 让你对 Gulp 有个更深入的了解。</p>
</div>
<!-- more -->
<h2> Gulp 是什么</h2>
<p>Gulp 是基于 <code>Node.js</code> 的一个构建工具（自动任务运行器）, 开发者可以使用它构建自动化工作流程（前端集成开发环境）。一些常见、重复的任务, 例如: 网页自动刷新、CSS 预处理、代码检测、压缩图片、等等, 只需用简单的命令就能全部完成。使用它, 可以简化工作, 让你把重点放在功能开发上；同时减少人为失误, 提高开发效率和项目质量, 让专注更为专注。如果你之前接触过 Grunt, 那上手 Gulp 就会觉得非常容易理解。</p>
<h2> 为什么使用 Gulp 而不使用 Grunt</h2>
<p>构建前端自动化的工具有很多, 如: <code>Grunt</code> , <code>Brunch</code> , <code>Broccoli</code> 等, 而目前过内最流行的属于 Grunt, 之前我也在用使用, 那为什么选择 Gulp 来代替 Grunt？</p>
<p>简单的总结一下, 有三点:</p>
<ul>
<li>简洁: Gulp 侧重 <code>“代码优于配置”(code over configuration)</code> 。最直观的感受, 更为简单和清晰, 不需要像 Grunt 一样写一堆庞大的配置文件。</li>
<li>高效: Gulp 基于 <code>Node Streams（流</code> ）来构建任务, 避免磁盘反复 <code>I/O（读取/写入）</code> 。每个任务都是单独执行（坚持做一件事并且做好它）, 这使得它速度更快、更为纯粹。</li>
<li>易学: Gulp 核心 API 只有 4 个。简洁的 API 易于上手, 学习过程比较平滑。</li>
</ul>
<h2> Gulp 核心 API</h2>
<p>Gulp 的核心 API 只有 4 个: <code>src</code> 、 <code>dest</code> 、 <code>task</code> 、 <code>watch</code></p>
<ul>
<li><code>gulp.src(globs[, options])</code> =&gt; 指明源文件路径。<strong>globs</strong>: 路径模式匹配; <strong>options</strong>: 可选参数；</li>
<li><code>gulp.dest(path[, options])</code> =&gt; 指明处理后的文件输出路径。<strong>path</strong>: 路径（一个任务可以有多个输出路径）；<strong>options</strong>: 可选参数；</li>
<li><code>gulp.task(name[, deps], fn)</code> =&gt; 注册任务。<strong>name</strong>: 任务名称（通过 gulp name 来执行这个任务）; <strong>deps</strong>: 可选的数组, 在本任务运行中所需要所依赖的其他任务（当前任务在依赖任务执行完毕后才会执行）; <strong>fn</strong>: 任务函数（function 方法）；</li>
<li><code>gulp.watch(glob [, opts], tasks)</code> =&gt; 监视文件的变化并运行相应的任务。<strong>glob</strong>: 路径模式匹配; <strong>opts</strong>: 可以选配置对象; <strong>taks</strong>: 执行的任务；</li>
</ul>
<p><a href="http://github.com/gulpjs/gulp/blob/master/docs/API.md" target="_blank" rel="noopener noreferrer">API 帮助文档</a></p>
<h2> 安装 Gulp</h2>
<p>安装 Gulp 之前要确定系统中安装了 Node.js, 有了之后只需创建一个工作目录, 以下操作均在工作目录下执行。</p>
<h3> 全局安装</h3>
<p>深入设置任务之前, 需先安装 gulp:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这会将 gulp 安装到全域环境下, 让你可以存取 gulp 的 CLI。</p>
<h3> 本地安装</h3>
<p>接着, 需要在本地的工在目录进行安装。切换至你的工作目录, 执行以下命令（当然执行之前要先确定该目录下有 <code>package.json</code> 文件, 如果没有可以通过 <code>npm init</code> 进行创建）</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上述指令将 gulp 安装到本地的工作目录, 并纪录于 <code>package.json</code> 中的 <code>devDependencies</code> 选项内。</p>
<h2> 安装 Gulp 插件</h2>
<h3> 推荐插件</h3>
<ul>
<li>静态服务器 (<a href="http://github.com/schickling/gulp-webserver" target="_blank" rel="noopener noreferrer">gulp-webserver</a>)</li>
<li>网页自动刷新 ([gulp-livereload][<a href="https://github.com/vohof/gulp-livereload" target="_blank" rel="noopener noreferrer">https://github.com/vohof/gulp-livereload</a>])</li>
<li>编译 <strong>Sass</strong> (<a href="http://github.com/sindresorhus/gulp-ruby-sass" target="_blank" rel="noopener noreferrer">gulp-ruby-sass</a>)</li>
<li><strong>Autoprefixer</strong> (<a href="http://github.com/Metrime/gulp-autoprefixer" target="_blank" rel="noopener noreferrer">gulp-autoprefixer</a>)</li>
<li>缩小化(minify) <strong>CSS</strong> (<a href="http://github.com/jonathanepollack/gulp-minify-css" target="_blank" rel="noopener noreferrer">gulp-minify-css</a>)</li>
<li><strong>JSHint</strong> (<a href="http://github.com/wearefractal/gulp-jshint" target="_blank" rel="noopener noreferrer">gulp-jshint</a>)</li>
<li>拼接 (<a href="http://github.com/wearefractal/gulp-concat" target="_blank" rel="noopener noreferrer">gulp-concat</a>)</li>
<li>丑化(Uglify) (<a href="http://github.com/terinjokes/gulp-uglify" target="_blank" rel="noopener noreferrer">gulp-uglify</a>)</li>
<li>图片压缩 (<a href="http://github.com/sindresorhus/gulp-imagemin" target="_blank" rel="noopener noreferrer">gulp-imagemin</a>)</li>
<li>即时重整(LiveReload) (<a href="http://github.com/vohof/gulp-livereload" target="_blank" rel="noopener noreferrer">gulp-livereload</a>)</li>
<li>清理档案 (<a href="http://github.com/peter-vilja/gulp-clean" target="_blank" rel="noopener noreferrer">gulp-clean</a>)</li>
<li>图片快取, 只有更改过得图片会进行压缩 (<a href="http://github.com/jgable/gulp-cache/" target="_blank" rel="noopener noreferrer">gulp-cache</a>)</li>
<li>更动通知 (<a href="http://github.com/mikaelbr/gulp-notify" target="_blank" rel="noopener noreferrer">gulp-notify</a>)</li>
</ul>
<h3> 通过 npm 进行安装</h3>
<p><code>Install Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> Gulp 任务配置</h2>
<h3> 创建 gulpfile.js 文件</h3>
<p>在项目根目录中, 创建 <code>gulpfile.js</code> 文件, 用来配置和定义任务（ <code>task</code> ）。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 我的安装插件</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 我的 gulpfile.js 配置</h3>
<p>打开 <code>gulpfile.js</code> 文件, 填写相关配置。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>RESTful API 设计指南（补充）</title>
      <link>https://vxhly.github.io/views/manual/restfui-api.html</link>
      <guid>https://vxhly.github.io/views/manual/restfui-api.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RESTful API 设计指南（补充）</source>
      <description>前言 网络应用程序, 分为前端和后端两个部分。这时候必须有一种统一的机制, 方便不同的前端设备与后端进行通信。这导致 API 构架的流行, 甚至出现 &amp;quot;API First&amp;quot; 的设计思想。 RESTful API 是目前比较成熟的一套互联网应用程序的 API 设计理论。</description>
      <category>manual</category>
      <pubDate>Fri, 29 Sep 2017 12:17:33 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>网络应用程序, 分为前端和后端两个部分。这时候必须有一种统一的机制, 方便不同的前端设备与后端进行通信。这导致 API 构架的流行, 甚至出现 "API First" 的设计思想。<a href="http://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank" rel="noopener noreferrer"> <code>RESTful API</code> </a> 是目前比较成熟的一套互联网应用程序的 API 设计理论。</p>
</div>
<!-- more -->
<h2> 先言</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>该篇博文为补充 <a href="http://www.ruanyifeng.com/blog/2014/05/restful_api.html" target="_blank" rel="noopener noreferrer">RESTful API 设计指南- 阮一峰的网络日志</a></p>
<p><a href="https://github.com/aisuhua/restful-api-design-references" target="_blank" rel="noopener noreferrer">RESTful API 设计参考文献列表, 可帮助你更加彻底的了解 REST 风格的接口设计</a>。</p>
<p>REST API 一般用来将某种资源和允许的对资源的操作暴露给外界, 使调用者能够以正确的方式操作资源。这里, 在输入输出的处理上, 要符合 HTTP/1.1（不久的将来, 要符合 HTTP/2.0）的 RFC, 保证接口的一致性。</p>
</div>
<h2> 协议</h2>
<p>API 与用户的通信协议, 总是使用 <a href="http://www.ruanyifeng.com/blog/2014/02/ssl_tls.html" target="_blank" rel="noopener noreferrer">https</a> 协议。</p>
<h2> 域名</h2>
<p>应该尽量将 API 部署在专用域名之下。</p>
<p><a href="https://api.example.com" target="_blank" rel="noopener noreferrer">https://api.example.com</a></p>
<p>如果确定 API 很简单, 不会有进一步扩展, 可以考虑放在主域名下。</p>
<p><a href="https://example.org/api/" target="_blank" rel="noopener noreferrer">https://example.org/api/</a></p>
<h2> 版本（Versioning）</h2>
<p>应该将 API 的版本号放入 URL。</p>
<p><a href="https://api.example.com/v1/" target="_blank" rel="noopener noreferrer">https://api.example.com/v1/</a></p>
<p>另一种做法是, 将版本号放在 HTTP 头信息中, 但不如放入 URL 方便和直观。<a href="http://developer.github.com/v3/media/#request-specific-version" target="_blank" rel="noopener noreferrer">Github</a> 采用这种做法。</p>
<h2> 路径（Endpoint）</h2>
<p>路径又称"终点"（endpoint）, 表示 API 的具体网址。 在 RESTful 架构中, 每个网址代表一种资源（resource）, 所以网址中不能有动词, 只能有名词, 而且所用的名词往往与数据库的表格名对应。一般来说, 数据库中的表都是同种记录的"集合"（collection）, 所以 API 中的名词也应该使用复数。 举例来说, 有一个 API 提供动物园（zoo）的信息, 还包括各种动物和雇员的信息, 则它的路径应该设计成下面这样。</p>
<ul>
<li><a href="https://api.example.com/v1/zoos" target="_blank" rel="noopener noreferrer">https://api.example.com/v1/zoos</a></li>
<li><a href="https://api.example.com/v1/animals" target="_blank" rel="noopener noreferrer">https://api.example.com/v1/animals</a></li>
<li><a href="https://api.example.com/v1/employees" target="_blank" rel="noopener noreferrer">https://api.example.com/v1/employees</a>、</li>
</ul>
<h2> RESTful API 规范</h2>
<ul>
<li>URI 请求采用小写字母, 数字, 部分特殊符号（非制表符, 该特殊符号特指 _、&amp;、?）组成。</li>
<li>URI 请求中不采用大小写混合的驼峰命名方式, 尽量采用全小写单词, 如果需要连接多个单词, 则采用连接符 <code>_</code> 连接单词</li>
<li>URI 中不包含文件名, 例如 <code>/api/test.php</code></li>
<li>URI 中不包含 HTTP 动词, 动作由请求包体中的 method 决定, 语义化能够一眼看出当前的操作</li>
<li>URI 不能过长, 任何 HTTP 协议客户端和服务器都应当支持 8000 字节的首行（方法名 + URI + HTTP 版本号）, 可以理解成支持 7980+ 字节的 URI</li>
<li>非 ID 形式的全部通过使用 ? 传参形式, 并且使用 encodeURI 或者 encodeURIComponent 进行编码</li>
<li>使用复数形式的单词表示大量的数据, 例如 <code>/api/users</code></li>
<li>根据需求添加 版本号, 例如 <code>/api/v1/users</code></li>
<li>根据需求添加 SecretKey, 特指某些对外服务盈利的接口</li>
<li>过深的导航容易导致 url 膨胀, 不易维护, 如 GET /zoos/1/areas/3/animals/4, 尽量使用查询参数代替路径中的实体导航, 如 GET /animals?zoo=1&amp;area=3</li>
<li>对于一些需要用户验证的查用 <code>OAuth</code> 或者 <code>JWT</code> , 并且添加 HTTP Authorization 请求头</li>
<li>关于 <code>Content-Type</code> 采用 <code>application/json;charset=UTF-8</code> 或者 <code> application/x-www-form-urlencoded;charset=UTF-8</code></li>
</ul>
<h2> HTTP 动词</h2>
<p>对于资源的具体操作类型, 由 HTTP 动词表示。 常用的 HTTP 动词有下面五个（括号里是对应的 SQL 命令）。</p>
<ul>
<li><strong>GET（SELECT）</strong> =&gt; 从服务器取出资源（一项或多项）。</li>
<li><strong>POST（CREATE）</strong> =&gt; 在服务器新建一个资源。</li>
<li><strong>PUT（UPDATE）</strong> =&gt; 在服务器更新资源（客户端提供改变后的完整资源）。</li>
<li><strong>PATCH（UPDATE）</strong> =&gt; 在服务器更新资源（客户端提供改变的属性）。</li>
<li><strong>DELETE（DELETE）</strong> =&gt; 从服务器删除资源。</li>
</ul>
<p>还有两个不常用的 HTTP 动词。</p>
<ul>
<li><strong>HEAD</strong> =&gt; 获取资源的元数据。</li>
<li><strong>OPTIONS</strong> =&gt; 获取信息, 关于资源的哪些属性是客户端可以改变的。</li>
</ul>
<p>下面是一些例子。</p>
<ul>
<li><strong>GET</strong> <code>/zoos</code> =&gt; 列出所有动物园</li>
<li><strong>POST</strong> <code>/zoos</code> =&gt; 新建一个动物园</li>
<li><strong>GET</strong> <code>/zoos/ID</code> =&gt; 获取某个指定动物园的信息</li>
<li><strong>PUT</strong> <code>/zoos/ID</code> =&gt; 更新某个指定动物园的信息（提供该动物园的全部信息）</li>
<li><strong>PATCH</strong> <code>/zoos/ID</code> =&gt; 更新某个指定动物园的信息（提供该动物园的部分信息）</li>
<li><strong>DELETE</strong> <code>/zoos/ID</code> =&gt; 删除某个动物园</li>
<li><strong>GET</strong> <code>/zoos/ID/animals</code> =&gt; 列出某个指定动物园的所有动物</li>
<li><strong>DELETE</strong> <code>/zoos/ID/animals/ID</code> =&gt; 删除某个指定动物园的指定动物</li>
</ul>
<h2> 过滤信息（Filtering）</h2>
<p>如果记录数量很多, 服务器不可能都将它们返回给用户。AP I 应该提供参数, 过滤返回结果。 下面是一些常见的参数。</p>
<ul>
<li><code>?limit=10</code> =&gt; 指定返回记录的数量</li>
<li><code>?offset=10</code> =&gt; 指定返回记录的开始位置。</li>
<li><code>?page=2&amp;per_page=100</code> =&gt; 指定第几页, 以及每页的记录数。</li>
<li><code>?sortby=nameℴ=asc</code> =&gt; 指定返回结果按照哪个属性排序, 以及排序顺序。</li>
<li><code>?animal_type_id=1</code> =&gt; 指定筛选条件</li>
</ul>
<p>参数的设计允许存在冗余, 即允许 API 路径和 URL 参数偶尔有重复。比如, GET <code>/zoo/ID/animals</code> 与 GET <code>/animals?zoo_id=ID</code> 的含义是相同的。</p>
<h2> 状态码（Status Codes）</h2>
<p>服务器向用户返回的状态码和提示信息, 常见的有以下一些（方括号中是该状态码对应的 HTTP 动词）。</p>
<h3> 请求成功</h3>
<ul>
<li><strong>200</strong> <code>OK</code> -&gt; 【 <code>GET</code> 】 =&gt; 服务器成功返回用户请求的数据, 该操作是幂等的（Idempotent）。</li>
<li><strong>201</strong> <code>CREATED</code> -&gt; 【 <code>POST/PUT/PATCH</code> 】 =&gt; 对象创建成功并返回相应资源数据, 如 <code>POST</code> 成功；创建完成后响应头中应该携带头标 <code>Location</code> , 指向新建资源的地址</li>
<li><strong>202</strong> <code>Accepted</code> -&gt; 【 <code>*</code> 】 =&gt; 接受请求, 但无法立即完成创建行为, 比如其中涉及到一个需要花费若干小时才能完成的任务。返回的实体中应该包含当前状态的信息, 以及指向处理状态监视器或状态预测的指针, 以便客户端能够获取最新状态。</li>
<li><strong>204</strong> <code>No Content </code> -&gt; 【 <code>DELETE/PATCH</code> 】 =&gt; 请求执行成功, 不返回相应资源数据</li>
</ul>
<h3> 重定向</h3>
<p>重定向的新地址都需要在响应头 Location 中返回</p>
<ul>
<li><strong>301</strong> <code>Moved Permanently </code> -&gt; 【 <code>*</code> 】 =&gt; 被请求的资源已永久移动到新位置</li>
<li><strong>302</strong> <code>Found</code> -&gt; 【 <code>*</code> 】 =&gt; 请求的资源现在临时从不同的 URI 响应请求</li>
<li><strong>303</strong> <code>See Other</code> -&gt; 【 <code>*</code> 】 =&gt; 应当前请求的响应可以在另一个 URI 上被找到, 客户端应该使用 GET 方法进行请求。比如在创建已经被创建的资源时, 可以返回 303</li>
<li><strong>307</strong> <code>Temporary Redirect </code> -&gt; 【 <code>*</code> 】 =&gt; 对应当前请求的响应可以在另一个 URI 上被找到, 客户端应该保持原有的请求方法进行请求</li>
</ul>
<h3> 条件请求</h3>
<ul>
<li><strong>304</strong> <code>Not Modified</code> -&gt; 【 <code>GET/HEAD</code> 】 =&gt; 未改变说明无需再次传输请求的内容, 也就是说可以使用缓存的内容。这通常是在一些安全的方法（safe）, 资源自从上次请求后没有再次发生变化, 主要使用场景在于实现数据缓存</li>
<li><strong>409</strong> <code>Conflict </code> -&gt; 【 <code>GET/HEAD</code> 】 =&gt; 请求操作和资源的当前状态存在冲突。主要使用场景在于实现并发控制</li>
<li><strong>412</strong> <code>Precondition Failed</code> -&gt; 【 <code>GET/HEAD</code> 】 =&gt; 服务器在验证在请求的头字段中给出先决条件时, 没能满足其中的一个或多个。主要使用场景在于实现并发控制</li>
</ul>
<h3> 客户端错误</h3>
<ul>
<li><strong>400</strong> <code>Bad Request</code> -&gt; 【 <code>POST/PUT/PATCH</code> 】 =&gt; 请求体包含语法错误, 用户发出的请求有错误, 服务器没有进行新建或修改数据的操作, 该操作是幂等的。</li>
<li><strong>401</strong> <code>Unauthorized</code> -&gt; 【 <code>*</code> 】 =&gt; 表示用户没有权限（令牌、用户名、密码错误）。需要验证用户身份, 如果服务器就算是身份验证后也不允许客户访问资源, 应该响应 403 Forbidden 。如果请求里有 Authorization 头, 那么必须返回一个 WWW-Authenticate 头</li>
<li><strong>403</strong> <code>Forbidden</code> -&gt; 【 <code>*</code> 】 =&gt; 服务器拒绝执行, 表示用户得到授权（与 401 错误相对）, 但是访问是被禁止的。</li>
<li><strong>404</strong> <code>Not Found</code> -&gt; 【 <code>*</code> 】 =&gt; 用户发出的请求针对的是不存在的记录, 服务器没有进行操作, 该操作是幂等的。</li>
<li><strong>406</strong> <code>Not Acceptable</code> -&gt; 【 <code>GET</code> 】 =&gt; 用户请求的格式不可得（比如用户请求 JSON 格式, 但是只有 XML 格式）。服务器不支持客户端请求的内容格式, 但响应里会包含服务端能够给出的格式的数据, 并在 Content-Type 中声明格式名称</li>
<li><strong>410</strong> <code>Gone</code> -&gt; 【 <code>GET</code> 】 =&gt; 用户请求的资源被永久删除, 且不会再得到的。被请求的资源已被删除, 只有在确定了这种情况是永久性的时候才可以使用, 否则建议使用 404 Not Found</li>
<li><strong>413</strong> <code>Payload Too Large</code> -&gt; 【 <code>POST/PUT</code> 】=&gt; POST 或者 PUT 请求的消息实体过大</li>
<li><strong>415</strong> <code>Unsupported Media Type</code> -&gt; 【 <code>GET</code> 】=&gt; 服务器不支持请求中提交的数据的格式</li>
<li><strong>422</strong> <code>Unprocessable Entity</code> -&gt; 【 <code>POST/PUT/PATCH</code> 】=&gt; 请求格式正确, 但是由于含有语义错误, 无法响应</li>
<li><strong>428</strong> <code>Precondition Required</code> -&gt; 【 <code>GET</code> 】 =&gt; 要求先决条件, 如果想要请求能成功必须满足一些预设的条件</li>
</ul>
<h3> 服务端错误</h3>
<ul>
<li><strong>500</strong> <code>INTERNAL SERVER ERROR</code> -&gt; 【 <code>*</code> 】 =&gt; 服务器遇到了一个未曾预料的状况, 导致了它无法完成对请求的处理。</li>
<li><strong>501</strong> <code>Not Implemented</code> -&gt; 【 <code>*</code> 】 =&gt; 服务器不支持当前请求所需要的某个功能。</li>
<li><strong>502</strong> <code>Bad Gateway</code> -&gt; 【 <code>*</code> 】 =&gt; 作为网关或者代理工作的服务器尝试执行请求时, 从上游服务器接收到无效的响应。</li>
<li><strong>503</strong> <code>Service Unavailable</code> -&gt; 【 <code>*</code> 】 =&gt; 由于临时的服务器维护或者过载, 服务器当前无法处理请求。这个状况是临时的, 并且将在一段时间以后恢复。</li>
</ul>
<p>状态码的完全列表参见<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html" target="_blank" rel="noopener noreferrer">这里</a>。</p>
<h2> 错误处理（Error handling）</h2>
<ol>
<li>不要发生了错误但给 2xx 响应, 客户端可能会缓存成功的 http 请求；</li>
<li>正确设置 http 状态码, 不要自定义；</li>
<li>Response body 提供 1) 错误的代码（日志/问题追查）；2) 错误的描述文本（展示给用户）。</li>
<li>如果状态码是 4xx, 就应该向用户返回出错信息。一般来说, 返回的信息中将 error 作为键名, 出错信息作为键值即可。</li>
</ol>
<p>业务类异常必须提供 2 种信息:</p>
<ul>
<li>如果抛出该类异常, HTTP 响应状态码应该设成什么；</li>
<li>异常的文本描述；</li>
</ul>
<p>在 Controller 层使用统一的异常拦截器:</p>
<ul>
<li>设置 HTTP 响应状态码: 对业务类异常, 用它指定的 HTTP code；对非业务类异常, 统一 500；</li>
<li>Response Body 的错误码: 异常类名</li>
<li>Response Body 的错误描述: 对业务类异常, 用它指定的错误文本；对非业务类异常, 线上可以统一文案如“服务器端错误, 请稍后再试”, 开发或测试环境中用异常的 stacktrace, 服务器端提供该行为的开关。</li>
</ul>
<h2> 返回结果</h2>
<p>针对不同操作, 服务器向用户返回的结果应该符合以下规范。</p>
<ul>
<li><strong>Get</strong> <code>/collection</code> =&gt; 返回资源对象的列表（数组）</li>
<li><strong>Get</strong> <code>/collection/resource</code> =&gt; 返回单个资源对象</li>
<li><strong>POST</strong> <code>/collection</code> =&gt; 返回新生成的资源对象</li>
<li><strong>PUT</strong> <code>/collection/resource</code> =&gt; 返回完整的资源对象</li>
<li><strong>PATCH</strong> <code>/collection/resource</code> =&gt; 返回完整的资源对象</li>
<li><strong>DELETE</strong> <code>/collection/resource</code> =&gt; 返回一个空文档</li>
</ul>
<h2> Hypermedia API</h2>
<p>RESTful API 最好做到 Hypermedia, 即返回结果中提供链接, 连向其他 API 方法, 使得用户不查文档, 也知道下一步应该做什么。 比如, 当用户向 <a href="http://api.github.com/" target="_blank" rel="noopener noreferrer">api.github.com</a> 的根目录发出请求, 会得到这样一个文档。</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码表示, 文档中有一个 link 属性, 用户读取这个属性就知道下一步该调用什么 API 了。rel 表示这个 API 与当前网址的关系（collection 关系, 并给出该 collection 的网址）, href 表示 API 的路径, title 表示 API 的标题, type 表示返回类型。</p>
<p>Hypermedia API 的设计被称为 <a href="http://en.wikipedia.org/wiki/HATEOAS" target="_blank" rel="noopener noreferrer">HATEOAS</a>。Github 的 API 就是这种设计, 访问 <a href="http://api.github.com/" target="_blank" rel="noopener noreferrer">api.github.com</a> 会得到一个所有可用 API 的网址列表。</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面可以看到, 如果想获取当前用户的信息, 应该去访问 <a href="http://api.github.com/user" target="_blank" rel="noopener noreferrer">api.github.com/user</a>, 然后就得到了下面结果。</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码表示, 服务器给出了提示信息, 以及文档的网址。</p>
<h2> 其他</h2>
<ul>
<li>（1）API 的身份认证应该使用 <a href="http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html" target="_blank" rel="noopener noreferrer">OAuth 2.0</a> 框架。</li>
<li>（2）服务器返回的数据格式, 应该尽量使用 JSON, 避免使用 XML。</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>SASS 用法指南</title>
      <link>https://vxhly.github.io/views/manual/sass-usage-guide.html</link>
      <guid>https://vxhly.github.io/views/manual/sass-usage-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">SASS 用法指南</source>
      <description>前言 SASS 是 CSS 预处理器之一, 它的基本思想是, 用一种专门的编程语言, 进行网页样式设计, 然后再编译成正常的 CSS 文件, 它提供了许多便利的写法, 大大节省了设计者的时间, 使得 CSS 的开发, 变得简单和可维护。</description>
      <category>manual</category>
      <pubDate>Tue, 11 Oct 2016 18:57:49 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>SASS 是 CSS 预处理器之一, 它的基本思想是, 用一种专门的编程语言, 进行网页样式设计, 然后再编译成正常的 CSS 文件, 它提供了许多便利的写法, 大大节省了设计者的时间, 使得 CSS 的开发, 变得简单和可维护。</p>
</div>
<!-- more -->
<h2> 环境布置</h2>
<h3> 安装 Ruby</h3>
<p>SASS 是 Ruby 语言写的, 但是两者的语法没有关系。不懂 Ruby, 照样使用。只是必须先<a href="http://www.ruby-lang.org/zh_cn/downloads/" target="_blank" rel="noopener noreferrer">安装 Ruby</a>, 然后再安装 SASS.</p>
<p>在 Ubuntu 下安装 Ruby, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看版本号, 确认 Ruby 环境安装完成</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 安装 SASS</h3>
<p>Ruby 安装好了, 之后执行命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看版本号, 确认 SASS 环境安装完成</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 使用</h2>
<h3> 编译</h3>
<p>SASS 文件就是普通的文本文件, 里面可以直接使用 CSS 语法。文件后缀名是 <code>.scss</code> , 意思为 <code>Sassy CSS</code> 。</p>
<p>下面的命令, 可以在屏幕上显示 <code>.scss</code> 文件转化的 <code>.css</code> 代码。（假设文件名为 <code>test</code> 。）</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 编译风格</h3>
<p>如果要将显示结果保存成文件, 后面再跟一个 <code>.css</code> 文件名, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>SASS 提供四个[编译风格](<a href="http://sass-lang.com/docs/yardoc/file" target="_blank" rel="noopener noreferrer">http://sass-lang.com/docs/yardoc/file</a>. SASS_REFERENCE.html#output_style)的选项</p>
<ul>
<li><strong>nested</strong> =&gt; 嵌套缩进的 css 代码, 它是默认值。</li>
<li><strong>expanded</strong> =&gt; 没有缩进的、扩展的 css 代码。</li>
<li><strong>compact</strong> =&gt; 简洁格式的 css 代码。</li>
<li><strong>compressed</strong> =&gt; 压缩后的 css 代码。</li>
</ul>
<p>生产环境当中, 一般使用最后一个选项, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>你也可以让 SASS 监听某个文件或目录, 一旦源文件有变动, 就自动生成编译后的版本</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 基本用法</h2>
<h3> 变量</h3>
<p>SASS 允许使用变量, 所有变量以 开头。 <code>For Example:</code></p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果变量需要镶嵌在字符串之中, 就必须需要写在 <code>#{}</code> 之中。 <code>For Example:</code></p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 计算功能</h3>
<p>SASS 允许在代码中使用算式。 <code>For Example:</code></p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 嵌套</h3>
<p>SASS 允许选择器嵌套。比如, 下面的 CSS 代码:</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以写成:</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>属性也可以嵌套, 比如 <code>border-color</code> 属性, 可以写成:</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p><code>border</code> 后面必须加上冒号。</p>
</div>
<p>在嵌套的代码块内, 可以使用 <code>&amp;</code> 引用父元素。比如 <code>a:hover</code> 伪类, 可以写成:</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 注释</h3>
<p>SASS 共有两种注释风格。</p>
<p>标准的 CSS 注释 <code>/* comment */</code> , 会保留到编译后的文件。 单行注释 <code>// comment</code> , 只保留在 SASS 源文件中, 编译后被省略。</p>
<p>在 <code>/*</code> 后面加一个感叹号, 表示这是"重要注释"。即使是压缩模式编译, 也会保留这行注释, 通常可以用于声明版权信息。</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 代码的重用</h2>
<h3> 继承</h3>
<p>SASS 允许一个选择器, 继承另一个选择器。比如, 现有 <code>class1</code> :</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>class2</code> 要继承 <code>class1</code> , 就要使用 <code>@extend</code> 命令:</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> Mixin</h3>
<p>Mixin 有点像 C 语言的宏（ <code>macro</code> ）, 是可以重用的代码块。 使用 <code>@mixin</code> 命令, 定义一个代码块。</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>@include</code> 命令, 调用这个 <code>mixin</code> 。</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>mixin</code> 的强大之处, 在于可以指定参数和缺省值。</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用的时候, 根据需要加入参数:</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面是一个 <code>mixin</code> 的实例, 用来生成浏览器前缀。</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用的时候, 可以像下面这样调用:</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 颜色函数</h3>
<p>SASS 提供了一些内置的颜色函数, 以便生成系列颜色。</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 插入文件</h3>
<p><code>@import</code> 命令, 用来插入外部文件。</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果插入的是 <code>.css</code> 文件, 则等同于 css 的 <code>import</code> 命令。</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 高级用法</h2>
<h2> 条件语句</h2>
<p><code>@if</code> 可以用来判断:</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配套的还有 <code>@else</code> 命令:</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 循环语句</h3>
<p>SASS 支持 <code>for</code> 循环:</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也支持 <code>while</code> 循环:</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>each</code> 命令, 作用与 <code>for</code> 类似:</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 自定义函数</h3>
<p>SASS 允许用户编写自市场上市己的函数。</p>
<div class="language-scss line-numbers-mode" data-ext="scss"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>软件版本周期</title>
      <link>https://vxhly.github.io/views/manual/software-version-cycle.html</link>
      <guid>https://vxhly.github.io/views/manual/software-version-cycle.html</guid>
      <source url="https://vxhly.github.io/rss.xml">软件版本周期</source>
      <description>前言 软件版本周期是指计算机软件的发展及发行过程, 从 Pre-alpha（准预览版本）发展到 Alpha（预览版本）、Beta（测试版本）、Released candidate （最终测试版本）至最后的 Gold（完成版）。</description>
      <category>manual</category>
      <pubDate>Sun, 21 Oct 2018 19:13:55 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>软件版本周期是指计算机软件的发展及发行过程, 从 Pre-alpha（准预览版本）发展到 Alpha（预览版本）、Beta（测试版本）、Released candidate （最终测试版本）至最后的 Gold（完成版）。</p>
</div>
<!-- more -->
<h2> 一张图诠释发展软件的过程</h2>
<figure><img src="/assets/software.jpg" alt="software-version" tabindex="0" loading="lazy"><figcaption>software-version</figcaption></figure>
<h2> 开发期</h2>
<h3> Pre-alpha</h3>
<p>有时候软件会在 Alpha 或 Beta 版本前先发布 Pre-alpha 版本。一般而言相对于 Alpha 或 Beta 版本, Pre-alpha 版本是一个功能不完整的版本</p>
<h3> Alpha</h3>
<p>Alpha 版本仍然需要测试, 其功能亦未完善, 因为它是整个软件发布周期中的第一个阶段, 所以它的名称是"Alpha", 希腊字母中的第一个字母"α"。</p>
<p>Alpha 版本通常会送到开发软件的组织或某群体中的软件测试者作内部测试。在市场上, 越来越多公司会邀请外部客户或合作伙伴参与其测试。这令软件在此阶段有更大的可用性测试。</p>
<p>在测试的第一个阶段中, 开发者通常会进行白盒测试。其他测试会在稍后时间由其他测试团体以黑盒或灰盒技术进行, 不过有时会同时进行。</p>
<h3> Beta</h3>
<p>Beta 版本是软件最早对外公开的软件版本, 由公众（通常为公司外的第三方开发者和业余玩家）参与测试。 因为是 Alpha 的下一个阶段, 所以为希腊字母的第二个字 Beta (β)。 一般来说, Beta 包含所有功能, 但可能有一些已知问题和较轻微的程序错误（BUG）, 要进行除错（debug）。Beta 版本的测试者通常是开发软件的组织的客户, 他们会以免费或优惠价钱得到软件。Beta 版本亦作为测试产品的支持和市场反应等。</p>
<p>其他情况不同企业有不同的称法, 例如微软曾以 Community Technology Preview（简称 CTP, 中文称为"社群技术预览"）为发布软件的测试版本之一, 微软将这个阶段的软件散布给有需要先行试用的用户或厂商, 并收集这些人的使用经验, 以便作为进一步修正软件的参考。</p>
<h3> Release Candidate</h3>
<p>Release Candidate（简称 RC）指可能成为最终产品的候选版本, 如果未出现问题则可发布成为正式版本。在此阶段的产品通常包含所有功能、或接近完整, 亦不会出现严重问题。</p>
<p>多数开源软件会推出两个 RC 版本, 最后的 RC2 则成为正式版本。闭源软件较少公开使用, 微软公司在 Windows 7 上应用此名称。苹果公司把在这阶段的产品称为"Golden Master Candidate"（简称 GM Candidate）, 而最后的 GM 即成为正式版本。</p>
<h2> 完成期</h2>
<h3> Release to Manufacting, RTM</h3>
<p><code>生产商发放</code> （Release to Manufacturing, 缩写 <code>RTM</code> ）是软件产品准备交付时使用的术语, 来自于以前还需要使用实体载具（光盘, 硬盘等）来进行安装的时代。某些计算机程序以"RTM"作为软件版本代号, 例如微软 Windows 7 发行零售版前的 RTM 版本主要是发放给组装机生产商用, 使制造商能够提早进行集成工作或解决软件与硬件设备可能遇到的错误。RTM 版本并不一定意味着创作者解决了软件所有问题；仍有可能向公众发布前更新版本。以 Windows 7 为例: RTM 版与零售版的版本号是一样的。</p>
<h3> General availability, GA</h3>
<p><code>一般可用</code> （General availability, 缩写 <code>GA</code> ）是所有必要的商业活动已经完成, 该软件产品已经可以发售的阶段。然而, 这取决于语言、地域和电子设备与媒体的可用性, 有些地区之间可能会有上市时间的延迟。商业活动可能也包括安全性和合法测试, 以及本地化和全球销售的可能性评估。RTM 与 GA 的间隔可能会是 1 周或几个月, 因为在此过程中需要进行许多商业活动。在这个阶段, 可以说软件已经"上线"了。</p>
<h3> Release to Web, RTW</h3>
<p><code>网络分发</code> （Release to Web, 缩写 <code>RTW</code> ）, 或称 Web 发布是一种利用互联网进行分发的软件交付方式。制造商在这种类型的发布中并不生产实体软件工具, 而会借由 OTA 来进行发放。随着互联网使用人数的增长, RTW 变得越来越普遍。</p>
<h3> Stable</h3>
<p><code>稳定版本</code> 来自预览版本释出使用与改善而修正完成, 通常是初始版本进行几个小更新后的版本。为目前所使用的软件在匹配需求规格的硬件与操作系统中运行不会造成严重的不兼容或是硬件冲突, 其已受过某定量的测试无误后所释出者。</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/software.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>docker 使用指南</title>
      <link>https://vxhly.github.io/views/manual/usage-of-docker.html</link>
      <guid>https://vxhly.github.io/views/manual/usage-of-docker.html</guid>
      <source url="https://vxhly.github.io/rss.xml">docker 使用指南</source>
      <description>前言 Docker 是一个开源的应用容器引擎, 基于 Go 语言 并遵从 Apache2.0 协议开源。 Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中, 然后发布到任何流行的 Linux 机器上, 也可以实现虚拟化。</description>
      <category>manual</category>
      <pubDate>Tue, 26 Mar 2019 14:41:23 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Docker 是一个开源的应用容器引擎, 基于 Go 语言 并遵从 Apache2.0 协议开源。 Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中, 然后发布到任何流行的 Linux 机器上, 也可以实现虚拟化。</p>
</div>
<!-- more -->
<h2> 为什么要用 Docker？</h2>
<p>在没有 docker 之前, 如果我们要在 windows 上安装 mysql、mongodb 需要先下载这些软件, 然后还要一步步点设置, 并且注册到 windows 服务。并且根本不知道安装到什么地方（某些版本 mysql 不能指定安装位置, 默认到 C 盘）。同时也会在控制面板内注册许多相关的插件。以后要卸载的时候可能还会有各种残留。作为一个强迫症患者这是万万不能忍受的。 现在有了 docker, 只需要一行代码就能拉取所需软件的镜像, 然后配置一个容器就启动了。需要开发的时候就打开 docker, 服务便能够运行。占用的空间也小, 性能和原生差异不大。增删查改都只需要一行代码就能完成。卸载起来也毫无残留。更重要的是, 我可以同时有一个镜像的几个容器。即使我搞坏了一个, 也可以用其他的容器。还能随时监测这些容器的磁盘占用等状态</p>
<h2> docker 文档</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这里只找到了英文的文档, 所以英文不好的慎阅 <a href="https://docs.docker.com" target="_blank" rel="noopener noreferrer">官方 docker 文档</a> <a href="https://docker_practice.gitee.io/" target="_blank" rel="noopener noreferrer">非官方 docker 整理文档</a></p>
</div>
<h2> 常用的 docker 命令</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 在你的机子上安装服务</h2>
<p>至于一些 docker 镜像下载加速或者其他的知识自行查阅文档, 这里只收集 docker 安装各种服务的方法</p>
<h3> Ubuntu</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> MySQL</h3>
<h4> 通过镜像</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 通过 docker-compose.yml</h4>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>docker-compose.yml 同级目录下执行: <code>docker-compose up -d</code> 之后在浏览器访问 <code>http://127.0.0.1:7777</code> 即可</p>
<p>如果无法正常登录的话, 使用 <code>docker exec -it [dockerId] bash</code> 进入 MySQL 容器并登陆 MySQL 执行以下命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> Node + Vue</h3>
<p>在项目文件夹下创建 <code>dockerfile</code></p>
<div class="language-docker line-numbers-mode" data-ext="docker"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在项目文件夹下创建 <code>docker-compose.yml</code></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在项目文件夹下执行(编译一个镜像容器出来)</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编译完成之后执行, 用以启动容器</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 <code>docker ps</code> 查看 容器的 id, 之后使用以下命令进入容器</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>确认当前目录已经挂载了当前的项目目录, 使用 <code>pwd</code> 确认当前的目录为 <code>/workspace</code> , 执行安装依赖命令并且启动服务</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>服务启动之后就在浏览器中访问 <code>http://127.0.0.1:8080</code> 经过上面的配置, 我们就可以在主机上使用喜欢的编辑器编辑代码, 通过 docker 执行。但是使用 <code>yarn serve</code> 命令进行开发时, 会发现一个问题: 在编辑器中编辑文件后, docker 无法监听到文件的修改, 从而重新编译、刷新页面；我们可以采用 webpack 的轮询功能解决:</p>
<p>关于 webpack 的轮询功能 =&gt; <a href="https://www.webpackjs.com/configuration/watch/" target="_blank" rel="noopener noreferrer">webpack</a></p>
<p><code>vue.config.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到此已经全部配置完毕, 重新 <code>yarn serve</code> 然后就可以愉快的写代码了</p>
<h3> Gitlab</h3>
<h4> 英文官方原版</h4>
<p>在项目文件夹下创建 <code>docker-compose.yml</code></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 中文社区版</h4>
<p>在项目文件夹下创建 <code>docker-compose.yml</code></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> MongoDB</h3>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 拓展</h3>
<h4> 重置普通用户的密码</h4>
<p>进入容器之后执行以下命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 重设管理员密码</h4>
<p>进入容器之后执行以下命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 私有 npm 代理注册表</h2>
<p>在项目文件夹下创建 <code>docker-compose.yml</code></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 拓展</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>windows 环境下不想使用 docker 的解决方案, 使用 <code>forever</code> + <code>verdaccio</code></p>
</div>
<p>安装依赖</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改 <code>verdaccio</code> 的配置文件, 参考文件路径为 <code>C:/Users/Administrator/AppData/Roaming/verdaccio/config.yaml</code> （必须修改, 否则只能本机访问）, 在该文件内添加</p>
<div class="language-txt line-numbers-mode" data-ext="txt"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>编写 <code>bat</code> windows 脚本</p>
<p>开始脚本 <code>forever-npm-start.bat</code></p>
<div class="language-bat line-numbers-mode" data-ext="bat"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结束脚本 <code>forever-npm-stop.bat</code></p>
<div class="language-bat line-numbers-mode" data-ext="bat"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> CSS 预处理 SASS 的默认实现将迁移到 Dart Sass</h3>
<p>Web 开发中流行的 CSS 预处理 - Sass 14, 于 2016 年 11 月 1 日在博客正式对外公布了 alpha 版本的 Dart Sass 32 项目, 即他们使用 Dart 对 Sass 进行了重写。对于这次迁移/重写, Sass 项目组做了以下说明:</p>
<p>关于 <a href="https://github.com/sass/dart-sass" target="_blank" rel="noopener noreferrer">github:dart-sass</a> <a href="https://sass-lang.com/dart-sass" target="_blank" rel="noopener noreferrer">dart-sass</a></p>
<p>因为使用 <code>node-sass</code> 无论是在 Windows 环境下还是在 docker 的 liunx 环境下都需要依赖 <code>gcc</code> 和 <code>python2.7</code> , 有的时候会出现编译错误（指的是在执行 <code>npm install</code> 安装 <code>node-sass</code> 的时候由于部分库不齐备或者是编译原因导致 <code>node-sass</code> 无法正常安装）, 所以使用 <code>dart-sass</code> 来代替 <code>node-sass</code> 是个不错的选择, 至少目前在自测中是没有出现编译问题的, 至于兼容性问题, GitHub 文档中也给出承诺 <a href="https://github.com/sass/dart-sass#browser-compatibility" target="_blank" rel="noopener noreferrer">Browser Compatibility</a></p>
<h3> 为什么重写 Sass？</h3>
<p>Sass 的主要实现有 Ruby Sass 7 和 LibSass 10（node-sass 底层使用的是 LibSass）, 它们都有各自的优缺点。Ruby Sass 的实现语言是高级语言 Ruby, 更容易迭代, 但存在运行速度慢, 不易安装的缺点。LibSass 虽然速度快, 但它的开发语言是 C/C++, 迭代速度慢, 无法快速地添加各种功能。</p>
<h3> 为什么使用 Dart？</h3>
<p>Dart 的运行速度是真的快, 对于大型样式文件, Dart Sass 的处理速度是 Ruby Sass 的 5~10 倍, 且只比 LibSass 慢 1.5 倍左右。同时, Dart 是一门具备静态类型的动态语言, 对比 C/C++ 甚至是 Ruby, Dart 相对更容易上手且代码也更易于编写和维护。此外, Dart 具备编译输出为 JavaScript 的能力, 使得 Dart Sass 可以兼容 NodeJS 平台。</p>
<h3> 各种实现的后续规划？</h3>
<p>LibSass 作为目前性能最好的 Sass 实现, 后续将继续维护, 只是它不再需要背负快速添加各种新功能的压力。Ruby Sass 目前也会同步维护, 但在无人接手的情况下, 它将逐渐边缘化。Sass 项目组后续主要精力将转移到 Dart Sass, 其稳定版本预计在 2017 年初放出。</p>
<h3> git commit</h3>
<p>现在由于我们在 docker 内部安装项目依赖, 也就是说我们当前的环境变成了 liunx, 相关的依赖包也就是 liunx 的依赖包, 所以在 windows 环境下执行 <code>git commit</code> 的时候会报依赖找不到, 那是因为安装了 liunx 的依赖包, 两个平台的安装包是不一样的</p>
<p>那么在 docker 下执行 <code>git commit</code> 的时候又会失败, 因为 commit 的时候 git 需要知道当前的 commit 作者是谁, 这时候不必全局配置 commit 的 config 信息, 只需在项目目录下执行</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置完用 <code>git config --list</code> 进行检验, 之后的 commit 操作就在 docker 容器下执行就行了</p>
]]></content:encoded>
    </item>
    <item>
      <title>webpack 初学指南</title>
      <link>https://vxhly.github.io/views/manual/webpack-guide.html</link>
      <guid>https://vxhly.github.io/views/manual/webpack-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">webpack 初学指南</source>
      <description>前言 这边用到的 webpack 版本 4.0+, 这边将接触到 TypeScript, ES6, ES7, sass 等 loader ... 不想解释了直接上代码。</description>
      <category>manual</category>
      <pubDate>Fri, 16 Nov 2018 14:25:54 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>这边用到的 webpack 版本 4.0+, 这边将接触到 TypeScript, ES6, ES7, sass 等 loader ... 不想解释了直接上代码。</p>
</div>
<!-- more -->
<h2> 目录结构</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> package.json</h2>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> .babelrc</h2>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> .eslintrc.js</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> tsconfig.json</h2>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> webpack.config.js</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>常见的端口号以及其对应的应用程序或服务</title>
      <link>https://vxhly.github.io/views/networking/common-port.html</link>
      <guid>https://vxhly.github.io/views/networking/common-port.html</guid>
      <source url="https://vxhly.github.io/rss.xml">常见的端口号以及其对应的应用程序或服务</source>
      <description>前言 列出 TCP/UDP 协议常见的端口号占用情况, 以助于分析该服务器开放了哪些端口号, 或者程序占用了哪些端口号。</description>
      <category>networking</category>
      <pubDate>Tue, 16 Aug 2016 16:04:29 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>列出 TCP/UDP 协议常见的端口号占用情况, 以助于分析该服务器开放了哪些端口号, 或者程序占用了哪些端口号。</p>
</div>
<!-- more -->
<h2> 如何查看</h2>
<h3> Windows 系统</h3>
<p>通过 <code>netstat</code> 列出所有端口的使用情况, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过 <code>findstr</code> 查询包含关键字的端口使用情况, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过 <code>tasklist</code> 查询哪个程序或应用占用该端口对应的 <code>PID</code> , <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> Liunx 系统</h3>
<p>通过 <code>netstat</code> 列出监听的端口, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过 <code>netstat</code> 列出所有的网络连接, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过 <code>ps</code> 查看进程占用状态, <code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 常见端口号</h2>
<h3> TCP 协议相关</h3>
<ul>
<li><code>20</code> =&gt; FTP（文件传输协议） 传输数据端口, 用于纯属数据</li>
<li><code>21</code> =&gt; FTP（文件传输协议） 连接端口, 用于登陆认证</li>
<li><code>22</code> =&gt; SSH（安全外壳协议） 加密的远程连接, SFTP（安全的文件传输协议） 传输安全的数据</li>
<li><code>23</code> =&gt; Telnet（远程终端协议） 相对不安全的远程连接</li>
<li><code>25</code> =&gt; SMTP（简单邮件传输协议） 使用的端口</li>
<li><code>53</code> =&gt; DNS 服务器开放的端口, 入侵者可能是试图进行区域传递（TCP）, 所以防火墙常常过滤或记录该端口</li>
<li><code>80</code> / <code>8080</code> / <code>3128</code> / <code>8081</code> / <code>9080</code> =&gt; HTTP（超文本传输协议） 使用的端口</li>
<li><code>109</code> =&gt; POP2（邮件协议 2） 服务器开放的端口</li>
<li><code>110</code> =&gt; POP3（邮件协议 3） 服务器开放的端口, 用于接收邮件, 客户端访问服务器的邮件服务</li>
<li><code>139</code> =&gt; 文件共享使用的端口</li>
<li><code>443</code> =&gt; HTTPS（安全套接字层的超文本传输协议） 默认端口, 传输数据更加安全</li>
<li><code>445</code> =&gt; SMB（文件共享服务）开放的端口</li>
<li><code>1433</code> =&gt; SQL Server 默认的端口, 用于供 SQL Server 对外提供服务</li>
<li><code>1521</code> =&gt; Oracle 数据库默认端口</li>
<li><code>3306</code> =&gt; MySQL 数据库默认端口</li>
<li><code>3389</code> =&gt; 远程桌面使用的端口</li>
<li><code>8080</code> =&gt; Tomcat 服务器的默认端口</li>
</ul>
<h3> UDP 协议相关</h3>
<ul>
<li><code>53</code> =&gt; DNS 服务器开放的端口, 入侵者可能是试图进行欺骗 DNS（UDP）或隐藏其他的通信, 所以防火墙常常过滤或记录该端口</li>
<li><code>69</code> =&gt; TFTP（简单文件传输协议） 默认的端口号</li>
<li><code>139</code> =&gt; 文件共享使用的端口</li>
<li><code>161</code> =&gt; SNMP（简单网络管理协议） 入侵者常探测的端口</li>
<li><code>162</code> =&gt; SNMP（简单网络管理协议） 默认的端口号</li>
<li><code>445</code> =&gt; SMB（文件共享服务）开放的端口</li>
<li><code>1434</code> =&gt; SQL Server 默认的端口, 于向请求者返回 SQL Server 使用了哪个 TCP/IP 端口</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>IP 地址规划</title>
      <link>https://vxhly.github.io/views/networking/ip-address-planning.html</link>
      <guid>https://vxhly.github.io/views/networking/ip-address-planning.html</guid>
      <source url="https://vxhly.github.io/rss.xml">IP 地址规划</source>
      <description>前言 当申请到一个 C 类网络地址时, 很多时候需要对其子网划分, 那么一个高效简便的子网划分方法由此而生。</description>
      <category>networking</category>
      <pubDate>Sun, 11 Sep 2016 21:49:24 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>当申请到一个 C 类网络地址时, 很多时候需要对其子网划分, 那么一个高效简便的子网划分方法由此而生。</p>
</div>
<!-- more -->
<h2> 先分清五类网络地址</h2>
<p>IP 地址分为 A, B, C, D, E 五类</p>
<ul>
<li>网络号: 用于识别主机所在的网络</li>
<li>主机号: 用于识别该网络中的主机</li>
</ul>
<p>其中 A 类分配给政府机关使用, B 类地址给大中型企业使用, C 类地址给个人使用。这三种是主要的。</p>
<p>D 类用于组播, E 类用于实验, 各类可容纳的地址数目不同。</p>
<p>其中 A 类、B 类、C 类这三类地址用于 <code>TCP/IP</code> 节点。其它两类 D 类和 E 类被用于特殊用途。</p>
<p>A、B、C 三类 IP 地址的特征: 当将 IP 地址写成二进制形式时, A 类地址的第一位总是 O, B 类地址的前两位总是 10, C 类地址的前三位总是 <code>110</code> 。</p>
<h3> A 类地址</h3>
<ul>
<li>A 类地址第 1 字节为网络地址, 其它 3 个字节为主机地址</li>
<li>A 类地址范围: <code>1.0.0.1</code> -- <code>126.255.255.254</code></li>
<li>A 类地址中的私有地址和保留地址（所谓的私有地址就是在互联网上不使用, 而被用在局域网络中的地址；保留地址则不被分配。）</li>
</ul>
<p>-- <code>10.X.X.X</code> 是私有地址 -- <code>127.X.X.X</code> 是保留地址, 用做循环测试用的</p>
<ul>
<li>最大的网络数: <code>2^7-2</code> , 网络中最大的主机数: <code>2^24-2</code></li>
</ul>
<h3> B 类地址</h3>
<ul>
<li>B 类地址第 1 字节和第 2 字节为网络地址, 其它 2 个字节为主机地址</li>
<li>B 类地址范围: <code>128.0.0.1</code> -- <code>191.255.255.254</code></li>
<li>B 类地址的私有地址和保留地址</li>
</ul>
<p>-- <code>172.16.0.0</code> -- <code>172.31.255.255</code> 是私有地址 -- <code>169.254.X.X</code> 是保留地址。如果你的 IP 地址是自动获取 IP 地址, 而你在网络上又没有找到可用的 DHCP 服务器。就会得到其中一个 IP</p>
<ul>
<li>最大的网络数: <code>2^14-2</code> , 网络中最大的主机数: <code>2^16-2</code></li>
</ul>
<h3> C 类地址</h3>
<ul>
<li>C 类地址第 1 字节、第 2 字节和第 3 个字节为网络地址, 第 4 个个字节为主机地址。另外第 1 个字节的前三位固定为 <code>110</code></li>
<li>C 类地址范围: <code>192.0.0.1</code> -- <code>223.255.255.254</code></li>
<li>C 类地址中的私有地址:</li>
</ul>
<p>-- <code>192.168.X.X</code> 是私有地址</p>
<ul>
<li>最大的网络数: <code>2^21-2</code> , 网络中最大的主机数: <code>2^8-2</code></li>
</ul>
<h3> D 类地址</h3>
<ul>
<li>D 类地址不分网络地址和主机地址, 它的第 1 个字节的前四位固定为 <code>1110</code></li>
<li>D 类地址范围: <code>224.0.0.1</code> -- <code>239.255.255.254</code></li>
</ul>
<h3> E 类地址</h3>
<ul>
<li>E 类地址也不分网络地址和主机地址, 它的第 1 个字节的前五位固定为 <code>11110</code></li>
<li>E 类地址范围: <code>240.0.0.1</code> -- <code>255.255.255.254</code></li>
</ul>
<h2> C 类 IP 地址规划</h2>
<h3> 首先, 准确的记住 2^1 ~ 2^8 的得数</h3>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 地址划分</h3>
<p>划分时要么根据主机数来划分；要么根据子网数来划分。</p>
<h4> 第一种情况</h4>
<p>已知 IP 地址段和子网个数, 求子网的规划</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>解析: 要划分 3 个子网, 那么 2^n&gt;=3 , 得出 n&gt;=2 , 取 n=2 , 即 2^2=4 , 可以划分四个子网。每个子网有 2^(8-2)-2=62 个主机。广播号等于网络号加 (2^(8-2)-1), 子网掩码为 24+2=26。</p>
<p><code>答案: </code></p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 第二种情况</h4>
<p>已知 IP 地址段和各子网的主机个数, 求子网规划</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解析: 要划分 3 个子网, 第一个子网有 100 台主机, 那么 2^n&gt;=100, 得出 n&gt;=7, 则该子网总共能容纳主机数为 2^7-2=126。广播号等于网络号加上 (2^7-1), 该子网的掩码为 32-7=25。以此类推。</p>
<p><code>答案: </code></p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> IP 地址规划练习</h3>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解析: 要划分 6 个子网, 第一个子网有 100 台主机, 那么 2^n&gt;=100, 得出 n&gt;=7, 则该子网总共能容纳主机数为 2^7-2=126。广播号等于网络号加上 (2^7-1), 该子网的掩码为 32-7=25。以此类推。</p>
<p><code>答案: </code></p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Socks 代理反弹突破内网</title>
      <link>https://vxhly.github.io/views/networking/socks-proxy-rebound.html</link>
      <guid>https://vxhly.github.io/views/networking/socks-proxy-rebound.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Socks 代理反弹突破内网</source>
      <description>前言 对于渗透测试者来说, 如何绕过防火墙的阻挡在内网展开渗透测试成为需解决的问题, 本文介绍了在夺取映射到外网的内网服务器权限后, 如何利用 Socks 代理反弹获得内网访问权限。</description>
      <category>networking</category>
      <pubDate>Thu, 24 Nov 2016 14:46:22 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>对于渗透测试者来说, 如何绕过防火墙的阻挡在内网展开渗透测试成为需解决的问题, 本文介绍了在夺取映射到外网的内网服务器权限后, 如何利用 Socks 代理反弹获得内网访问权限。</p>
</div>
<!-- more -->
<h2> 环境介绍</h2>
<table>
<thead>
<tr>
<th>机子</th>
<th>系统</th>
<th>IP</th>
</tr>
</thead>
<tbody>
<tr>
<td>攻击机</td>
<td><code>kali Liunx</code></td>
<td>192.168.199.130 (外网)</td>
</tr>
<tr>
<td>目标主机</td>
<td><code>ubuntu-server</code></td>
<td>192.168.199.131 (外网)；192.168.235.143 (内网)</td>
</tr>
<tr>
<td>内网主机</td>
<td><code>Metasploitable2-Liunx</code></td>
<td>192.168.235.142 (内网)</td>
</tr>
</tbody>
</table>
<h2> 工具介绍</h2>
<h3> sSocks</h3>
<p>sSocks 是一个 socks 代理工具套装, 可用来开启 socks 代理服务, 支持 socks5 验证, 支持 IPV6 和 UDP, 并提供反向 socks 代理服务, 即将远程计算机作为 socks 代理服务端, 反弹回本地, 极大方便内网的渗透测试</p>
<h3> 下载</h3>
<p><a href="http://sourceforge.net/projects/ssocks/" target="_blank" rel="noopener noreferrer">sSocks 更新地址</a><br> 这里下载的版本为 <code>0.0.14</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 解压并编译</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>编译的时候要先确定机子上有 gcc 环境, 没有的请自行安装</p>
</div>
<h3> 功能</h3>
<p>编译完成, 进入 sr c 目录, 会发现有 <code>nsocks</code> 、 <code>ssocksd</code> 、 <code>ssocks</code> 、 <code>rcsocks</code> , 其功能说明介绍如下:</p>
<ul>
<li><strong>nsocks</strong> 类似通过 Socks5 代理后的 netcat, 可用来测试 socks server</li>
<li><strong>ssocksd</strong> 用来开启 Socks5 代理服务</li>
<li><strong>ssocks</strong> 本地启用 Socks5 服务, 并反弹到另一 IP 地址</li>
<li><strong>rcsocks</strong> 接收反弹过来的 Socks5 服务, 并转向另一端口</li>
</ul>
<h2> 攻击步骤</h2>
<p>现假设已获得 <code>ubuntu-server</code> 权限, 也将 ssocks 这软件上传至该服务器（包含解压和编译）</p>
<h3> 执行本地监听</h3>
<p>机子: <code>kali Liunx</code> ；IP: <code>192.168.199.130</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>等待远程 Socks5 服务器访问本地 1080 端口, 创建端口 1080 与本地端口 1088 的连接通道<br></p>
<figure><img src="/assets/socks-proxy-1.png" alt="Socks 代理" tabindex="0" loading="lazy"><figcaption>Socks 代理</figcaption></figure>
<h3> 开启 Socks5 代理服务, 反弹</h3>
<p>机子: <code>ubuntu-server</code> ；IP: <code>192.168.199.131</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>启用 Socks5 服务, 反弹到 <code>192.168.199.130</code> （即 <code>kali Liunx</code> ） 的端口 1080 上<br></p>
<figure><img src="/assets/socks-proxy-2.png" alt="Socks 代理" tabindex="0" loading="lazy"><figcaption>Socks 代理</figcaption></figure>
<p>此时在渗透测试端 <code>192.168.199.130</code> （即 <code>kali Liunx</code> ） 可看到通道连接成功<br></p>
<figure><img src="/assets/socks-proxy-3.png" alt="Socks 代理" tabindex="0" loading="lazy"><figcaption>Socks 代理</figcaption></figure>
<h3> 利用 proxychains 进行 Socks5 代理</h3>
<p>机子: <code>kali Liunx</code> ；IP: <code>192.168.199.130</code></p>
<h4> proxychains 介绍</h4>
<p>通过前面的步骤, Socks5 代理已创建完成了。由于在渗透测试过程中, 需要使用不同的工具程序, 而在各程序中分别配置 Socks5 代理信息较为繁琐, 而部分程序并不支持配置 Socks5 代理。为了简化这些操作, 我们可以采用 <code>proxychains</code> 。</p>
<p>proxychains 是一个代理客户端软件, 可以支持几乎所有程序的代理, 如 <code>ssh</code> , <code>telnet</code> , <code>ftp</code> 等。利用 <code>proxychains</code> , 程序能在代理的环境下被加载运行, 而本身不需要具备代理功能。</p>
<h4> proxychains 下载</h4>
<p>需要 git 环境, 在 <code>kali Liunx</code> 使用 <code>proxychains</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 编译和安装</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 修改配置文件</h4>
<p>使用前需要对 proxychains 进行简单配置, 打开配置文件 <code>/etc/proxychains.conf</code> 在 <code>[ProxyList]</code> 处添加</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/socks-proxy-4.png" alt="Socks 代理" tabindex="0" loading="lazy"><figcaption>Socks 代理</figcaption></figure>
<p>配置成功后若要启动程序, 仅需要在启动程序命令前加上 <code>proxychains</code></p>
<h3> 启用浏览器 firefox</h3>
<p>机子: <code>kali Liunx</code> ；IP: <code>192.168.199.130</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/socks-proxy-5.png" alt="Socks 代理" tabindex="0" loading="lazy"><figcaption>Socks 代理</figcaption></figure>
<h3> 访问内网机子</h3>
<p>机子: <code>kali Liunx</code> ；IP: <code>192.168.235.143</code></p>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>现在已经可以直接访问内网主机了, IP: <code>192.168.235.142</code></p>
</div>
<figure><img src="/assets/socks-proxy-6.png" alt="Socks 代理" tabindex="0" loading="lazy"><figcaption>Socks 代理</figcaption></figure>
<p>随便点个链接, 然后再看一眼 <code>ubuntu-server</code> 中的日志, 成功访问到内网中的页面<br></p>
<figure><img src="/assets/socks-proxy-7.png" alt="Socks 代理" tabindex="0" loading="lazy"><figcaption>Socks 代理</figcaption></figure>
<h2> 后记</h2>
<p>由于系统管理员的疏忽或者业务需求所致, 防火墙一般仅对由外向内发起的数据连接进行严格判断、过滤、甚至阻断而忽略由内往外的连接。因此, 在此种情况下, 通过攻陷映射到公网的端口服务, 利用反弹便可获取内网访问权限, 给内网安全带来极大的威胁。在信息安全建设与运维过程中, 不仅要加强映射到公网的服务安全, 也要重视由内到外连接的安全威胁 � 维过程中, 不仅要加强映射到公网的服务安全, 也要重视由内到外连接的安全威胁</p>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/socks-proxy-1.png" type="image/png"/>
    </item>
    <item>
      <title>Ubuntu 下连接 WIFI</title>
      <link>https://vxhly.github.io/views/networking/ubuntu-connect-wifi.html</link>
      <guid>https://vxhly.github.io/views/networking/ubuntu-connect-wifi.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Ubuntu 下连接 WIFI</source>
      <description>前言 基于已经安装双系统, 或是只有 Ubuntu 系统, 在虚拟机下不存在此问题。</description>
      <category>networking</category>
      <pubDate>Mon, 01 Aug 2016 12:24:19 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>基于已经安装双系统, 或是只有 Ubuntu 系统, 在虚拟机下不存在此问题。</p>
</div>
<!-- more -->
<h2> 查看无线网卡信息</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 下载无线网卡驱动</h2>
<p>本人的无线网卡为 <code>Realtek-RTL8723BE</code> 下载地址 <a href="http://oss-blog.test.upcdn.net/rtl8723be.tar.gz?attname=" target="_blank" rel="noopener noreferrer">rtl8723be.tar.gz</a></p>
<h3> 驱动安装(解压进入目录)</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 设置为开机启动项</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 重启网卡</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 重启网络服务</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Ubuntu 下科学上网</title>
      <link>https://vxhly.github.io/views/networking/ubuntu-over-the-wall.html</link>
      <guid>https://vxhly.github.io/views/networking/ubuntu-over-the-wall.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Ubuntu 下科学上网</source>
      <description>前言 翻墙, 主要用于 npm 的代理。没有 vpn 服务器不要紧, 肯花点小钱就可以搞定访问 高梯子。</description>
      <category>networking</category>
      <pubDate>Sun, 31 Jul 2016 21:32:24 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>翻墙, 主要用于 npm 的代理。没有 vpn 服务器不要紧, 肯花点小钱就可以搞定访问 <a href="http://www.gaotizi.com/aff.php?aff=133" target="_blank" rel="noopener noreferrer">高梯子</a>。</p>
</div>
<!-- more -->
<h2> 方法一</h2>
<h3> 下载 shadowsocks-libev</h3>
<p>下载 shadowsocks-libev 安装包, 解压并重命名为 shadowsocks-libev</p>
<p><a href="http://github.com/shadowsocks/shadowsocks-libev/archive/v2.4.6.zip" target="_blank" rel="noopener noreferrer">Source code (zip) 下载地址</a><br> <a href="http://github.com/shadowsocks/shadowsocks-libev/archive/v2.4.6.tar.gz" target="_blank" rel="noopener noreferrer">Source code (tar.gz) 下载地址</a></p>
<h3> 安装 shadowsocks-libev</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 建议安装前先更新一下软件列表</h3>
<p>如果显示 "现在没有可用的软件包" 等字样, 建议先执行</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 配置 config.json 文件</h3>
<p>使用 <code>vim</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者使用 <code>gedit</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 修改服务器地址跟密码</h3>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 配置 shadowsocks-libev 文件</h3>
<p>使用 <code>vim</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者使用 <code>gedit</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 修改文件</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>=&gt;</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 启动 shadowsocks-libev</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 安装 Privoxy</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 配置 Privoxy</h3>
<p>使用 <code>vim</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者使用 <code>gedit</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>按 <code>shift+g</code> 切到最后一行, 添加</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 配置终端 http 代理</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 配置终端 http 代理的启动</h3>
<p>使用 <code>vim</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者使用 <code>gedit</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>按 <code>shift+g</code> 切到最后一行, 添加</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果此举会影响到终端下载, 建议还是不要设置为好。</p>
<h3> 启动 Privoxy</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 测试代理是否成功（需安装 curl）</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回带 <code>google</code> 字样表示受理成功</p>
<h3> 配置 npm 代理（需安装 node、npm）</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 清除 npm 代理</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 方法二</h2>
<h3> 安装 shadowsocks</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 建议安装前先更新一下软件列表</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 新建 shadowsocks.json 文件</h3>
<p>使用 <code>vim</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或使用 <code>gedit</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 添加内容</h3>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 启动 shadowsocks</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置为启动时自动运行。在 <code>/etc/rc.local</code> 中添加如下命令, 注意在 <code>exit 0</code> 之前。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 安装 Privoxy</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 配置 Privoxy</h3>
<p>使用 <code>vim</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者使用 <code>gedit</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改监听地址</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>按 <code>shift+g</code> 切到最后一行, 添加</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 启动 Privoxy</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 配置终端 http 代理</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>为了方便还是在 <code>/etc/rc.local</code> 中添加如下命令, 注意在 <code>exit 0</code> 之前。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 配置终端 http 代理的启动</h3>
<p>使用 <code>vim</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者使用 <code>gedit</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>按 <code>shift+g</code> 切到最后一行, 添加</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果此举会影响到终端下载, 建议还是不要设置为好。</p>
<h3> 测试代理是否成功（需安装 curl）</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回带 <code>google</code> 字样表示受理成功</p>
<h3> 配置 npm 代理（需安装 node、npm）</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 清除 npm 代理</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 附上 Shadowsocks 服务器搭建方法</h2>
<p>首先你要有一台专属于你的服务器, <a href="http://www.hostker.com/" target="_blank" rel="noopener noreferrer">hostker</a> 这里提供较为便宜的服务器</p>
<h3> 更新软件源</h3>
<p>安装前最好先更新一下软件源</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 安装 Shadowsocks 服务端</h3>
<p>使用 <code>pip</code> 方式安装</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>pip 安装时候可能会报错, 执行以下命令再重新安装一次</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当然你也可以更新一下 <code>pip</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 启动 Shadowsocks 服务端</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中 <code>8388</code> 是远程服务器端口, <code>password</code> 是连接密码, <code>rc4-md5</code> 是加密方式</p>
<h3> Shadowsocks Windows 端</h3>
<p><a href="http://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener noreferrer">shadowsocks-windows</a></p>
<h2> 使用 shadowsocks-libev 一键安装脚本</h2>
<h3> 默认配置:</h3>
<ul>
<li>服务器端口: <code>8989</code></li>
<li>客户端端口: <code>1080</code></li>
<li>密码: 自己设定（如不设定, 默认为 <code>teddysun.com</code> ）</li>
</ul>
<h3> 下载安装</h3>
<h4> CentOS 系统</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> Ubuntu, Debian 系统</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 安装完成</h4>
<p>安装完成后, 脚本提示如下:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 卸载方法:</h3>
<p>使用 <code>root</code> 用户登录, 运行以下命令:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 查看进程是否存在</h3>
<p>安装完成后即已后台启动 shadowsocks , 运行:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 其他命令</h3>
<ul>
<li>启动: <code>/etc/init.d/shadowsocks start</code></li>
<li>停止: <code>/etc/init.d/shadowsocks stop</code></li>
<li>重启: <code>/etc/init.d/shadowsocks restart</code></li>
<li>查看状态: <code>/etc/init.d/shadowsocks status</code></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Hexo+NexT 进阶设置</title>
      <link>https://vxhly.github.io/views/nodejs/hexo-next-advanced-settings.html</link>
      <guid>https://vxhly.github.io/views/nodejs/hexo-next-advanced-settings.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Hexo+NexT 进阶设置</source>
      <description>前言 HEXO 博客最近大更新, 页面与之前大不相同, 这里跟大家分享一下相关的设置方法。</description>
      <category>nodejs</category>
      <pubDate>Sat, 28 Oct 2017 20:24:59 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>HEXO 博客最近大更新, 页面与之前大不相同, 这里跟大家分享一下相关的设置方法。</p>
</div>
<!-- more -->
<h2> highlight.js</h2>
<p><a href="https://highlightjs.org/" target="_blank" rel="noopener noreferrer">highlightjs 官方网站</a></p>
<p>Next 自带的代码高亮并不符合我的口味, 所以就采用了第三方的 <code>highlight.js</code></p>
<h2> Use</h2>
<h3> 编辑配置文件</h3>
<p>先禁用默认的高亮方式</p>
<p><code>./_config.yml</code></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 引入第三方 highlight</h3>
<h4> 编辑主题源文件</h4>
<p><code>./themes/layout/_layout.swing</code></p>
<p>注意这边需要引入样式, 相关的样式以及支持的语言请查看 <a href="https://highlightjs.org/static/demo/" target="_blank" rel="noopener noreferrer">176 languages and 79 styles</a></p>
<p>因为个人比较喜欢 <code>Atom</code> 这款编辑器, 改编辑器用默认的样式为 <code>atom-one-dark</code> , 所以这里采用该样式</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了引入样式, 还需初始化 highlightjs, 这里提供的代码是可以显示行号的</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到以上的代码是有添加 class 样式的, 所以还需补上相关的样式表, 以下的样式表在小分辨率的情况下行号是不显示出来的, 优化效果请参照本博客代码高亮区块</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> Copy</h2>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这边不就贴关键代码了, 请移步 <a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener noreferrer">clipboard.js</a> <a href="https://github.com/vxhly/vxhly.github.io/blob/blog-source/themes/next/layout/_layout.swig" target="_blank" rel="noopener noreferrer">_layout.swig</a></p>
</div>
<h2> 优化 blockquote</h2>
<p>默认的引用 blockquote 样式比较丑, 写了一些样式优化它, 优化效果请参照本博客的引用区块</p>
<h3> 编辑主题源文件</h3>
<p><code>./themes/layout/_layout.swing</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 网站已运行时间</h2>
<h3> 编辑主题源文件</h3>
<p><code>./themes/layout/_parrials/footer.swing</code></p>
<p>找到以下代码区块</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 <code>&lt;/div&gt;</code> 之前添加</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在该文件末尾处添加</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 开启页面动画效果</h2>
<h3> 编辑主题配置文件</h3>
<p><code>./themes/_config.yml</code></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 新的评论系统</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>自从多说和网易云跟帖都挂了之后, Next 官方引入了 Valine 这一款评论系统</p>
</div>
<h3> 关于 Valine 的介绍</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>请移步 <a href="https://ioliu.cn/2017/add-valine-comments-to-your-blog/" target="_blank" rel="noopener noreferrer">Valine -- 一款极简的评论系统</a>, 配置中出现 <code>leancloud application appid</code> 和 <code>leancloud application appkey</code> 获取方法也请看此链接</p>
</div>
<p>相关的配置指南 <a href="https://valine.js.org/" target="_blank" rel="noopener noreferrer">https://valine.js.org/</a></p>
<h3> 编辑主题配置文件</h3>
<p><code>./themes/_config.yml</code></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 使用最新的 Valine</h3>
<h4> 修改主题源码文件</h4>
<p><code>./themes/layout/_third-party/comments/valine.swig</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>在你的 VPS 服务器搭建 Ghost 博客系统</title>
      <link>https://vxhly.github.io/views/nodejs/insatll-ghost-on-your-vps.html</link>
      <guid>https://vxhly.github.io/views/nodejs/insatll-ghost-on-your-vps.html</guid>
      <source url="https://vxhly.github.io/rss.xml">在你的 VPS 服务器搭建 Ghost 博客系统</source>
      <description>前言 Ghost 采用 Node.js 编写, 默认使用 SQLite3 数据库, 非常轻量, 因为是文件型数据库, 所以无需安装。Ghost 允许多用户编写博文, 使用 Markdown 来编写博文。</description>
      <category>nodejs</category>
      <pubDate>Fri, 02 Jun 2017 14:53:49 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Ghost 采用 Node.js 编写, 默认使用 SQLite3 数据库, 非常轻量, 因为是文件型数据库, 所以无需安装。Ghost 允许多用户编写博文, 使用 Markdown 来编写博文。</p>
</div>
<!-- more -->
<h2> 下载 Ghost</h2>
<p><a href="http:////www.ghostchina.com/" target="_blank" rel="noopener noreferrer">Ghost 中文官网</a> <a href="http:////ghost.org/" target="_blank" rel="noopener noreferrer">Ghost 英文官网</a></p>
<h2> Ghost 中文集成版(推介)</h2>
<p><a href="http://dl.ghostchina.com/Ghost-0.7.4-zh-full.zip" target="_blank" rel="noopener noreferrer">最新版本: Ghost v0.7.4 full (zh)</a></p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>上方链接已失效, 米娜桑可以通过这个来下载 <a href="http://oss-blog.test.upcdn.net/Ghost-0.7.4-zh-full-master.zip" target="_blank" rel="noopener noreferrer">最新版本: Ghost v0.7.4 full (zh)</a></p>
</div>
<p>版本特色: 中文汉化、支持七牛、又拍云、阿里云 OSS 存储；增加 Roon 主题；集成 node_modules , 无需忍受 <code>npm install --production</code> 的麻烦。</p>
<h3> Ghost 中文标准版</h3>
<p><a href="http://dl.ghostchina.com/Ghost-0.7.4-zh.zip" target="_blank" rel="noopener noreferrer">最新版本: Ghost v0.7.4 (zh)</a></p>
<p>版本特色: 中文汉化、支持七牛、又拍云、阿里云 OSS 存储；增加 Roon 主题</p>
<h3> Ghost 英文原版</h3>
<p><a href="http://dl.ghostchina.com/Ghost-0.7.4.zip" target="_blank" rel="noopener noreferrer">最新版本: Ghost v0.7.4</a></p>
<h2> 安装前准备</h2>
<h3> VPS 服务器和域名</h3>
<p>VPS 个人服务器当然是必不可少的, 解析域名的的时候推介解析为 www</p>
<h3> Node.js</h3>
<p>Ghost 对 Node.js 版本号要求比较严格, Ghost 官方推荐使用 <code>Node 0.10.x</code> 版本, 同时支持 <code>Node 0.12.x</code> 和 <code>Node 4.2.x</code> 版本。</p>
<p>这边推介使用稳定版 <code>Node 4.2.x</code> 。</p>
<p>安装 Node 推介使用 <code>nvm</code> 安装。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 需要 Nginx 服务</h3>
<p>Ghost 默认监听的端口为 2368, 而且只监听本地的 IP 地址进行访问, 所以需要 Nginx 这个服务来转发流量</p>
<p>Ubuntu 下安装直接执行命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> Ghost+Web 服务器转发原理介绍</h3>
<p>官方文档建议使用 Nginx 作为 Ghost 的前端来转发 80 端口请求, 那么 Ghost 的工作总流程就可以描述为:</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Nginx 监听 80 端口, Ghost 一直监听本地 127.0.0.1:2368 端口, 你从外网访问 <a href="http://www.xxx.com" target="_blank" rel="noopener noreferrer">www.xxx.com</a> 时, Nginx 从 80 端口接收请求, 将之转发到本地 127.0.0.1:2368 端口, 然后 Ghost 就收到访问请求了。</p>
</div>
<p>可是为什么不直接让 Ghost 使用 80 端口呢却要依赖 Web 服务器转发呢？这是因为 Ghost 需要运行在 root 权限上, 为了避免风险, 就用 Nginx 转发一下。另外, Nginx 毕竟是 Web 服务器, 配置灵活、并发高, 用来做 Ghost 的前端是非常适合的, 如果你服务器上还有其他网站那就更要用 Nginx 了, 不然你的 80 端口给了 Ghost 就没法负载其他网站了。</p>
<h3> 解压文件</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 开始配置使用</h2>
<h3> 安装依赖</h3>
<p>如果你下载的不是 Ghost 中文集成版, 那么你就需要在你的项目目录下执行</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当然, 这需要翻墙, Ghost 所依赖的默认数据库 sqlite 包需要从国外服务器上（亚马逊的云存储服务）下载原生插件, 即使是翻墙了也未必能下载下来, 因为 sqlite 的原生插件没有通过 npm 分发。</p>
<h3> 配置 config.js</h3>
<p>解压缩之后会有一个 <code>config.example.js</code> 默认配置文件, 你需要把它复制重命名成 <code>config.js</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 配置 URL</h4>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意这边必须写上 <code>//</code> 或者 <code>//</code> , 这里写的 URL 就是以后注册账号和登录后台时所用的 URL, 必须完全一样, 如果注册时用的 URL 和这里的不一样, 那么就会出现错误提示说无权限访问！</p>
<h3> 配置 Nginx 服务进行转发</h3>
<p>打开 <code>/etc/nginx/nginx.conf</code> , 在 http 语句块内追加上:</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 重启 Nginx</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 配置 Apache 服务进行转发</h2>
<p>打开 <code>/etc/httpd/conf/httpd.conf</code></p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>再在文件末尾加上如下语句, 配置请求转发</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 重启 httpd 服务</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 启动 Ghost 服务</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>现在启动 Ghost 并访问域名已经能进入博客页面了, 但下面还需要实现 Ghost 后台运行, 不然你退了终端的话 Ghost 就停止了。</p>
<h3> 使用 Forever 让 Ghost 后台运行</h3>
<h4> 安装 forever 包</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 启动 Ghost</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 关闭 Ghost</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 重启动 Ghost</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 查看运行状态用这条命令</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 访问</h3>
<p>前台: <a href="http://www.yourdomian" target="_blank" rel="noopener noreferrer">http://www.yourdomian</a> 后台: <a href="http://www.yourdomian/ghost" target="_blank" rel="noopener noreferrer">http://www.yourdomian/ghost</a></p>
<h2> 拓展配置</h2>
<h3> Ghost 邮件系统设置详解</h3>
<p><a href="http://www.ghostchina.com/mail-configuration-on-self-hosted-version-of-ghost/" target="_blank" rel="noopener noreferrer">Ghost 邮件系统设置详解</a></p>
<h3> 为博客增加 "标签云"</h3>
<p><a href="http://www.ghostchina.com/output-tag-cloud/" target="_blank" rel="noopener noreferrer">为博客增加 "标签云"</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>使用 Hexo+NexT 在 Github 上搭建静态博客</title>
      <link>https://vxhly.github.io/views/nodejs/install-hexo-next-on-github.html</link>
      <guid>https://vxhly.github.io/views/nodejs/install-hexo-next-on-github.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 Hexo+NexT 在 Github 上搭建静态博客</source>
      <description>前言 Hexo 是一个快速, 简单而高效的静态博客框架, 本文将介绍如何在 GitHub 上使用 Hexo+NexT 搭建静态博客。</description>
      <category>nodejs</category>
      <pubDate>Wed, 03 Aug 2016 13:11:30 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Hexo 是一个快速, 简单而高效的静态博客框架, 本文将介绍如何在 GitHub 上使用 Hexo+NexT 搭建静态博客。</p>
</div>
<!-- more -->
<h2> 准备</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>你需要在 <a href="http://github.com/" target="_blank" rel="noopener noreferrer">Github</a> 上创建一个属于自己的账户, 然后新建一个仓库（new repository）, 并命名为 <a href="http://YourSiteName.github.io" target="_blank" rel="noopener noreferrer">YourSiteName.github.io</a>, 此时 Github 会帮助你初始化一个静态网页, 你可以根据自己的喜好选择一些模版（这都不是重点）, 接着尝试访问下你所建的站点, 成功后就可以开始动工了。</p>
</div>
<h3> Node.js 环境</h3>
<p>需安装 nvm, 任何版本皆可</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 安装 Git</h3>
<p>如果你的系统没有 git, 则必装</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> Hexo 初始化博客框架</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>参考链接<br> <a href="http://hexo.io/zh-cn/" target="_blank" rel="noopener noreferrer">Hexo 官网</a><br> <a href="http://hexo.io/zh-cn/docs/" target="_blank" rel="noopener noreferrer">Hexo 配置文档</a><br> <a href="http://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener noreferrer">Hexo 相关指令</a><br> <a href="http://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="noopener noreferrer">Hexo 主题</a></p>
</div>
<h3> 安装 Hexo</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 初始化框架</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 新建文章</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 <code>./source/_post</code> 里添加 <code>hello-world.md</code> 文件, 之后新建的文章都将存放在此目录下。</p>
<h4> 新建页面</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>./source/</code> 里添加 <code>tags</code> 和 <code>categories</code> 目录, 即标签页和分类页</p>
<h4> 取消标签页和分类页的评论功能</h4>
<p>标签页 <code>./source/categories/index.md</code></p>
<div class="language-markdown line-numbers-mode" data-ext="md"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分类页 <code>./source/tags/index.md</code></p>
<div class="language-markdown line-numbers-mode" data-ext="md"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 建议修改默认的文章模板</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改成</p>
<div class="language-markdown line-numbers-mode" data-ext="md"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 生成静态网站</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时会将 <code>/source</code> 的 <code>.md</code> 文件生成 <code>html</code> 文件到 <code>/public</code> 中, 形成网站的静态文件。</p>
<h3> 本地预览</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输入 <code>//localhost:3000</code> 即可查看网站, 若无指定端口号, 将采用默认端口 <code>4000</code> 。 使用 <code>Ctrl + C</code> 快捷键终止该进程</p>
<h3> 部署网站至 github</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 静态化且部署简化命令</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 部署网站前请配置</h4>
<p><code>./_config.yml</code></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 部署前请执行</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 使用 NexT 主题让站点更酷炫</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>参考链接<br> <a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener noreferrer">NexT 参考文档</a><br> <a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="noopener noreferrer">NexT 主题配置</a><br> <a href="http://theme-next.iissnan.com/third-party-services.html" target="_blank" rel="noopener noreferrer">NexT 第三方服务</a><br> <a href="http://theme-next.iissnan.com/faqs.html" target="_blank" rel="noopener noreferrer">更多的配置问题</a></p>
</div>
<h3> 下载主题</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 修改配置文件</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 验证主题效果</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>访问 <code>//localhost:4000</code> , 确保站点正确运行</p>
<h2> 站内搜索</h2>
<h3> 安装 hexo-generator-search</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 编辑配置文件</h3>
<p><code>./_config.yml</code></p>
<p>在任意位置添加以下内容</p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 编辑主题配置文件</h3>
<p><code>./themes/next/_config.yml</code></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 开启字数统计和阅读时长</h2>
<h3> 安装 hexo-wordcount</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 编辑主题配置文件</h3>
<p><code>./themes/next/_config.yml</code></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1> 我的配置（只写出部分配置）</h1>
<h2> 站点配置文件</h2>
<p><code>./_config.yml</code></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 主题配置文件文件</h2>
<p><code>./themes/next/_config.yml</code></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 腾讯公益 404 页面</h2>
<p><code>./themes/next/source/404.html</code></p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>基于 lerna + yarn workspaces 的 monorepo 项目实践</title>
      <link>https://vxhly.github.io/views/nodejs/learning-lerna-and-yarn-worspaces.html</link>
      <guid>https://vxhly.github.io/views/nodejs/learning-lerna-and-yarn-worspaces.html</guid>
      <source url="https://vxhly.github.io/rss.xml">基于 lerna + yarn workspaces 的 monorepo 项目实践</source>
      <description>前言 观察到 GitHub 上面有很多的开源项目使用到了 lerna 和 yarn workspaces 来管理项目中的多包依赖, 好奇起它的实现过程, 于是便写下本篇博文来记录我的填坑过程。</description>
      <category>nodejs</category>
      <pubDate>Mon, 26 Oct 2020 12:13:34 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>观察到 GitHub 上面有很多的开源项目使用到了 lerna 和 yarn workspaces 来管理项目中的多包依赖, 好奇起它的实现过程, 于是便写下本篇博文来记录我的填坑过程。</p>
</div>
<!-- more -->
<h2> 参考资料</h2>
<p>先贴上我的参考资料来源</p>
<ol>
<li>lerna 官网: <a href="https://lerna.js.org/" target="_blank" rel="noopener noreferrer">lerna.js.org/</a></li>
<li>lerna 仓库：<a href="https://github.com/lerna/lerna/" target="_blank" rel="noopener noreferrer">github.com/lerna/lerna/</a></li>
<li>yarn workspaces：<a href="https://classic.yarnpkg.com/zh-Hans/docs/workspaces" target="_blank" rel="noopener noreferrer">classic.yarnpkg.com/zh-Hans/docs/workspaces/</a></li>
</ol>
<p>当然也得感谢前人栽的树</p>
<ol>
<li><a href="https://juejin.im/post/6844903954329894920" target="_blank" rel="noopener noreferrer">Lerna 多包管理的搭建指南</a></li>
<li><a href="https://www.jianshu.com/p/8b7e6025354b" target="_blank" rel="noopener noreferrer">lerna 的基础使用</a></li>
</ol>
<h2> 背景</h2>
<p>团队内多项目开发经常会遇到以下几个问题</p>
<ol>
<li>新建项目需要重新配置各种工具, 繁琐, 虽然也可以用脚手架生成, 但后期涉及到依赖的升级也麻烦</li>
<li>项目内的依赖互相引用虽然有 yarn/npm link, 但还是影响开发体验</li>
<li>babel 等配置希望可以多项目共享</li>
</ol>
<h3> 前端开发 package 面临的问题</h3>
<p>在最初开开发 package 的时候, 还属于一种刀耕火种的阶段。没有什么自动化的工具。发布 package 的时候, 都是手动修改版本号(PS: 当然也可以通过脚本工具来升级版本号)。如果 packages 数量不多还可以接受。但是当数量逐渐增多的时候, 且这些 packages 之间还有依赖关系的时候, 在版本号上的管理无法形成统一, 这就对开发人员来说就很痛苦了。工作不仅繁琐, 而且需要用掉不少时间。</p>
<p>举个例子, 如果你要维护两个 package。分别为 module-1, module-2。</p>
<p>下面是这两个 package 的依赖关系。</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这样的环境下, module-1 是依赖 module-2 的。如果 module-2 有修改, 需要发布。那么你的工作有这些。</p>
<p>修改 module-2 版本号, 发布。修改 module-1 的依赖关系, 修改 module-1 的版本号, 发布。</p>
<p>这还仅仅只有两个 package, 如果依赖关系更复杂, 大家可以想想发布的工作量有多大。</p>
<h2> 什么是 lernaJs</h2>
<p>lernaJs 是由 Babel 团队出的一个多包管理工具, 是 GitHub 上面开源的一款 js 代码库管理软件, 用来对一系列相互耦合比较大、又相互独立的 js git 库进行管理。因为 Babel 包含很多子包, 以前都是放在多个仓库里的, 管理比较困难, 特别是有调用系统内包的时候, 发布比较麻烦。所以为了能更好更快的跨包管理, babel 推出了 lernaJs, 使用了 monorepo 的概念, 现在 React,Babel,Angular,Jest 都在使用这个工具来管理包。</p>
<p>对于一些功能比较全的库, 我们往往会把各个小功能拆分成独立的 npm 库, 他们直接有比较强的依赖关系。可以解决各个库之间修改混乱、难以跟踪的问题。lerna 可以优化这种情形下的工作流。</p>
<h2> 什么是 yarn workspaces</h2>
<p>Workspace 能更好的统一管理有多个项目的仓库, 既可在每个项目下使用独立的 package.json 管理依赖, 又可便利的享受一条 yarn 命令安装或者升级所有依赖等。更重要的是可以使多个项目共享同一个 node_modules 目录, 提升开发效率和降低磁盘空间占用。一句话总结就是可以大大简化对多个项目的统一管理。很多知名的开源项目也使用了 Yarn Workspace, 如 vue、react、jest 等使用 lerna 结合 yarn workspaces 各个 package 理论上都是独立的, 所以每个 package 都维护着自己的 dependencies, 而很大的可能性, package 之间有不少相同的依赖, 而这就可能使 install 时出现重复安装, 使本来就很大的 node_modues 继续膨胀。简单的说如果不使用 yarn workspaces 的话, 会导致在安装依赖时, 子包重复安装依赖项。使用 yarn workspaces 时, 我们就可以将这些依赖提至到工作根区。</p>
<h3> 代码库结构</h3>
<p>lerna 管理的库文件结构类似如下这样</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> lerna 主要做了什么</h3>
<ol>
<li>通过 lerna 的命令 <code>lerna bootstrap</code> 将会把代码库进行 link。</li>
<li>通过 <code>lerna publish</code> 发布最新改动的库</li>
</ol>
<h3> lerna 的更多知识</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这边不多阐述 lerna 的相关命令以及其的相关知识点, 有兴趣的贴上地址 <a href="/views/nodejs/usage-lerna.html" target="blank">lerna 的使用指南</a></p>
</div>
<h2> 什么是 monorepo</h2>
<p>monorepo 是比较于 multi-package 的。multi-package 就是建立多个仓库, 每个包建立一个仓库。而 monorepo 是建立一个仓库, 多个包都在这个仓库中管理, 这样可以有两个好处：</p>
<ol>
<li>各个包之间的沟通更加的方便, 如果 multi-package 的话, 系统内其中一个包修改, 需要单独发版, 而且引用这个包的其他包都需要发版。使用 lerna 的话可以自动管理这些包的发版, 很方便。</li>
<li>一些可以共用的配置, 比如 eslint,babel,rollup 等, 可以统一的管理这些开发配置。</li>
</ol>
<h2> 代码库的结构</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这边节选 <a href="https://github.com/vuejs/vue-next" target="_blank" rel="noopener noreferrer">vue-next</a> 的项目结构来讲解实现过程贴上我已经实现好的 <a href="https://github.com/vxhly/my-lerna-repo" target="_blank" rel="noopener noreferrer">my-lerna-repo</a></p>
</div>
<p>创建目录结构如下</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然你也可以通过 <code>lerna</code> 的命令来创建</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改你的 <code>lerna.json</code> 来支持 yarn workspaces</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还需要在 <code>package.json</code> 中添加以下配置来开启 yarn workspaces</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着就是安装依赖项, 你可以通过以下命令来安装</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>浅谈 Node.js 中的 npm</title>
      <link>https://vxhly.github.io/views/nodejs/talk-npm-on-node-js.html</link>
      <guid>https://vxhly.github.io/views/nodejs/talk-npm-on-node-js.html</guid>
      <source url="https://vxhly.github.io/rss.xml">浅谈 Node.js 中的 npm</source>
      <description>前言 主要介绍 npm 中的各个选项的作用以及其区别。npm 依赖于 Node.js, 童鞋们要注意你的系统是否有 Node.js 环境。</description>
      <category>nodejs</category>
      <pubDate>Fri, 26 Aug 2016 15:30:10 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>主要介绍 npm 中的各个选项的作用以及其区别。npm 依赖于 Node.js, 童鞋们要注意你的系统是否有 Node.js 环境。</p>
</div>
<!-- more -->
<h2> npm 是什么</h2>
<div class="hint-container tip">
<p class="hint-container-title">简介</p>
<p>NPM 的全称是 Node Package Manager, 是随同 Node.js 一起安装的包管理和分发工具, 它很方便让 JavaScript 开发者下载、安装、上传以及管理已经安装的包。</p>
</div>
<h2> npm install 安装模块</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>安装包, 默认会安装最新的版本, 最后所有的依赖会存放在 <code>node_modules</code> 目录下的, 如:</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 全局安装</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>只需加上 <code>-g</code> 或者 <code>--global</code> 参数, 就可以实现全局安装, 如:</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 安装指定版本</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> -S, --save</h2>
<h3> 添加模块命令</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 作用</h3>
<div class="hint-container tip">
<p class="hint-container-title">作用</p>
<p>自动把模块和版本号添加至 <code>package.json</code> 的 <code>dependencies</code> （生产阶段的依赖）部分, 避免了手动添加。</p>
</div>
<p><code>package.json</code> 文件的 <code>dependencies</code> 字段:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> -D, --save-dev</h2>
<h3> 添加模块命令</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 作用</h3>
<div class="hint-container tip">
<p class="hint-container-title">作用</p>
<p>自动把模块和版本号添加至 <code>package.json</code> 的 <code>devDependencies</code> （开发阶段的依赖）部分, 避免了手动添加。</p>
</div>
<p><code>package.json</code> 文件的 <code>devDependencies</code> 字段:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> -O, --save-optional</h2>
<h3> 添加模块命令</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 作用</h3>
<div class="hint-container tip">
<p class="hint-container-title">作用</p>
<p>自动把模块和版本号添加至 <code>package.json</code> 的 <code>optionalDependencies</code> （可选阶段的依赖）部分, 避免了手动添加。</p>
</div>
<p><code>package.json</code> 文件的 <code>optionalDependencies</code> 字段:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> -E, --save-exact</h2>
<h3> 添加模块命令</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 作用</h3>
<div class="hint-container tip">
<p class="hint-container-title">作用</p>
<p>自动把模块和版本号添加至 <code>package.json</code> 的 <code>dependencies</code> （精确安装指定模块版本）部分, 避免了手动添加。需要注意的是: <code>package.json</code> 文件的 <code>dependencies</code> 字段, 版本号中的 <code>^</code> 消失了</p>
</div>
<p><code>package.json</code> 文件的 <code>dependencies</code> 字段</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> npm 其他命令</h2>
<h3> 查看依赖包的所有的版本号</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 创建 package.json 文件</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>安装包的信息可保持到项目的 <code>package.json</code> 文件中, 以便后续的其它的项目开发或者他人合作使用, 也说 <code>package.json</code> 在项目中是必不可少的。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 安装模块</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>模块的依赖都被写入了 <code>package.json</code> 文件后, 他人打开项目的根目录（项目开源、内部团队合作）, 时, 只需一条命令就可以安装 <code>package.json</code> 中的依赖。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>加上 <code>--save</code> 会安装 <code>package.json</code> 中 <code>dependencies</code> 里的所有模块。 :::</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 卸载模块</h3>
<p>想要卸载模块也很简单。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>以上写法并不会改变 <code>package.json</code> 文件, 使用 <code>-S | --save | -D | --save-dev | -O | --save-optional</code> 选项即可删除 <code>package.json</code> 文件中的依赖。<br> 如使用 <code>--save</code> 选项, 将会删除 <code>package.json</code> 文件 <code>dependencies</code> 中的该模块名和版本号。</p>
</div>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 更新模块</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>从服务器下载最新版本的模块。需要注意的是, 最新版本的模块并不是最稳定的, 模块还是选择相对稳定的版本较好。支持 <code>-g</code> 选项。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 检查模块是否已经过时</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>此命令会列出所有已经过时的包, 可以及时进行包的更新.</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 启动模块</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>该命令写在 <code>package.json</code> 文件 <code>scripts</code> 的 <code>start</code> 字段中, 可以自定义命令来配置一个服务器环境和安装一系列的必要程序, 如:</p>
</div>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果 <code>package.json</code> 文件没有设置 <code>start</code> , 则将直接启动 <code>node server.js</code></p>
</div>
<h3> 停止模块</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 重新启动模块</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 更新模块</h3>
<p>可以安装全局插件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看最新的版本</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>升级至最新版本</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在使用下载最新的安装包</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当然, 如果所有包都是最新版本, 执行 ncu 后会提示:</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 查看包的安装路径</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>输出 node_modules 的路径, 支持 <code>-g</code> 选项。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 管理 npm 的配置路径</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>对于 config 这块用得最多应该是设置代理, 解决 npm 安装一些模块失败的问题</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 查看命令的帮助</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 区别</h2>
<ol>
<li><code>--save-dev</code> 是你开发时候依赖的东西； <code>--save</code> 是你发布之后还依赖的东西。</li>
<li><code>--save-optional</code> 是可选依赖, 非必下； <code>--save-exact</code> 可以指定精确的版本号, 也就是说当发布了新版本, 系统不会系在最新版本的模块, 只会下载该版本的模块。</li>
<li><code>npm install</code> 下载依赖时会安装 <code>package.json</code> 中 <code>dependencies</code> 和 <code>devDependencies</code> 里的所有模块。</li>
<li><code>npm install --save</code> 下载依赖时只会安装 <code>package.json</code> 中 <code>dependencies</code> 里的所有模块。</li>
<li>比如, 你写 <code>ES6</code> 代码, 如果你想编译成 <code>ES5</code> 发布那么 <code>babel</code> 就是 <code>devDependencies</code> 。</li>
<li>如果你用了 <code>jQuery</code> , 由于发布之后还是依赖 <code>jQuery</code> , 所以是 <code>dependencies</code> 。</li>
<li>最常用的还是 <code>npm</code> 中的 <code>--save</code> 和 <code>--save-dev</code> 选项。 <code>--save</code> 和 <code>--save-dev</code> 选项。</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>解读 npm 中的 package.json</title>
      <link>https://vxhly.github.io/views/nodejs/talk-package-json-on-npm.html</link>
      <guid>https://vxhly.github.io/views/nodejs/talk-package-json-on-npm.html</guid>
      <source url="https://vxhly.github.io/rss.xml">解读 npm 中的 package.json</source>
      <description>前言 package.json 是 Node.js 应用中比较重要的部分, 它定义了项目的依赖关系, 这里将介绍该文件各个配置项的作用。</description>
      <category>nodejs</category>
      <pubDate>Tue, 30 Aug 2016 17:08:18 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>package.json 是 Node.js 应用中比较重要的部分, 它定义了项目的依赖关系, 这里将介绍该文件各个配置项的作用。</p>
</div>
<!-- more -->
<h2> 创建 package.json 文件</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>安装包的信息可保持到项目的 <code>package.json</code> 文件中, 以便后续的其它的项目开发或者他人合作使用, 也说 <code>package.json</code> 在项目中是必不可少的。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> package.json 文件解读</h2>
<h3> 默认值</h3>
<p><code>npm</code> 会根据包内容设置一些默认值。</p>
<ul>
<li>
<p><code>"scripts": {"start": "node server.js"}</code> -- 如果包的根目录有 <code>server.js</code> 文件, <code>npm</code> 会默认将 <code>start</code> 命令设置为 <code>node server.js</code> 。</p>
</li>
<li>
<p><code>"scripts":{"preinstall": "node-waf clean || true;node-waf configure build"}</code> -- 如果包的根目录有 <code>wscript</code> 文件, <code>npm</code> 会默认将 <code>preinstall</code> 命令用 <code>node-waf</code> 进行编译。</p>
</li>
<li>
<p><code>"scripts":{"preinstall": "node-gyp rebuild"}</code> -- 如果包的根目录有 <code>binding.gyp</code> 文件, <code>npm</code> 会默认将 <code>preinstall</code> 命令用 <code>node-gyp</code> 进行编译。</p>
</li>
<li>
<p><code>"contributors": [...]</code> -- 如果包的根目录有 <code>AUTHORS</code> 文件, <code>npm</code> 会默认逐行按 <code>Name &lt;email(url)</code> 格式处理, 邮箱和 <code>url</code> 是可选的。 <code>#号</code> 和 <code>空格</code> 开头的行会被忽略。</p>
</li>
</ul>
<h3> name</h3>
<div class="hint-container tip">
<p class="hint-container-title">作用</p>
<p>在 <code>package.json</code> 中最重要的就是 <code>name</code> 和 <code>version</code> 字段。他们都是必须的, 如果没有就无法 <code>install</code> 。 <code>name</code> 和 <code>version</code> 一起组成的标识在假设中是唯一的。改变包应该同时改变 <code>version</code> 。<br> name 是这个东西的名字。注意:</p>
</div>
<ul>
<li>不要把 <code>node</code> 或者 <code>js</code> 放在名字中。因为你写了 <code>package.json</code> 它就被假定成为了 <code>js</code> , 不过你可以用 <code>"engine"字段</code> 指定一个引擎（见后文）。</li>
<li>这个名字会作为在 <code>URL</code> 的一部分、命令行的参数或者文件夹的名字。任何 <code>non-url-safe</code> 的字符都是不能用的。</li>
<li>这个名字可能会作为参数被传入 <code>require()</code> , 所以它应该比较短, 但也要意义清晰。</li>
<li>在你爱上你的名字之前, 你可能要去 <code>npm registry</code> 查看一下这个名字是否已经被使用了。<a href="http://registry.npmjs.org/" target="_blank" rel="noopener noreferrer">http://registry.npmjs.org/</a></li>
</ul>
<h3> version</h3>
<div class="hint-container tip">
<p class="hint-container-title">作用</p>
<p>在 <code>package.json</code> 中最重要的就是 <code>name</code> 和 <code>version</code> 字段。他们都是必须的, 如果没有就无法 <code>install</code> 。 <code>name</code> 和 <code>version</code> 一起组成的标识在假设中是唯一的。改变包应该同时改变 <code>version</code> 。<br> <code>version</code> 必须能被 <code>node-semver</code> 解析, 它被包在 <code>npm</code> 的依赖中。（要自己用可以执行 <code>npm install semver</code> ）</p>
</div>
<p>可用的"数字"或者"范围"见 <a href="http://npmjs.org/doc/misc/semver.html" target="_blank" rel="noopener noreferrer">semver</a>。</p>
<h3> description</h3>
<p>放简介, 字符串。方便屌丝们在 <code>npm search</code> 中搜索。</p>
<h3> keywords</h3>
<p>关键字, 数组、字符串。还是方便屌丝们在 <code>npm search</code> 中搜索。</p>
<h3> homepage</h3>
<p>项目官网的 <code>url</code> 。</p>
<p>注意: 这和 <code>“url”</code> 不一样。如果你放一个 <code>“url”</code> 字段, <code>registry</code> 会以为是一个跳转到你发布在其他地方的地址, 然后喊你滚粗。</p>
<p>嗯, 滚粗, 没开玩笑。</p>
<h3> bugs</h3>
<p>你项目的提交问题的 <code>url</code> 和（或） <code>邮件地址</code> 。这对遇到问题的屌丝很有帮助。 差不多长这样:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你可以指定一个或者指定两个。如果你只想提供一个 <code>url</code> , 那就不用对象了, 字符串就行。 如果提供了 <code>url</code> , 它会被 <code>npm bugs</code> 命令使用。</p>
<h3> license</h3>
<div class="hint-container tip">
<p class="hint-container-title">作用</p>
<p>你应该要指定一个许可证, 让人知道使用的权利和限制的。<br> 最简单的方法是, 假如你用一个像 <code>BSD</code> 或者 <code>MIT</code> 这样通用的许可证, 就只需要指定一个许可证的名字, 像这样:</p>
</div>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你又更复杂的许可条件, 或者想要提供给更多地细节, 可以这样:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在根目录中提供一个许可证文件也蛮好的。</p>
<h3> people fields: author, contributors</h3>
<p><code>author</code> 是一个人。 <code>contributors</code> 是一堆人的数组。 <code>person</code> 是一个有 <code>name</code> 字段, 可选的有 <code>url</code> 、 <code>email</code> 字段的对象, 像这样:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者可以把所有的东西都放到一个字符串里, <code>npm </code> `会给你解析:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>email</code> 和 <code>url</code> 在两种形式中都是可选的。</p>
<p>也可以在你的 <code>npm</code> 用户信息中设置一个顶级的 <code>maintainers</code> 字段。</p>
<h3> files</h3>
<p><code>files</code> 是一个包含项目中的文件的数组。如果命名了一个文件夹, 那也会包含文件夹中的文件。（除非被其他条件忽略了）</p>
<p>你也可以提供一个 <code>.npmignore</code> 文件, 让即使被包含在 <code>files</code> 字段中得文件被留下。其实就像 <code>.gitignore</code> 一样。</p>
<h3> main</h3>
<p><code>main</code> 字段配置一个文件名指向模块的入口程序。如果你包的名字叫 <code>foo</code> , 然后用户 <code>require("foo")</code> , <code>main</code> 配置的模块的 <code>exports</code> 对象会被返回。</p>
<p>这应该是一个相对于根目录的文件路径。</p>
<p>对于大多数模块, 它是非常有意义的, 其他的都没啥。</p>
<h3> bin</h3>
<p>很多包都有一个或多个可执行的文件希望被放到 <code>PATH</code> 中。 <code>npm</code> 让妈妈再也不用担心了（实际上, 就是这个功能让 <code>npm</code> 可执行的）。</p>
<p>要用这个功能, 给 <code>package.json</code> 中的 <code>bin</code> 字段一个命令名到文件位置的 <code>map</code> 。初始化的时候 <code>npm</code> 会将他链接到 <code>prefix/bin（全局初始化）</code> 或者 <code>./node_modules/.bin/（本地初始化）</code> 。</p>
<p>比如, <code>npm</code> 有:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以, 当你初始化 <code>npm</code> , 它会创建一个符号链接到 <code>cli.js</code> 脚本到 <code>/usr/local/bin/npm</code> 。</p>
<p>如果你只有一个可执行文件, 并且名字和包名一样。那么你可以只用一个字符串, 比如:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果和这个一样:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> man</h3>
<p>指定一个单一的文件或者一个文件数组供 <code>man</code> 程序使用。如果只提供一个单一的文件, 那么它初始化后就是 <code>man &lt;pkgname&gt;</code> 的结果, 而不管实际的文件名是神马, 比如:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样 <code>man foo</code> 就可以用到 <code>./man/doc.1</code> 文件了。</p>
<p>如果文件名不是以包名开头, 那么它会被冠以前缀, 下面的:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>会为 <code>man foo</code> 和 <code>man foo-bar</code> 创建文件。</p>
<p><code>man</code> 文件需要以数字结束, 然后可选地压缩后以 <code>.gz</code> 为后缀。</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>会为 <code>man foo</code> 和 <code>man 2 foo</code> 创建。</p>
<h3> directories</h3>
<p><code>CommonJS Packages</code> 规范说明了几种方式让你可以用 <code>directorieshash</code> 标示出包得结构。如果看一下 <code>npm's package.json</code> , 你会看到有 <code>directories</code> 标示出 doc, lib, and man。</p>
<p>在未来, 这个信息可能会被用到。</p>
<h3> directories.lib</h3>
<p>告诉屌丝们你的库文件夹在哪里。目前没有什么特别的东西需要用到 <code>lib</code> 文件夹, 但确实是重要的元信息。</p>
<h3> directories.bin</h3>
<p>如果你指定一个 <code>"bin"</code> 目录, 然后在那个文件夹中得所有文件都会被当做 <code>"bin"</code> 字段使用。<br> 如果你已经指定了 <code>"bin"</code> 字段, 那这个就无效。</p>
<h3> directories.man</h3>
<p>一个放满 <code>man</code> 页面的文件夹。贴心地创建一个 <code>"man"</code> 字段。</p>
<h3> directories.doc</h3>
<p>将 <code>markdown</code> 文件放在这里。最后, 这些会被很好地展示出来,</p>
<h3> directories.example</h3>
<p>将事例脚本放在这里。某一天, 它可能会以聪明的方式展示出来。</p>
<h3> repository</h3>
<div class="hint-container tip">
<p class="hint-container-title">作用</p>
<p>指定你的代码存放的地方。这个对希望贡献的人有帮助。如果 git 仓库在 github 上, 那么 npm docs 命令能找到你。</p>
</div>
<p>这样做:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>URL</code> 应该是公开的（即便是只读的）能直接被未经过修改的版本控制程序处理的 <code>url</code> 。不应该是一个 html 的项目页面。因为它是给计算机看的。</p>
<h3> scripts</h3>
<p><code>"scripts"</code> 是一个由脚本命令组成的 <code>hash</code> 对象, 他们在包不同的生命周期中被执行。 <code>key</code> 是生命周期事件, <code>value</code> 是要运行的命令。<br> 参见 <a href="http://npmjs.org/doc/misc/npm-scripts.html" target="_blank" rel="noopener noreferrer">npm-scripts</a></p>
<h3> config</h3>
<p><code>"config" hash</code> 可以用来配置用于包脚本中的跨版本参数。在实例中, 如果一个包有下面的配置:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后有一个 <code>“start”</code> 命令引用了 <code>npm_package_config_port</code> 环境变量, 用户可以通过 <code>npm config set foo:port 8001</code> 来重写他。</p>
<p>参见 <a href="http://npmjs.org/doc/misc/npm-config.html" target="_blank" rel="noopener noreferrer">npm-config</a> 和 <a href="http://npmjs.org/doc/misc/npm-scripts.html" target="_blank" rel="noopener noreferrer">npm-scripts</a>。</p>
<h3> dependencies</h3>
<div class="hint-container tip">
<p class="hint-container-title">作用</p>
<p>依赖是给一组包名指定版本范围的一个 <code>hash</code> 。这个版本范围是一个由一个或多个空格分隔的字符串。依赖还可以用 <code>tarball</code> 或者 <code>git URL</code> 。<br> 请不要将测试或过渡性的依赖放在 <code>dependencieshash</code> 中。见下文的 <code>devDependencies</code> 。<br> 详见 <a href="http://npmjs.org/doc/misc/semver.html" target="_blank" rel="noopener noreferrer">semver</a></p>
</div>
<ul>
<li><code>version</code> 必须完全和 <code>version</code> 一致</li>
<li><code>&gt;version</code> 必须比 <code>version</code> 大</li>
<li><code>&gt;=version</code> 同上</li>
<li><code>&lt;version</code> 同上</li>
<li><code>&lt;=version</code> 同上</li>
<li><code>~version</code> 大约一样, 见 <a href="http://npmjs.org/doc/misc/semver.html" target="_blank" rel="noopener noreferrer">semver</a></li>
<li><code>1.2.x</code> , <code>1.2.0</code> , <code>1.2.1</code> , 等, 但不包括 <code>1.3.0</code></li>
<li><code>//...</code> 见下文 <code>'依赖 URL'</code></li>
<li><code>*</code> 所有</li>
<li><code>""</code> 空, 同 <code>*</code></li>
<li><code>version1 - version2</code> 同 <code>&gt;=version1 &lt;=version2</code></li>
<li><code>range1 || range2</code> 二选一。</li>
<li><code>git...</code> 见下文 <code>'依赖Git URL'</code></li>
<li><code>user/repo</code> 见下文 <code>'GitHub URLs'</code> 比如下面都是合法的:</li>
</ul>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 依赖 URL</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>可以指定一个 <code>tarball URL</code> , 这个 <code>tarball</code> 将在包被初始化的时候下载并初始化。</p>
</div>
<h3> 依赖 Git URL</h3>
<p><code>Git urls</code> 可以是下面几种形式:</p>
<ul>
<li>git: <a href="https://github.com/user/project.git#commit-ish" target="_blank" rel="noopener noreferrer">https://github.com/user/project.git#commit-ish</a></li>
<li>git+ssh: <a href="https://user@hostname:project.git#commit-ish" target="_blank" rel="noopener noreferrer">https://user@hostname:project.git#commit-ish</a></li>
<li>git+ssh: <a href="https://user@hostname/project.git#commit-ish" target="_blank" rel="noopener noreferrer">https://user@hostname/project.git#commit-ish</a></li>
<li>git+<a href="https://user@hostname/project/blah.git#commit-ish" target="_blank" rel="noopener noreferrer">https://user@hostname/project/blah.git#commit-ish</a></li>
<li>git+<a href="https://user@hostname/project/blah.git#commit-ish" target="_blank" rel="noopener noreferrer">https://user@hostname/project/blah.git#commit-ish</a></li>
</ul>
<p><code>commit-ish</code> 是可以被 <code>git checkout</code> 的任何 <code>tag、sha</code> 或者 <code>branch</code> 。默认为 <code>master</code> 。</p>
<h3> GitHub URLs</h3>
<p><code>1.1.65</code> 版后, 你可以仅仅用 <code>“user/foo-project”</code> 引用 <code>GitHub urls</code> , 比如:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> devDependencies</h3>
<div class="hint-container tip">
<p class="hint-container-title">作用</p>
<p>如果有人要使用你的模块, 那么他们可能不需要你开发使用的外部测试或者文档框架。<br> 在这种情况下, 最好将这些附属的项目列在 <code>devDependencies</code> 中。</p>
</div>
<p>这些东西会在执行 <code>npm link</code> 或者 <code>npm install</code> 的时候初始化, 并可以像其他 <code>npm</code> 配置参数一样管理。详见 <a href="http://npmjs.org/doc/misc/npm-config.html" target="_blank" rel="noopener noreferrer">npm-config</a>。</p>
<p>对于非特定平台的构建步骤, 比如需要编译 <code>CoffeeScript</code> , 可以用 <code>prepublish</code> 脚本去实现, 并把它依赖的包放在 <code>devDependency</code> 中。（注: <code>prepublish</code> 定义了在执行 <code>npm publish</code> 的时候先行执行的脚本）</p>
<p>比如:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>prepublish</code> 脚本会在 <code>publishing</code> 前运行, 这样用户就不用自己去 <code>require</code> 来编译就能使用。并且在开发模式中（比如本地运行 <code>npm install</code> ）会运行这个脚本以便更好地测试。</p>
<h3> peerDependencies</h3>
<div class="hint-container tip">
<p class="hint-container-title">作用</p>
<p>在一些场景中, 如在一个 <code>host</code> 中不必须进行 <code>require</code> 时候, 你想表现你的 <code>package</code> 与一个 <code>host</code> 工具或者库的兼容关键。这一般用来引用插件。尤其是你的模块可能要暴露一个特定的接口, 并由 <code>host</code> 文档来预期和指定。</p>
</div>
<p>比如:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这能保证你的 <code>package</code> 可以只和 <code>tea</code> 的 <code>2.x 版本</code> 一起初始化。</p>
<p>试图初始化另一个有会冲突的依赖的插件将导致一个错误。因此, 确保你的插件的需求约束越弱越好, 而不要去把它锁定到一个特定的版本。</p>
<p>假设这个 <code>host</code> 遵守 <code>semver</code> 规范, 只改变这个 <code>package</code> 的主版本会打破你的插件。因此, 如果你在 <code>package</code> 中用过每个 <code>1.x 版本</code> , 就用 <code>"^1.0"</code> 或者 " <code>1.x"</code> 来表示。如果你依赖于功能介绍 <code>1.5.2</code> , 用 <code>"&gt;= 1.5.2 &lt; 2"</code> 。</p>
<h3> bundledDependencies</h3>
<div class="hint-container tip">
<p class="hint-container-title">作用</p>
<p>一组包名, 他们会在发布的时候被打包进去。<br> 拼成 <code>"bundleDependencies"</code> （缺 d）也可以: <code>optionalDependencies</code> 。</p>
</div>
<p>如果一个依赖可用, 但你希望在它安装错误的时候 <code>npm</code> 也能继续初始化, 那么你可以把它放在 <code>optionalDependencies hash</code> 中。这是一个包名到版本或者 <code>url</code> 的 <code>map</code> , 就像 <code>dependencies hash</code> 一样。只是它运行错误。</p>
<p>处理缺乏依赖也是你的程序的责任。比如像这样:</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>optionalDependencies</code> 会覆盖 <code>dependencies</code> 中同名的项, 所以通常比只放在一个地方好。</p>
<h3> engines</h3>
<p>你可以指定工作的 <code>node</code> 的版本:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">作用</p>
<p>像 <code>dependensies</code> 一样, 如果你不指定版本或者指定 <code>"*"</code> 作为版本, 那么所有版本的 <code>node</code> 都可以。</p>
</div>
<p>如果指定一个 <code>"engines"</code> 字段, 那么 <code>npm</code> 会需要 <code>node</code> 在里面, 如果 <code>"engines"</code> 被省略, <code>npm</code> 会假定它在 <code>node</code> 上工作。</p>
<p>你也可以用 <code>"engines"</code> 字段来指定哪一个 <code>npm</code> 版本能更好地初始化你的程序, 如:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>记住, 除非用户设置 <code>engine-strict</code> 标记, 这个字段只是建议值。</p>
<h3> engineStrict</h3>
<p>如果你确定你的模块一定不会运行在你指定版本之外的 <code>node</code> 或者 <code>npm</code> 上, 你可以在 <code>package.json</code> 文件中设置 <code>"engineStrict":true</code> 。它会重写用户的 <code>engine-strict</code> 设置。</p>
<p>除非你非常非常确定, 否则不要这样做。如果你的 <code>engines hash</code> 过度地限制, 很可能轻易让自己陷入窘境。慎重地考虑这个选择。如果大家滥用它, 它会再以后的 <code>npm</code> 版本中被删除。</p>
<h3> os</h3>
<p>你可以指定你的模块要运行在哪些操作系统中:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你也可以用黑名单代替白名单, 在名字前面加上"!"就可以了:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>操作系统用 <code>process.platform</code> 来探测。虽然没有很好地理由, 但它是同时支持黑名单和白名单的。</p>
<h3> cpu</h3>
<p>如果你的代码只能运行在特定的 <code>cpu</code> 架构下, 你可以指定一个:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>就像 <code>os</code> 选项, 你也可以黑一个架构:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>cpu</code> 架构用 <code>process.arch</code> 探测。</p>
<h3> preferGlobal</h3>
<p>如果包主要是需要全局安装的命令行程序, 就设置它为 <code>true</code> 来提供一个 <code>warning</code> 给只在局部安装的人。<br> 它不会真正的防止用户在局部安装, 但如果它没有按预期工作它会帮助防止产生误会。</p>
<h3> private</h3>
<p>如果你设置 <code>"private": true</code> , <code>npm</code> 就不会发布它。<br> 这是一个防止意外发布私有库的方式。如果你要确定给定的包是只发布在特定 <code>registry</code> （如内部 <code>registry</code> ）的, 用 <code>publishConfighash</code> 的描述来重写 <code>registry</code> 的 <code>publish-time</code> 配置参数。</p>
<h3> publishConfig</h3>
<div class="hint-container tip">
<p class="hint-container-title">作用</p>
<p>这是一个在 <code>publish-time</code> 使用的配置集合。当你想设置 <code>tag</code> 或者 <code>registry</code> 的时候它非常有用, 所以你可以确定一个给定的包没有打上 <code>"lastest"</code> 的 <code>tag</code> 或者被默认发布到全局的公开 <code>registry</code> 。</p>
</div>
<p>任何配置都可以被重写, 但当然可能只有 <code>"tag"</code> 和 <code>"registry"</code> 与发布的意图有关。</p>
<p>参见 <a href="http://npmjs.org/doc/misc/npm-config.html" target="_blank" rel="noopener noreferrer">npm-config</a> 有可以被重写的列表。</p>
<h3> SEE ALSO</h3>
<ul>
<li>semver</li>
<li>npm-init</li>
<li>npm-version</li>
<li>npm-config</li>
<li>npm-config</li>
<li>npm-help</li>
<li>npm-faq</li>
<li>npm-install</li>
<li>npm-publish</li>
<li>npm-rm</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>lerna 的使用指南</title>
      <link>https://vxhly.github.io/views/nodejs/usage-lerna.html</link>
      <guid>https://vxhly.github.io/views/nodejs/usage-lerna.html</guid>
      <source url="https://vxhly.github.io/rss.xml">lerna 的使用指南</source>
      <description>前言 从 GitHub 上找到了比较多的仓库开始采用 lerna 来管理仓库的多包依赖, 也逐渐发现 lerna 的管理模式确实比较好, so 现贴上我的填坑笔记。</description>
      <category>nodejs</category>
      <pubDate>Sun, 25 Oct 2020 14:49:11 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>从 GitHub 上找到了比较多的仓库开始采用 lerna 来管理仓库的多包依赖, 也逐渐发现 lerna 的管理模式确实比较好, so 现贴上我的填坑笔记。</p>
</div>
<!-- more -->
<h2> 参考资料</h2>
<p>先贴上我的参考资料来源</p>
<ol>
<li>lerna 官网: <a href="https://lerna.js.org/" target="_blank" rel="noopener noreferrer">lerna.js.org/</a></li>
<li>lerna 仓库：<a href="https://github.com/lerna/lerna/" target="_blank" rel="noopener noreferrer">github.com/lerna/lerna/</a></li>
</ol>
<p>当然也得感谢前人栽的树</p>
<ol>
<li><a href="https://www.jianshu.com/p/8b7e6025354b" target="_blank" rel="noopener noreferrer">lerna 的基础使用</a></li>
<li><a href="https://www.jianshu.com/p/63ec67445b0f" target="_blank" rel="noopener noreferrer">lerna 入门篇</a></li>
</ol>
<h2> 什么是 lernaJs</h2>
<p>lernaJs 是由 Babel 团队出的一个多包管理工具, 是 GitHub 上面开源的一款 js 代码库管理软件, 用来对一系列相互耦合比较大、又相互独立的 js git 库进行管理。因为 Babel 包含很多子包, 以前都是放在多个仓库里的, 管理比较困难, 特别是有调用系统内包的时候, 发布比较麻烦。所以为了能更好更快的跨包管理, babel 推出了 lernaJs, 使用了 monorepo 的概念, 现在 React, Babel, Angular, Jest 都在使用这个工具来管理包。</p>
<p>对于一些功能比较全的库, 我们往往会把各个小功能拆分成独立的 npm 库, 他们直接有比较强的依赖关系。可以解决各个库之间修改混乱、难以跟踪的问题。lerna 可以优化这种情形下的工作流。</p>
<p>简单的说, lernaJs 是用于管理具有多个包的 JavaScript 的项目工具。(官网原话为：<code>Lerna is a tool that optimizes the workflow around managing multi-package repositories with git and npm.</code>)</p>
<p>引入 lerna 后, 我们可以解决以下这些问题</p>
<ol>
<li>自动解决 packages 之间的依赖关系</li>
<li>通过 <code>git</code> 检测文件改动, 自动发布</li>
<li>根据 <code>git</code> 提交记录, 自动生成 <code>CHANGELOG</code></li>
</ol>
<h3> 代码库结构</h3>
<p>lerna 管理的库文件结构类似如下这样</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> lerna 主要做了什么</h3>
<ol>
<li>通过 lerna 的命令 <code>lerna bootstrap</code> 将会把代码库进行 link。</li>
<li>通过 <code>lerna publish</code> 发布最新改动的库</li>
</ol>
<h2> lerna 如何工作的</h2>
<p>默认 lerna 有两种管理模式, 固定模式和独立模式</p>
<h3> 固定模式</h3>
<p>固定模式, 通过 lerna.json 的版本进行版本管理。当你执行 <code>lerna publish</code> 命令时, 如果距离上次发布只修改了一个模块, 将会更新对应模块的版本到新的版本号, 然后你可以只发布修改的库。</p>
<p>这种模式也是 Babel 使用的方式。如果你希望所有的版本一起变更, 可以更新 minor 版本号, 这样会导致所有的模块都更新版本。</p>
<h3> 独立模式</h3>
<p>独立模式, init 的时候需要设置选项 <code>--independent</code> 。独立模式允许管理者对每个库单独改变版本号, 每次发布的时候, 你需要为每个改动的库指定版本号。这种情况下, <code>lerna.json</code> 的版本号不会变化了, 默认为 <code>independent</code> 。</p>
<h2> lerna.json 解析</h2>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li><code>version</code> , 当前库的版本</li>
<li><code>npmClient</code> , 允许指定命令使用的 client, 默认是 npm, 可以设置成 yarn</li>
<li><code>command.publish.ignoreChanges</code> , 可以指定那些目录或者文件的变更不会被 publish</li>
<li><code>command.bootstrap.ignore</code> , 指定不受 bootstrap 命令影响的包</li>
<li><code>command.bootstrap.npmClientArgs</code> , 指定默认传给 <code>lerna bootstrap</code> 命令的参数</li>
<li><code>command.bootstrap.scope</code> , 指定那些包会受 <code>lerna bootstrap</code> 命令影响</li>
<li><code>packages</code> , 指定包所在的目录</li>
<li><code>useWorkspaces</code> , 支持使用 yarn workspaces</li>
</ul>
<h2> 相关命令</h2>
<h3> 安装和初始化 lerna 项目</h3>
<p>安装 lernajs</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>初始化 lernaJs 项目</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>复制代码执行后, 会自动生成一个由 lerna 管理的 monorepo。</p>
<p>其文件结构如下：</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 添加子包</h3>
<p>环境初始好以后, 首先需要添加一个子包, 添加子包的命令如下</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行这个命令后, 会问一些包名啊, 版本等问题和执行 npm init 后问的差不多, 填完这些问题后包就会自动创建一个子包。子包默认的目录结构如下</p>
<h3> 为子包单独安装依赖</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你的仓库里的子包需要互相依赖也可用以上命令来安装</p>
<p>例如：子包 1 为 '@demo/packageName1', 子包 2 为 '@demo/packageName2', 要为子包 1 安装子包 2 的依赖, 你可以这样做, 注意要在项目的根目录执行以下命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 为仓库安装依赖</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以上命令可以为仓库安装所有子包的依赖</p>
<h3> 发布和更新 package</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>发布当前项目他创建一个新的 release, 生成新的版本, 执行 <code>git commit/tag</code> 并发布到 npm</p>
<p>发布项目里的每个模块执行 <code>lerna updated</code> 确定是否需要发布假如需要发布 给 lerna.json 版本号做自增更新 package.json 里的版本号至最新为新版本更新 dependencies 为新版本创建一个 git commit 和 tag 发布更新项目到 npm 一次发布所有 packages, 删除 <code>lerna-temp</code> <code>tags</code> 和增加 tags 到 latest 通过在 package.json 中标记 <code>"private": true</code> , 将使该包不发布</p>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>以@开头包的发布问题</p>
</div>
<p>发布 package 的名字如果是以@开头的, 例如 @feu/tools, npm 默认以为是私人发布, 需要使用 <code>npm publish --access public</code> 发布。但是 <code>lerna publish</code> 不支持该参数, 解决方法参考: <a href="https://github.com/lerna/lerna/issues/914" target="_blank" rel="noopener noreferrer">issues</a></p>
<p>方案参考:</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> options</h4>
<h5> canary</h5>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>可以用来独立发布每个 commit, 不打 tag</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 删除子包中的依赖项</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>从所有软件包中删除 <code>node_modules</code> 目录。 <code>lerna clean</code> 尊重 <code>--ignore</code> 和 <code>--scope</code> 标志（请参阅标志）。</p>
]]></content:encoded>
    </item>
    <item>
      <title>使用 nvm 安装 Node.js</title>
      <link>https://vxhly.github.io/views/nodejs/usage-nvm-to-install-node-js.html</link>
      <guid>https://vxhly.github.io/views/nodejs/usage-nvm-to-install-node-js.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 nvm 安装 Node.js</source>
      <description>前言 安装 Node.js 的最佳方式是使用 nvm。nvm 最开始是在 Mac OS 下开发的, 所以 Mac OS 下同样使用 nvm 安装 Node.js。</description>
      <category>nodejs</category>
      <pubDate>Sun, 31 Jul 2016 15:11:44 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>安装 Node.js 的最佳方式是使用 nvm。nvm 最开始是在 <code>Mac OS</code> 下开发的, 所以 <code>Mac OS</code> 下同样使用 nvm 安装 Node.js。</p>
</div>
<!-- more -->
<h2> 下载 nvm</h2>
<h3> 通过 curl 下载（需要安装 curl）</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 通过 wget 下载（liunx 下载命令）</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 重启终端, 安装 Node.js</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 设定 Node.js 的默认版本</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 查看 Node.js 和 npm 版本号</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> npm 淘宝换源</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>npm 加载的模块, 多数是国外源的, 所以很容易被墙, 解决办法, 除了翻墙, 还有就是 npm 换源, 使用国内源, 但是本人还是推介使用国外源, 因为国外源较国内源稳定、全面。</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 cnpm 安装模块</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>使用 pnpm 释放你的磁盘空间</title>
      <link>https://vxhly.github.io/views/nodejs/usage-pnpm.html</link>
      <guid>https://vxhly.github.io/views/nodejs/usage-pnpm.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 pnpm 释放你的磁盘空间</source>
      <description>前言 主要介绍 pnpm 的使用, 以及如何使用 pnpm 解决 node 依赖包庞大的问题。pnpm 依赖于 Node.js, 童鞋们要注意你的系统是否有 Node.js 环境。</description>
      <category>nodejs</category>
      <pubDate>Wed, 19 Aug 2020 14:14:13 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>主要介绍 pnpm 的使用, 以及如何使用 pnpm 解决 node 依赖包庞大的问题。pnpm 依赖于 Node.js, 童鞋们要注意你的系统是否有 Node.js 环境。</p>
</div>
<!-- more -->
<h2> pnpm 是什么</h2>
<p>先上官方的文档 <a href="https://pnpm.js.org/en/" target="_blank" rel="noopener noreferrer">pnpm 的官方文档</a></p>
<div class="hint-container tip">
<p class="hint-container-title">简介</p>
<p>官方文档中有这么一句：</p>
<p>pnpm uses a content-addressable filesystem to store all files from all module directories on a disk.</p>
<p>中文翻译过来的大概意思是：</p>
<p>pnpm 使用内容可寻址文件系统将磁盘上所有模块目录中的所有文件存储在磁盘上。</p>
</div>
<p>简单的说</p>
<p>pnpm 是一个更为高效的 node.js 的包管理器, 类似于 npm 和 yarn。pnpm 结合了 npm 和 yarn 的优点, 它会在本地进行缓存依赖项, 加快了下载速度</p>
<p>pnpm 的原理是会为当前项目下的依赖项在当前磁盘下创建一份 store, 这个 store 存放的信息为依赖项的版本号信息, 用于 pnpm 二次下载时进行陈旧版本检测使用的</p>
<p>pnpm 还会为当前项目的 node_modules 下创建一个 .pnpm 的一个依赖项存储位置, 在其他依赖项中如果引用了相同的依赖项它会采用硬链接的形式链接到这个位置</p>
<p>这里寻找到 pnpm 的缺点是：</p>
<ul>
<li>pnpm 在每次 install 的时候, 都会去检测陈旧依赖项的版本号信息, 如果项目的依赖项版本号并未进行更新的话, 这一过程无非是比较耗时的</li>
<li>不得与 npm 和 yarn 进行混用, 例如使用了 pnpm 安装了一个依赖项, 在使用 npm 或 yarn 进行安装依赖项时并不会将依赖项安装到指定的目录下, 这就违背了 pnpm 的设计初衷</li>
<li>虽然不得与 npm 和 yarn 进行混用, 但是仍然可以使用 npm 或者 yarn 执行项目配置的命令, 这个并不会受到影响</li>
</ul>
<p>以上的这些缺点, 我们可以通过对 pnpm 的简单的配置规避掉上方的问题</p>
<h2> npm 与 yarn 与 pnpm 的比较</h2>
<h3> npm</h3>
<p>1）同步下载：安装多个包时会使用从事件队列中读取事件的同步下载模式进行安装依赖；</p>
<p>2）本地缓存：npm 会在安装依赖后产生本地缓存, 加快再次重新安装时的下载速度；</p>
<p>3）层级关系复杂：npm 在安装多个依赖包时, 会先遍历各个依赖包, 生成这些包关系树, 这也是 npm 安装时时间慢的一大主要原因；</p>
<p>4）不稳定, 抛出错误不明显：当某个安装包版本变更后, 在终端编译时会造成抛出错误, 这也是有时候同一份代码你能用别人用不了的原因, 更致命的是, 安装依赖出错时, 抛出错误后并不会停止执行后面的事件, 因此, 如果后面的安装包依赖于出错的安装包, 会报出一堆错误, 你甚至无法得知究竟是哪个包出了问题, 因此大部分时间都是整个删除整个重装 node_modules;</p>
<ol start="5">
<li>在 npm5 中, 官方解决了因为版本不一致造成崩溃的问题, 但是需要用户手动执行 npm shrinkwrap 命令, 从而生成一个 package-lock.json 文件, 该文件包含了包的具体信息和版本等内容, 在安装时会首先进行检测, 安装对应版本。</li>
</ol>
<p>6）在线安装：需要用到互联网</p>
<h3> yarn</h3>
<ol>
<li>异步下载：多个安装包同时下载, 解决下载慢的问题；</li>
</ol>
<p>2）本地缓存：同 npm 一样, 会进行本地缓存, 再次下载先从本地获取</p>
<p>3）简化命令：对比 npm, 命令更加简短, 语义更加明确</p>
<p>4）包依赖关系扁平化：npm 会按依赖层级来读取底层包名称, 当层级够深时, windows 下会造成调用数量超限的报错, 而 yarn 则直接取到底层包名称。</p>
<p>5）指定版本安装, 更加稳定：npm 的稳定性一直是一个问题, yarn 解决了这个问题：在使用 yarn 安装时, 会自动生成一个叫做 yarn.lock 的文件, 该文件包含了当前依赖包的版本信息和对应的校验规则, 在安装新的包之后, 会自动更新, 解决了版本库不对应造成的编译错误。</p>
<p>6）提供离线模式：即使没有互联网依旧可以使用</p>
<h3> pnpm</h3>
<ol>
<li>运行速度超过 npm 和 yarn</li>
</ol>
<p>2）采用硬链接和符号链接避免复制本地缓存源文件, 解决了 yarn 的一大弱点</p>
<ol start="3">
<li>
<p>提供离线模式：即使没有互联网依旧可以使用</p>
</li>
<li>
<p>异步下载：多个安装包同时下载, 解决下载慢的问题；</p>
</li>
</ol>
<h2> pnpm 的简单使用</h2>
<p>首先我们先全局安装 pnpm</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>pnpm 的一些命令与 npm 的都大同小异, 下方例举几个常用的命令, 具体的不做过多的阐述</p>
<h3> install</h3>
<p>安装项目的依赖项</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> update</h3>
<p>更新项目的依赖项</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> add</h3>
<p>安装项目的某一个依赖项</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> store</h3>
<p>向本地的存储中安装一个依赖包</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> .npmrc 文件解析</h2>
<p>使用过 node 的同学都知道, npm 会在全局创建一个 .npmrc 文件, 这个文件通常用于存放 npm 的相关配置信息, 例如 npm 的下载软件源</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 pnpm 中提供了几个配置项, 而这几个配置项正是 node 工程下实现多个项目共用 node_modules 的核心重点（pnpm 的 .npmrc 的具体官方说明：pnpm 中.npmrc 的配置项）下面例举可能会使用到的配置项</p>
<h3> virtual-store-dir</h3>
<p>这个配置项的作用是用于存放工程依赖项的实际链接位置, 也是依赖包的缓存目录, 默认值为 node_modules/.pnpm, 即为当前工程下的 node_modules/.pnpm</p>
<p>上原文的解释</p>
<div class="hint-container tip">
<p class="hint-container-title">原文</p>
<p>Added in: v4.1.0</p>
<ul>
<li>Default: <em>node_modules/.pnpm</em></li>
<li>Types: <em>path</em></li>
</ul>
<p>The directory with links to the store. All direct and indirect dependencies of the project are linked into this directory.</p>
<p>This is a useful setting that can solve issues with long paths on Windows. If you have some dependencies with very long paths, you can select a virtual store in the root of your drive (for instance <code>C:\my-project-store</code> ).</p>
<p>Or you can set the virtual store to <code>.pnpm</code> and add it to <code>.gitignore</code> . This will make the stacktraces nicer as paths to dependencies will have one directory less.</p>
<p><em>NOTE</em>: the virtual store cannot be shared between several projects. Every project should have its own virtual store.</p>
</div>
<h3> store-dir</h3>
<p>这个配置项的作用是存放所有依赖项的的所有版本号信息, 用于 pnpm 进行陈旧性检测, 默认值为 ~/.pnpm-store（在 linux 下指向的是用户目录 ~, 在 Windows 下指向的是当前的磁盘根目录）</p>
<p>上原文的解释</p>
<div class="hint-container tip">
<p class="hint-container-title">原文</p>
<p>Added in: v4.2.0 (renamed from store)</p>
<ul>
<li>Default: <em>~/.pnpm-store</em></li>
<li>Type: <em>path</em></li>
</ul>
<p>The location where all the packages are saved on the disk.</p>
<p>The store should be always on the same disk on which installation is happening. So there will be one store per disk. If there is a home directory on the current disk, then the store is created in <code>&lt;home dir&gt;/.pnpm-store</code> . If there is no homedir on the disk, then the store is created in the root. For example, if installation is happening on disk D then the store will be created in <code>D:\.pnpm-store</code> .</p>
<p>It is possible to set a store from a different disk but in that case pnpm will copy, not link, packages from the store. Hard links are possible only inside a filesystem.</p>
</div>
<h3> package-import-method</h3>
<p>这个配置项的作用是用于指定依赖包导入的方式, 默认值为 auto, 会自动判断是否需要从网上的源进行下载操作</p>
<p>上原文的解释</p>
<div class="hint-container tip">
<p class="hint-container-title">原文</p>
<p>Added in: v1.25.0</p>
<ul>
<li>Default: <em>auto</em></li>
<li>Type: <em>auto</em>, <em>hardlink</em>, <em>copy</em>, <em>clone</em></li>
</ul>
<p>Controls the way packages are imported from the store.</p>
<p><em>auto</em> - try to clone packages from the store. If cloning is not supported then hardlink packages from the store. If neither cloning nor linking is possible, falls back to copying <em>hardlink</em> - hardlink packages from the store <em>copy</em> - copy packages from the store <em>clone</em> - clone (aka copy-on-write or reflink) packages from the store</p>
</div>
<h3> shamefully-hoist</h3>
<p>这个配置项允许我们在安装依赖项时, 默认值为 false, node_modules 目录像 npm 的一样, 因为 pnpm 默认生成的 node_modules 是属于半严格的树形结构</p>
<p>上原文的解释</p>
<div class="hint-container tip">
<p class="hint-container-title">原文</p>
<p>Added in: v1.34.0 (Renamed from <code>shamefully-flatten</code> in v4.0.0)</p>
<ul>
<li>Default: <em>false</em></li>
<li>Type: <em>Boolean</em></li>
</ul>
<p>By default, pnpm creates a semistrict <code>node_modules</code> . It means that your dependencies have access to undeclared dependencies but your code does not. With this layout, most of the packages in the ecosystem work with no issues. However, if some tooling only works when the hoisted dependencies are in the root of <code>node_modules</code> , you can set this config to <code>true</code> .</p>
</div>
<h3> link-workspace-packages</h3>
<p>这个配置项允许我们在安装依赖项的时候, 将所有的子项目依赖项安装到项目的根目录下, 默认值为 true</p>
<p>上原文的解释</p>
<div class="hint-container tip">
<p class="hint-container-title">原文</p>
<p>Added in: v2.14.0</p>
<ul>
<li>Default: <em>true</em></li>
<li>Type: <em>true</em>, <em>false</em>, <em>deep</em></li>
</ul>
<p>When <code>true</code> , locally available packages are linked to <code>node_modules</code> instead of being downloaded from the registry. This is very convenient in a monorepo. If you need local packages also be linked to subdependencies, you can use the <code>deep</code> setting (since v5).</p>
<p>When <code>false</code> , packages are downloaded and installed from the registry. However, workspace packages can still be linked by using the <code>workspace:</code> range protocol. e.g. <code>pnpm add batman@workspace:*</code> <em>Usage</em></p>
<p>Create a <code>.npmrc</code> file in the root of your monorepo with the following content:</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Create a <code>pnpm-workspace.yaml</code> file with the following content:</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Run <code>pnpm recursive install</code> .</p>
</div>
<h3> registry</h3>
<p>定义了 npm 的下载软件源, 需要注意的是：如果采用私有源的话, 私有源的软件包一定要全, 要和官方源一致（否则在 install 的时候会出现某些依赖项安装失败而出现的问题）</p>
<p>上原文的解释</p>
<div class="hint-container tip">
<p class="hint-container-title">原文</p>
<ul>
<li>Default: <a href="https://registry.npmjs.org/" target="_blank" rel="noopener noreferrer">https://registry.npmjs.org/</a></li>
<li>Type: <em>url</em></li>
</ul>
<p>The base URL of the npm package registry.</p>
</div>
<h2> 为什么要优化 node_modules</h2>
<p>最初的 npm 包管理, 是全局共享的, 类似 java 的 maven 仓库, 但是由于前端的 npm 包是经常修改和重新发布的, 这就涉及到一个包版本问题, 不同的项目有可能依赖不同版本的包, 所以 npm 后续版本把仓库独立到各自工程去了, 这样处理最明显的坏处是：</p>
<ul>
<li>每次都需要安装依赖, 费流量, 网速慢时很费时间</li>
<li>浪费磁盘空间, 每个 node_modules 中包含的工具很多, 动辄 200M</li>
</ul>
<p>而好处是：</p>
<ul>
<li>使用 package.json 安装好之后, node_modules 文件夹中没有版本信息, 删掉 package.json 也不会有任何影响。</li>
<li>移动/复制/打包项目比较简单, 对于开发、部署都有好处</li>
<li>对于设计 npm 的人来说, 这是最省事的包依赖方法。这就好比 maven 安装依赖之后自动将 jar 包安装到项目的 lib 里面。</li>
<li>随意改代码。安装在 node_modules 里面的东西, 你可以随便改, 无需担心对其它项目的影响。在 Java 中使用 maven 管理项目时, 如果想要定制某个库, 就需要更改这个库的源代码,</li>
<li>这时就需要把这个库的源代码复制到项目中, 跟 node_modules 是一个道理。npm 的设计者大概认为：前端都是经常修改库的源代码的。</li>
</ul>
<h2> 解决思路和方案</h2>
<p>我们采用 pnpm 的最终就是为了能够解决多个工程下共用一个 node_modules, 并且能够提升我们的 install 速度, 这里采用到的是 pnpm 中 pnpm workspace 这一特性, 这一特性允许我们将子工程的依赖项全部安装到同一个目录下, 而且会保留子工程中的所依赖的不同版本</p>
<p>准备一个项目工程, 工程目录结构如下</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>依据 pnpm 中 <a href="https://pnpm.js.org/en/workspaces" target="_blank" rel="noopener noreferrer">pnpm workspace</a> 这一特性, 需要我们指定哪一个目录是 pnpm 工作区的根目录, 还必须在这个根目录下提供 pnpm-workspace.yaml, 注意.npmrc 文件不是必须的, 如果没有这个文件 pnpm 会按照它默认的配置为我们安装依赖项, 我们需要指定 pnpm 的 stor 目录以及 virtual-store 目录以及其他的一些配置, 所以才创建了这个文件</p>
<p>这边找到的不采用工作区的缺点, 假设我们的子工程下的同一个依赖项有着不同的版本号, 于是在子工程中执行 pnpm install 的时候, pnpm 会将依赖项安装到指定目录下, 但是两个工程的 virtual-store 目录 是一致的话, 并不能成功的安装多个版本的依赖项（pnpm 为采用最新的版本依赖项, 而将旧版本的依赖项进行删除, 最后导致旧版本的依赖项链接失败）, 而采用了工作区正好可以解决这一个问题, 它会在工作区的根下创建一个锁文件, 这个锁文件包含了工程下的所有依赖项信息, 每一个工程的依赖项信息都是独立的</p>
<p>我们指定 common 文件夹即是 pnpm 工作区的跟路径, 在这个文件夹里面创建 pnpm-workspace.yaml 和 .npmrc 文件</p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后我们还需要对 <code>.npmrc</code> 文件进行一定的配置, 配置如下</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后我们在 common 文件目录下执行 pnpm install, 之后我们观察到子工程中的 node_modules 目录的大小实际不到 100kb, common 目录下的 node_modules 也在 300M 到 500M, 其余 i 的依赖项大多数都是链接到 common 文件夹下的 node_modules/.pnpm 这个目录</p>
<p>但是, 在运行 npm run serve 的时候, 继而发现了一个严峻的问题</p>
<p>比如在 <code>babel.config.js</code> 中配置了 <code>@babel/preset-env</code> 这一个配置项, 然而在 <code>package.json</code> 中并没有此项依赖, 在该工程的 node_modules 下也没有找到它的链接</p>
<p>接着尝试在子工程中也创建 <code>.npmrc</code> 这个文件, 文件内容如下</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后再次在子工程中执行 pnpm install, 之后我们观察到子工程中的 node_modules 目录的大小会适当的加大了几百 kb, 因为我们又为子工程安装了一些链接不到的依赖项, 这一操作是为了安装子工程中没有链接到 common 目录下的依赖包, 不过不用担心, 在第一个子工程中执行的时候会比较耗时, 大概在 1~2 分钟, 然后在其他的子工程中再次执行的时候, 几乎不占时间的为子工程创建链接（除非这个依赖项在 common 中找不到）</p>
<p>这里需要注意的是 common 下面配置的 registry 和子工程下配置的 registry 是需要一致的, 否则 pnpm 为我们安装不同软件源的依赖项, 这一过程是多余的</p>
]]></content:encoded>
    </item>
    <item>
      <title>使用 vuepress 更新我的博客</title>
      <link>https://vxhly.github.io/views/nodejs/vuepress-blog-on-github.html</link>
      <guid>https://vxhly.github.io/views/nodejs/vuepress-blog-on-github.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 vuepress 更新我的博客</source>
      <description>前言 嗯～, 没错, 博客又迎来一次重大的更新, 此次更新不再采用 hexo 这个静态博客解决方案, 将采用 vuepress 这一静态博客解决方案。本博文将会从搭建博客到部署上线进行较详细的介绍。</description>
      <category>nodejs</category>
      <pubDate>Mon, 28 Oct 2019 16:14:34 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>嗯～, 没错, 博客又迎来一次重大的更新, 此次更新不再采用 hexo 这个静态博客解决方案, 将采用 vuepress 这一静态博客解决方案。本博文将会从搭建博客到部署上线进行较详细的介绍。</p>
</div>
<!-- more -->
<h2> 开始你的博客</h2>
<h3> 前期准备</h3>
<p><a href="https://vuepress.vuejs.org/zh/plugin/" target="_blank" rel="noopener noreferrer">VuePress 官方文档</a>, 不管怎样这份文档多多少少都得阅读一遍吧</p>
<p><a href="https://vuepress-theme-reco.recoluan.com/" target="_blank" rel="noopener noreferrer">vuepress-theme-reco 博客主题文档</a>, 如果你用的博客主题和我的一样的话, 这份文档也该阅读一遍吧, 如果不是的话或是你找到了更加优秀主题的话请你私信给我</p>
<h3> 安装博客主题 CLI</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 创建一份基础的 DEMO</h3>
<p>命令行会已一问一答的方式指引你创建一份新的博客, 按照提示进行配置即可</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 安装依赖</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 预览</h3>
<p>这一步可分为开发模式预览和线上模式预览。 开发模式预览指未发布前自己个儿边写博文边看效果（PS：可自动刷新浏览器）；线上模式预览指准备发布了,打包之后查看线上的效果</p>
<h4> 开发模式预览</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4> 线上模式预览</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 新的一篇文章</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>该博客主题 CLI 没有像 hexo 的 CLI 一样提供创建文章的功能, 所以在此自己就撸了个 CLI 工具, 有需要的向下看</p>
</div>
<p>上 GitHub 地址: <a href="https://github.com/vxhly/vuepress-article-cli" target="_blank" rel="noopener noreferrer">vuepress-article-cli</a></p>
<h3> 安装 CLI 工具</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 使用</h3>
<p>新建一篇文章</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/nodejs-cli-1.png" alt="nodejs-cli" tabindex="0" loading="lazy"><figcaption>nodejs-cli</figcaption></figure>
<p>批量删除文章</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/nodejs-cli-2.png" alt="nodejs-cli" tabindex="0" loading="lazy"><figcaption>nodejs-cli</figcaption></figure>
<p>创建模版文件</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/nodejs-cli-3.png" alt="nodejs-cli" tabindex="0" loading="lazy"><figcaption>nodejs-cli</figcaption></figure>
<h2> 进阶配置</h2>
<p>经过上面的一系列折腾, 就能开始使用 VuePress 这个博客了</p>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>以下只提供 <a href="https://vuepress-theme-reco.recoluan.com/" target="_blank" rel="noopener noreferrer">vuepress-theme-reco 博客主题文档</a> 中未提及的配置项</p>
</div>
<h3> last-updated</h3>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>无需重新按照该插件, 直接进入配置即可, 这个插件也可不进行配置, 至于为啥要在本博文中写出（PS： 默认显示的时间格式可读性比较差, 所以需要进行格式化一下）</p>
</div>
<p>显示最后的更新时间插件, 先上插件文档 <a href="https://vuepress.vuejs.org/zh/plugin/official/plugin-last-updated.html" target="_blank" rel="noopener noreferrer">@vuepress/last-updated</a></p>
<p>再上配置, <code>/.vuepress/config.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> medium-zoom</h3>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>无需重新按照该插件, 直接进入配置即可</p>
</div>
<p>插件大图预览, 先上插件文档 <a href="https://vuepress.vuejs.org/zh/plugin/official/plugin-pwa.html" target="_blank" rel="noopener noreferrer">@vuepress/medium-zoom</a></p>
<p>再上配置, <code>/.vuepress/config.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> pwa</h3>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>你的 VPS 服务器必须支持 HTTPS, 否则 PWA 将会失效, 当然如果你和我一样使用 GitHub 的 pages 服务的话, 就无须担心这一点<br> 必须重新依赖该插件, 否则尽管配置了也不会加载 pwa</p>
</div>
<p>插件 PWA（PS：关于 PWA 的知识戳这里 <a href="https://lavas.baidu.com/pwa" target="_blank" rel="noopener noreferrer">PWA</a>）, 先上插件文档 <a href="https://vuepress.vuejs.org/zh/plugin/official/plugin-pwa.html" target="_blank" rel="noopener noreferrer">@vuepress/pwa</a></p>
<p>按照文档中的步骤来, 第一：在 <code>.vuepress/public</code> 提供 <code>Manifest</code> 和 <code>icons</code></p>
<p>一份 <code>manifest.json</code> 的例子</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来就是 <code>icons</code> 了, 根据你配置的 <code>manifest.json</code> 进行裁剪图标即可</p>
<p>第二：在 <code>.vuepress/config.js</code> 中添加配置（PS：该步骤略过, 文档中已经提供了）</p>
<p>部署之后, 你会神奇的发现在你浏览器地址栏的右边出现了一个 <code>+</code> 号的图标, 小主可点击本博客上的 <code>+</code> 号的图标查看效果</p>
<h3> copyright</h3>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>必须重新依赖该插件, 否则尽管配置了也不会加载</p>
</div>
<p>指定页面复制行为的插件, 先上插件文档 <a href="https://vuepress.github.io/zh/plugins/copyright/#vuepress-plugin-copyright" target="_blank" rel="noopener noreferrer">vuepress-plugin-copyright</a></p>
<p>再上配置, <code>/.vuepress/config.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> clipboard-copy</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>此插件纯粹是自己为了配合上一个插件自己写的一份一键复制插件, 暂未发布, 下面贴出代码供米娜桑参考（PS：效果米娜桑可以对下面的代码进行一键复制即可看到）</p>
</div>
<p><code>clipboard-copy.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>clientRootMixin.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>style.css</code></p>
<div class="language-css line-numbers-mode" data-ext="css"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> nest</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>自己个写的对接 <a href="https://github.com/hustcc/canvas-nest.js" target="_blank" rel="noopener noreferrer">canvas-nest.js</a> 的一个插件</p>
</div>
<p>页面 canvas-nest 背景插件, 先上插件文档 <a href="https://github.com/vxhly/vuepress-plugin-nest" target="_blank" rel="noopener noreferrer">vuepress-plugin-nest</a></p>
<p>再上配置, <code>/.vuepress/config.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> sitemap</h3>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>如果你的网站希望被搜索引擎搜索到的话, 强烈这个插件需要安装</p>
</div>
<p>生成站点地图插件, 先上插件文档 <a href="https://github.com/ekoeryanto/vuepress-plugin-sitemap" target="_blank" rel="noopener noreferrer">vuepress-plugin-sitemap</a></p>
<p>再上配置, <code>/.vuepress/config.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 部署上线</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>下面提供的是 <code>GitHub Pages</code> + <code>Travis CI</code> 的部署上线方式, 如果你有更简单的或者更好的方式请你一定私信给我<br> 部分未提及的配置或者其他部署方式, 看这里 <a href="https://vuepress.vuejs.org/zh/guide/deploy.html" target="_blank" rel="noopener noreferrer">VuePress 部署</a></p>
</div>
<h3> 自动向 GitHub 提交代码脚本</h3>
<p>在你的项目目录中创建 <code>deploy.sh</code> , 自行修改下方中的注释行代码</p>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>这边的分支不能提交到 master 分支上, 因为 GitHub Pages 服务中指定了 master 分支为静态页面发布分支, 所以需要在本地创建一个名为 gh-pages 的分支, 我们的博客源码全部托管在这个分支上（当然你也可以叫其他名字）</p>
</div>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 自动化脚本</h3>
<p>在你的项目目录中创建 <code>.travis.yml</code> , 更多的配置项戳这里 <a href="https://docs.travis-ci.com/user/deployment" target="_blank" rel="noopener noreferrer">Travis CI Deployment</a></p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 自动化部署</h3>
<h4> GitHub Actions</h4>
<p>在项目中创建 <code>.github</code> 文件夹, GitHub Actions 将会自动执行该目录下的所有 .yml 文件</p>
<div class="language-yaml line-numbers-mode" data-ext="yml"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> Travis CI</h4>
<div class="hint-container warning">
<p class="hint-container-title">非常重要</p>
<p>需要想你的仓库中正确提交你的 package-lock.json, 否则 Travis CI 在执行 <code>npm ci</code> 时可能会发生错误<br> 当然如果你并不想这么做的的话, 可以将 <code>npm ci</code> 替换成 <code>npm install</code></p>
</div>
<p>首先进入 <a href="https://travis-ci.org/" target="_blank" rel="noopener noreferrer">travis-ci 官网</a>, 将对应的项目启用 Travis CI</p>
<figure><img src="/assets/vuepress-blog-1.png" alt="vuepress-blog" tabindex="0" loading="lazy"><figcaption>vuepress-blog</figcaption></figure>
<p>点进去之后可以进行更多的配置</p>
<figure><img src="/assets/vuepress-blog-2.png" alt="vuepress-blog" tabindex="0" loading="lazy"><figcaption>vuepress-blog</figcaption></figure>
<p>生成你的 GitHub Token, 首先获取这个 token, 进入 Github 设置, 左下的 Developer settings</p>
<figure><img src="/assets/vuepress-blog-3.png" alt="vuepress-blog" tabindex="0" loading="lazy"><figcaption>vuepress-blog</figcaption></figure>
<p>添加描述, 这里只需勾选 <code>repo</code> , 如果需要其他的配置自行勾选</p>
<figure><img src="/assets/vuepress-blog-4.png" alt="vuepress-blog" tabindex="0" loading="lazy"><figcaption>vuepress-blog</figcaption></figure>
<p>保存之后将会生成的 token, 将生成的 token 放入 Travis 配置中</p>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>这边配置的变量名需要和 <code>.travis.yml</code> 中指定的名字一样, 这边使用的变量名为 GITHUB_TOKEN</p>
</div>
<figure><img src="/assets/vuepress-blog-5.png" alt="vuepress-blog" tabindex="0" loading="lazy"><figcaption>vuepress-blog</figcaption></figure>
<p>至此, 你可以进行发布代码操作了, 执行下面的命令即可将代码提交到你的 GitHub 上了</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>代码提交之后 Travis 也开始对你提交的代码进行编译操作了, 编译成功之后将会自动的把 <code>public</code> 目录提交到你的 master 分支了</p>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>状态颜色一定要是绿色才代表编译并且部署成功了</p>
</div>
<figure><img src="/assets/vuepress-blog-6.png" alt="vuepress-blog" tabindex="0" loading="lazy"><figcaption>vuepress-blog</figcaption></figure>
<h3> 拓展阅读</h3>
<p>NPM 5.7.0 引入了一种新的安装依赖的方式：</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>它是从 <code>package-lock.json</code> 文件安装依赖, 具有快以及可靠优点, 关于速度的比较引用官方图</p>
<figure><img src="/assets/vuepress-blog-7.png" alt="vuepress-blog" tabindex="0" loading="lazy"><figcaption>vuepress-blog</figcaption></figure>
<p>官方有下面补充：</p>
<ul>
<li>项目里面必须存在 <code>package-lock.json</code> 或 <code>npm-shrinkwrap.json</code> .</li>
<li>如果 <code>package lock</code> 里面依赖和 <code>package.json</code> 不一致, <code>npm ci</code> 会报错并且退出, 而不是更新 <code>package lock</code> 文件</li>
<li><code>npm ci</code> 只能一次性安装整个工程的依赖, 不能使用这个命令单独添加依赖</li>
<li>如果 <code>node_modules</code> 文件夹存在, 它会在安装依赖之前删除这个文件夹</li>
<li>它不会改变 <code>package.json</code> 或者任何 <code>package-locks</code></li>
</ul>
<div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>如果想要使 vuepress 支持编译 node_modules 目录下的 jsx 代码时（前端框架 vue）, 可进行下列操作</p>
</div>
<p>先安装 jsx 的转换依赖 <a href="https://www.npmjs.com/package/@vue/babel-preset-jsx" target="_blank" rel="noopener noreferrer">@vue/babel-preset-jsx</a></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装 babel 的环境包</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>.vuepress/config.js</code> 中添加以下代码</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/nodejs-cli-1.png" type="image/png"/>
    </item>
    <item>
      <title>SQL 语法基础</title>
      <link>https://vxhly.github.io/views/other/sql-grammar.html</link>
      <guid>https://vxhly.github.io/views/other/sql-grammar.html</guid>
      <source url="https://vxhly.github.io/rss.xml">SQL 语法基础</source>
      <description>前言 整理了下 SQL 语法基础, 适用于 SQL server 和 MySQL, 本博文皆为实例 SQL 语句仅供参考。</description>
      <category>other</category>
      <pubDate>Tue, 23 Jan 2018 17:04:08 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>整理了下 SQL 语法基础, 适用于 SQL server 和 MySQL, 本博文皆为实例 SQL 语句仅供参考。</p>
</div>
<!-- more -->
<h2> 概念</h2>
<h3> 基本概念</h3>
<ul>
<li>数据库中的行称作 <code>元组</code> 、 <code>记录</code></li>
<li>数据库中的列称作 <code>属性</code> 、 <code>字段</code></li>
<li>常见数据库模型 <code>层次模型</code> <code>网状模型</code> <code>关系模型</code> <code>对象关系模型</code> <code>对象模型</code></li>
</ul>
<h3> 表约束</h3>
<ul>
<li>主键约束（Primay Key Coustraint） 唯一性, 非空性</li>
<li>唯一约束 （Unique Counstraint）唯一性, 可以空, 但只能有一个</li>
<li>检查约束 (Check Counstraint) 对该列数据的范围、格式的限制（如: 年龄、性别等）</li>
<li>默认约束 (Default Counstraint) 该数据的默认值</li>
<li>外键约束 (Foreign Key Counstraint) 需要建立两表间的关系并引用主表的列</li>
</ul>
<h3> CURD</h3>
<ul>
<li>创建（Create）</li>
<li>更新（Update）</li>
<li>读取（Retrieve）</li>
<li>删除（Delete）</li>
</ul>
<h2> 数据库</h2>
<h3> 创建</h3>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 删除</h3>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 创表</h2>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 约束</h2>
<h3> 主键约束</h3>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 唯一约束</h3>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 默认约束</h3>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 检查约束</h3>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 外键约束</h3>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 删除</h2>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 更新</h2>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 查询</h2>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 统计</h2>
<p>假设 Student 表中共有 20 行记录, 其中有效性别行数为 18</p>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Angularjs 学习笔记</title>
      <link>https://vxhly.github.io/views/other/study-angularjs-notes.html</link>
      <guid>https://vxhly.github.io/views/other/study-angularjs-notes.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Angularjs 学习笔记</source>
      <description>前言 Angularjs 1.0 的学习笔记。</description>
      <category>other</category>
      <pubDate>Mon, 01 Apr 2019 16:44:20 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Angularjs 1.0 的学习笔记。</p>
</div>
<!-- more -->
<h2> 依赖注入</h2>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 内联式注入</h3>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 推断型注入</h3>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 声明式注入</h3>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 双向绑定</h2>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>更新 MySQL root 的密码</title>
      <link>https://vxhly.github.io/views/other/update-mysql-root-password.html</link>
      <guid>https://vxhly.github.io/views/other/update-mysql-root-password.html</guid>
      <source url="https://vxhly.github.io/rss.xml">更新 MySQL root 的密码</source>
      <description>前言 最近在 ubuntu 系统上安装了 MySQL, 但是安装时没有提示输入 root 用户密码, 网上胡乱找了一通, 这才知道 MySQL 5.7 以上版本的 root 密码都是随机生成的, 所以这里提供解决 MySQL 5.7 版本的 root 用户重置密码问题。</description>
      <category>other</category>
      <pubDate>Thu, 06 Sep 2018 19:19:17 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>最近在 ubuntu 系统上安装了 MySQL, 但是安装时没有提示输入 root 用户密码, 网上胡乱找了一通, 这才知道 MySQL 5.7 以上版本的 root 密码都是随机生成的, 所以这里提供解决 MySQL 5.7 版本的 root 用户重置密码问题。</p>
</div>
<!-- more -->
<h2> 安装 MySQL</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装之后可以使用下面的命令来检查是否安装成功</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> 登录 MySQL</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输入密码, 如果可以进入则下面的不用看了；如果提示不能登入, 则我们尝试启用安全模式登入 MySQL, 这样可以绕过密码登入, 登入后再修改密码。</p>
<h2> 修改密码</h2>
<h3> 修改配置文件</h3>
<p><code>my.cnf</code> =&gt; 不同系统的配置文件名以及存放路径不一致, 但一定能在 <code>/etc/mysql</code> 里找到</p>
<p>在 [mysqld] 小节下添加一行, 这一行配置让 mysqld 启动时不对密码进行验证</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改完成之后保存重启 MySQL 服务</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 无密码登录 MySQL 修改密码</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行以下操作</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 完成配置重启</h3>
<p>删掉或者注释 <code>skip-grant-tables=1</code> 该行配置</p>
<p>修改完成之后保存重启 MySQL 服务</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>之后使用设置的密码登录即可</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> 附上完全卸载 MySQL 命令</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Liunx 安全加固命令集合</title>
      <link>https://vxhly.github.io/views/pentest/liunx-security-command.html</link>
      <guid>https://vxhly.github.io/views/pentest/liunx-security-command.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 安全加固命令集合</source>
      <description>前言 收集 Liunx 系统安全加固时, 发现系统漏洞, 修复系统, 加固系统信息等命令集合。</description>
      <category>pentest</category>
      <pubDate>Sat, 20 May 2017 14:22:42 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>收集 Liunx 系统安全加固时, 发现系统漏洞, 修复系统, 加固系统信息等命令集合。</p>
</div>
<!-- more -->
<h2> find</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> lsof</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> arp</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> getent</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> chattr</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>渗透基础知识</title>
      <link>https://vxhly.github.io/views/pentest/pentest-basic-knowledge.html</link>
      <guid>https://vxhly.github.io/views/pentest/pentest-basic-knowledge.html</guid>
      <source url="https://vxhly.github.io/rss.xml">渗透基础知识</source>
      <description>前言 整理的渗透所需的一些基础知识。</description>
      <category>pentest</category>
      <pubDate>Sun, 03 Sep 2017 19:54:18 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>整理的渗透所需的一些基础知识。</p>
</div>
<!-- more -->
<h2> HTML 表单基础</h2>
<ol>
<li>该表单是提交给哪个文件进行处理的（查看 action 属性值）</li>
<li>向后端程序提交的参数是什么（查看 name 属性）</li>
</ol>
<h2> SQL 数据库查询语句基础</h2>
<ol>
<li>查询返回所有的结果</li>
</ol>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2">
<li>条件查询</li>
</ol>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3">
<li>union 合并多个查询结果</li>
</ol>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol>
<li>... ...</li>
</ol>
<h2> 万能用户名或者万能密码</h2>
<ol>
<li>第一种</li>
</ol>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2">
<li>第二种</li>
</ol>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3">
<li>第三种</li>
</ol>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4">
<li>... ...</li>
</ol>
<h2> 使用 PDO 进行防注入基础</h2>
<ol>
<li>允许长连接</li>
</ol>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2">
<li>不允许使用预处理语句</li>
</ol>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3">
<li>PDO 连接</li>
</ol>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4">
<li>预处理 SQL 查询语句</li>
</ol>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5">
<li>填充 SQL 语句中的占位符</li>
</ol>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6">
<li>SQL 占位符（如: select * from users where uname=? and passwd=?; ）</li>
</ol>
<div class="language-sql line-numbers-mode" data-ext="sql"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="7">
<li>... ...</li>
</ol>
<h2> Wireshark 抓包</h2>
<ol>
<li>熟练使用 <strong>Wireshark</strong> 这款软件</li>
<li>熟练掌握过滤器的写法（如: <code>tcp</code> 、 <code>udp</code> 、 <code>icmp</code> 、 <code>mac</code> ......）</li>
<li>知道各个协议的包结构、包头、包尾</li>
<li>... ...</li>
</ol>
<h2> 审查代码的能力</h2>
<ol>
<li><strong>HTML</strong> 源文件内容（通过右键网页 –&gt; 查看源文件）</li>
<li><strong>PHP</strong> 代码（了解代码逻辑以及书写规范, 特别是对函数名的记忆）</li>
<li><strong>PYTHON</strong> 代码（快速读懂代码意思, 特别是要从 main 函数入手去查看）</li>
<li><strong>C</strong> 语言代码（从代码中分析出来, 该代码的意思以及各个函数的逻辑）</li>
<li>... ...</li>
</ol>
<h2> 各个 WEB 漏洞的利用能力</h2>
<ol>
<li><strong>SQL</strong> 注入（通过万能用户名和万能密码来获取一定的 webshell）</li>
<li>命令注入（特别是 PHP 中的 exec 和 system 函数也能获取到一定的 webshell）</li>
<li>文件包含和目录遍历（通过 <code>../../../../... .../flag.txt</code> 来获取文件）</li>
<li>... ...</li>
</ol>
<h2> Liunx 服务的安全配置</h2>
<ol>
<li><strong>SSH</strong>（禁止 root 登录；禁止空密码登录；禁止密钥登录 ... ...）</li>
<li><strong>TELNET</strong>（禁止 root telnet；禁用 telnet ... ...）</li>
<li><strong>VSFTP</strong>（不允许普通用户登录 ftp；禁止匿名用户登录 ftp ... ...）</li>
<li><strong>HTTPD</strong>（禁止回显 banner 信息；严格控制目录权限 ... ...）</li>
<li>... ...</li>
</ol>
<h2> PHP 安全配置</h2>
<ol>
<li>开启安全模式</li>
</ol>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol>
<li>禁用函数</li>
</ol>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol>
<li>禁止 SQL 注入</li>
</ol>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> PYTHON 渗透脚本基础</h2>
<ol>
<li>了解 scapy 这一模块（特别是在构造数据包的时候该怎么写）</li>
<li>了解 dpkt 封装或者拆解网络协议包</li>
<li>了解 socket 编程</li>
<li>能够从 help 这一帮助函数中获取到其他函数的使用方法</li>
<li>拥有快速阅读脚本的能力和代码逻辑思维</li>
<li>... ...</li>
</ol>
<h2> Liunx 常用命令</h2>
<ol>
<li><strong>find</strong></li>
</ol>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2">
<li>grep</li>
</ol>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3">
<li>netstat</li>
</ol>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4">
<li>kill</li>
</ol>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5">
<li>chattr</li>
</ol>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6">
<li>useradd</li>
</ol>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> WEB 漏洞训练平台</h2>
<p>1.<strong>DVWA</strong> 【<a href="https://github.com/ethicalhack3r/DVWA" target="_blank" rel="noopener noreferrer">DVWA</a>】 2.<strong>Web For Pentester</strong> 【<a href="https://pentesterlab.com/exercises/web_for_pentester_II" target="_blank" rel="noopener noreferrer">Web For Pentester II</a>】(请自行安装镜像, 安装时请选择"其他 Liunx 3.x 内核 64 位") 3.<strong>ZVulDrill</strong> 【<a href="https://github.com/710leo/ZVulDrill" target="_blank" rel="noopener noreferrer">ZVulDrill</a>】(请自行准备 PHP 环境)</p>
<ol start="4">
<li>... ...</li>
</ol>
<h2> 网络协议原理</h2>
<ol>
<li><strong>Tcp</strong> 三次握手和四次挥手</li>
<li><strong>Icmp</strong> 发包以及回包</li>
<li><strong>Mac</strong> 防洪原理</li>
<li><strong>ARP</strong> 发广播包, <strong>ARP</strong> 欺骗</li>
<li><strong>Dtp</strong> 生成树攻击原理</li>
<li>... ...</li>
</ol>
<h2> 关于 PYTHON 的网络渗透编程</h2>
<ol>
<li>ARP 扫描</li>
</ol>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2">
<li>ARP 欺骗、ARP 监控</li>
</ol>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3">
<li>OS 扫描</li>
</ol>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="4">
<li>Mac 防洪</li>
</ol>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5">
<li>mssql 数据库密码爆破</li>
</ol>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="6">
<li>跨越 VlAN 攻击</li>
</ol>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="7">
<li>Dtp 攻击</li>
</ol>
<div class="language-python line-numbers-mode" data-ext="py"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="8">
<li>... ...</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>kali 下渗透测试的一些小技巧</title>
      <link>https://vxhly.github.io/views/pentest/pentest-tips-and-tricks.html</link>
      <guid>https://vxhly.github.io/views/pentest/pentest-tips-and-tricks.html</guid>
      <source url="https://vxhly.github.io/rss.xml">kali 下渗透测试的一些小技巧</source>
      <description>前言 总结在渗透测试上的一些小技巧, 基本上都是 kali 下的一些常用的工具使用集合。</description>
      <category>pentest</category>
      <pubDate>Sat, 20 May 2017 13:23:12 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>总结在渗透测试上的一些小技巧, 基本上都是 kali 下的一些常用的工具使用集合。</p>
</div>
<!-- more -->
<h2> DIRB</h2>
<h3> 使用 DIRB 爆破目录</h3>
<p>注: <a href="http://dirb.sourceforge.net/" target="_blank" rel="noopener noreferrer">DIRB</a> 是一个专门用于爆破目录的工具, 在 Kali 中默认已经安装, 类似工具还有国外的 <a href="http://github.com/lanjelot/patator" target="_blank" rel="noopener noreferrer">patator</a>, <a href="http://github.com/maurosoria/dirsearch" target="_blank" rel="noopener noreferrer">dirsearch</a>, [DirBuster](<a href="http://www.owasp.org/index.php/Category:" target="_blank" rel="noopener noreferrer">http://www.owasp.org/index.php/Category:</a> OWASP_DirBuster_Project), 国内的御剑等等。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> Niko</h2>
<h3> 使用 Nikto 扫描 Web 服务</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> wpscan</h2>
<h3> 使用 wpscan 扫描 WordPress</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> httprint</h2>
<h3> 使用 httprint 进行 HTTP 指纹识别</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> Skipfish</h2>
<h3> 使用 Skipfish 进行 Web 应用安全</h3>
<p>注: Skipfish 是一款 Web 应用安全侦查工具, Skipfish 会利用递归爬虫和基于字典的探针生成一幅交互式网站地图, 最终生成的地图会在通过安全检查后输出。</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> nc</h2>
<h3> 使用 nc 进行扫描</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2> us</h2>
<h3> 使用 Unicornscan 进行信息收集和安全审计</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> Xprobe2</h2>
<h3> 使用 Xprobe2 识别操作系统指纹</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> Meterpreter</h2>
<h3> 使用 Meterpreter 进行端口转发</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 使用 Meterpreter 获取哈希值</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 使用 Hashcat 破解密码</h4>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 使用 metasploit 进行穿透</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> ssh</h2>
<h3> SSH 穿透</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> SSH 穿透从一个网络到另一个网络</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> msfvenom</h2>
<h3> MSF Payloads</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> MSF 生成在 Linux 下反弹的 Meterpreter Shell</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> MSF 生成反弹 Shell (C Shellcode)</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> MSF 生成反弹 Python Shell</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> MSF 生成反弹 ASP Shell</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> MSF 生成反弹 Bash Shell</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> MSF 生成反弹 PHP Shell</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> MSF 生成反弹 Win Shell</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>PHP 文件包含漏洞总结</title>
      <link>https://vxhly.github.io/views/pentest/php-file-inclusion.html</link>
      <guid>https://vxhly.github.io/views/pentest/php-file-inclusion.html</guid>
      <source url="https://vxhly.github.io/rss.xml">PHP 文件包含漏洞总结</source>
      <description>前言 PHP 文件包含漏洞的产生原因是在通过 PHP 的函数引入文件时, 由于传入的文件名没有经过合理的校验, 从而操作了预想之外的文件, 就可能导致意外的文件泄露甚至恶意的代码注入。</description>
      <category>pentest</category>
      <pubDate>Sun, 02 Apr 2017 16:31:38 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>PHP 文件包含漏洞的产生原因是在通过 PHP 的函数引入文件时, 由于传入的文件名没有经过合理的校验, 从而操作了预想之外的文件, 就可能导致意外的文件泄露甚至恶意的代码注入。</p>
</div>
<!-- more -->
<h2> 常见文件包含函数</h2>
<ul>
<li><strong>include()</strong>: 执行到 include 时才包含文件, 找不到被包含文件时只会产生警告, 脚本将继续执行</li>
<li><strong>require()</strong>: 只要程序一运行就包含文件, 找不到被包含的文件时会产生致命错误, 并停止脚本</li>
<li><strong>include_once()<strong>和</strong>require_once()</strong>: 若文件中代码已被包含则不会再次包含</li>
</ul>
<h2> 利用条件</h2>
<p>程序用 include() 等文件包含函数通过动态变量的范式引入需要包含的文件 用户能够控制该动态变量</p>
<p>注: PHP 中只要文件内容符合 PHP 语法规范, 包含时不管扩展名是什么都会被 PHP 解析, 若文件内容不符合 PHP 语法规范则会暴漏其源码。</p>
<h2> 漏洞危害</h2>
<ul>
<li>执行任意代码</li>
<li>包含恶意文件控制网站</li>
<li>甚至控制服务器</li>
</ul>
<h2> 漏洞分类</h2>
<ul>
<li>本地文件包含: 可以包含本地文件, 在条件允许时甚至能执行代码</li>
</ul>
<p>-- 上传图片马, 然后包含 -- 读敏感文件, 读 PHP 文件 -- 包含日志文件 GetShell -- 包含 /proc/self/envion 文件 GetShell -- 包含 data: 或 php://input 等伪协议 -- 若有 phpinfo 则可以包含临时文件</p>
<ul>
<li>远程文件包含: 可以直接执行任意代码</li>
</ul>
<p>-- 要保证 php.ini 中 allow_url_fopen 和 allow_url_include 要为 On</p>
<h2> 普通本地文件包含</h2>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 攻击方式</h3>
<h4> 包含同目录下的文件</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=.htaccess</p>
</div>
<h4> 目录遍历</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=../../../../../../../../../var/lib/locate.db<br> ?file=../../../../../../../../../var/lib/mlocate/mlocate.db<br> (linux 中这两个文件储存着所有文件的路径, 需要 root 权限)</p>
</div>
<h4> 包含错误日志</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=../../../../../../../../../var/log/apache/error.log</p>
</div>
<h4> 获取 web 目录或者其他配置文件</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=../../../../../../../../../usr/local/apache2/conf/httpd.conf</p>
</div>
<h4> 包含上传的附件</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=../attachment/media/xxx.file</p>
</div>
<h4> 读取 session 文件</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=../../../../../../tmp/sess_tnrdo9ub2tsdurntv0pdir1no7<br> (session 文件一般在 /tmp 目录下, 格式为 <code>sess\_[your phpsessid value]</code> , 有时候也有可能在/var/lib/php5 之类的, 在此之前建议先读取配置文件。在某些特定的情况下如果你能够控制 session 的值, 也许你能够获得一个 shell)</p>
</div>
<h4> 系统中重要文件(需要 root 权限)</h4>
<ul>
<li><code>/root/.ssh/authorized_keys</code></li>
<li><code>/root/.ssh/id_rsa</code></li>
<li><code>/root/.ssh/id_rsa.keystore</code></li>
<li><code>/root/.ssh/id_rsa.pub</code></li>
<li><code>/root/.ssh/known_hosts</code></li>
<li><code>/etc/shadow</code></li>
<li><code>/root/.bash_history</code></li>
<li><code>/root/.mysql_history</code></li>
<li><code>/proc/self/fd/fd[0-9]* (文件标识符)</code></li>
<li><code>/proc/mounts</code></li>
<li><code>/proc/config.gz</code></li>
</ul>
<h2> 有限制的本地文件包含</h2>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 攻击方式</h3>
<h4> %00 截断</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=../../../../../../../../../etc/passwd%00<br> (需要 magic_quotes_gpc=off, PHP 小于 5.3.4 有效)</p>
</div>
<h4> %00 截断目录遍历</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=../../../../../../../../../var/www/%00<br> (需要 magic_quotes_gpc=off, unix 文件系统, 比如 FreeBSD, OpenBSD, NetBSD, Solaris)</p>
</div>
<h4> 路径长度截断:</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=../../../../../../../../../etc/passwd/././././././.[...]/./././././.<br> (php 版本小于 5.2.8(?)可以成功, linux 需要文件名长于 4096, windows 需要长于 256)</p>
</div>
<h4> 点号截断:</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=../../../../../../../../../boot.ini/.........[...]............<br> (php 版本小于 5.2.8(?)可以成功, 只适用 windows, 点号需要长于 256)</p>
</div>
<h2> 普通远程文件包含</h2>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 攻击方式</h3>
<h4> 远程代码执行:</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=[http|https|ftp]://example.com/shell.txt<br> (需要 allow_url_fopen=On 并且 allow_url_include=On)</p>
</div>
<h4> 利用 php 流 input:</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=php://input<br> (需要 allow_url_include=On)</p>
</div>
<h4> 利用 php 流 filter:</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=php://filter/convert.base64-encode/resource=index.php<br> (需要 allow_url_include=On)</p>
</div>
<h4> 利用 data URIs:</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=data://text/plain; base64, SSBsb3ZlIFBIUAo=<br> (需要 allow_url_include=On)</p>
</div>
<h4> 利用 XSS 执行任意代码:</h4>
<div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=<a href="http://127.0.0.1/path/xss.php?xss=phpcode" target="_blank" rel="noopener noreferrer">http://127.0.0.1/path/xss.php?xss=phpcode</a><br> (需要 allow_url_fopen=On, allow_url_include=On 并且防火墙或者白名单不允许访问外网时, 先在同站点找一个 XSS 漏洞, 包含这个页面, 就可以注入恶意代码了。条件非常极端和特殊- -)</p>
</div>
<h2> 有限制的远程文件包含</h2>
<div class="language-php line-numbers-mode" data-ext="php"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">攻击方式</p>
<p>?file=<a href="http://example.com/shell" target="_blank" rel="noopener noreferrer">http://example.com/shell</a><br> ?file=<a href="http://example.com/shell.txt?" target="_blank" rel="noopener noreferrer">http://example.com/shell.txt?</a><br> ?file=<a href="http://example.com/shell.txt%23" target="_blank" rel="noopener noreferrer">http://example.com/shell.txt%23</a><br> (需要 allow_url_fopen=On 并且 allow_url_include=On)<br> ?file=\evilshare\shell.php (只需要 allow_url_include=On)</p>
</div>
<h2> 延伸</h2>
<p>其实在前面也说了, 这些漏洞产生原因是 PHP 函数在引入文件时, 传入的文件名没有经过合理的校验, 从而操作了预想之外的文件。实际上我们操作文件的函数不只是 include()一个, 上面提到的一些截断的方法同样可以适用于以下函数:</p>
<ul>
<li><strong>fopen</strong></li>
<li><strong>file_get_contents</strong></li>
<li><strong>copy</strong></li>
<li><strong>parse_ini_file</strong></li>
<li><strong>readfile</strong></li>
<li><strong>file_put_contents</strong></li>
<li><strong>mkdir</strong></li>
<li><strong>tempnam</strong></li>
<li><strong>move_uploaded_file</strong></li>
<li><strong>rename</strong></li>
<li><strong>unlink</strong></li>
<li><strong>rmdir</strong></li>
<li><strong>require</strong></li>
<li><strong>require_once</strong></li>
<li><strong>include_once</strong></li>
<li><strong>ZipArchive::open()</strong></li>
</ul>
<h2> 漏洞防御</h2>
<ul>
<li>PHP 中使用 open_basedir 配置, 将访问限制在指定区域</li>
<li>过滤 <code>./\</code></li>
<li>禁止服务器远程文件包含</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Shell 监听脚本-新增文件</title>
      <link>https://vxhly.github.io/views/pentest/shell-listen-for-new-files.html</link>
      <guid>https://vxhly.github.io/views/pentest/shell-listen-for-new-files.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Shell 监听脚本-新增文件</source>
      <description>前言 Liunx 下的监听 shell 脚本, 脚本功能实现, 当一小时内有新增的新文件, 立刻删除它, 此脚本允许被后台运行。</description>
      <category>pentest</category>
      <pubDate>Tue, 22 Aug 2017 21:03:18 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Liunx 下的监听 shell 脚本, 脚本功能实现, 当一小时内有新增的新文件, 立刻删除它, 此脚本允许被后台运行。</p>
</div>
<!-- more -->
<h2> 功能解释</h2>
<ol>
<li>若含有文件上传漏洞时, 该脚本能够自动删除上传的文件</li>
<li>在 <code>PWD(攻防对抗)</code> 中非常有用</li>
<li>后台运行, 只占用进程号, 不占用 shell 界面</li>
</ol>
<h2> 脚本代码</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 脚本解释</h3>
<ul>
<li><code>while true</code> =&gt; 持续监听</li>
<li><code>-cmin -60</code> =&gt; 查找一小时内（包含一小时）新增文件</li>
<li><code>-type f</code> =&gt; 制定文件类型为文件</li>
<li><code>|</code> =&gt; 管道符, 将前一个命令执行结果传送至后一个命令执行</li>
<li><code>xargs</code> =&gt; 命令传递参数的一个过滤器, 可以批量执行</li>
<li><code>sleep 1</code> =&gt; 上一条命令执行之后, 暂停 1 秒</li>
<li><code>/var/www/dvwa/</code> =&gt; 可为任何目录, 这边是一个测试目录</li>
</ul>
<h2> 运行</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3> 进程号查询</h3>
<p>脚本后台运行时, 会生成一个进程号<br></p>
<figure><img src="/assets/shell-new-files-1.png" alt="Shell 监听脚本" tabindex="0" loading="lazy"><figcaption>Shell 监听脚本</figcaption></figure>
<p>通过 ps 命令可以查询进程<br></p>
<figure><img src="/assets/shell-new-files-2.png" alt="Shell 监听脚本" tabindex="0" loading="lazy"><figcaption>Shell 监听脚本</figcaption></figure>
<h2> 测试</h2>
<h3> 本地测试</h3>
<p>在 <code>/var/www/dvwa/</code> 某个目录下新增文件<br></p>
<figure><img src="/assets/shell-new-files-3.png" alt="Shell 监听脚本" tabindex="0" loading="lazy"><figcaption>Shell 监听脚本</figcaption></figure>
<h3> 在有上传文件漏洞中测试</h3>
<p>在 dvwa 中的上传文件漏洞环境进行测试<br></p>
<figure><img src="/assets/shell-new-files-4.png" alt="Shell 监听脚本" tabindex="0" loading="lazy"><figcaption>Shell 监听脚本</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/shell-new-files-1.png" type="image/png"/>
    </item>
    <item>
      <title>渗透工具用法（二）BurpSuite 的用法</title>
      <link>https://vxhly.github.io/views/pentest/usage-of-burp.html</link>
      <guid>https://vxhly.github.io/views/pentest/usage-of-burp.html</guid>
      <source url="https://vxhly.github.io/rss.xml">渗透工具用法（二）BurpSuite 的用法</source>
      <description>前言 此系列笔记是网络渗透工具的使用方法, 本篇是介绍 Web 应用程序测试工具 BurpSuite 的使用方法。Burp Suite 其多种功能可以帮我们执行各种任务, 请求的拦截和修改, 扫描 web 应用程序漏洞, 以暴力破解登陆表单, 执行会话令牌等多种的随机性检查。</description>
      <category>pentest</category>
      <pubDate>Sat, 08 Oct 2016 16:02:34 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>此系列笔记是网络渗透工具的使用方法, 本篇是介绍 Web 应用程序测试工具 BurpSuite 的使用方法。Burp Suite 其多种功能可以帮我们执行各种任务, 请求的拦截和修改, 扫描 web 应用程序漏洞, 以暴力破解登陆表单, 执行会话令牌等多种的随机性检查。</p>
</div>
<!-- more -->
<h2> Burp Suite 环境</h2>
<p><code>kali Liunx</code> 里已经集成了 Burp Suite 工具, <code>windows</code> 下安装 Burp Suite 之前请确定你的电脑里有 Java 环境<br> <a href="http://portswigger.net/burp/download.html" target="_blank" rel="noopener noreferrer">Burp Suite 官网下载地址</a></p>
<h3> JDK 安装和环境变量配置</h3>
<p><code>windows</code> 下安装 Burp Suite 需要 Java 环境进行支持, 由于本博客之前是有写过 JDK 的安装和环境变量的配置, 所以这里不再提供。</p>
<h2> 设置代理</h2>
<p>Burp Suite 带有一个代理, 通过默认端口 <code>8080</code> 上运行, 使用这个代理, 我们可以截获并修改从客户端到 web 应用程序的数据包。<br></p>
<figure><img src="/assets/burp-1.png" alt="Burp Suite" tabindex="0" loading="lazy"><figcaption>Burp Suite</figcaption></figure>
<p>这里我们使用 <code>Chrome</code> 浏览器, 在 <code>Chrome</code> 浏览器里也需要设置代理方式<br></p>
<figure><img src="/assets/burp-2.png" alt="Burp Suite" tabindex="0" loading="lazy"><figcaption>Burp Suite</figcaption></figure>
<h2> 拦截改包和暴力破解</h2>
<h3> 模拟登录</h3>
<p>这里使用漏洞集成平台 <code>DVWA</code> 来进行测试</p>
<figure><img src="/assets/burp-3.png" alt="Burp Suite" tabindex="0" loading="lazy"><figcaption>Burp Suite</figcaption></figure>
<h3> 拦截请求包</h3>
<p>随意输入密码（这里填写的密码为 <code>123</code> ）, 点击登录, 在 Burp Suite 里就可以看到拦截的请求包（前提是设置好代理）<br></p>
<figure><img src="/assets/burp-4.png" alt="Burp Suite" tabindex="0" loading="lazy"><figcaption>Burp Suite</figcaption></figure>
<h3> 修改请求包</h3>
<p>将拦截到的数据包 <code>Send to Intruder</code> （也可以使用 <code>Ctrl+I</code> ）<br></p>
<figure><img src="/assets/burp-5.png" alt="Burp Suite" tabindex="0" loading="lazy"><figcaption>Burp Suite</figcaption></figure>
<p>在 <code>Position</code> 选项中设置需要破解的变量。 <code>Burpsuite</code> 会自动设置许多变量, 单击 <code>Clear</code> 按钮, 把默认变量全部清除, 然后选中密码 <code>123</code> , 单击 <code>Add</code> 按钮将之设为需要破解的变量。由于只有一个变量, 因而 <code>Attack type</code> 攻击类型这里选择 <code>Sniper</code> 。<br></p>
<figure><img src="/assets/burp-6.png" alt="Burp Suite" tabindex="0" loading="lazy"><figcaption>Burp Suite</figcaption></figure>
<h3> 添加字典</h3>
<p>在 <code>Payloads</code> 选项中进行设置, 由于只有一个变量, 因而 <code>Payload set</code> 自动设置为 1, <code>Payload type</code> 这里设置为 <code>Simple list</code> 。在下面的 <code>Payload Options</code> 中, 我们添加可能的密码, 或者密码。<br></p>
<figure><img src="/assets/burp-7.png" alt="Burp Suite" tabindex="0" loading="lazy"><figcaption>Burp Suite</figcaption></figure>
<h3> 开始破解</h3>
<p>在菜单栏中选择 <code>Intruder/Start attack</code> , 就可以开始暴力破解。<br></p>
<figure><img src="/assets/burp-8.png" alt="Burp Suite" tabindex="0" loading="lazy"><figcaption>Burp Suite</figcaption></figure>
<h3> 分析</h3>
<p>在 <code>Results</code> 中, 双击 <code>length</code> 进行排序, 在这里所有登录成功或者登录失败的记录全部在这里。<br></p>
<figure><img src="/assets/burp-9.png" alt="Burp Suite" tabindex="0" loading="lazy"><figcaption>Burp Suite</figcaption></figure>
<p>选中请求字节包最大的, 在 <code>Response/Render</code> 里就可以看到 <code>Welcome to the password protected area admin</code> 成功登录的信息<br></p>
<figure><img src="/assets/burp-10.png" alt="Burp Suite" tabindex="0" loading="lazy"><figcaption>Burp Suite</figcaption></figure>
<h2> Decode 和 Encode</h2>
<p>Decoder 转化成规范的形式编码数据, 或转化成各种形式编码和散列的原始数据。它能够智能识别多种编码格式, 使用启发式技术。</p>
<p>下面这张图是将一段 URL 进行 encode（编码）<br></p>
<figure><img src="/assets/burp-11.png" alt="Burp Suite" tabindex="0" loading="lazy"><figcaption>Burp Suite</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/burp-1.png" type="image/png"/>
    </item>
    <item>
      <title>渗透工具用法（三）Nmap 的用法</title>
      <link>https://vxhly.github.io/views/pentest/usage-of-nmap.html</link>
      <guid>https://vxhly.github.io/views/pentest/usage-of-nmap.html</guid>
      <source url="https://vxhly.github.io/rss.xml">渗透工具用法（三）Nmap 的用法</source>
      <description>前言 此系列笔记是网络渗透工具的使用方法, 本篇是介绍端口扫描工具 Nmap 的使用方法。Nmap 在渗透测试中经常用到, 它不仅可以用来确定目标网络上计算机的存活状态, 而且可以扫描各个计算机的操作系统、开放端口、服务, 还有可能获得用户的证书。熟练掌握 Nmap 的用法, 可以极大的提高渗透测试技术。</description>
      <category>pentest</category>
      <pubDate>Fri, 23 Sep 2016 16:29:57 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>此系列笔记是网络渗透工具的使用方法, 本篇是介绍端口扫描工具 Nmap 的使用方法。Nmap 在渗透测试中经常用到, 它不仅可以用来确定目标网络上计算机的存活状态, 而且可以扫描各个计算机的操作系统、开放端口、服务, 还有可能获得用户的证书。熟练掌握 Nmap 的用法, 可以极大的提高渗透测试技术。</p>
</div>
<!-- more -->
<h2> Nmap 环境</h2>
<p><code>kali Liunx</code> 里已经集成了 Namp 环境, 所以就不在 <code>Windows</code> 下进行了。</p>
<h2> Nmap 命令结构</h2>
<p><code>Scanning Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> Nmap 使用解释</h2>
<h3> 识别系统</h3>
<p><code>Scanning Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 <code>-O</code> 选项, 可以获取到被扫描的主机的系统。 <code>-Pn</code> 选项禁用 Nmap 网络发现功能, 假定所有系统都是活动的</p>
<h3> Timing 模板</h3>
<p><code>timing</code> 参数可以指定 nmap 扫描的速度。其中各个选项如下:</p>
<ul>
<li><strong>T0</strong> =&gt; paranoid 慢速网络扫描, 串行扫描, 两次扫描间隔 <code>5 分钟</code> 。扫描速度极慢。</li>
<li><strong>T1</strong> =&gt; Sneky 慢速网络扫描, 串行扫描, 两次扫描间隔 <code>15 秒</code> , 扫描速度较慢。</li>
<li><strong>T2</strong> =&gt; Polite 中速网络扫描, 串行扫描, 两次扫描间隔 <code>400 毫秒</code> , 扫描速度慢。</li>
<li><strong>T3</strong> =&gt; Normal 中速网络扫描, 并行扫描, 两次扫描间隔 <code>0 秒</code> , 扫描速度正常。</li>
<li><strong>T4</strong> =&gt; Aggressive 快速网络扫描, 并行扫描, 两次扫描间隔 <code>0 秒</code> , 扫描速度较快。</li>
<li><strong>T5</strong> =&gt; Normal 快速网络扫描, 并行扫描, 两次扫描间隔 <code>0 秒</code> , 扫描速度极快。</li>
</ul>
<p><code>Scanning Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 扫描方式</h3>
<h3> TCP 扫描</h3>
<p>端口扫描中最稳定的, 利用的是 TCP 三次握手。TCP 扫描通常用于收集有关目标的更多信息, 但是会和目标主机建立一个完成的 TCP 连接。</p>
<p><code>Scanning Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>-sT</code> TCP 连接扫描（ <code>s</code> ==&gt; 哪种类型扫描； <code>T</code> ==&gt; TCP 类型）</p>
</div>
<h4> SYN 扫描</h4>
<p>TCP 两次握手（隐藏扫描, 速度快, nmap 缺省参数）</p>
<p><code>Scanning Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>-sS</code> SYN 连接扫描（ <code>s</code> ==&gt; 哪种类型扫描； <code>S</code> ==&gt; SYN 类型）</p>
</div>
<h4> ACK 扫描</h4>
<p>ACK 扫描, 用于确定 TCP 端口是否被防火墙过滤。</p>
<p><code>Scanning Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>-sA</code> ACK 连接扫描（ <code>s</code> ==&gt; 哪种类型扫描； <code>A</code> ==&gt; ACK 类型）</p>
</div>
<h4> UDP 扫描</h4>
<p>DHCP, DNS, SNMP, TFTP 等都使用了 UDP 协议；UDP 扫描会评估目标系统上的 UDP 端口, 可以确认 UDP 端口是开放还是被防火墙过滤。</p>
<p><code>Scanning Format:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>-sU</code> UDP 连接扫描（ <code>s</code> ==&gt; 哪种类型扫描； <code>U</code> ==&gt; UDP 类型）<br> <code>-sV</code> UDP 扫描中添加版本扫描信息（ <code>V</code> ==&gt; 版本信息）<br> 不存在 <code>-Pn</code> 参数（从 UDP 协议去理解, 你发了就 ok 管他收没收到）</p>
</div>
<h3> 扫描 IP 段</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 输出保存选项</h3>
<ul>
<li><strong>-oN</strong> =&gt; 保存为文本文件</li>
<li><strong>-oX</strong> =&gt; 保存为 XML 文件</li>
<li><strong>-oG</strong> =&gt; 保存为 GREPable 输出</li>
<li><strong>-oS</strong> =&gt; 脚本输出</li>
</ul>
<h2> 其他更详细的扫描</h2>
<h3> Nmap 扫描策略</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> Nmap 躲避防火墙</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> Nmap 进行 Web 漏洞扫描</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> Nmap 端口扫描</h3>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 示例扫描</h2>
<h3> 示例一: SYN 扫描</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-nmap-1.png" alt="Namp" tabindex="0" loading="lazy"><figcaption>Namp</figcaption></figure>
<h3> 示例二: 基础信息扫描</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-nmap-2.png" alt="Namp" tabindex="0" loading="lazy"><figcaption>Namp</figcaption></figure>
<h3> 示例三: 详细信息扫描</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-nmap-3.png" alt="Namp" tabindex="0" loading="lazy"><figcaption>Namp</figcaption></figure>
<br>
<figure><img src="/assets/liunx-nmap-4.png" alt="Namp" tabindex="0" loading="lazy"><figcaption>Namp</figcaption></figure>
<br>
<figure><img src="/assets/liunx-nmap-5.png" alt="Namp" tabindex="0" loading="lazy"><figcaption>Namp</figcaption></figure>
<h3> 示例四: 网段扫描</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/liunx-nmap-6.png" alt="Namp" tabindex="0" loading="lazy"><figcaption>Namp</figcaption></figure>
<br>
<figure><img src="/assets/liunx-nmap-7.png" alt="Namp" tabindex="0" loading="lazy"><figcaption>Namp</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-nmap-1.png" type="image/png"/>
    </item>
    <item>
      <title>渗透工具用法（一）SQLmap 的用法</title>
      <link>https://vxhly.github.io/views/pentest/usage-of-sqlmap.html</link>
      <guid>https://vxhly.github.io/views/pentest/usage-of-sqlmap.html</guid>
      <source url="https://vxhly.github.io/rss.xml">渗透工具用法（一）SQLmap 的用法</source>
      <description>前言 此系列笔记是网络渗透工具的使用方法, 本篇是介绍 SQL 注入工具 SQLmap 的使用方法。SQLmap 是一款用来检测与利用 SQL 注入漏洞的免费开源工具, 有一个非常棒的特性, 即对检测与利用的自动化处理（数据库指纹、访问底层文件系统、执行命令）。</description>
      <category>pentest</category>
      <pubDate>Tue, 20 Sep 2016 10:46:46 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>此系列笔记是网络渗透工具的使用方法, 本篇是介绍 SQL 注入工具 SQLmap 的使用方法。SQLmap 是一款用来检测与利用 SQL 注入漏洞的免费开源工具, 有一个非常棒的特性, 即对检测与利用的自动化处理（数据库指纹、访问底层文件系统、执行命令）。</p>
</div>
<!-- more -->
<h2> SQLmap 环境</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>由于 <code>kali Liunx</code> 已经集成了 SQLmap 的环境, 这里就直接介绍 <code>Windows</code> 下环境的构建。</p>
</div>
<h3> 先安装 Python</h3>
<p>正常情况下我们安装 <code>2.7.x</code> 就好了。</p>
<p><a href="http://www.python.org/getit/" target="_blank" rel="noopener noreferrer">Python 官网下载地址</a></p>
<p>接下来只需在环境变量 <code>path</code> 中添加 Python 的安装路径就好了。<br></p>
<figure><img src="/assets/sqlmap-1.png" alt="SQLmap" tabindex="0" loading="lazy"><figcaption>SQLmap</figcaption></figure>
<h3> 再安装 SQLmap</h3>
<p><a href="http://sqlmap.org/" target="_blank" rel="noopener noreferrer">SQLmap 官网下载地址</a></p>
<p>将 SQLmap 解压至 Python 目录下, 将 SQLmap 的程序目录重命名为 sqlmap。</p>
<h4> 在桌面新建快捷方式</h4>
<p><code>For Example:</code></p>
<figure><img src="/assets/sqlmap-2.png" alt="SQLmap" tabindex="0" loading="lazy"><figcaption>SQLmap</figcaption></figure>
<br>
<figure><img src="/assets/sqlmap-3.png" alt="SQLmap" tabindex="0" loading="lazy"><figcaption>SQLmap</figcaption></figure>
<br>
<figure><img src="/assets/sqlmap-4.png" alt="SQLmap" tabindex="0" loading="lazy"><figcaption>SQLmap</figcaption></figure>
<h2> DVWA 环境</h2>
<p>DVWA(Dam Vulnerable Web Application) 使用 <code>PHP+Mysql</code> 编写的一套用于常规 WEB 漏洞教学和检测的 WEB 脆弱性测试程序。包含 SQL 注入、XSS、盲注等常见的一些漏洞。</p>
<p><a href="http://github.com/ethicalhack3r/DVWA" target="_blank" rel="noopener noreferrer">DVWA GitHub 下载地址</a></p>
<p>在 <code>Windows</code> 下还需安装 <code>PHP</code> 环境, 这里推介两个 <code>PHP</code> 集成环境。</p>
<p><a href="http://www.upupw.net/" target="_blank" rel="noopener noreferrer">upupw PHP 集成环境</a> <a href="http://www.phpstudy.net/" target="_blank" rel="noopener noreferrer">phpStudy PHP 集成环境</a></p>
<p>接下来只需修改一下配置文件就好了。</p>
<h2> SQlmap 使用方法</h2>
<p><code>Windows</code> 下跟 <code>kali Liunx</code> 下使用方法不相同。</p>
<p>为方便演示, 我们创建两个虚拟机:</p>
<ul>
<li>受害者机器, <code>Windows 2003</code> 操作系统, 运行一个 WEB 服务器, 同时跑着一个包含漏洞的 WEB 应用（DVWA）。</li>
<li>攻击器机器, 使用 <code>kali Liunx</code> 或者其他版本的 <code>Windows</code> 包含 SQLmap 程序。</li>
</ul>
<p>本次实验的目的: 使用 SQLmap 得到以下信息:</p>
<ul>
<li>枚举 MYSQL 用户名与密码。</li>
<li>枚举所有数据库。</li>
<li>枚举指定数据库的数据表。</li>
<li>枚举指定数据表中的所有用户名与密码。</li>
</ul>
<h3> 查看帮助</h3>
<p><code>Windows: </code> 查看 Python 帮助命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>kali Liunx: </code> 查看 Python 帮助命令</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container warning">
<p class="hint-container-title">注意</p>
<p>需要注意的是 <code>Windows</code> 下的选项和 <code>kali Liunx</code> 下的选项是一致的, 但是命令是不一致的。在 <code>Windows</code> 下使用 <code>python sqlmap.py</code> , 而在 <code>kali Liunx</code> 下使用的是 <code>sqlmap</code> 。</p>
</div>
<h3> 选项解释</h3>
<ul>
<li><strong>--cookie</strong> =&gt; 设置我们的 cookie 值 "将 DVWA 安全等级设置为 low"</li>
<li><strong>--data</strong> =&gt; 设置 POST 提交的值, 如果是 GET 提交, 不需要此选项</li>
<li><strong>-u</strong> =&gt; 指定目标 URL</li>
<li><strong>-b</strong> =&gt; 获取 DBMS banner</li>
<li><strong>--current-db</strong> =&gt; 获取当前数据库</li>
<li><strong>--current-user</strong> =&gt; 获取当前数据库的用户</li>
<li><strong>--tables</strong> =&gt; 获取数据库里所有的表名</li>
<li><strong>--columns</strong> =&gt; 获取表里的所有字段</li>
<li><strong>--dump</strong> =&gt; 获取值</li>
<li><strong>--current-user</strong> =&gt; 获取当前用户</li>
<li><strong>-D</strong> =&gt; 爆库指定数据库名</li>
<li><strong>-T</strong> =&gt; 爆库指定表名</li>
<li><strong>-C</strong> =&gt; 爆库指定字段名</li>
<li><strong>--string</strong> =&gt; 当查询可用时用来匹配页面中的字符串</li>
<li><strong>--users</strong> =&gt; 枚举 DBMS 用户</li>
<li><strong>--password</strong> =&gt; 枚举 DBMS 用户密码 hash</li>
<li><strong>--dbs</strong> =&gt; 枚举 DBMS 中的数据库</li>
</ul>
<h2> 开始爆库</h2>
<p>由于 <code>Windows</code> 和 <code>kali Liunx</code> 的做法基本一致, 这里以 <code>kali Liunx</code> 为例。DVWA 的难度为 low。</p>
<h3> 先获取 Cookie</h3>
<p>每一次的 Cookie 都不一样, 这里是个示范。</p>
<p><code>For Example:</code> <br></p>
<figure><img src="/assets/sqlmap-5.png" alt="SQLmap" tabindex="0" loading="lazy"><figcaption>SQLmap</figcaption></figure>
<h3> 获取数据库, --current-db</h3>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>URL 地址和 Cookie 请用真实的替换掉。这条命令可以把当前所有的数据库获取出来的。注意 <code>--current-db</code> 的 <code>-</code> 可是有两个的。</p>
<figure><img src="/assets/sqlmap-6.png" alt="SQLmap" tabindex="0" loading="lazy"><figcaption>SQLmap</figcaption></figure>
<h3> 获取表, --tables</h3>
<p>前面, 我们已经获取到数据库名, 这时候我们要指定数据库名。使用 <code>-D</code> 选项指定数据库名。注意 <code>--tables</code> 的 <code>-</code> 可是有两个的。</p>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/sqlmap-7.png" alt="SQLmap" tabindex="0" loading="lazy"><figcaption>SQLmap</figcaption></figure>
<h3> 获取字段, --columns</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>前面, 我们已经获取到数据库名和表名了, 这时候我们要指定数据库名和表名。使用 <code>-D</code> 选项指定数据库名, 使用 <code>-T</code> 指定表名。这里我们选择表 <code>users</code> 。注意 <code>--columns</code> 的 <code>-</code> 可是有两个的。</p>
</div>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/sqlmap-8.png" alt="SQLmap" tabindex="0" loading="lazy"><figcaption>SQLmap</figcaption></figure>
<h3> 获取数据, --dump</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>前面, 我们已经获取到数据库名、表名还有字段名了, 这时候我们要指定数据库名、表名还有字段名。使用 <code>-D</code> 选项指定数据库名, 使用 <code>-T</code> 指定表名, 使用 <code>-C</code> 指定字段名。这里我们选择表 <code>users</code> 中的字段 <code>user_id</code> 。注意 <code>--dump</code> 的 <code>-</code> 可是有两个的。</p>
</div>
<p><code>For Example:</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="/assets/sqlmap-9.png" alt="SQLmap" tabindex="0" loading="lazy"><figcaption>SQLmap</figcaption></figure>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/sqlmap-1.png" type="image/png"/>
    </item>
    <item>
      <title>typescript 的基础使用</title>
      <link>https://vxhly.github.io/views/typescript/typescript-usage.html</link>
      <guid>https://vxhly.github.io/views/typescript/typescript-usage.html</guid>
      <source url="https://vxhly.github.io/rss.xml">typescript 的基础使用</source>
      <description>前言 vue3 已经发布了, ts 的脚步已经阻拦不住了, 还只会 es6?别想了, 人家都已经在行动了, 以下是 ts 的基本系列教程, ts 的基本语法, 高级语法等, 以及在 vue 项目中如何应用 ts, 跟着我赶紧撸起来吧.</description>
      <category>typescript</category>
      <pubDate>Tue, 18 May 2021 10:03:58 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>vue3 已经发布了, ts 的脚步已经阻拦不住了, 还只会 es6?别想了, 人家都已经在行动了, 以下是 ts 的基本系列教程, ts 的基本语法, 高级语法等, 以及在 vue 项目中如何应用 ts, 跟着我赶紧撸起来吧.</p>
</div>
<!-- more -->
<h2> 基本数据类型</h2>
<h3> 数字</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 字符串</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 数组</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 元组</h3>
<p>可以为数组中的每个参数定义相对应的类型</p>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 枚举</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>如果未赋值的上一个值是数字那么这个未赋值的值的是上一个值的值 +1 如果未赋值的上一个值未赋值那么输出的就是它的下标如果未赋值的上一个值的值是非数字, 那么必须赋值</p>
</div>
<h3> 布尔类型</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 对象</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> undefined</h3>
<p>常用于组合类型</p>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> null</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> void</h3>
<p>指定方法类型, 表示没有返回值,方法体中不能 return</p>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> never</h3>
<p>其他类型 (包括 null 和 undefined)的子类型, 代表从不会出现的值</p>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 任意类型</h3>
<p>让参数可以是任何一种类型</p>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 函数</h2>
<h3> 函数申明</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3> 方法传参</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>:?</code> 代表这个参数可传可不传,不传就是 undefined,也可定义个默认的值</p>
</div>
<h3> 剩余参数</h3>
<p>传递多个时, 如果用了剩余参数, 就可以把未定义的形参转换为数组。</p>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 函数重载</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>被重载的方法, 是没有方法体, 可以根据参数的类型走其中一个方法并判断参数, 但如果传入的参数类型不是任何被重载方法的参数类型就不允许通过。</p>
</div>
<h2> 类</h2>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 继承</h2>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<ol>
<li>public 在当前类里面, 子类, 类外面都可以访问</li>
<li>protected 在当前类和子类内部可以访问, 类外部无法访问</li>
<li>private 在当前类内部可访问, 子类, 类外部都无法访问。</li>
<li>属性不加修饰符,默认就是公有的 (public)</li>
</ol>
</div>
<h2> 多态</h2>
<p>通过抽象方法/方法重载--实现多态--多态的作用是用来定义标准</p>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>抽象类无法实例化。非抽象类继承抽象父类时不会自动实现来自父类的抽象成员,必须手动定义父类中的抽象成员, 否则报错。抽象成员包括属性和方法</p>
</div>
<h2> 接口</h2>
<p>在面向对象的编程中, 接口是一种规范的定义, 它定义了行为和动作的规范,</p>
<p>在程序设计里面, 接口起到一种限制和规范的作用。</p>
<p>接口定义了某一批类所需要遵守的规范, 接口不关心这些类的内部状态数据, 也不关心这些类里方法的实现细节, 它只规定这批类里必须提供某些方法, 提供这些方法的类就可以满足实际需要。ts 中的接口类似于 java, 同时还增加了更灵活的接口类型, 包括属性、函数、可索引和类等。</p>
<h3> 属性接口</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>用个变量来存储传入的变量,这样可以传入定义的接口以外的值, 否则如果直接传入对象中无接口定义的值会报错, 所以建议接口定义了哪些值就传哪些值。</p>
</div>
<h3> 函数类型接口</h3>
<p>对方法传入的参数类型,以及返回值类型进行约束,可批量进行约束。</p>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>接口只对传入的参数的类型和参数的个数进行约束, 不对参数名称进行约束。</p>
</div>
<h3> 可索引接口</h3>
<h4> 约束数组</h4>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 约束对象</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>对数组进行约束,index 后必须跟着 number 类型。对对象进行约束,index 后必须跟着 string 类型索引签名参数类型必须为 "string" 或 "number"</p>
</div>
<h3> 类类型接口</h3>
<h4> 对类进行约束,类似抽象类的实现</h4>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 接口继承--接口可以继承接口</h4>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>类接口会对类的属性和方法进行约束, 类似非抽象类继承抽象类时必须实现某些方法和属性, 但对属性和方法的类型的约束更加严格, 除了方法 void 类型可被重新定义外, 其他属性或方法的类型定义需要和接口保持一致</p>
</div>
<h2> 泛型</h2>
<p>软件工程中, 我们不仅要创建一致的定义良好的 api, 同时也要考虑可重用性。组件不仅能够支持当前的数据类型, 同时也能支持未来的数据类型, 这在创建大型系统时为你提供了十分灵活的功能</p>
<p>泛型就是解决类、接口、方法的复用性, 以及对不特定数据类型的支持。</p>
<p>要求:传入的参数和返回的参数一致</p>
<h3> 函数的泛型</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这里的 T 可改成其他任意值但定义的值, 和传入的参数以及返回的参数是一样的,一般默认写法是 T, 也是业内规范的选择。</p>
</div>
<h3> 类的泛型</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 接口的泛型</h3>
<h4> 第一种写法</h4>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 第二种写法</h4>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>接口的泛型只针对函数类型的接口</p>
</div>
<h3> 类当做参数传入泛型类</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>类的参数名和类型都做了约束。</p>
</div>
<h2> 模块</h2>
<p>内部模块称为命名空间, 外部模块简称为模块, 模块在其自身的作用域里执行, 而不是在全局作用域里;</p>
<p>这意味着定义在一个模块里的变量、函数、类等等在模块外部是不可见的, 除非你明确的使用<code>export</code>形式之一导出它们。</p>
<p>相反, 如果想使用其它模块导出的变量, 函数, 类, 接口等的时候, 你必须要导人它们, 可以使用<code>import</code>形式之一。</p>
<p>我们可以一些公共的功能单独抽离成一个文件作为一个模块。模块里面的变量、函数、类等默认是私有的, 如果我们要在外部访问模块里面的数据(变量、函数、类) 我们需要通过<code>export</code>暴露模块里面的数据(变量、函数、类...)。暴露后我们通过<code>import</code>引入模块就可以使用模块里面暴露的数据(变量、函数、类...)</p>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这个调试时浏览器中不能直接使用,可在<code>node</code>和<code>weakpack</code>的环境中调试。</p>
</div>
<h2> 命名空间</h2>
<p>在代码量较大的情况下, 为了避免各种变量命名相冲突, 可将相似功能的函数、类、接口等放置到命名空间内 TypeScript 的命名空间可以将代码包裹起来, 只对外暴露需要在外部访问的对象。</p>
<p>命名空间和模块的区别</p>
<ul>
<li>命名空间：内部模块, 主要用于组织代码, 避免命名冲突。</li>
<li>模块：ts 外部模块的简称, 侧重代码的复用, 一个模块里可能会有多个命名空间。</li>
</ul>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 装饰器</h2>
<h3> 类装饰器</h3>
<p>类装饰器在类申明之前被申明(紧靠着类申明), 类装饰器应用于类构造函数, 可以用于监视, 修改或者替换类定义。</p>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>装饰器会覆盖被装饰的类中的方法</p>
</div>
<h3> 装饰器工厂</h3>
<p>可传参的装饰器</p>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 构造函数装饰器</h3>
<div class="language-typescript line-numbers-mode" data-ext="ts"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
    <item>
      <title>Vite 下一代前端开发与构建工具</title>
      <link>https://vxhly.github.io/views/vite/study-vite.html</link>
      <guid>https://vxhly.github.io/views/vite/study-vite.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Vite 下一代前端开发与构建工具</source>
      <description>前言 Vite2.x 也推出了有一段时间了, 作为一名合格的前端开发人员, 没错我入坑了, 以下本篇文章记录的是 Vite 的一些知识点。</description>
      <category>vite</category>
      <pubDate>Wed, 25 Aug 2021 20:03:58 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Vite2.x 也推出了有一段时间了, 作为一名合格的前端开发人员, 没错我入坑了, 以下本篇文章记录的是 Vite 的一些知识点。</p>
</div>
<!-- more -->
<h2> 回顾以往的前端自动化构建工具</h2>
<h3> Grunt - 基于任务的构建工具</h3>
<ul>
<li>Grunt - 基于任务的构建工具
<ul>
<li><strong>优点：</strong>
<ul>
<li>灵活, 它只负责执行我们定义好的任务</li>
<li>大量可复用插件封装好了常见的构建任务</li>
</ul>
</li>
<li><strong>缺点：</strong>
<ul>
<li>是集成度不高, 要写很多配置后才可以用, 无法做到开箱即用</li>
</ul>
</li>
</ul>
</li>
<li>Gulp - 基于任务的构建工具
<ul>
<li><strong>优点：</strong>
<ul>
<li>好用又不失灵活, 既可以单独完成构建, 也可以和其他工具搭配使用</li>
</ul>
</li>
<li><strong>缺点：</strong>
<ul>
<li>是集成度不高, 要写很多配置后才可以用, 无法做到开箱即用</li>
</ul>
</li>
</ul>
</li>
<li>Webpack - 基于模块化的构建工具</li>
</ul>
<figure><img src="/assets/study-vite-1.png" alt="Vite" tabindex="0" loading="lazy"><figcaption>Vite</figcaption></figure>
<ul>
<li><strong>优点：</strong>
<ul>
<li>专注于处理模块化的项目, 能做到开箱即用、一步到位</li>
<li>可通过 Plugin 扩展, 完整好用又不失灵活性</li>
<li>使用场景不局限于 Web 开发</li>
<li>社区庞大活跃, 经常引入紧跟时代发展的新特性, 能为大多数场景找到已有的开源扩展</li>
<li>良好的开发体验</li>
</ul>
</li>
<li><strong>缺点：</strong>
<ul>
<li>只能用于采用模块化开发的项目</li>
<li>打包时间与应用大小成正比, 应用越大打包时间越久</li>
</ul>
</li>
<li>Rollup - 基于模块化的构建工具
<ul>
<li><strong>优点：</strong>
<ul>
<li>配置简单, 打包速度快</li>
<li>自动移除未引用的代码（内置 <code>tree shaking</code>）</li>
</ul>
</li>
<li><strong>缺点：</strong>
<ul>
<li>开发服务器不能实现模块热更新, 调试繁琐</li>
<li>浏览器环境的代码分割依赖 <code>amd</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3> 为什么会有构建工具的出现</h3>
<ul>
<li>解决前端模块化问题</li>
<li>使繁琐的任务变得更加简单</li>
<li>使 less/scss 预处理变得更加方便</li>
<li>资源压缩与混淆, 只有更小的和更安全的构建包才能传输的更快且不容易被拦截
<blockquote>
<p>扩展：js 混淆与加密在线工具（<a href="https://www.sojson.com/jsjiemi.html" target="_blank" rel="noopener noreferrer">https://www.sojson.com/jsjiemi.html</a>）</p>
</blockquote>
</li>
</ul>
<h2> Vite 由来</h2>
<blockquote>
<p>作者在微博在发言：</p>
<p>Vite, 一个基于浏览器原生 ES imports 的开发服务器。利用浏览器去解析 imports, 在服务器端按需编译返回, 完全跳过了打包这个概念, 服务器随起随用。同时不仅有 Vue 文件支持, 还搞定了热更新, 而且热更新的速度不会随着模块增多而变慢。针对生产环境则可以把同一份代码用 rollup 打。虽然现在还比较粗糙, 但这个方向我觉得是有潜力的, 做得好可以彻底解决改一行代码等半天热更新的问题</p>
</blockquote>
<p>它主要具有以下特点：</p>
<ul>
<li>快速的冷启动, 不需要等待打包操作</li>
<li>即时的模块热更新, 替换性能和模块数量的解耦让更新飞起</li>
<li>真正的按需编译, 不再等待整个应用编译完成</li>
<li>基于 ESM 的 Dev Server + HMR（模块热更新）</li>
<li>基于 esbuild 的依赖预优化</li>
<li>基于 Rollup 的 Plugins + Bundle</li>
<li>更好的 SSR 支持</li>
</ul>
<p>产生 Vite 的历程</p>
<ul>
<li>传统的 Webpack Dev Server 冷启动时间是比较长的</li>
<li>Webpack 模块热更新的反应速度比较慢</li>
</ul>
<h3> Vite 的日活量</h3>
<figure><img src="/assets/study-vite-2.png" alt="Vite" tabindex="0" loading="lazy"><figcaption>Vite</figcaption></figure>
<h3> ESM 在浏览器的支持度</h3>
<p>默认的构建目标浏览器是能 在 script 标签上支持原生 ESM 和 原生 ESM 动态导入。传统浏览器可以通过官方插件 @vitejs/plugin-legacy 支持 &nbsp; &nbsp; Vite 需要 Node.js 版本 &gt;= 12.0.0；Vite 的 2.4.x 版本不兼容 npm@7&nbsp; ESM 最大的特点是在浏览器端使用 <code>export import</code> 的方式导入和导出模块, 在 script 标签里设置 <code>type="module"</code> , 然后使用 <strong>ES module</strong>。正因如此, vite 高度依赖<code>module script</code>特性, 也就意味着从这里开始抛弃了 IE 市场</p>
<figure><img src="/assets/study-vite-3.png" alt="Vite" tabindex="0" loading="lazy"><figcaption>Vite</figcaption></figure>
<blockquote>
<p>扩展</p>
</blockquote>
<ul>
<li>本地 node 环境对于 &nbsp;ECMAScript 6 的支持度</li>
</ul>
<figure><img src="/assets/study-vite-4.png" alt="Vite" tabindex="0" loading="lazy"><figcaption>Vite</figcaption></figure>
<ul>
<li>浏览器对 import 的支持度</li>
</ul>
<figure><img src="/assets/study-vite-5.png" alt="Vite" tabindex="0" loading="lazy"><figcaption>Vite</figcaption></figure>
<ul>
<li>浏览器对 export 的支持度</li>
</ul>
<figure><img src="/assets/study-vite-6.png" alt="Vite" tabindex="0" loading="lazy"><figcaption>Vite</figcaption></figure>
<h2> Vite VS Webpack</h2>
<h3> 功能对比</h3>
<table>
<thead>
<tr>
<th></th>
<th>Vite</th>
<th>Webpack</th>
</tr>
</thead>
<tbody>
<tr>
<td>支持 Vue2</td>
<td>非官方支持:&nbsp;<a href="https://link.segmentfault.com/?url=https%3A%2F%2Fgithub.com%2Funderfin%2Fvite-plugin-vue2" target="_blank" rel="noopener noreferrer">https://github.com/underfin/vite-plugin-vue2</a></td>
<td>支持：vue-loader@^15.0.0</td>
</tr>
<tr>
<td>支持 Vue3</td>
<td>支持</td>
<td>支持：vue-loader@^16.0.0(<a href="https://link.segmentfault.com/?url=https%3A%2F%2Fgithub.com%2FJamie-Yang%2Fvue3-boilerplate" target="_blank" rel="noopener noreferrer">https://github.com/Jamie-Yang/vue3-boilerplate</a>)</td>
</tr>
<tr>
<td>支持 Typescript</td>
<td>支持：ESbuild （默认无类型检查）</td>
<td>支持：ts-loader</td>
</tr>
<tr>
<td>支持 CSS 预处理器</td>
<td>支持：&nbsp;<a href="https://link.segmentfault.com/?url=https%3A%2F%2Fvitejs.dev%2Fguide%2Ffeatures.html%23css-pre-processors" target="_blank" rel="noopener noreferrer">https://vitejs.dev/guide/features.html#css-pre-processors</a></td>
<td>支持：<a href="https://link.segmentfault.com/?url=https%3A%2F%2Fvue-loader.vuejs.org%2Fguide%2Fpre-processors.html" target="_blank" rel="noopener noreferrer">https://vue-loader.vuejs.org/guide/pre-processors.html</a></td>
</tr>
<tr>
<td>支持 CSS Modules</td>
<td>支持：&nbsp;<a href="https://link.segmentfault.com/?url=https%3A%2F%2Fvitejs.dev%2Fguide%2Ffeatures.html%23css-modules" target="_blank" rel="noopener noreferrer">https://vitejs.dev/guide/features.html#css-modules</a></td>
<td>支持：<a href="https://link.segmentfault.com/?url=https%3A%2F%2Fvue-loader.vuejs.org%2Fguide%2Fcss-modules.html" target="_blank" rel="noopener noreferrer">https://vue-loader.vuejs.org/guide/css-modules.html</a></td>
</tr>
<tr>
<td>支持静态文件</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>开发环境</td>
<td>no-bundle native ESM（CJS → ESM）</td>
<td>bundle（CJS/UMD/ESM）</td>
</tr>
<tr>
<td>HMR</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>生产环境</td>
<td>Rollup、esbuild</td>
<td>Webpack</td>
</tr>
<tr>
<td>Node API 调用能力</td>
<td>支持</td>
<td>支持</td>
</tr>
</tbody>
</table>
<h3> Webpack 打包方式</h3>
<figure><img src="/assets/study-vite-7.png" alt="Vite" tabindex="0" loading="lazy"><figcaption>Vite</figcaption></figure>
<figure><img src="/assets/study-vite-8.png" alt="Vite" tabindex="0" loading="lazy"><figcaption>Vite</figcaption></figure>
<ul>
<li>webpack 的打包时间与应用的大小是成正比的, 应用越大打包时间越久</li>
<li>打包过程：识别入口文件 =&gt; 通过逐层识别模块依赖。（Commonjs、amd 或者 es6 的 import, webpack 都会对其进行分析。来获取代码的依赖）=&gt; webpack 做的就是分析代码。转换代码, 编译代码, 输出代码 =&gt; 最终形成打包后的代码</li>
<li>根据路由把代码整合成一个文件 bundle.js,启动开发服务器 Serverready</li>
<li>vue-cli-server serve(启动服务器) → build(打包) → bundle(内存) → 启动 web server（即 Dev Server 必须等待所有模块构建完成）</li>
<li>如果改了一个模块, 是会经过重新打包的, 但是不会全部打包, 它会根据路由解析的路径差异化的打包, 但是会把内存里面的 bundle 替换, 替换完了之后再一次重启服务器</li>
<li>webpack 是会把所有的模块进行提前编译, 之后打包进 bundle 里, 换句话说, 不管模块是否会被执行, 都会被编译和打包到 bundle</li>
</ul>
<h3> Vite 打包方式</h3>
<figure><img src="/assets/study-vite-9.png" alt="Vite" tabindex="0" loading="lazy"><figcaption>Vite</figcaption></figure>
<figure><img src="/assets/study-vite-10.png" alt="Vite" tabindex="0" loading="lazy"><figcaption>Vite</figcaption></figure>
<ul>
<li>先去启动服务器, 当浏览器向服务器发送请求的时候, 浏览器需要哪些文件, 服务器 就可以返回哪些文件</li>
<li>前端需要什么,服务器就给什么,不需要打包,根据不同的路由返回不同的模块/文件 （服务器此时对请求的文件进行编译, 编译后将编译结果返回给浏览器）</li>
<li>vite 可以做到压缩打包时间, vite 打包时将项目拆分为源码和依赖两部分, 依赖部分无需打包直接加载, 源码部分只需将浏览器不兼容的转成 JavaScript 即可</li>
<li>Vite 以 原生 ESM 方式服务源码。这实际上是让浏览器接管了打包程序的部分工作：Vite 只需要在浏览器请求源码时进行转换并按需提供源码。根据情景动态导入的代码, 即只在当前屏幕上实际使用时才会被处理。</li>
</ul>
<h2> 从 Vite 源码看 Vite 原理</h2>
<h3> ESM-based Dev Server 存在的问题</h3>
<ul>
<li>非 ESM 模块兼容（TS/JSX/CSS...）</li>
<li>Broswer ESM 不能加载 Node 模块</li>
<li>Node 模块的其他问题</li>
<li>浏览器没有环境变量</li>
</ul>
<h3> Vite 如何解决问题</h3>
<blockquote>
<p>问题：非 ESM 模块兼容（TS/JSX/CSS...）解决方案：将非 ESM 模块转换成 ESM, 至于 TS 或者 JSX 是通过 esbuild 进行转换, esbuild 可以代替 TSC/Babel</p>
</blockquote>
<p>Vite 在第一次运行的时候, 会先去分析项目底下的开发依赖, 然后使用 esbuild 将亘古不变的依赖进行提取（这一步叫做预打包）, 将提取到的 ESM 模块统一存放在 node_modules/.vite 这个文件夹下, 下一次运行的时候只要没有新增的依赖项将不会进行提取, 即使新增了一项新的依赖, esbuild 也只会提取新加入的依赖项。 ​ vite 会将应用的模块拆分成依赖和源码部分, 依赖部分即是 package.json 中的运行依赖, 该部分依赖将会通过 esbuild 进行依赖提取源码 通常包含一些并非直接是 JavaScript 的文件, 需要转换（例如 JSX, CSS 或者 Vue/Svelte 组件）, 这一部分通常是交给 Rollup 进行处理</p>
<p>至于使用了 TS 的应用, esbuild 会将含有 TS 的代码转换成原生的 ESM, 在将其返回给浏览器, 这样浏览器就可以加载该模块而对于 vue 文件, 也会对其编译成 js, 可以从请求头中也可以看到, vue 文件实际上被转换成 js 文件了将要处理的 template,script,style 等所需依赖以 http 请求的形式、通过 query 参数的形式区分, 并加载 SFC(vue 单文件)文件各个模块内容。 vite 是基于浏览器对 ESMoudule 的支持, script 标签加上 <code>type="module"</code>&nbsp; 就可以解析 ES6 模块, 浏览器解析到 ES6 的 import 语法时, 会根据路径从服务端获取要引入的文件, 服务端会根据 import 的文件路径和类型进行解析</p>
<figure><img src="/assets/study-vite-11.png" alt="Vite" tabindex="0" loading="lazy"><figcaption>Vite</figcaption></figure>
<blockquote>
<p>问题：Node 模块的其他问题解决方案：将多个模块合并成一个文件, 即一个请求</p>
</blockquote>
<ul>
<li>Node 模块会随着应用的体积而增多, 在 vite 中一个文件就是一个请求, 如果有非常多的 Node 模块也只能使 vite 的性能降低</li>
<li>vite 使用依赖预优化（esbulid）,将多个 Node 模块打包成一个文件, 通过 http 进行缓存, 下次请求到同样的, 直接从缓存获取</li>
<li>Vite 将会使用 esbuild 预构建依赖。Esbuild 使用 Go 编写, 并且比以 JavaScript 编写的打包器预构建依赖快 10-100 倍</li>
</ul>
<blockquote>
<p>问题：Broswer ESM 不能加载 Node 模块解决方案：引入 es-module-lexer 和 magic-string, 或者引入 koa 中间件</p>
</blockquote>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>使用 es-module-lexer 扫描所有的 import 语法</li>
<li>magic-string 将重写 Node 模块的引入路径</li>
</ul>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote>
<p>扩展：Vite 1.0 的解决方案</p>
</blockquote>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上我们可以看到, vite 引入入 koa 服务器, 开发时, vite 使用 Koa 构建的服务端, 在 createServer 中主要通过中间件注册相关功能, 提供一个 web server 去代理, 之后浏览器通过 http 进行请求模块。为什么会需要 koa 这样的服务来代理请求, 因为我们的开发依赖都是安装在 node_modules 中, 浏览器 ES Module 是无法直接获取到项目下 node_modules 目录中的文件, 其过程如下：</p>
<ul>
<li>通过 koa 中间件获取请求 body</li>
<li>使用 es-module-lexer 解析资源 ast</li>
<li>获取 import 的内容后, 判断资源是否是绝对路径, 绝对视为 npm 模块</li>
<li>返回处理后的路径给浏览器, 例如："vue" =&gt; "/@modules/vue"</li>
</ul>
<blockquote>
<p>问题：浏览器没有环境变量解决方案：将环境变量注入到 import.meta.env</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> Vite 缺点</h3>
<ul>
<li>生态不如 webpack
<ul>
<li>webpack 有非常丰富的 loader 和 plugin</li>
<li>vite 目前无法把 webpack 中的 loader 和 plugin 全部实现</li>
</ul>
</li>
<li>prod 环境的构建, 目前用的 Rollup
<ul>
<li>原因在于 esbuild 对于 css 和代码分割不是很友好</li>
<li>未来 esbuild 可能是一种趋势, esbuild 的生态做的越好的话, 越有可能直接替换 Rollup</li>
</ul>
</li>
</ul>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/study-vite-1.png" type="image/png"/>
    </item>
    <item>
      <title>Avue 前端框架使用实践</title>
      <link>https://vxhly.github.io/views/vuejs/avue-framework-practice.html</link>
      <guid>https://vxhly.github.io/views/vuejs/avue-framework-practice.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Avue 前端框架使用实践</source>
      <description>前言 Avue 前端是基于 ElementUI 库进行的二次封装, 简化了一些繁琐的操作。本篇博文将带领大家学习这套框架的使用实践, 以及它的一些二次封装的思路。</description>
      <category>vuejs</category>
      <pubDate>Thu, 20 Aug 2020 11:39:08 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Avue 前端是基于 ElementUI 库进行的二次封装, 简化了一些繁琐的操作。本篇博文将带领大家学习这套框架的使用实践, 以及它的一些二次封装的思路。</p>
</div>
<!-- more -->
<h2> 关于 Avue</h2>
<h3> 参考地址</h3>
<ul>
<li>Github 仓库：<a href="https://github.com/nmxiaowei/avue" target="_blank" rel="noopener noreferrer">nmxiaowei/avue</a></li>
<li>Gitee 仓库：<a href="https://gitee.com/smallweigit/avue" target="_blank" rel="noopener noreferrer">smallwei/Avue</a></li>
<li>Avue 官方文档：<a href="https://avuejs.com/" target="_blank" rel="noopener noreferrer">Avue</a></li>
<li>ElementUI 官方文档：<a href="https://element.eleme.cn/#/zh-CN/component/installation" target="_blank" rel="noopener noreferrer">ElementUI</a></li>
<li>基于 Avue 的后台管理系统示例: <a href="https://cli.avuejs.com/wel/index" target="_blank" rel="noopener noreferrer">Avue 后台管理系统</a></li>
</ul>
<h3> 简介</h3>
<div class="hint-container tip">
<p class="hint-container-title">简介</p>
<p>Avue.js 是基于现有的 element-ui 库进行的二次封装, 从而简化一些繁琐的操作, 核心理念为数据驱动视图, 主要的组件库针对 table 表格和 form 表单场景, 同时衍生出更多企业常用的组件, 达到高复用, 容易维护和扩展的框架, 同时内置了丰富了数据展示组件, 让开发变得更加容易。</p>
<p>它的核心是数据驱动 UI 的思想, 让我们从繁琐的 crud 开发中解脱出来, 他的写法类似 easyUI, 但是写起来比 easyUI 更加容易, 因为它是集合了 vue 中的数据双向绑定特性以及其他的一些特性。内含大量的组件和插件, 例如 crud、表单、数据展示卡、人物展示卡、打印的插件、Excel 导入插件等。</p>
<p>缺点是生态不好, 出错网上没有解决方案, 对于定制化要求比较高的需求, 使用 avue 不是很方便。当然除了而二次封装的 element-ui 库, 还有二次封装的 ant-design-vue 、echarts、vant, 维护比较好组件也比较全面当属 element-ui 库, 其中二次封装 ant-design-vue 、vant 暂未开放给用户使用。</p>
</div>
<p>使用 Avue 好处：</p>
<ol>
<li>让开发人员更加的关注业务代码, 而无需过多的关心页面的布局</li>
<li>简洁高效, 通过简单的配置项即可组合出我们想要的效果</li>
<li>提供了大量的常用组件库以及丰富的插件库</li>
<li>兼容现在的主流浏览器, 开箱即用的插件引入模式</li>
</ol>
<p>Avue 的组件组成：</p>
<ol>
<li>单组件, 在 element-ui 库中的组件进行二次封装, 让使用更加方便</li>
<li>CRUD 组件, 即表格组件, 常用于需要使用表单来展示数据的业务或者是日常 CRUD 的一些操作, 文档地址：<a href="https://avuejs.com/doc/crud/crud-doc" target="_blank" rel="noopener noreferrer">Avue CRUD 组件</a></li>
<li>表单组件, 常用于数据收集、数据修改等业务, 文档地址：<a href="https://avuejs.com/doc/form/form-doc" target="_blank" rel="noopener noreferrer">Avue FORM 组件</a></li>
<li>数据展示组件, 常用与一些需要数据展示的一些业务, 常见于大数据类的后台管理系统中的首页里面的一些数据统计, 文档地址：<a href="https://avuejs.com/doc/data/data0" target="_blank" rel="noopener noreferrer">Avue Data 组件</a></li>
<li>其他组件, 封装的一些常用的组件(比较杂, 例如：打印、评论、拖拽、水印)</li>
</ol>
<h3> 浏览器兼容性</h3>
<div class="hint-container warning">
<p class="hint-container-title">Vue.js 的兼容性</p>
<p>Vue 不支持 IE8 及以下版本, 因为 Vue 使用了 IE8 无法模拟的 ECMAScript 5 特性。但它支持所有<a href="https://caniuse.com/#feat=es5" target="_blank" rel="noopener noreferrer">兼容 ECMAScript 5 的浏览器</a>。</p>
</div>
<div class="hint-container warning">
<p class="hint-container-title">Avue 的兼容性</p>
<p>支持所有符合 ES5 标准的浏览器(不支持 IE8 及以下版本）.</p>
</div>
<h2> 实践</h2>
<h3> 下载与引入</h3>
<h4> 下载</h4>
<p>使用 npm 或者 yarn 就可以对 Avue 这套 UI 框架进行下载, 并将该依赖写入到 <code>package.json</code> 中</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 完整引入</h4>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>Avue 目前不支持按需引入, 只支持完整引入</p>
</div>
<p>与其他 UI 框架的一样引入方式, 在项目的 <code>main.js</code> 中添加以下代码即可</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 使用案例</h2>
<p>在使用前, 我们还需要另外的导入 element-ui 库的依赖, 因为 Avue 是基于 element-ui 库进行的二次封装, 并且 Avue 源码中并没有为我们导出 element-ui 库的依赖。所以我们仍然需要在项目的 <code>main.js</code> 中添加 element-ui 库的依赖。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><!-- <CodePreview embedUrl="https://codesandbox.io/embed/avue-demo-z4uje?autoresize=1&fontsize=14&hidenavigation=1&theme=dark&view=preview" /> -->
<h3> 表单</h3>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 表格</h3>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> 二次封装思路</h2>
<p>更多的封装思路阅读 <a href="https://juejin.im/post/6844904191224184840" target="_blank" rel="noopener noreferrer">绝对干货~！学会这些 Vue 小技巧, 可以早点下班和女神约会了</a></p>
<h3> component 动态组件</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>使用到的是 vue 中的动态组件 <code>component</code></p>
</div>
<ul>
<li>
<p>Props</p>
<ul>
<li><code>is</code> : - <em>string</em> | <em>ComponentDefinition</em> | <em>ComponentConstructor</em></li>
<li><code>inline-template</code> : - <em>boolean</em></li>
</ul>
</li>
<li>
<p>用法</p>
<p>渲染一个“元组件”为动态组件。依 <code>is</code> 的值, 来决定哪个组件被渲染。</p>
</li>
</ul>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul>
<li>参考：<a href="https://cn.vuejs.org/v2/guide/components.html#%E5%8A%A8%E6%80%81%E7%BB%84%E4%BB%B6" target="_blank" rel="noopener noreferrer">动态组件</a></li>
</ul>
<p>示例：</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> $attrs 与 $listeners</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>$attrs</code> : 当组件在调用时传入的属性没有在 <code>props</code> 里面定义时, 传入的属性将被绑定到 <code>$attrs</code> 属性内（ <code>class</code> 与 <code>style</code> 除外, 他们会挂载到组件最外层元素上）。并可通过 <code>v-bind="$attrs"</code> 传入到内部组件中。</p>
<p><code>$listeners</code> : 当组件被调用时, 外部监听的这个组件的所有事件都可以通过 <code>$listeners</code> 获取到。并可通过 <code>v-on="$listeners"</code> 传入到内部组件中。</p>
</div>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于 <code>$attrs</code> , 我们也可以使用 <code>$props</code> 来代替, 实现代码如下</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 自定义 v-model</h3>
<p>在用 Vue 开发前端时, 不论使用原生还是封装好的 UI 库, 对于表单组件, 一般都会使用到<code>v-model</code>。虽然 <code>v-model</code> 是一个语法糖, 但是吃到嘴里挺甜的啊。学会自定义<code>v-model</code>, 还是很有必要的。</p>
<p>一个组件上的 <code>v-model</code> 默认是通过在组件上面定义一个名为 <code>value</code> 的 <code>props</code>,同时对外暴露一个名为 <code>input</code> 的事件。</p>
<p>方式一：通过 change 监听方式同步数据</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方式二：使用 <code>computed</code> 中的 <code>get</code> 和 <code>set</code> 方法进行同步</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用方式</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 自定义 .sync</h3>
<p>在 Vue 中, props 属性是单向数据传输的,父级的 prop 的更新会向下流动到子组件中, 但是反过来不行。可是有些情况, 我们需要对 <code>prop</code> 进行“双向绑定”。上文中, 我们提到了使用 <code>v-model</code> 实现双向绑定。但有时候我们希望一个组件可以实现多个数据的“双向绑定”, 而 <code>v-model</code> 一个组件只能有一个(Vue3.0 可以有多个), 这时候就需要使用到 <code>.sync</code>。</p>
<p><code>.sync</code> 与 <code>v-model</code> 的异同</p>
<ul>
<li>
<p>相同点：</p>
<ul>
<li>两者的本质都是语法糖, 目的都是实现组件与外部数据的双向绑定</li>
<li>两个都是通过属性+事件来实现的</li>
</ul>
</li>
<li>
<p>不同点：</p>
<ul>
<li>一个组件只能定义一个 <code>v-model</code>, 但可以定义多个 <code>.sync</code></li>
<li><code>v-model</code> 与 <code>.sync</code> 对于的事件名称不同, <code>v-model</code> 默认事件为 <code>input</code>,可以通过配置 <code>model</code> 来修改, <code>.sync</code> 事件名称固定为 <code>update:属性名</code></li>
</ul>
</li>
</ul>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用方式</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> slot</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>二次封装时需要保留原组件中的 slot 插槽, <code>$slots</code> 获取到当前组件传入的所有 slot 插槽</p>
</div>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在开发过程中, 我们还会遇到以下的场景</p>
<p>下面是你封装的一个组件, 可以看到 <code>a-form-item</code> 已经有默认的 default 插槽了, 但是我们在使用它时又想自定义 <code>a-form-item</code> 中的其他插槽</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以参考以下的方式优化它</p>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> mixins</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p><code>mixins</code> 是 Vue 提供的一种混合机制, 用来更高效的实现组件内容的复用。怎么去理解混入呢, 我觉得和 <code>Object.assign</code> , 但实际与 <code>Object.assign</code> 又有所不同。</p>
</div>
<p>在 <code>Vue</code> 中, 一个混入对象可以包含任意组件选项, 但是对于不同的组件选项, 会有不同的合并策略。</p>
<ol>
<li>data 对于 data, 在混入时会进行递归合并, 如果两个属性发生冲突, 则以组件自身为主</li>
<li>生命周期钩子函数</li>
</ol>
<p>对于生命周期钩子函数, 混入时会将同名钩子函数加入到一个数组中, 然后在调用时依次执行。混入对象里面的钩子函数会优先于组件的钩子函数执行。如果一个组件混入了多个对象, 对于混入对象里面的同名钩子函数, 将按照数组顺序依次执行, 如下代码:</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3">
<li>其他选项 对于值为对象的选项, 如 <code>methods</code>,<code>components</code>,<code>filter</code>,<code>directives</code>,<code>props</code> 等等, 将被合并为同一个对象。两个对象键名冲突时, 取组件对象的键值对。</li>
</ol>
<h3> class</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>关于统一化 class 命名方式, class 命名时需要添加组织前缀的, 以下的方式比较适用</p>
</div>
<div class="language-vue line-numbers-mode" data-ext="vue"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> Provide / Inject</h3>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>这边参考 vue 的官方文档就好： <a href="https://cn.vuejs.org/v2/api/#provide-inject" target="_blank" rel="noopener noreferrer">provide / inject</a></p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>使用 Vue cli 3.0 构建自定义组件库(第一弹)</title>
      <link>https://vxhly.github.io/views/vuejs/custom-component-library-first.html</link>
      <guid>https://vxhly.github.io/views/vuejs/custom-component-library-first.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 Vue cli 3.0 构建自定义组件库(第一弹)</source>
      <description>前言 本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等。</description>
      <category>vuejs</category>
      <pubDate>Sun, 28 Apr 2019 17:19:49 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等。</p>
</div>
<!-- more -->
<h2> 先言</h2>
<p>主流的开源 UI 库代码结构主要分为三大部分:</p>
<ul>
<li>组件库本身的代码: 这部分代码会发布到 npm 上</li>
<li>预览示例和查看文档的网站代码: 类似 Vant、ElementUI 这类网站。</li>
<li>配置文件和脚本文件: 用于打包和发布等等</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>编写此博文的灵感 UI 框架库（<a href="https://github.com/Eamonnzhang/vue-cards" target="_blank" rel="noopener noreferrer">vue-cards</a>）, PS: 此 UI 　框架库相对于 Vant、ElementUI 　会比较简单点, 可以作为一份自定义　 UI 　框架库的入坑　 demo, 同时这篇博文也是解读这份 UI 框架库的构建到上线的一个过程</p>
</div>
<h2> 前置工作</h2>
<p>以下工作全部基于 Vue CLI 3.x, 所以首先要保证机子上有 <code>@vue/cli</code></p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2> start</h2>
<p>开始造轮子了</p>
<h3> 工作目录</h3>
<p>在根目录下新增四个文件夹, 一个用来存放组件的代码（packages）, 一个用来存放 预览示例的网站 代码（examples）（这里直接把初始化模板的 src 目录更改为 examples 即可, 有需要的话可以将该目录进行清空操作, 这里就不做过多的说明）, 一个用来存放编译脚本代码（build）, 一个用来存放自定义生成组件和组件的说明文档等脚本（scripts）</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 让 webpack 编译 examples</h3>
<p>由于我们将 src 目录修改成了 examples, 所以在 <code>vue.config.js</code> 中需要进行相应的修改</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 添加编译脚本</h3>
<p><code>package.json</code> 其中的组件 name 推荐和创建的项目名一致</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改 main 主入口文件</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3> 一个组件例子</h3>
<h4> 创建组件和组件文档生成脚本</h4>
<p>在 <code>scripts</code> 中创建以下几个文件, 其中 <code>create-comp.js</code> 是用来生成自定义组件目录和自定义组件说明文档脚本, <code>delete-comp.js</code> 是用来删除无用的组件目录和自定义组件说明文档脚本, <code>template.js</code> 是生成代码的模板文件</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相关的代码如下, 小主可以根据自己的需求进行相应的简单修改, 下面的代码参考来源 <a href="https://juejin.im/post/5c6772ff518825629c56943c" target="_blank" rel="noopener noreferrer">vue-cli3 项目优化之通过 node 自动生成组件模板 generate View、Component</a></p>
<p><code>create-comp.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>delete-comp.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>template.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>build</code> 中创建以下几个文件, 其中 <code>build-entry.js</code> 脚本是用来生成自定义组件导出 <code>packages/index.js</code> , <code>get-components.js</code> 脚本是用来获取 <code>packages</code> 目录下的所有组件</p>
<div class="language-text line-numbers-mode" data-ext="text"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相关的代码如下, 小主可以根据自己的需求进行相应的简单修改, 下面的代码参考来源 <a href="https://github.com/Eamonnzhang/vue-cards" target="_blank" rel="noopener noreferrer">vue-cards</a></p>
<p><code>build-entry.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>get-components.js</code></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 让 vue 解析 markdown</h4>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>文档中心的 UI 是如何编码的这里不做阐述, 小主可以自行参照 <a href="https://github.com/Eamonnzhang/vue-cards" target="_blank" rel="noopener noreferrer">vue-cards</a> 中的实现方式进行改造</p>
</div>
<p>需要安装以下的依赖, 让 vue 解析 markdown</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于 vue.config.js 的配置在 <a href="https://github.com/Eamonnzhang/vue-cards" target="_blank" rel="noopener noreferrer">vue-cards</a> 该项目中也有了, 不做阐述</p>
<p>这里将补充高亮 <code>highlight.js</code> 以及点击复制代码 <code>clipboard</code> 的实现方式</p>
<p>安装依赖</p>
<div class="language-bash line-numbers-mode" data-ext="sh"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>改造 <code>App.vue</code> , 以下只是列出部分代码, 小主可以根据自己的需求进行添加</p>
<div class="language-html line-numbers-mode" data-ext="html"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4> 生成命令</h4>
<p>在 <code>package.json</code> 中添加以下内容, 使用命令 <code>yarn new:comp</code> 创建组件目录及其文档或者使用命令 <code>yarn del:comp</code> 即可删除组件目录及其文档</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2> changelog</h2>
<p>在 <code>package.json</code> 中修改 script 字段, 接下来你懂的, 另一篇博客有介绍哦, 小主可以执行搜索</p>
<div class="language-json line-numbers-mode" data-ext="json"><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></content:encoded>
    </item>
  </channel>
</rss>