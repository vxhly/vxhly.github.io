<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <atom:link href="https://vxhly.github.io/rss.xml" rel="self" type="application/rss+xml"/>
    <title>Coding and Fixing</title>
    <link>https://vxhly.github.io/</link>
    <description>源于生活而高于生活.</description>
    <language>zh-CN</language>
    <pubDate>Sat, 07 Jan 2023 16:41:42 GMT</pubDate>
    <lastBuildDate>Sat, 07 Jan 2023 16:41:42 GMT</lastBuildDate>
    <generator>vuepress-plugin-feed2</generator>
    <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
    <category>PMP</category>
    <category>信息系统项目管理师</category>
    <category>liunx</category>
    <category>app</category>
    <category>design</category>
    <category>electron</category>
    <category>graphql</category>
    <category>java</category>
    <category>manual</category>
    <category>networking</category>
    <category>nodejs</category>
    <category>other</category>
    <category>pentest</category>
    <category>typescript</category>
    <category>vite</category>
    <category>vuejs</category>
    <item>
      <title>工具与技术</title>
      <link>https://vxhly.github.io/pmp/examination/toolsand-techniques.html</link>
      <guid>https://vxhly.github.io/pmp/examination/toolsand-techniques.html</guid>
      <source url="https://vxhly.github.io/rss.xml">工具与技术</source>
      <description>前言 PMP 全书中出现了不少的工具与技术, 本文针对这些工具技术进行分类整理和并且对于这些名词做出相应的解释。 数据收集 头脑风暴 表示在短时间内获得大量创意, 适用于团队环境, 需要引导者进行引导头脑风暴由两部分构成：创意产生和创意分析。; 头脑风暴简单的理解为就是畅所欲言不批评和评价。; 畅所欲言、只求数量, 不求质量。; 焦点小组 召集相关方和...</description>
      <category>PMP</category>
      <pubDate>Thu, 01 Sep 2022 20:50:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>PMP 全书中出现了不少的工具与技术, 本文针对这些工具技术进行分类整理和并且对于这些名词做出相应的解释。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>解题思路</title>
      <link>https://vxhly.github.io/pmp/examination/problem-solving.html</link>
      <guid>https://vxhly.github.io/pmp/examination/problem-solving.html</guid>
      <source url="https://vxhly.github.io/rss.xml">解题思路</source>
      <description>前言 记录 PMP 考试的一些解题思路 变更题 当题干中出现：新的、额外的、设备变化、工作遗漏、范围蔓延、确保缺陷补救正确、争论要不要变更、等等均属于变更题。 变更的本质是对项目管理计划（基准）、可交付成果的修改; 变更往往是出于某种需要, 无所谓好与不好；不要看成是问题, 也不要看成是风险；; 我们更多的是关注变更的受控, 评估对项目管理计划（基准）...</description>
      <category>PMP</category>
      <pubDate>Thu, 01 Sep 2022 20:50:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录 PMP 考试的一些解题思路</p>
</div>
<h2> 变更题</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>当题干中出现：新的、额外的、设备变化、工作遗漏、范围蔓延、确保缺陷补救正确、争论要不要变更、等等均属于变更题。</p>
</div>
<ul>
<li>变更的本质是对项目管理计划（基准）、可交付成果的修改</li>
<li>变更往往是出于某种需要, 无所谓好与不好；不要看成是问题, 也不要看成是风险；</li>
<li>我们更多的是关注变更的受控, 评估对项目管理计划（基准）的影响, 而不是“担心”带来的问题或风险</li>
<li>对待变更的态度：无所谓“欢迎”还是“不欢迎”, 需要变更就变更, 但是要受控</li>
</ul>
<p>变更流程：（了解变更的具体内容或原因, 告知变更的流程, 避免不必要的变更）</p>
<p>1.记录（项目经理书面记录或要求变更提出者提交书面的变更）2.评估, 3.提交（项目经理提交给 CCB）, 4.更新, 5.通知</p>
<p>如果获得批准, 就必须要去执行批准的变更, 如果其他相关方有意见可以重新提交新的变更
如果变更没有获得批准就直接执行了, 则需要：1.停止不良变更（不是停止整个项目）, 2. 补变更流程。</p>
<h2> 相关方与沟通</h2>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>相关方的管理在于管理人</p>
<p>遇到相关方反对、担忧、抵制、威胁、不支持、不参与, 事后提出不同意见等等, 均属于相关方题</p>
</div>
<ul>
<li>如果之前没有识别该相关方：更新相关方登记册, 做好相关方分析和分类（权力利益）</li>
<li>如果已经识别了该相关方：审查相关方参与计划, 或者, 管理相关方参与（引导参与, 获得支持；谈判沟通, 管理期望；处理风险,
预测问题；澄清和解决已识别的问题）</li>
<li>如果问事先要做好什么：早识别、早分析（相关方分析）、早参与</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>沟通的管理在于管理信息传递</p>
<p>信息流传递的问题才是沟通问题：多发少发, 没有及时发, 看不懂, 不是想要的, 不方便阅读, 虚拟团队的沟通问题, 相关方抱在怨沟通不及时,
虚拟团队的误解, 均是沟通题</p>
</div>
<ul>
<li>常见的选项有：审查管理计划、更新沟通管理计划、创建沟通管理计划, 以及跟规划沟通有关的工具：沟通需求分析, 沟通风格评估等等</li>
<li>注意区分, 是要你管人, 还是要你管信息的传递；人的问题属于相关方知识领域、信息传递的问题属于沟通知识领域</li>
</ul>
<h2> 风险和问题</h2>
<ul>
<li>风险是一种不确定性的事件, 有概率发生, 发生之后会对项目产生积极或消极的影响</li>
<li>问题是当前客观存在的情形, 已经对项目产生了影响</li>
<li>对于风险来说：1. 未来可能发生, 2.一旦发生就会有影响</li>
<li>对于问题来说：1. 当前客观存在, 2.已经对项目产生影响</li>
</ul>
<div class="hint-container tip">
<p class="hint-container-title">风险的题目</p>
<ul>
<li>风险的题目（大多数风险题, 题干中会明确说到“可能”带来的影响）</li>
<li>识别到风险：更新（查阅）风险登记册、定性、定量、规划应对、实施应对</li>
<li>发生了风险：已知风险, 查阅风险登记册直接应对, 如果要用储备, “应急储备”；未知风险：权变, 走变更流程, 用管理储备</li>
</ul>
</div>
<div class="hint-container tip">
<p class="hint-container-title">问题的题目</p>
<ul>
<li>记录问题日志, 分析根本原因（或评估影响）, 确定解决方案。</li>
<li>问题解决的完整步骤：1.定义, 2.识别, 3.方案, 4.选择, 5.执行, 6.验证</li>
</ul>
</div>
<h2> 原因和根本原因</h2>
<div class="hint-container tip">
<p class="hint-container-title">找原因</p>
<p>如果题目描述的是想要找原因, 问题是使用什么工具和技术, 选项找：<code>根本原因分析</code></p>
</div>
<div class="hint-container tip">
<p class="hint-container-title">找根本原因</p>
<p>如果题目描述的是想要找根本原因, 问题是如何找根本原因, 选项找：<code>鱼骨图</code>、<code>石川图</code>、<code>因果图</code></p>
</div>
<h2> 正常收尾流程</h2>
<ol>
<li>获得项目发起人和相关方的批准（验收）</li>
<li>移交最终成果</li>
<li>总结经验教训, 提供未来项目或阶段使用</li>
<li>更新组织过程资产</li>
<li>文件归档</li>
<li>释放资源、解散项目团队</li>
<li>衡量并记录客户满意度</li>
<li>庆功会</li>
</ol>
<h2> 提前收尾流程</h2>
<ol>
<li>在正式的收尾文件中说明项目终止的原因</li>
<li>把该项目的已完成和未完成的可交付成果移交他人</li>
<li>总结经验教训, 提供未来项目或阶段使用</li>
<li>更新组织过程资产</li>
<li>文件归档</li>
<li>释放资源、解散项目团队</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>PMP 敏捷知识点</title>
      <link>https://vxhly.github.io/pmp/agile/agile-knowledge.html</link>
      <guid>https://vxhly.github.io/pmp/agile/agile-knowledge.html</guid>
      <source url="https://vxhly.github.io/rss.xml">PMP 敏捷知识点</source>
      <description>前言 在 PMP 中存在大量的敏捷知识点, 本篇将记录相关的重点知识。 预测型（瀑布型）的特点 用计划驱动, 需求必须明确, 一开始就要收集详细的需求; 如果需求经常发生变化, 需要通过变更流程修改计划; 一开始就要编写大量的文档; 客户参与度不高, 他们认为在收集需求的时候已经讲得很清楚了; 需要花大量的时间来汇报当前的项目状态; 价值只有到项目结束...</description>
      <category>PMP</category>
      <pubDate>Tue, 26 Jul 2022 20:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>在 PMP 中存在大量的敏捷知识点, 本篇将记录相关的重点知识。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/Iron-Triangle.png" type="image/png"/>
    </item>
    <item>
      <title>PMP 敏捷开发流程之Scrum：3355</title>
      <link>https://vxhly.github.io/pmp/agile/scrum-3355.html</link>
      <guid>https://vxhly.github.io/pmp/agile/scrum-3355.html</guid>
      <source url="https://vxhly.github.io/rss.xml">PMP 敏捷开发流程之Scrum：3355</source>
      <description>前言 敏捷开发过程重视团队的交流与管理问题, 其提高研发效率的显著效果, 使得敏捷开发逐渐成为继瀑布式开发之后, 最为流行的软件开发方式, 其中, Scrum 过程无疑是目前最为成功的敏捷方法。 Scrum 是用于开发、交付和持续支持复杂产品的一个框架, 是一个增量的、迭代的开发过程。 基本概念 Scrum3355 指的是：3 个核心角色, 3 个工件...</description>
      <category>PMP</category>
      <pubDate>Sat, 20 Aug 2022 19:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>敏捷开发过程重视团队的交流与管理问题, 其提高研发效率的显著效果, 使得敏捷开发逐渐成为继瀑布式开发之后, 最为流行的软件开发方式, 其中, Scrum 过程无疑是目前最为成功的敏捷方法。</p>
<p>Scrum 是用于开发、交付和持续支持复杂产品的一个框架, 是一个增量的、迭代的开发过程。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>PMP 公式篇</title>
      <link>https://vxhly.github.io/pmp/examination/formula.html</link>
      <guid>https://vxhly.github.io/pmp/examination/formula.html</guid>
      <source url="https://vxhly.github.io/rss.xml">PMP 公式篇</source>
      <description>前言 在 PMP 中存在一定的计算题, 一般分布在进度管理和成本管理章节, 以下是记录考试中会使用到的公式以及相关名词解释。 第四章 整合管理 商业价值与开发周期 比值 = 商业价值 / 开发周期 在选择项目的优先级时, 比值越高, 应该被优先选择 第六章 进度管理 三点估算 源自计划评审技术（PERT）。考虑估算中的不确定性和风险, 来提高估算的准确...</description>
      <category>PMP</category>
      <pubDate>Wed, 20 Jul 2022 22:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>在 PMP 中存在一定的计算题, 一般分布在进度管理和成本管理章节, 以下是记录考试中会使用到的公式以及相关名词解释。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>PMP 关键词篇</title>
      <link>https://vxhly.github.io/pmp/examination/keyword.html</link>
      <guid>https://vxhly.github.io/pmp/examination/keyword.html</guid>
      <source url="https://vxhly.github.io/rss.xml">PMP 关键词篇</source>
      <description>前言 PMP 考试题目中如果出现某些关键词, 就可以直接根据关键词选出对应的正确 答案, 不光提高答题速度, 也能确保答题的准确率。现在将考试中一些常见关键 词对应的正确选项列举如下。 第一章 引论 1. 看到“驱动变革” =====&gt; 选项中找“将来状态” 2. 看到“依赖关系” =====&gt; 选项中找“项目集管理” 3. 看到“价值最大化”、“与组...</description>
      <category>PMP</category>
      <pubDate>Tue, 19 Jul 2022 22:50:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>PMP 考试题目中如果出现某些关键词, 就可以直接根据关键词选出对应的正确
答案, 不光提高答题速度, 也能确保答题的准确率。现在将考试中一些常见关键
词对应的正确选项列举如下。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>第一章：信息化和信息系统</title>
      <link>https://vxhly.github.io/soft-test/knowledge/Information-system.html</link>
      <guid>https://vxhly.github.io/soft-test/knowledge/Information-system.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第一章：信息化和信息系统</source>
      <description>前言 记录信息化和信息系统章节的相关知识、频繁考点。</description>
      <category>信息系统项目管理师</category>
      <pubDate>Sat, 02 Jul 2022 14:22:42 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录信息化和信息系统章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>第三章：项目立项管理</title>
      <link>https://vxhly.github.io/soft-test/knowledge/project-approval.html</link>
      <guid>https://vxhly.github.io/soft-test/knowledge/project-approval.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第三章：项目立项管理</source>
      <description>前言 记录项目立项管理章节的相关知识、频繁考点。</description>
      <category>信息系统项目管理师</category>
      <pubDate>Wed, 13 Jul 2022 20:22:32 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目立项管理章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>第二章：信息系统项目管理基础</title>
      <link>https://vxhly.github.io/soft-test/knowledge/project-management.html</link>
      <guid>https://vxhly.github.io/soft-test/knowledge/project-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第二章：信息系统项目管理基础</source>
      <description>前言 记录信息系统项目管理基础章节的相关知识、频繁考点。</description>
      <category>信息系统项目管理师</category>
      <pubDate>Tue, 12 Jul 2022 20:00:42 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录信息系统项目管理基础章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/zhi-neng-xing.png" type="image/png"/>
    </item>
    <item>
      <title>第一章：引论</title>
      <link>https://vxhly.github.io/pmp/knowledge/Introduction.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/Introduction.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第一章：引论</source>
      <description>前言 记录引论章节的相关知识、频繁考点。 本章重点 项目的特点：独特性 (#项目的-独特性)、临时性 (#项目的-临时性)、渐进明细、促进组织变更、商业价值 (#商业价值); “项目组合 (#项目组合管理)”和“项目集 (#项目集管理)”的区别; 项目生命周期、阶段 (#项目的管理过程); 预测型 (#预测型)、迭代型 (#迭代型)、增量型 (#增量型...</description>
      <category>PMP</category>
      <pubDate>Fri, 15 Jul 2022 21:50:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录引论章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/PMP.png" type="image/png"/>
    </item>
    <item>
      <title>第十章：项目沟通管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-communication-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-communication-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第十章：项目沟通管理</source>
      <description>前言 记录项目沟通管理章节的相关知识、频繁考点。 核心概念 沟通管理就是在合适的时间让合适的人通过合适的方式把合适的信息传达给合适的人, 看似一句无用的话, 但如何选择“合适”的人、“合适”的方式非常考验人, 所以沟通管理能力是项目经理最重要的能力之一。 沟通 =&gt; 通过沟通活动（如会议和演讲）, 或已工作的方式（如电子邮件、社交媒体、项目报告或项目文...</description>
      <category>PMP</category>
      <pubDate>Wed, 03 Aug 2022 19:40:40 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目沟通管理章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-communication-management.png" type="image/png"/>
    </item>
    <item>
      <title>第七章：项目成本管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-cost-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-cost-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第七章：项目成本管理</source>
      <description>前言 记录项目成本管理章节的相关知识、频繁考点。 核心概念 成本管理是指尽量让项目实际进行中的成本控制在预算范围之内, 确保在预算之内完成项目, 主要包括规划成本管理、估算成本、制定预算和控制成本四个过程。 项目成本管理重点关注完成项目活动所需资源的成本, 但同时也应考虑项目决策对项目的产品、服务或成果的使用成本、维护成本和支持成本的影响。 项目成本管...</description>
      <category>PMP</category>
      <pubDate>Sun, 24 Jul 2022 12:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目成本管理章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-cost-management.png" type="image/png"/>
    </item>
    <item>
      <title>第四章：项目整合管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-integration-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-integration-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第四章：项目整合管理</source>
      <description>前言 记录项目整合管理章节的相关知识、频繁考点。 核心概念 整体管理是指识别、定义、结合、统一与协调项目管理过程组中的各个过程以及项目管理活动, 用一句话来总结项目整合管理, 其作用犹如项链中的那根线, 将项目管理过程组中需要的各个过程进行有效综合。 整理管理的主要内容是制定项目章程、制定项目管理计划、指导和管理项目工作、监督项目工作等。 在项目管理中...</description>
      <category>PMP</category>
      <pubDate>Sat, 16 Jul 2022 20:02:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目整合管理章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-integration-management.png" type="image/png"/>
    </item>
    <item>
      <title>第三章：项目经理的角色</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-manager.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-manager.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第三章：项目经理的角色</source>
      <description>前言 记录项目经理的角色章节的相关知识、频繁考点。 项目经理 项目经理由执行组织委派, 领导团队实现项目目标的个人。 项目经理 =&gt; 专注项目目标大达成。 项目经理无需承担项目中的每个角色, 但应具备项目管理知识、技术知识、理解能力和相关经验。项目经理通过沟通领导项目团队进行规划和协调。 项目经理的影响范围：项目、组织、行业、专业学科、跨领域 项目目标...</description>
      <category>PMP</category>
      <pubDate>Sat, 16 Jul 2022 15:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目经理的角色章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>第二章：项目运行环境</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-operating-environment.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-operating-environment.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第二章：项目运行环境</source>
      <description>前言 记录项目运行环境章节的相关知识、频繁考点。 事业环境因素（EEF） 不可控、需遵守 项目团队不能控制的, 将对项目产生影响、限制或指令作用的各种条件。这些因素可能会提高或限制项目管理的灵活性, 并可能对项目结果产生积极或消极的影响。 事业环境因素可能会提高或限制项目管理的灵活性。 市场条件; 社会和文化影响与问题; 法律限制; 商业数据库; 学术...</description>
      <category>PMP</category>
      <pubDate>Sat, 16 Jul 2022 13:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目运行环境章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>第六章：项目进度管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-progress-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-progress-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第六章：项目进度管理</source>
      <description>前言 记录项目进度管理章节的相关知识、频繁考点。 核心概念 项目进度管理是指让一切按照既定的进度进行, 对项目进行合理的时间管理, 才是保证项目顺利交付的关键, 那么如何才能做好项目时间管理呢？可以从六个方面入手：定义项目范围, 注重分解工作；对项目工作进行优先排序；项目工期估算；制定项目进度表；进行进度控制；工具使用等。 具有未完项的迭代型进度计划：...</description>
      <category>PMP</category>
      <pubDate>Wed, 20 Jul 2022 19:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目进度管理章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-progress-management.png" type="image/png"/>
    </item>
    <item>
      <title>第十二章：项目采购管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-purchasing-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-purchasing-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第十二章：项目采购管理</source>
      <description>前言 记录项目采购管理章节的相关知识、频繁考点。 核心概念 项目经理不必成为采购管理法律法规领域的专家, 但是应该对采购过程有足够的了解。采购管理的过程包括规划采购管理、实施采购、控制采购和结束采购四个环节。 通常情况下, 项目经理无权签署对组织有约束力的法律协议, 这项工作仅由具备相关职权的人员执行。 因应用领域不同, 协议可以是合同、服务水平协议（...</description>
      <category>PMP</category>
      <pubDate>Mon, 15 Aug 2022 19:50:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目采购管理章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-purchasing-management.png" type="image/png"/>
    </item>
    <item>
      <title>第八章：项目质量管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-quality-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-quality-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第八章：项目质量管理</source>
      <description>前言 记录项目质量管理章节的相关知识、频繁考点。 核心概念 项目质量管理主要包含了规划质量管理、管理质量、控制质量三个过程, 目的是做出合格的质量、建立信心(客户/团队) 、满足特定的需求和期望、审计质量要求和质量控制测量结果和改进生产过程。 项目质量管理需要兼顾项目管理与项目可交付成果两个方面。 【质量】作为实现的性能或成果, 是“一系列内在特性满足...</description>
      <category>PMP</category>
      <pubDate>Wed, 27 Jul 2022 19:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目质量管理章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-quality-management.png" type="image/png"/>
    </item>
    <item>
      <title>第十三章：项目相关方管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-related-party-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-related-party-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第十三章：项目相关方管理</source>
      <description>前言 记录项目相关方管理章节的相关知识、频繁考点。 核心概念 项目始于干系人需求, 终于干系人满意。项目干系人是指受项目影响或能影响项目的任何个人、小组或组织, 也可以说, 与项目有直接或间接关系的任何个人、小组或组织, 都是项目干系人。项目干系人管理应该按照如下步骤开展：识别干系人、规划干系人管理、管理干系人参与和控制干系人参与。 项目干系人管理是项...</description>
      <category>PMP</category>
      <pubDate>Wed, 03 Aug 2022 21:10:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目相关方管理章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-related-party-management.png" type="image/png"/>
    </item>
    <item>
      <title>第九章：项目资源管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-resource-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-resource-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第九章：项目资源管理</source>
      <description>前言 记录项目资源管理章节的相关知识、频繁考点。 核心概念 人才是企业最重要的财富, 项目人力资源管理是项目管理的一个重要组成部分。项目人力资源管理的四个过程：制定人力资源计划、组建项目团队、建设项目团队和管理项目团队。 项目经理必须做到对人要体谅和尊敬、明白什么能激励人、与人仔细沟通, 只有集中精力做好人力资源管理才能使下属很好的完成任务。 激励理论...</description>
      <category>PMP</category>
      <pubDate>Mon, 01 Aug 2022 19:20:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目资源管理章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-resource-management.png" type="image/png"/>
    </item>
    <item>
      <title>第十一章：项目风险管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-risk-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-risk-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第十一章：项目风险管理</source>
      <description>前言 记录项目风险管理章节的相关知识、频繁考点。 核心概念 项目风险管理的目标在于提高正面风险的概率和影响, 降低负面风险的概率和影响, 从而提高项目成功的可能性。 项目风险管理的目标在于提高正面风险的概率和（或）影响, 降低负面风险的概率和（或）影响, 从而提高项目成功的可能性。 项目的独特性带来风险。 风险三要素：风险事件、概率、影响。 单个项目风...</description>
      <category>PMP</category>
      <pubDate>Thu, 28 Jul 2022 21:50:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目风险管理章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-risk-management.png" type="image/png"/>
    </item>
    <item>
      <title>第五章：项目范围管理</title>
      <link>https://vxhly.github.io/pmp/knowledge/project-scope-management.html</link>
      <guid>https://vxhly.github.io/pmp/knowledge/project-scope-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">第五章：项目范围管理</source>
      <description>前言 记录项目范围管理章节的相关知识、频繁考点。 核心概念 项目范围管理是指确保项目包括成功完成项目所需的功全部工作, 但又只包括必须完成的工作的各个过程, 一句话概括为：做且只做该做的事, 不该做的不做。 项目范围管理包括做且只做所需的全部工作。; “范围” = 产品范围+项目范围; 产品范围 =&gt; 某项产品、服务或成果所具有的特性和功能；完成情况是...</description>
      <category>PMP</category>
      <pubDate>Mon, 18 Jul 2022 21:00:00 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录项目范围管理章节的相关知识、频繁考点。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/project-scope-management.png" type="image/png"/>
    </item>
    <item>
      <title>Mac 下 brew 切换为国内源</title>
      <link>https://vxhly.github.io/views/liunx/HomeBrew-change-source.html</link>
      <guid>https://vxhly.github.io/views/liunx/HomeBrew-change-source.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Mac 下 brew 切换为国内源</source>
      <description>前言 Homebrew 是一款自由及开放源代码的软件包管理系统, 用以简化 macOS 和 linux 系统上的软件安装过程。以下是提供 Homebrew 的国内切源方法。</description>
      <category>liunx</category>
      <pubDate>Sat, 10 Sep 2016 14:04:39 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Homebrew 是一款自由及开放源代码的软件包管理系统, 用以简化 macOS 和 linux 系统上的软件安装过程。以下是提供 Homebrew 的国内切源方法。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>APP开发-概念篇</title>
      <link>https://vxhly.github.io/views/app/app-develop-concept.html</link>
      <guid>https://vxhly.github.io/views/app/app-develop-concept.html</guid>
      <source url="https://vxhly.github.io/rss.xml">APP开发-概念篇</source>
      <description>前言 表面上看, 手机 App 都是同样的东西, 就是手机上的应用程序, 点击图标就能运行, 但是它们的底层技术不一样。接下本篇将介绍一下常见的 APP 开发技术以及其的优缺点。</description>
      <category>app</category>
      <pubDate>Thu, 23 Jan 2020 09:42:39 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>表面上看, 手机 App 都是同样的东西, 就是手机上的应用程序, 点击图标就能运行, 但是它们的底层技术不一样。接下本篇将介绍一下常见的 APP 开发技术以及其的优缺点。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>React Native 填坑指南</title>
      <link>https://vxhly.github.io/views/app/react-native-filling-guide.html</link>
      <guid>https://vxhly.github.io/views/app/react-native-filling-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">React Native 填坑指南</source>
      <description>前言 开始学习 React Native, 期间也遇上了许多坑, 本篇将在官方文档基础上补充一些填坑的指南。</description>
      <category>app</category>
      <pubDate>Thu, 02 Jul 2020 20:58:47 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>开始学习 React Native, 期间也遇上了许多坑, 本篇将在官方文档基础上补充一些填坑的指南。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Windows 下安装 MongoDB</title>
      <link>https://vxhly.github.io/views/design/install-mongodb-on-windwos.html</link>
      <guid>https://vxhly.github.io/views/design/install-mongodb-on-windwos.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Windows 下安装 MongoDB</source>
      <description>前言 MongoDB 是目前在 IT 行业非常流行的一种非关系型数据库 (NoSql), 其灵活的数据存储方式备受当前 IT 从业人员的青睐。这里主要讲如何在 Windows 平台下安装 MongoDB。</description>
      <category>design</category>
      <pubDate>Mon, 29 May 2017 17:11:30 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>MongoDB 是目前在 IT 行业非常流行的一种非关系型数据库 (NoSql), 其灵活的数据存储方式备受当前 IT 从业人员的青睐。这里主要讲如何在 Windows 平台下安装 MongoDB。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/install-mongodb-1.png" type="image/png"/>
    </item>
    <item>
      <title>JavaScript 生成随机数</title>
      <link>https://vxhly.github.io/views/design/js-generated-random-number.html</link>
      <guid>https://vxhly.github.io/views/design/js-generated-random-number.html</guid>
      <source url="https://vxhly.github.io/rss.xml">JavaScript 生成随机数</source>
      <description>前言 为 JS 中的 Math 对象新增生成不重复随机数方法。</description>
      <category>design</category>
      <pubDate>Tue, 02 Aug 2016 13:49:41 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>为 JS 中的 Math 对象新增生成不重复随机数方法。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>JavaScript 获取 URL 请求参数</title>
      <link>https://vxhly.github.io/views/design/js-get-url-request.html</link>
      <guid>https://vxhly.github.io/views/design/js-get-url-request.html</guid>
      <source url="https://vxhly.github.io/rss.xml">JavaScript 获取 URL 请求参数</source>
      <description>前言 通过 JavaScript 原生方法, 获取 URL 所带的请求参数备用。</description>
      <category>design</category>
      <pubDate>Sun, 07 Aug 2016 19:21:58 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>通过 JavaScript 原生方法, 获取 URL 所带的请求参数备用。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>移动端网页自适应方案</title>
      <link>https://vxhly.github.io/views/design/layout-project-for-moblie.html</link>
      <guid>https://vxhly.github.io/views/design/layout-project-for-moblie.html</guid>
      <source url="https://vxhly.github.io/rss.xml">移动端网页自适应方案</source>
      <description>前言 解决移动端网页的自适应, 让开发变得更加简洁。</description>
      <category>design</category>
      <pubDate>Sat, 13 Aug 2016 19:40:34 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>解决移动端网页的自适应, 让开发变得更加简洁。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/layout-moblie.gif" type="image/gif"/>
    </item>
    <item>
      <title>需要一款称手的编辑器</title>
      <link>https://vxhly.github.io/views/design/need-a-super-software.html</link>
      <guid>https://vxhly.github.io/views/design/need-a-super-software.html</guid>
      <source url="https://vxhly.github.io/rss.xml">需要一款称手的编辑器</source>
      <description>前言 以下介绍的编辑器是跨平台, 无论是 Windows, 还是 Liunx, 甚至是 Mac, 都可以成为程序员称手的利器。</description>
      <category>design</category>
      <pubDate>Sun, 07 Aug 2016 16:49:47 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>以下介绍的编辑器是跨平台, 无论是 Windows, 还是 Liunx, 甚至是 Mac, 都可以成为程序员称手的利器。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>网页设计规范-网页设计稿尺寸</title>
      <link>https://vxhly.github.io/views/design/web-design-specification.html</link>
      <guid>https://vxhly.github.io/views/design/web-design-specification.html</guid>
      <source url="https://vxhly.github.io/rss.xml">网页设计规范-网页设计稿尺寸</source>
      <description>前言 最近为了适配多平台、多分辨率甚是烦恼, 先不说代码写的对不对, 是不是完美的, 这次就先从源头(UI 设计稿)抓一抓吧, 这里举例的是某宝的设计团队多年的经验, 作为借鉴引用给前端工作人员以及 UI 设计师们。</description>
      <category>design</category>
      <pubDate>Thu, 08 Aug 2019 10:07:37 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>最近为了适配多平台、多分辨率甚是烦恼, 先不说代码写的对不对, 是不是完美的, 这次就先从源头(UI 设计稿)抓一抓吧, 这里举例的是某宝的设计团队多年的经验, 作为借鉴引用给前端工作人员以及 UI 设计师们。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/web-design-1.png" type="image/png"/>
    </item>
    <item>
      <title>初学 electron-vue</title>
      <link>https://vxhly.github.io/views/electron/learn-electron-vue.html</link>
      <guid>https://vxhly.github.io/views/electron/learn-electron-vue.html</guid>
      <source url="https://vxhly.github.io/rss.xml">初学 electron-vue</source>
      <description>前言 记录学习 electron-vue 时遇到的一些坑, 从报错或者日常需求上出发找寻解决方案。</description>
      <category>electron</category>
      <pubDate>Tue, 05 Nov 2019 15:29:47 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录学习 electron-vue 时遇到的一些坑, 从报错或者日常需求上出发找寻解决方案。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/electron-1.png" type="image/png"/>
    </item>
    <item>
      <title>graphql 学习</title>
      <link>https://vxhly.github.io/views/graphql/learn-graphql.html</link>
      <guid>https://vxhly.github.io/views/graphql/learn-graphql.html</guid>
      <source url="https://vxhly.github.io/rss.xml">graphql 学习</source>
      <description>前言 记录 graphql 的学习笔记.</description>
      <category>graphql</category>
      <pubDate>Fri, 11 Jun 2021 15:41:21 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>记录 graphql 的学习笔记.</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>JDK 的安装和环境变量的配置</title>
      <link>https://vxhly.github.io/views/java/install-jdk-on-windows.html</link>
      <guid>https://vxhly.github.io/views/java/install-jdk-on-windows.html</guid>
      <source url="https://vxhly.github.io/rss.xml">JDK 的安装和环境变量的配置</source>
      <description>前言 JDK 是 Java 语言的软件开发工具包, 主要用于移动设备、嵌入式设备上的 java 应用程序。JDK 是整个 java 开发的核心, 它包含了 JAVA 的运行环境, JAVA 工具和 JAVA 基础的类库。这里将介绍在 Windows 下 JDK 的安装和环境变量的配置。</description>
      <category>java</category>
      <pubDate>Fri, 30 Sep 2016 19:36:02 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>JDK 是 Java 语言的软件开发工具包, 主要用于移动设备、嵌入式设备上的 java 应用程序。JDK 是整个 java 开发的核心, 它包含了 JAVA 的运行环境, JAVA 工具和 JAVA 基础的类库。这里将介绍在 Windows 下 JDK 的安装和环境变量的配置。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/jdk-1.png" type="image/png"/>
    </item>
    <item>
      <title>在 IntelliJ IDEA 中配置 Spring Boot 项目的热部署</title>
      <link>https://vxhly.github.io/views/java/spring-boot-by-idea-hot-deploy.html</link>
      <guid>https://vxhly.github.io/views/java/spring-boot-by-idea-hot-deploy.html</guid>
      <source url="https://vxhly.github.io/rss.xml">在 IntelliJ IDEA 中配置 Spring Boot 项目的热部署</source>
      <description>前言 Spring Boot 是由 Pivotal 团队提供的全新框架, 其设计目的是用来简化新 Spring 应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置, 从而使开发人员不再需要定义样板化的配置。Spring Boot 的 Web 项目, 在每一次修改了 java 文件或者是 resource 的时候, 都必须去重启一下项目, 这样的话浪费了很多的时间, 实现了热部署, 在每一次作了修改之后, 都会自动的重启。</description>
      <category>java</category>
      <pubDate>Wed, 22 Aug 2018 14:47:20 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Spring Boot 是由 Pivotal 团队提供的全新框架, 其设计目的是用来简化新 Spring 应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置, 从而使开发人员不再需要定义样板化的配置。Spring Boot 的 Web 项目, 在每一次修改了 java 文件或者是 resource 的时候, 都必须去重启一下项目, 这样的话浪费了很多的时间, 实现了热部署, 在每一次作了修改之后, 都会自动的重启。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/spring-boot-1.png" type="image/png"/>
    </item>
    <item>
      <title>Spring Boot 整合 Mybatis</title>
      <link>https://vxhly.github.io/views/java/spring-boot-integration-mybatis.html</link>
      <guid>https://vxhly.github.io/views/java/spring-boot-integration-mybatis.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Spring Boot 整合 Mybatis</source>
      <description>提示 MyBatis 是一款优秀的持久层框架, 它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。这里介绍 Spring Boot 整合 Mybatis 的步骤, 数据库选用 MYSQL。</description>
      <category>java</category>
      <pubDate>Wed, 22 Aug 2018 16:01:15 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">提示</p>
<p>MyBatis 是一款优秀的持久层框架, 它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。这里介绍 Spring Boot 整合 Mybatis 的步骤, 数据库选用 MYSQL。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/spring-boot-11.png" type="image/png"/>
    </item>
    <item>
      <title>RedHat 系统安全加固（一）帐号安全</title>
      <link>https://vxhly.github.io/views/liunx/account-security.html</link>
      <guid>https://vxhly.github.io/views/liunx/account-security.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（一）帐号安全</source>
      <description>前言 本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。 本篇主要介绍相关于帐号安全的加固策略, 加强系统的防御能力。</description>
      <category>liunx</category>
      <pubDate>Fri, 14 Oct 2016 11:06:38 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。 本篇主要介绍相关于帐号安全的加固策略, 加强系统的防御能力。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/redhat-reinforce-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 学习笔记（三）文件的压缩与解压缩</title>
      <link>https://vxhly.github.io/views/liunx/file-compression-and-decompression.html</link>
      <guid>https://vxhly.github.io/views/liunx/file-compression-and-decompression.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（三）文件的压缩与解压缩</source>
      <description>前言 本篇是 Liunx 的学习笔记系列第三篇, 这一篇将介绍在 Liunx 下压缩解压文件或目录常用命令。压缩文件及目录可以大大增加磁盘的利用率。</description>
      <category>liunx</category>
      <pubDate>Sat, 10 Sep 2016 14:04:39 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的学习笔记系列第三篇, 这一篇将介绍在 Liunx 下压缩解压文件或目录常用命令。压缩文件及目录可以大大增加磁盘的利用率。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>RedHat 系统安全加固（五）防火墙 (iptables) 的设置</title>
      <link>https://vxhly.github.io/views/liunx/iptables-settings.html</link>
      <guid>https://vxhly.github.io/views/liunx/iptables-settings.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（五）防火墙 (iptables) 的设置</source>
      <description>前言 本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记记录 RedHat 下的防火请的开启和关闭, 还有允许哪些端口通过防火墙。</description>
      <category>liunx</category>
      <pubDate>Thu, 27 Oct 2016 10:00:55 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记记录 RedHat 下的防火请的开启和关闭, 还有允许哪些端口通过防火墙。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/iptables-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 学习笔记（五）基础操作</title>
      <link>https://vxhly.github.io/views/liunx/liunx-basic-operation.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-basic-operation.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（五）基础操作</source>
      <description>前言 本篇是 Liunx 的学习笔记系列第五篇, 这一篇将介绍 Liunx 的基础操作。很多人觉得 Liunx 非常难学, 但不其然, 只要掌握一些基础的命令操作, Liunx 还是非常好上手的。</description>
      <category>liunx</category>
      <pubDate>Thu, 15 Sep 2016 16:09:27 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的学习笔记系列第五篇, 这一篇将介绍 Liunx 的基础操作。很多人觉得 Liunx 非常难学, 但不其然, 只要掌握一些基础的命令操作, Liunx 还是非常好上手的。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-basic-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 命令练习</title>
      <link>https://vxhly.github.io/views/liunx/liunx-command-testing.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-command-testing.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 命令练习</source>
      <description>前言 简单的一些 Liunx 命令练习。</description>
      <category>liunx</category>
      <pubDate>Sun, 03 Sep 2017 20:46:08 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>简单的一些 Liunx 命令练习。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Liunx 学习笔记（一）目录结构说明</title>
      <link>https://vxhly.github.io/views/liunx/liunx-directory-structure.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-directory-structure.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（一）目录结构说明</source>
      <description>前言 接触了 Liunx 也有一段时间了, 也算对 Liunx 有一定的了解, 在这里将陆续的推出 Liunx 的学习笔记系列, 做个记录, 方便以后忘记有处可循。Liunx 是以文件系统为主的, 所以 Liunx 下的每一个目录都有其各自的作用, 则本篇将介绍 Liunx 的各个目录结构及其说明。</description>
      <category>liunx</category>
      <pubDate>Thu, 08 Sep 2016 19:35:12 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>接触了 Liunx 也有一段时间了, 也算对 Liunx 有一定的了解, 在这里将陆续的推出 Liunx 的学习笔记系列, 做个记录, 方便以后忘记有处可循。Liunx 是以文件系统为主的, 所以 Liunx 下的每一个目录都有其各自的作用, 则本篇将介绍 Liunx 的各个目录结构及其说明。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-directory-structure.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（四）APACHE 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-apache.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-apache.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（四）APACHE 服务安全配置</source>
      <description>前言 本篇是 Liunx 的服务配置笔记系列第四篇, 这一篇将具体介绍 Red Hat Liunx 下 APACHE 服务的安全配置。所谓 APACHE 就是一个 WEB 服务器, 为 WEB 网页提供服务。</description>
      <category>liunx</category>
      <pubDate>Mon, 19 Sep 2016 14:58:33 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的服务配置笔记系列第四篇, 这一篇将具体介绍 Red Hat Liunx 下 APACHE 服务的安全配置。所谓 APACHE 就是一个 WEB 服务器, 为 WEB 网页提供服务。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-apache-2.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（六）DNS 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-dns.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-dns.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（六）DNS 服务安全配置</source>
      <description>前言 这篇是 Liunx 的服务配置笔记系列第五篇, 这一篇将具体介绍 Red Hat Liunx 下 DNS 服务的安全配置。所谓 DNS 就是一个域名解析服务器, 其中 DNS 还包含正向解析和反向解析。</description>
      <category>liunx</category>
      <pubDate>Tue, 27 Sep 2016 13:25:48 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>这篇是 Liunx 的服务配置笔记系列第五篇, 这一篇将具体介绍 Red Hat Liunx 下 DNS 服务的安全配置。所谓 DNS 就是一个域名解析服务器, 其中 DNS 还包含正向解析和反向解析。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-dns-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（三）FTP 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-ftp.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-ftp.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（三）FTP 服务安全配置</source>
      <description>前言 本篇是 Liunx 的服务配置笔记系列第三篇, 这一篇将具体介绍 Red Hat Liunx 下 FTP 服务的安全配置。确切的说, 应该叫它 vsFTP, 就是文件的上传和下载服务, 主要的功能是在服务器与客户端之间进行文件的传输。</description>
      <category>liunx</category>
      <pubDate>Fri, 16 Sep 2016 20:56:49 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的服务配置笔记系列第三篇, 这一篇将具体介绍 Red Hat Liunx 下 FTP 服务的安全配置。确切的说, 应该叫它 vsFTP, 就是文件的上传和下载服务, 主要的功能是在服务器与客户端之间进行文件的传输。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-ftp-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（五）SAMBA 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-samba.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-samba.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（五）SAMBA 服务安全配置</source>
      <description>前言 本篇是 Liunx 的服务配置笔记系列第五篇, 这一篇将具体介绍 Red Hat Liunx 下 SAMBA 服务的安全配置。所谓 SAMBA 就是建立 Liunx 和 Windows 之间的共享, 使 Windows 能够访问 Liunx 下共享出来的文件。</description>
      <category>liunx</category>
      <pubDate>Mon, 19 Sep 2016 19:33:21 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的服务配置笔记系列第五篇, 这一篇将具体介绍 Red Hat Liunx 下 SAMBA 服务的安全配置。所谓 SAMBA 就是建立 Liunx 和 Windows 之间的共享, 使 Windows 能够访问 Liunx 下共享出来的文件。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-samba-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（二）SSH 服务安全配置</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service-ssh.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service-ssh.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（二）SSH 服务安全配置</source>
      <description>前言 本篇是 Liunx 的服务配置笔记系列第二篇, 这一篇将具体介绍 Red Hat Liunx 下 SSH 服务的安全配置。所谓 SSH 就是加密的数据传输, 但是使用其的默认配置并不是安全的, 所以还需要对其进行详细的配置。</description>
      <category>liunx</category>
      <pubDate>Fri, 16 Sep 2016 11:59:15 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的服务配置笔记系列第二篇, 这一篇将具体介绍 Red Hat Liunx 下 SSH 服务的安全配置。所谓 SSH 就是加密的数据传输, 但是使用其的默认配置并不是安全的, 所以还需要对其进行详细的配置。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-ssh-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 服务配置笔记（一）概述</title>
      <link>https://vxhly.github.io/views/liunx/liunx-service.html</link>
      <guid>https://vxhly.github.io/views/liunx/liunx-service.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 服务配置笔记（一）概述</source>
      <description>前言 Liunx 的学习笔记已经推出有一段时间了, 现继续推出在 Liunx 中 SAMBA 服务、SSH 服务、FTP 服务、APACHE 服务、DNS 服务的安全配置。本文就先介绍这几个服务的相关内容。</description>
      <category>liunx</category>
      <pubDate>Thu, 15 Sep 2016 18:59:15 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Liunx 的学习笔记已经推出有一段时间了, 现继续推出在 Liunx 中 SAMBA 服务、SSH 服务、FTP 服务、APACHE 服务、DNS 服务的安全配置。本文就先介绍这几个服务的相关内容。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>RedHat 系统安全加固（三）系统日志审计</title>
      <link>https://vxhly.github.io/views/liunx/log-audit-function.html</link>
      <guid>https://vxhly.github.io/views/liunx/log-audit-function.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（三）系统日志审计</source>
      <description>前言 本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录系统日志审计的配置, 加强系统的防御能力。</description>
      <category>liunx</category>
      <pubDate>Sun, 16 Oct 2016 13:39:09 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录系统日志审计的配置, 加强系统的防御能力。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/redhat-reinforce-16.png" type="image/png"/>
    </item>
    <item>
      <title>MySQL 数据库安全加固</title>
      <link>https://vxhly.github.io/views/liunx/mysql-database-user-policy.html</link>
      <guid>https://vxhly.github.io/views/liunx/mysql-database-user-policy.html</guid>
      <source url="https://vxhly.github.io/rss.xml">MySQL 数据库安全加固</source>
      <description>前言 数据库作为数据管理的平台, 它的安全性首先由系统内部和网络安全两部分来决定的。对于系统管理员来说, 首先要保证系统本身的安全, 在安装 MySQL 数据时, 需要对基础环境进行较好的配置。本篇笔记将记录在 RedHat Liunx 系统下 MySQL 数据库的安全加固方法。</description>
      <category>liunx</category>
      <pubDate>Sun, 30 Oct 2016 16:02:43 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>数据库作为数据管理的平台, 它的安全性首先由系统内部和网络安全两部分来决定的。对于系统管理员来说, 首先要保证系统本身的安全, 在安装 MySQL 数据时, 需要对基础环境进行较好的配置。本篇笔记将记录在 RedHat Liunx 系统下 MySQL 数据库的安全加固方法。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/mysql-reinforce-1.png" type="image/png"/>
    </item>
    <item>
      <title>RedHat 系统安全加固（四）服务和进程管理</title>
      <link>https://vxhly.github.io/views/liunx/service-and-process-management.html</link>
      <guid>https://vxhly.github.io/views/liunx/service-and-process-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（四）服务和进程管理</source>
      <description>前言 本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录系统服务和进程的查看与关闭, 通俗的来说进程是运行起来的程序。唯一标示进程的是进程描述符（PID）, 在 linux 内核中是通过 task_struck 和 task_list 来定义和管理进程的。</description>
      <category>liunx</category>
      <pubDate>Wed, 19 Oct 2016 11:01:04 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录系统服务和进程的查看与关闭, 通俗的来说进程是运行起来的程序。唯一标示进程的是进程描述符（PID）, 在 linux 内核中是通过 task_struck 和 task_list 来定义和管理进程的。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/process-1.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 学习笔记（七）文件的特殊权限</title>
      <link>https://vxhly.github.io/views/liunx/special-permissions-for-files.html</link>
      <guid>https://vxhly.github.io/views/liunx/special-permissions-for-files.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（七）文件的特殊权限</source>
      <description>前言 本篇是 Liunx 的学习笔记系列第七篇, 在 Liunx 中文件除了 rwx 权限, 还存在 SetUID 、 SetGID 、 Sicky BIT 特殊权限, 本篇就是来介绍这些特殊权限。</description>
      <category>liunx</category>
      <pubDate>Fri, 14 Oct 2016 19:25:27 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的学习笔记系列第七篇, 在 Liunx 中文件除了 rwx 权限, 还存在 SetUID 、 SetGID 、 Sicky BIT 特殊权限, 本篇就是来介绍这些特殊权限。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/setuid-1.png" type="image/png"/>
    </item>
    <item>
      <title>浅谈 SSH 服务</title>
      <link>https://vxhly.github.io/views/liunx/talk-ssh-service.html</link>
      <guid>https://vxhly.github.io/views/liunx/talk-ssh-service.html</guid>
      <source url="https://vxhly.github.io/rss.xml">浅谈 SSH 服务</source>
      <description>前言 SSH 是每一台 Linux 系统的标准配置服务, 本文将总结 SSH 的常见用法。</description>
      <category>liunx</category>
      <pubDate>Tue, 15 Aug 2017 21:42:25 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>SSH 是每一台 Linux 系统的标准配置服务, 本文将总结 SSH 的常见用法。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Ubuntu 开启 root 用户</title>
      <link>https://vxhly.github.io/views/liunx/ubuntu-enble-root.html</link>
      <guid>https://vxhly.github.io/views/liunx/ubuntu-enble-root.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Ubuntu 开启 root 用户</source>
      <description>前言 Ubuntu 默认不开启 root 账户的, 所以有需开启 root 账户的按照以下做法即可, 切换 root 账户后 chromium 浏览器不能使用。</description>
      <category>liunx</category>
      <pubDate>Tue, 02 Aug 2016 15:29:46 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Ubuntu 默认不开启 root 账户的, 所以有需开启 root 账户的按照以下做法即可, 切换 root 账户后 chromium 浏览器不能使用。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Liunx 学习笔记（二）vim 的使用</title>
      <link>https://vxhly.github.io/views/liunx/usage-of-vim.html</link>
      <guid>https://vxhly.github.io/views/liunx/usage-of-vim.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（二）vim 的使用</source>
      <description>前言 本篇是 Liunx 的学习笔记系列第二篇, 这一篇将介绍 vim 的使用技巧。vim 是一款终端编辑器, 是由 vi 演变而来的, 它与 vi 最大的区别是, vim 拥有代码高亮, 其他操作都是共用的。</description>
      <category>liunx</category>
      <pubDate>Thu, 08 Sep 2016 22:20:23 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的学习笔记系列第二篇, 这一篇将介绍 vim 的使用技巧。vim 是一款终端编辑器, 是由 vi 演变而来的, 它与 vi 最大的区别是, vim 拥有代码高亮, 其他操作都是共用的。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-vim.png" type="image/png"/>
    </item>
    <item>
      <title>RedHat 系统安全加固（二）用户和文件权限</title>
      <link>https://vxhly.github.io/views/liunx/user-and-file-permissions.html</link>
      <guid>https://vxhly.github.io/views/liunx/user-and-file-permissions.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RedHat 系统安全加固（二）用户和文件权限</source>
      <description>前言 本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录用户和文件的权限（主要是特殊权限）, 加强系统的防御能力。</description>
      <category>liunx</category>
      <pubDate>Fri, 14 Oct 2016 22:08:33 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本系列笔记又是 Liunx 学习系列教程的一大步, 本系列学习笔记记录 RedHat 系统的安全加固。本篇笔记是记录用户和文件的权限（主要是特殊权限）, 加强系统的防御能力。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/redhat-reinforce-12.png" type="image/png"/>
    </item>
    <item>
      <title>Liunx 学习笔记（六）用户的管理</title>
      <link>https://vxhly.github.io/views/liunx/user-management.html</link>
      <guid>https://vxhly.github.io/views/liunx/user-management.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 学习笔记（六）用户的管理</source>
      <description>前言 本篇是 Liunx 的学习笔记系列第五篇, 这一篇将介绍 Liunx 下用户的管理。用户管理看似很简单, 但是里面还隐藏着大学问呢。</description>
      <category>liunx</category>
      <pubDate>Fri, 07 Oct 2016 11:31:32 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本篇是 Liunx 的学习笔记系列第五篇, 这一篇将介绍 Liunx 下用户的管理。用户管理看似很简单, 但是里面还隐藏着大学问呢。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>关于 Chrome 浏览器的调试方法</title>
      <link>https://vxhly.github.io/views/manual/debug-for-chrome-browser.html</link>
      <guid>https://vxhly.github.io/views/manual/debug-for-chrome-browser.html</guid>
      <source url="https://vxhly.github.io/rss.xml">关于 Chrome 浏览器的调试方法</source>
      <description>前言 作为前端开发人员, 最佳的调试环境便是浏览器自带的开发者工具, 此文则介绍 Chrome 浏览器的开发者工具的使用方法。</description>
      <category>manual</category>
      <pubDate>Fri, 05 Aug 2016 18:24:29 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>作为前端开发人员, 最佳的调试环境便是浏览器自带的开发者工具, 此文则介绍 Chrome 浏览器的开发者工具的使用方法。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/open-browser-debug-1.png" type="image/png"/>
    </item>
    <item>
      <title>Emmet 用法举例</title>
      <link>https://vxhly.github.io/views/manual/emmet-usage-examples.html</link>
      <guid>https://vxhly.github.io/views/manual/emmet-usage-examples.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Emmet 用法举例</source>
      <description>前言 Emmet 的前身是大名鼎鼎的 Zen coding。如果你从事 Web 前端开发的话, 对该插件一定不会陌生。它使用仿 CSS 选择器的语法来代码, 大大提高了 HTML/CSS 代码编写的速度。</description>
      <category>manual</category>
      <pubDate>Thu, 04 Aug 2016 13:20:34 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Emmet 的前身是大名鼎鼎的 Zen coding。如果你从事 Web 前端开发的话, 对该插件一定不会陌生。它使用仿 CSS 选择器的语法来代码, 大大提高了 HTML/CSS 代码编写的速度。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Flexbox 布局</title>
      <link>https://vxhly.github.io/views/manual/flexbox-layout.html</link>
      <guid>https://vxhly.github.io/views/manual/flexbox-layout.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Flexbox 布局</source>
      <description>前言 Flex 布局, 可以简便、完整、响应式地实现各种页面布局, 目前, 它已经得到了所有浏览器的支持。</description>
      <category>manual</category>
      <pubDate>Thu, 11 Aug 2016 14:27:56 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Flex 布局, 可以简便、完整、响应式地实现各种页面布局, 目前, 它已经得到了所有浏览器的支持。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/flex-layout.png" type="image/png"/>
    </item>
    <item>
      <title>git commit 规范指南</title>
      <link>https://vxhly.github.io/views/manual/git-commit-specification-guide.html</link>
      <guid>https://vxhly.github.io/views/manual/git-commit-specification-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">git commit 规范指南</source>
      <description>前言 目前, 社区有多种 Commit message 的写法规范。本文介绍 Angular 规范 是目前使用最广的写法, 比较合理和系统化, 并且有配套的工具。前前端框架 Angular.js 采用的就是该规范。</description>
      <category>manual</category>
      <pubDate>Mon, 14 May 2018 14:25:43 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>目前, 社区有多种 Commit message 的写法规范。本文介绍 <a href="https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit#heading=h.greljkmo14y0" target="_blank" rel="noopener noreferrer">Angular 规范</a> 是目前使用最广的写法, 比较合理和系统化, 并且有配套的工具。前前端框架 <a href="https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#toc10" target="_blank" rel="noopener noreferrer">Angular.js</a> 采用的就是该规范。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/git-commit-1.png" type="image/png"/>
    </item>
    <item>
      <title>Git 远程推送配置</title>
      <link>https://vxhly.github.io/views/manual/git-push-setting.html</link>
      <guid>https://vxhly.github.io/views/manual/git-push-setting.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Git 远程推送配置</source>
      <description>前言 Git 是一个开源的分布式版本控制系统, 可以有效、高速的处理从很小到非常大的项目版本管理。</description>
      <category>manual</category>
      <pubDate>Sun, 31 Jul 2016 16:09:21 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Git 是一个开源的分布式版本控制系统, 可以有效、高速的处理从很小到非常大的项目版本管理。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Gulp 使用指南</title>
      <link>https://vxhly.github.io/views/manual/gulp-usage-guide.html</link>
      <guid>https://vxhly.github.io/views/manual/gulp-usage-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Gulp 使用指南</source>
      <description>前言 本文主要介绍如何使用 Gulp.js, 来帮助你构建一个自动化的前端开发流程。总结并归类自身使用中所遇到的方法、问题, 便于新人上手和理解, 同时也作为一份 Gulp 参考文档来使用, 让你对 Gulp 有个更深入的了解。</description>
      <category>manual</category>
      <pubDate>Fri, 28 Oct 2016 19:06:15 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本文主要介绍如何使用 Gulp.js, 来帮助你构建一个自动化的前端开发流程。总结并归类自身使用中所遇到的方法、问题, 便于新人上手和理解, 同时也作为一份 Gulp 参考文档来使用, 让你对 Gulp 有个更深入的了解。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>RESTful API 设计指南（补充）</title>
      <link>https://vxhly.github.io/views/manual/restfui-api.html</link>
      <guid>https://vxhly.github.io/views/manual/restfui-api.html</guid>
      <source url="https://vxhly.github.io/rss.xml">RESTful API 设计指南（补充）</source>
      <description>前言 网络应用程序, 分为前端和后端两个部分。这时候必须有一种统一的机制, 方便不同的前端设备与后端进行通信。这导致 API 构架的流行, 甚至出现 "API First" 的设计思想。 RESTful API 是目前比较成熟的一套互联网应用程序的 API 设计理论。</description>
      <category>manual</category>
      <pubDate>Fri, 29 Sep 2017 12:17:33 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>网络应用程序, 分为前端和后端两个部分。这时候必须有一种统一的机制, 方便不同的前端设备与后端进行通信。这导致 API 构架的流行, 甚至出现 "API First" 的设计思想。<a href="http://en.wikipedia.org/wiki/Representational_state_transfer" target="_blank" rel="noopener noreferrer"> <code>RESTful API</code> </a> 是目前比较成熟的一套互联网应用程序的 API 设计理论。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>SASS 用法指南</title>
      <link>https://vxhly.github.io/views/manual/sass-usage-guide.html</link>
      <guid>https://vxhly.github.io/views/manual/sass-usage-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">SASS 用法指南</source>
      <description>前言 SASS 是 CSS 预处理器之一, 它的基本思想是, 用一种专门的编程语言, 进行网页样式设计, 然后再编译成正常的 CSS 文件, 它提供了许多便利的写法, 大大节省了设计者的时间, 使得 CSS 的开发, 变得简单和可维护。</description>
      <category>manual</category>
      <pubDate>Tue, 11 Oct 2016 18:57:49 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>SASS 是 CSS 预处理器之一, 它的基本思想是, 用一种专门的编程语言, 进行网页样式设计, 然后再编译成正常的 CSS 文件, 它提供了许多便利的写法, 大大节省了设计者的时间, 使得 CSS 的开发, 变得简单和可维护。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>软件版本周期</title>
      <link>https://vxhly.github.io/views/manual/software-version-cycle.html</link>
      <guid>https://vxhly.github.io/views/manual/software-version-cycle.html</guid>
      <source url="https://vxhly.github.io/rss.xml">软件版本周期</source>
      <description>前言 软件版本周期是指计算机软件的发展及发行过程, 从 Pre-alpha（准预览版本）发展到 Alpha（预览版本）、Beta（测试版本）、Released candidate （最终测试版本）至最后的 Gold（完成版）。</description>
      <category>manual</category>
      <pubDate>Sun, 21 Oct 2018 19:13:55 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>软件版本周期是指计算机软件的发展及发行过程, 从 Pre-alpha（准预览版本）发展到 Alpha（预览版本）、Beta（测试版本）、Released candidate （最终测试版本）至最后的 Gold（完成版）。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/software.jpg" type="image/jpeg"/>
    </item>
    <item>
      <title>docker 使用指南</title>
      <link>https://vxhly.github.io/views/manual/usage-of-docker.html</link>
      <guid>https://vxhly.github.io/views/manual/usage-of-docker.html</guid>
      <source url="https://vxhly.github.io/rss.xml">docker 使用指南</source>
      <description>前言 Docker 是一个开源的应用容器引擎, 基于 Go 语言 并遵从 Apache2.0 协议开源。 Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中, 然后发布到任何流行的 Linux 机器上, 也可以实现虚拟化。</description>
      <category>manual</category>
      <pubDate>Tue, 26 Mar 2019 14:41:23 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Docker 是一个开源的应用容器引擎, 基于 Go 语言 并遵从 Apache2.0 协议开源。 Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中, 然后发布到任何流行的 Linux 机器上, 也可以实现虚拟化。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>webpack 初学指南</title>
      <link>https://vxhly.github.io/views/manual/webpack-guide.html</link>
      <guid>https://vxhly.github.io/views/manual/webpack-guide.html</guid>
      <source url="https://vxhly.github.io/rss.xml">webpack 初学指南</source>
      <description>前言 这边用到的 webpack 版本 4.0+, 这边将接触到 TypeScript, ES6, ES7, sass 等 loader ... 不想解释了直接上代码。</description>
      <category>manual</category>
      <pubDate>Fri, 16 Nov 2018 14:25:54 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>这边用到的 webpack 版本 4.0+, 这边将接触到 TypeScript, ES6, ES7, sass 等 loader ... 不想解释了直接上代码。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>常见的端口号以及其对应的应用程序或服务</title>
      <link>https://vxhly.github.io/views/networking/common-port.html</link>
      <guid>https://vxhly.github.io/views/networking/common-port.html</guid>
      <source url="https://vxhly.github.io/rss.xml">常见的端口号以及其对应的应用程序或服务</source>
      <description>前言 列出 TCP/UDP 协议常见的端口号占用情况, 以助于分析该服务器开放了哪些端口号, 或者程序占用了哪些端口号。</description>
      <category>networking</category>
      <pubDate>Tue, 16 Aug 2016 16:04:29 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>列出 TCP/UDP 协议常见的端口号占用情况, 以助于分析该服务器开放了哪些端口号, 或者程序占用了哪些端口号。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>IP 地址规划</title>
      <link>https://vxhly.github.io/views/networking/ip-address-planning.html</link>
      <guid>https://vxhly.github.io/views/networking/ip-address-planning.html</guid>
      <source url="https://vxhly.github.io/rss.xml">IP 地址规划</source>
      <description>前言 当申请到一个 C 类网络地址时, 很多时候需要对其子网划分, 那么一个高效简便的子网划分方法由此而生。</description>
      <category>networking</category>
      <pubDate>Sun, 11 Sep 2016 21:49:24 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>当申请到一个 C 类网络地址时, 很多时候需要对其子网划分, 那么一个高效简便的子网划分方法由此而生。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Socks 代理反弹突破内网</title>
      <link>https://vxhly.github.io/views/networking/socks-proxy-rebound.html</link>
      <guid>https://vxhly.github.io/views/networking/socks-proxy-rebound.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Socks 代理反弹突破内网</source>
      <description>前言 对于渗透测试者来说, 如何绕过防火墙的阻挡在内网展开渗透测试成为需解决的问题, 本文介绍了在夺取映射到外网的内网服务器权限后, 如何利用 Socks 代理反弹获得内网访问权限。</description>
      <category>networking</category>
      <pubDate>Thu, 24 Nov 2016 14:46:22 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>对于渗透测试者来说, 如何绕过防火墙的阻挡在内网展开渗透测试成为需解决的问题, 本文介绍了在夺取映射到外网的内网服务器权限后, 如何利用 Socks 代理反弹获得内网访问权限。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/socks-proxy-1.png" type="image/png"/>
    </item>
    <item>
      <title>Ubuntu 下连接 WIFI</title>
      <link>https://vxhly.github.io/views/networking/ubuntu-connect-wifi.html</link>
      <guid>https://vxhly.github.io/views/networking/ubuntu-connect-wifi.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Ubuntu 下连接 WIFI</source>
      <description>前言 基于已经安装双系统, 或是只有 Ubuntu 系统, 在虚拟机下不存在此问题。</description>
      <category>networking</category>
      <pubDate>Mon, 01 Aug 2016 12:24:19 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>基于已经安装双系统, 或是只有 Ubuntu 系统, 在虚拟机下不存在此问题。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Ubuntu 下科学上网</title>
      <link>https://vxhly.github.io/views/networking/ubuntu-over-the-wall.html</link>
      <guid>https://vxhly.github.io/views/networking/ubuntu-over-the-wall.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Ubuntu 下科学上网</source>
      <description>前言 翻墙, 主要用于 npm 的代理。没有 vpn 服务器不要紧, 肯花点小钱就可以搞定访问 高梯子。</description>
      <category>networking</category>
      <pubDate>Sun, 31 Jul 2016 21:32:24 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>翻墙, 主要用于 npm 的代理。没有 vpn 服务器不要紧, 肯花点小钱就可以搞定访问 <a href="http://www.gaotizi.com/aff.php?aff=133" target="_blank" rel="noopener noreferrer">高梯子</a>。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Hexo+NexT 进阶设置</title>
      <link>https://vxhly.github.io/views/nodejs/hexo-next-advanced-settings.html</link>
      <guid>https://vxhly.github.io/views/nodejs/hexo-next-advanced-settings.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Hexo+NexT 进阶设置</source>
      <description>前言 HEXO 博客最近大更新, 页面与之前大不相同, 这里跟大家分享一下相关的设置方法。</description>
      <category>nodejs</category>
      <pubDate>Sat, 28 Oct 2017 20:24:59 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>HEXO 博客最近大更新, 页面与之前大不相同, 这里跟大家分享一下相关的设置方法。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>在你的 VPS 服务器搭建 Ghost 博客系统</title>
      <link>https://vxhly.github.io/views/nodejs/insatll-ghost-on-your-vps.html</link>
      <guid>https://vxhly.github.io/views/nodejs/insatll-ghost-on-your-vps.html</guid>
      <source url="https://vxhly.github.io/rss.xml">在你的 VPS 服务器搭建 Ghost 博客系统</source>
      <description>前言 Ghost 采用 Node.js 编写, 默认使用 SQLite3 数据库, 非常轻量, 因为是文件型数据库, 所以无需安装。Ghost 允许多用户编写博文, 使用 Markdown 来编写博文。</description>
      <category>nodejs</category>
      <pubDate>Fri, 02 Jun 2017 14:53:49 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Ghost 采用 Node.js 编写, 默认使用 SQLite3 数据库, 非常轻量, 因为是文件型数据库, 所以无需安装。Ghost 允许多用户编写博文, 使用 Markdown 来编写博文。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>使用 Hexo+NexT 在 Github 上搭建静态博客</title>
      <link>https://vxhly.github.io/views/nodejs/install-hexo-next-on-github.html</link>
      <guid>https://vxhly.github.io/views/nodejs/install-hexo-next-on-github.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 Hexo+NexT 在 Github 上搭建静态博客</source>
      <description>前言 Hexo 是一个快速, 简单而高效的静态博客框架, 本文将介绍如何在 GitHub 上使用 Hexo+NexT 搭建静态博客。</description>
      <category>nodejs</category>
      <pubDate>Wed, 03 Aug 2016 13:11:30 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Hexo 是一个快速, 简单而高效的静态博客框架, 本文将介绍如何在 GitHub 上使用 Hexo+NexT 搭建静态博客。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>基于 lerna + yarn workspaces 的 monorepo 项目实践</title>
      <link>https://vxhly.github.io/views/nodejs/learning-lerna-and-yarn-worspaces.html</link>
      <guid>https://vxhly.github.io/views/nodejs/learning-lerna-and-yarn-worspaces.html</guid>
      <source url="https://vxhly.github.io/rss.xml">基于 lerna + yarn workspaces 的 monorepo 项目实践</source>
      <description>前言 观察到 GitHub 上面有很多的开源项目使用到了 lerna 和 yarn workspaces 来管理项目中的多包依赖, 好奇起它的实现过程, 于是便写下本篇博文来记录我的填坑过程。</description>
      <category>nodejs</category>
      <pubDate>Mon, 26 Oct 2020 12:13:34 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>观察到 GitHub 上面有很多的开源项目使用到了 lerna 和 yarn workspaces 来管理项目中的多包依赖, 好奇起它的实现过程, 于是便写下本篇博文来记录我的填坑过程。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>浅谈 Node.js 中的 npm</title>
      <link>https://vxhly.github.io/views/nodejs/talk-npm-on-node-js.html</link>
      <guid>https://vxhly.github.io/views/nodejs/talk-npm-on-node-js.html</guid>
      <source url="https://vxhly.github.io/rss.xml">浅谈 Node.js 中的 npm</source>
      <description>前言 主要介绍 npm 中的各个选项的作用以及其区别。npm 依赖于 Node.js, 童鞋们要注意你的系统是否有 Node.js 环境。</description>
      <category>nodejs</category>
      <pubDate>Fri, 26 Aug 2016 15:30:10 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>主要介绍 npm 中的各个选项的作用以及其区别。npm 依赖于 Node.js, 童鞋们要注意你的系统是否有 Node.js 环境。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>解读 npm 中的 package.json</title>
      <link>https://vxhly.github.io/views/nodejs/talk-package-json-on-npm.html</link>
      <guid>https://vxhly.github.io/views/nodejs/talk-package-json-on-npm.html</guid>
      <source url="https://vxhly.github.io/rss.xml">解读 npm 中的 package.json</source>
      <description>前言 package.json 是 Node.js 应用中比较重要的部分, 它定义了项目的依赖关系, 这里将介绍该文件各个配置项的作用。</description>
      <category>nodejs</category>
      <pubDate>Tue, 30 Aug 2016 17:08:18 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>package.json 是 Node.js 应用中比较重要的部分, 它定义了项目的依赖关系, 这里将介绍该文件各个配置项的作用。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>lerna 的使用指南</title>
      <link>https://vxhly.github.io/views/nodejs/usage-lerna.html</link>
      <guid>https://vxhly.github.io/views/nodejs/usage-lerna.html</guid>
      <source url="https://vxhly.github.io/rss.xml">lerna 的使用指南</source>
      <description>前言 从 GitHub 上找到了比较多的仓库开始采用 lerna 来管理仓库的多包依赖, 也逐渐发现 lerna 的管理模式确实比较好, so 现贴上我的填坑笔记。</description>
      <category>nodejs</category>
      <pubDate>Sun, 25 Oct 2020 14:49:11 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>从 GitHub 上找到了比较多的仓库开始采用 lerna 来管理仓库的多包依赖, 也逐渐发现 lerna 的管理模式确实比较好, so 现贴上我的填坑笔记。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>使用 nvm 安装 Node.js</title>
      <link>https://vxhly.github.io/views/nodejs/usage-nvm-to-install-node-js.html</link>
      <guid>https://vxhly.github.io/views/nodejs/usage-nvm-to-install-node-js.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 nvm 安装 Node.js</source>
      <description>前言 安装 Node.js 的最佳方式是使用 nvm。nvm 最开始是在 Mac OS 下开发的, 所以 Mac OS 下同样使用 nvm 安装 Node.js。</description>
      <category>nodejs</category>
      <pubDate>Sun, 31 Jul 2016 15:11:44 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>安装 Node.js 的最佳方式是使用 nvm。nvm 最开始是在 <code>Mac OS</code> 下开发的, 所以 <code>Mac OS</code> 下同样使用 nvm 安装 Node.js。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>使用 pnpm 释放你的磁盘空间</title>
      <link>https://vxhly.github.io/views/nodejs/usage-pnpm.html</link>
      <guid>https://vxhly.github.io/views/nodejs/usage-pnpm.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 pnpm 释放你的磁盘空间</source>
      <description>前言 主要介绍 pnpm 的使用, 以及如何使用 pnpm 解决 node 依赖包庞大的问题。pnpm 依赖于 Node.js, 童鞋们要注意你的系统是否有 Node.js 环境。</description>
      <category>nodejs</category>
      <pubDate>Wed, 19 Aug 2020 14:14:13 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>主要介绍 pnpm 的使用, 以及如何使用 pnpm 解决 node 依赖包庞大的问题。pnpm 依赖于 Node.js, 童鞋们要注意你的系统是否有 Node.js 环境。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>使用 vuepress 更新我的博客</title>
      <link>https://vxhly.github.io/views/nodejs/vuepress-blog-on-github.html</link>
      <guid>https://vxhly.github.io/views/nodejs/vuepress-blog-on-github.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 vuepress 更新我的博客</source>
      <description>前言 嗯～, 没错, 博客又迎来一次重大的更新, 此次更新不再采用 hexo 这个静态博客解决方案, 将采用 vuepress 这一静态博客解决方案。本博文将会从搭建博客到部署上线进行较详细的介绍。</description>
      <category>nodejs</category>
      <pubDate>Mon, 28 Oct 2019 16:14:34 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>嗯～, 没错, 博客又迎来一次重大的更新, 此次更新不再采用 hexo 这个静态博客解决方案, 将采用 vuepress 这一静态博客解决方案。本博文将会从搭建博客到部署上线进行较详细的介绍。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/nodejs-cli-1.png" type="image/png"/>
    </item>
    <item>
      <title>SQL 语法基础</title>
      <link>https://vxhly.github.io/views/other/sql-grammar.html</link>
      <guid>https://vxhly.github.io/views/other/sql-grammar.html</guid>
      <source url="https://vxhly.github.io/rss.xml">SQL 语法基础</source>
      <description>前言 整理了下 SQL 语法基础, 适用于 SQL server 和 MySQL, 本博文皆为实例 SQL 语句仅供参考。</description>
      <category>other</category>
      <pubDate>Tue, 23 Jan 2018 17:04:08 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>整理了下 SQL 语法基础, 适用于 SQL server 和 MySQL, 本博文皆为实例 SQL 语句仅供参考。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Angularjs 学习笔记</title>
      <link>https://vxhly.github.io/views/other/study-angularjs-notes.html</link>
      <guid>https://vxhly.github.io/views/other/study-angularjs-notes.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Angularjs 学习笔记</source>
      <description>前言 Angularjs 1.0 的学习笔记。</description>
      <category>other</category>
      <pubDate>Mon, 01 Apr 2019 16:44:20 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Angularjs 1.0 的学习笔记。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>更新 MySQL root 的密码</title>
      <link>https://vxhly.github.io/views/other/update-mysql-root-password.html</link>
      <guid>https://vxhly.github.io/views/other/update-mysql-root-password.html</guid>
      <source url="https://vxhly.github.io/rss.xml">更新 MySQL root 的密码</source>
      <description>前言 最近在 ubuntu 系统上安装了 MySQL, 但是安装时没有提示输入 root 用户密码, 网上胡乱找了一通, 这才知道 MySQL 5.7 以上版本的 root 密码都是随机生成的, 所以这里提供解决 MySQL 5.7 版本的 root 用户重置密码问题。</description>
      <category>other</category>
      <pubDate>Thu, 06 Sep 2018 19:19:17 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>最近在 ubuntu 系统上安装了 MySQL, 但是安装时没有提示输入 root 用户密码, 网上胡乱找了一通, 这才知道 MySQL 5.7 以上版本的 root 密码都是随机生成的, 所以这里提供解决 MySQL 5.7 版本的 root 用户重置密码问题。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Liunx 安全加固命令集合</title>
      <link>https://vxhly.github.io/views/pentest/liunx-security-command.html</link>
      <guid>https://vxhly.github.io/views/pentest/liunx-security-command.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Liunx 安全加固命令集合</source>
      <description>前言 收集 Liunx 系统安全加固时, 发现系统漏洞, 修复系统, 加固系统信息等命令集合。</description>
      <category>pentest</category>
      <pubDate>Sat, 20 May 2017 14:22:42 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>收集 Liunx 系统安全加固时, 发现系统漏洞, 修复系统, 加固系统信息等命令集合。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>渗透基础知识</title>
      <link>https://vxhly.github.io/views/pentest/pentest-basic-knowledge.html</link>
      <guid>https://vxhly.github.io/views/pentest/pentest-basic-knowledge.html</guid>
      <source url="https://vxhly.github.io/rss.xml">渗透基础知识</source>
      <description>前言 整理的渗透所需的一些基础知识。</description>
      <category>pentest</category>
      <pubDate>Sun, 03 Sep 2017 19:54:18 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>整理的渗透所需的一些基础知识。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>kali 下渗透测试的一些小技巧</title>
      <link>https://vxhly.github.io/views/pentest/pentest-tips-and-tricks.html</link>
      <guid>https://vxhly.github.io/views/pentest/pentest-tips-and-tricks.html</guid>
      <source url="https://vxhly.github.io/rss.xml">kali 下渗透测试的一些小技巧</source>
      <description>前言 总结在渗透测试上的一些小技巧, 基本上都是 kali 下的一些常用的工具使用集合。</description>
      <category>pentest</category>
      <pubDate>Sat, 20 May 2017 13:23:12 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>总结在渗透测试上的一些小技巧, 基本上都是 kali 下的一些常用的工具使用集合。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>PHP 文件包含漏洞总结</title>
      <link>https://vxhly.github.io/views/pentest/php-file-inclusion.html</link>
      <guid>https://vxhly.github.io/views/pentest/php-file-inclusion.html</guid>
      <source url="https://vxhly.github.io/rss.xml">PHP 文件包含漏洞总结</source>
      <description>前言 PHP 文件包含漏洞的产生原因是在通过 PHP 的函数引入文件时, 由于传入的文件名没有经过合理的校验, 从而操作了预想之外的文件, 就可能导致意外的文件泄露甚至恶意的代码注入。</description>
      <category>pentest</category>
      <pubDate>Sun, 02 Apr 2017 16:31:38 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>PHP 文件包含漏洞的产生原因是在通过 PHP 的函数引入文件时, 由于传入的文件名没有经过合理的校验, 从而操作了预想之外的文件, 就可能导致意外的文件泄露甚至恶意的代码注入。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Shell 监听脚本-新增文件</title>
      <link>https://vxhly.github.io/views/pentest/shell-listen-for-new-files.html</link>
      <guid>https://vxhly.github.io/views/pentest/shell-listen-for-new-files.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Shell 监听脚本-新增文件</source>
      <description>前言 Liunx 下的监听 shell 脚本, 脚本功能实现, 当一小时内有新增的新文件, 立刻删除它, 此脚本允许被后台运行。</description>
      <category>pentest</category>
      <pubDate>Tue, 22 Aug 2017 21:03:18 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Liunx 下的监听 shell 脚本, 脚本功能实现, 当一小时内有新增的新文件, 立刻删除它, 此脚本允许被后台运行。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/shell-new-files-1.png" type="image/png"/>
    </item>
    <item>
      <title>渗透工具用法（二）BurpSuite 的用法</title>
      <link>https://vxhly.github.io/views/pentest/usage-of-burp.html</link>
      <guid>https://vxhly.github.io/views/pentest/usage-of-burp.html</guid>
      <source url="https://vxhly.github.io/rss.xml">渗透工具用法（二）BurpSuite 的用法</source>
      <description>前言 此系列笔记是网络渗透工具的使用方法, 本篇是介绍 Web 应用程序测试工具 BurpSuite 的使用方法。Burp Suite 其多种功能可以帮我们执行各种任务, 请求的拦截和修改, 扫描 web 应用程序漏洞, 以暴力破解登陆表单, 执行会话令牌等多种的随机性检查。</description>
      <category>pentest</category>
      <pubDate>Sat, 08 Oct 2016 16:02:34 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>此系列笔记是网络渗透工具的使用方法, 本篇是介绍 Web 应用程序测试工具 BurpSuite 的使用方法。Burp Suite 其多种功能可以帮我们执行各种任务, 请求的拦截和修改, 扫描 web 应用程序漏洞, 以暴力破解登陆表单, 执行会话令牌等多种的随机性检查。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/burp-1.png" type="image/png"/>
    </item>
    <item>
      <title>渗透工具用法（三）Nmap 的用法</title>
      <link>https://vxhly.github.io/views/pentest/usage-of-nmap.html</link>
      <guid>https://vxhly.github.io/views/pentest/usage-of-nmap.html</guid>
      <source url="https://vxhly.github.io/rss.xml">渗透工具用法（三）Nmap 的用法</source>
      <description>前言 此系列笔记是网络渗透工具的使用方法, 本篇是介绍端口扫描工具 Nmap 的使用方法。Nmap 在渗透测试中经常用到, 它不仅可以用来确定目标网络上计算机的存活状态, 而且可以扫描各个计算机的操作系统、开放端口、服务, 还有可能获得用户的证书。熟练掌握 Nmap 的用法, 可以极大的提高渗透测试技术。</description>
      <category>pentest</category>
      <pubDate>Fri, 23 Sep 2016 16:29:57 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>此系列笔记是网络渗透工具的使用方法, 本篇是介绍端口扫描工具 Nmap 的使用方法。Nmap 在渗透测试中经常用到, 它不仅可以用来确定目标网络上计算机的存活状态, 而且可以扫描各个计算机的操作系统、开放端口、服务, 还有可能获得用户的证书。熟练掌握 Nmap 的用法, 可以极大的提高渗透测试技术。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/liunx-nmap-1.png" type="image/png"/>
    </item>
    <item>
      <title>渗透工具用法（一）SQLmap 的用法</title>
      <link>https://vxhly.github.io/views/pentest/usage-of-sqlmap.html</link>
      <guid>https://vxhly.github.io/views/pentest/usage-of-sqlmap.html</guid>
      <source url="https://vxhly.github.io/rss.xml">渗透工具用法（一）SQLmap 的用法</source>
      <description>前言 此系列笔记是网络渗透工具的使用方法, 本篇是介绍 SQL 注入工具 SQLmap 的使用方法。SQLmap 是一款用来检测与利用 SQL 注入漏洞的免费开源工具, 有一个非常棒的特性, 即对检测与利用的自动化处理（数据库指纹、访问底层文件系统、执行命令）。</description>
      <category>pentest</category>
      <pubDate>Tue, 20 Sep 2016 10:46:46 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>此系列笔记是网络渗透工具的使用方法, 本篇是介绍 SQL 注入工具 SQLmap 的使用方法。SQLmap 是一款用来检测与利用 SQL 注入漏洞的免费开源工具, 有一个非常棒的特性, 即对检测与利用的自动化处理（数据库指纹、访问底层文件系统、执行命令）。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/sqlmap-1.png" type="image/png"/>
    </item>
    <item>
      <title>typescript 的基础使用</title>
      <link>https://vxhly.github.io/views/typescript/typescript-usage.html</link>
      <guid>https://vxhly.github.io/views/typescript/typescript-usage.html</guid>
      <source url="https://vxhly.github.io/rss.xml">typescript 的基础使用</source>
      <description>前言 vue3 已经发布了, ts 的脚步已经阻拦不住了, 还只会 es6?别想了, 人家都已经在行动了, 以下是 ts 的基本系列教程, ts 的基本语法, 高级语法等, 以及在 vue 项目中如何应用 ts, 跟着我赶紧撸起来吧.</description>
      <category>typescript</category>
      <pubDate>Tue, 18 May 2021 10:03:58 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>vue3 已经发布了, ts 的脚步已经阻拦不住了, 还只会 es6?别想了, 人家都已经在行动了, 以下是 ts 的基本系列教程, ts 的基本语法, 高级语法等, 以及在 vue 项目中如何应用 ts, 跟着我赶紧撸起来吧.</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Vite 下一代前端开发与构建工具</title>
      <link>https://vxhly.github.io/views/vite/study-vite.html</link>
      <guid>https://vxhly.github.io/views/vite/study-vite.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Vite 下一代前端开发与构建工具</source>
      <description>前言 Vite2.x 也推出了有一段时间了, 作为一名合格的前端开发人员, 没错我入坑了, 以下本篇文章记录的是 Vite 的一些知识点。</description>
      <category>vite</category>
      <pubDate>Wed, 25 Aug 2021 20:03:58 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Vite2.x 也推出了有一段时间了, 作为一名合格的前端开发人员, 没错我入坑了, 以下本篇文章记录的是 Vite 的一些知识点。</p>
</div>
]]></content:encoded>
      <enclosure url="https://vxhly.github.io/assets/study-vite-1.png" type="image/png"/>
    </item>
    <item>
      <title>Avue 前端框架使用实践</title>
      <link>https://vxhly.github.io/views/vuejs/avue-framework-practice.html</link>
      <guid>https://vxhly.github.io/views/vuejs/avue-framework-practice.html</guid>
      <source url="https://vxhly.github.io/rss.xml">Avue 前端框架使用实践</source>
      <description>前言 Avue 前端是基于 ElementUI 库进行的二次封装, 简化了一些繁琐的操作。本篇博文将带领大家学习这套框架的使用实践, 以及它的一些二次封装的思路。</description>
      <category>vuejs</category>
      <pubDate>Thu, 20 Aug 2020 11:39:08 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>Avue 前端是基于 ElementUI 库进行的二次封装, 简化了一些繁琐的操作。本篇博文将带领大家学习这套框架的使用实践, 以及它的一些二次封装的思路。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>使用 Vue cli 3.0 构建自定义组件库(第一弹)</title>
      <link>https://vxhly.github.io/views/vuejs/custom-component-library-first.html</link>
      <guid>https://vxhly.github.io/views/vuejs/custom-component-library-first.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 Vue cli 3.0 构建自定义组件库(第一弹)</source>
      <description>前言 本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等。</description>
      <category>vuejs</category>
      <pubDate>Sun, 28 Apr 2019 17:19:49 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>使用 Vue cli 3.0 构建自定义组件库(第二弹)</title>
      <link>https://vxhly.github.io/views/vuejs/custom-component-library-second.html</link>
      <guid>https://vxhly.github.io/views/vuejs/custom-component-library-second.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 Vue cli 3.0 构建自定义组件库(第二弹)</source>
      <description>前言 本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等, 此文乃第二弹版本, 看过第一弹版本的小伙伴, 想必都知道第一弹版本的组件库文档 UI 是需要自己写的, 最近也是刚研究出来其实 vuepress 也可以作为组件库文档的 UI, 该文档 UI 绝对不输于第一弹版本的。</description>
      <category>vuejs</category>
      <pubDate>Fri, 16 Aug 2019 09:30:20 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等, 此文乃第二弹版本, 看过第一弹版本的小伙伴, 想必都知道第一弹版本的组件库文档 UI 是需要自己写的, 最近也是刚研究出来其实 vuepress 也可以作为组件库文档的 UI, 该文档 UI 绝对不输于第一弹版本的。</p>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>使用 Vue cli 3.0 构建自定义组件库(第三弹)</title>
      <link>https://vxhly.github.io/views/vuejs/custom-component-library-third.html</link>
      <guid>https://vxhly.github.io/views/vuejs/custom-component-library-third.html</guid>
      <source url="https://vxhly.github.io/rss.xml">使用 Vue cli 3.0 构建自定义组件库(第三弹)</source>
      <description>前言 本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等, 此文乃第二弹版本, 看过第一弹版本和第二弹版本的小伙伴, 想必知道前两弹版本的多多少少存在着一些不足之处, 这一弹的版本为第二弹版本的升级版, 这个版本中我们将提供更多方便于操作的内容。</description>
      <category>vuejs</category>
      <pubDate>Fri, 26 Jun 2020 10:57:54 GMT</pubDate>
      <content:encoded><![CDATA[<div class="hint-container tip">
<p class="hint-container-title">前言</p>
<p>本文旨在给大家提供一种构建一个完整 UI 库脚手架的思路: 包括如何快速并优雅地构建 UI 库的主页、如何托管主页、如何编写脚本提升自己的开发效率、如何生成 CHANGELOG 等, 此文乃第二弹版本, 看过第一弹版本和第二弹版本的小伙伴, 想必知道前两弹版本的多多少少存在着一些不足之处, 这一弹的版本为第二弹版本的升级版, 这个版本中我们将提供更多方便于操作的内容。</p>
</div>
]]></content:encoded>
    </item>
  </channel>
</rss>